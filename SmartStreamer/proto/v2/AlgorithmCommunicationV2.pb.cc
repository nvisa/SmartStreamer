// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AlgorithmCommunicationV2.proto

#include "AlgorithmCommunicationV2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AlarmReqAdvancedParameters_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AlgorithmHead_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AlgorithmStatus_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FaceDetectionParameters_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FeatureCustom_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FeatureIPVideoSource_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LocationInformation_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Alarm_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DetectedObject_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LineCrossRegion_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PanChangeAlgorithmParameters_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Rectangle_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SmartMotionRegion_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_AlgorithmInformation_AlgorithmCommunicationV2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunicationV2_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_SmartMotionAlgorithmParameters_AlgorithmCommunicationV2_2eproto;
namespace algorithm {
namespace v2 {
class AlgorithmHeadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlgorithmHead> _instance;
  ::google::protobuf::int32 ptz_head_;
  ::google::protobuf::int32 algorithm_index_;
  ::google::protobuf::internal::ArenaStringPtr algorithm_node_;
} _AlgorithmHead_default_instance_;
class AlgorithmStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlgorithmStatus> _instance;
} _AlgorithmStatus_default_instance_;
class AlgorithmInformationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlgorithmInformation> _instance;
} _AlgorithmInformation_default_instance_;
class AlgorithmListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlgorithmListResponse> _instance;
} _AlgorithmListResponse_default_instance_;
class SmartMotionRegionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SmartMotionRegion> _instance;
} _SmartMotionRegion_default_instance_;
class SmartMotionAlgorithmParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SmartMotionAlgorithmParameters> _instance;
} _SmartMotionAlgorithmParameters_default_instance_;
class LocationInformationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocationInformation> _instance;
} _LocationInformation_default_instance_;
class PanChangeAlgorithmParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PanChangeAlgorithmParameters> _instance;
} _PanChangeAlgorithmParameters_default_instance_;
class PrivacyMaskingParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrivacyMaskingParameters> _instance;
} _PrivacyMaskingParameters_default_instance_;
class FaceDetectionParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaceDetectionParameters> _instance;
} _FaceDetectionParameters_default_instance_;
class AlgorithmParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlgorithmParameters> _instance;
  const ::algorithm::v2::SmartMotionAlgorithmParameters* smart_parameters_;
  const ::algorithm::v2::PanChangeAlgorithmParameters* pan_change_parameters_;
  const ::algorithm::v2::FaceDetectionParameters* detection_parameters_;
} _AlgorithmParameters_default_instance_;
class AlgorithmParametersSetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlgorithmParametersSetRequest> _instance;
  int pre_;
  bool video_stabilization_;
  bool tamper_detection_;
  bool privacy_masking_;
  int run_mode_;
  float pre_processing_degree_;
  const ::algorithm::v2::SmartMotionAlgorithmParameters* smart_parameters_;
  const ::algorithm::v2::PanChangeAlgorithmParameters* pan_change_parameters_;
  const ::algorithm::v2::FaceDetectionParameters* detection_parameters_;
} _AlgorithmParametersSetRequest_default_instance_;
class PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point> _instance;
} _Point_default_instance_;
class LineCrossRegionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LineCrossRegion> _instance;
} _LineCrossRegion_default_instance_;
class RectangleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rectangle> _instance;
} _Rectangle_default_instance_;
class DetectedObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedObject> _instance;
  ::google::protobuf::int32 object_counter_;
  ::google::protobuf::internal::ArenaStringPtr object_guid_;
} _DetectedObject_default_instance_;
class ScreenshotInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScreenshotInfo> _instance;
} _ScreenshotInfo_default_instance_;
class ScreenFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScreenFrame> _instance;
} _ScreenFrame_default_instance_;
class AlarmReqAdvancedParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlarmReqAdvancedParameters> _instance;
} _AlarmReqAdvancedParameters_default_instance_;
class AlarmReqInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlarmReqInfo> _instance;
} _AlarmReqInfo_default_instance_;
class AlarmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Alarm> _instance;
} _Alarm_default_instance_;
class AlarmsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Alarms> _instance;
} _Alarms_default_instance_;
class FeatureIPVideoSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FeatureIPVideoSource> _instance;
} _FeatureIPVideoSource_default_instance_;
class FeatureCustomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FeatureCustom> _instance;
} _FeatureCustom_default_instance_;
class SystemFeatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemFeature> _instance;
  const ::algorithm::v2::FeatureCustom* custom_;
  const ::algorithm::v2::FeatureIPVideoSource* video_source_;
} _SystemFeature_default_instance_;
}  // namespace v2
}  // namespace algorithm
static void InitDefaultsAlgorithmHead_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_AlgorithmHead_default_instance_;
    new (ptr) ::algorithm::v2::AlgorithmHead();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::AlgorithmHead::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AlgorithmHead_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAlgorithmHead_AlgorithmCommunicationV2_2eproto}, {}};

static void InitDefaultsAlgorithmStatus_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_AlgorithmStatus_default_instance_;
    new (ptr) ::algorithm::v2::AlgorithmStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::AlgorithmStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AlgorithmStatus_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAlgorithmStatus_AlgorithmCommunicationV2_2eproto}, {}};

static void InitDefaultsAlgorithmInformation_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_AlgorithmInformation_default_instance_;
    new (ptr) ::algorithm::v2::AlgorithmInformation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::AlgorithmInformation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AlgorithmInformation_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAlgorithmInformation_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_AlgorithmHead_AlgorithmCommunicationV2_2eproto.base,
      &scc_info_AlgorithmStatus_AlgorithmCommunicationV2_2eproto.base,}};

static void InitDefaultsAlgorithmListResponse_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_AlgorithmListResponse_default_instance_;
    new (ptr) ::algorithm::v2::AlgorithmListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::AlgorithmListResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AlgorithmListResponse_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAlgorithmListResponse_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_AlgorithmInformation_AlgorithmCommunicationV2_2eproto.base,}};

static void InitDefaultsSmartMotionRegion_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_SmartMotionRegion_default_instance_;
    new (ptr) ::algorithm::v2::SmartMotionRegion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::SmartMotionRegion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SmartMotionRegion_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSmartMotionRegion_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_Point_AlgorithmCommunicationV2_2eproto.base,}};

static void InitDefaultsSmartMotionAlgorithmParameters_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_SmartMotionAlgorithmParameters_default_instance_;
    new (ptr) ::algorithm::v2::SmartMotionAlgorithmParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::SmartMotionAlgorithmParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_SmartMotionAlgorithmParameters_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSmartMotionAlgorithmParameters_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_SmartMotionRegion_AlgorithmCommunicationV2_2eproto.base,
      &scc_info_Rectangle_AlgorithmCommunicationV2_2eproto.base,
      &scc_info_LineCrossRegion_AlgorithmCommunicationV2_2eproto.base,}};

static void InitDefaultsLocationInformation_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_LocationInformation_default_instance_;
    new (ptr) ::algorithm::v2::LocationInformation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::LocationInformation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LocationInformation_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLocationInformation_AlgorithmCommunicationV2_2eproto}, {}};

static void InitDefaultsPanChangeAlgorithmParameters_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_PanChangeAlgorithmParameters_default_instance_;
    new (ptr) ::algorithm::v2::PanChangeAlgorithmParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::PanChangeAlgorithmParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PanChangeAlgorithmParameters_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPanChangeAlgorithmParameters_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_LocationInformation_AlgorithmCommunicationV2_2eproto.base,}};

static void InitDefaultsPrivacyMaskingParameters_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_PrivacyMaskingParameters_default_instance_;
    new (ptr) ::algorithm::v2::PrivacyMaskingParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::PrivacyMaskingParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrivacyMaskingParameters_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPrivacyMaskingParameters_AlgorithmCommunicationV2_2eproto}, {}};

static void InitDefaultsFaceDetectionParameters_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_FaceDetectionParameters_default_instance_;
    new (ptr) ::algorithm::v2::FaceDetectionParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::FaceDetectionParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FaceDetectionParameters_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFaceDetectionParameters_AlgorithmCommunicationV2_2eproto}, {}};

static void InitDefaultsAlgorithmParameters_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_AlgorithmParameters_default_instance_;
    new (ptr) ::algorithm::v2::AlgorithmParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::AlgorithmParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AlgorithmParameters_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAlgorithmParameters_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_SmartMotionAlgorithmParameters_AlgorithmCommunicationV2_2eproto.base,
      &scc_info_PanChangeAlgorithmParameters_AlgorithmCommunicationV2_2eproto.base,
      &scc_info_FaceDetectionParameters_AlgorithmCommunicationV2_2eproto.base,}};

static void InitDefaultsAlgorithmParametersSetRequest_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_AlgorithmParametersSetRequest_default_instance_;
    new (ptr) ::algorithm::v2::AlgorithmParametersSetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::AlgorithmParametersSetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_AlgorithmParametersSetRequest_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsAlgorithmParametersSetRequest_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_AlgorithmHead_AlgorithmCommunicationV2_2eproto.base,
      &scc_info_SmartMotionAlgorithmParameters_AlgorithmCommunicationV2_2eproto.base,
      &scc_info_PanChangeAlgorithmParameters_AlgorithmCommunicationV2_2eproto.base,
      &scc_info_FaceDetectionParameters_AlgorithmCommunicationV2_2eproto.base,}};

static void InitDefaultsPoint_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_Point_default_instance_;
    new (ptr) ::algorithm::v2::Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::Point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint_AlgorithmCommunicationV2_2eproto}, {}};

static void InitDefaultsLineCrossRegion_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_LineCrossRegion_default_instance_;
    new (ptr) ::algorithm::v2::LineCrossRegion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::LineCrossRegion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LineCrossRegion_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLineCrossRegion_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_Point_AlgorithmCommunicationV2_2eproto.base,}};

static void InitDefaultsRectangle_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_Rectangle_default_instance_;
    new (ptr) ::algorithm::v2::Rectangle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::Rectangle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Rectangle_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRectangle_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_Point_AlgorithmCommunicationV2_2eproto.base,}};

static void InitDefaultsDetectedObject_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_DetectedObject_default_instance_;
    new (ptr) ::algorithm::v2::DetectedObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::DetectedObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DetectedObject_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDetectedObject_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_Rectangle_AlgorithmCommunicationV2_2eproto.base,}};

static void InitDefaultsScreenshotInfo_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_ScreenshotInfo_default_instance_;
    new (ptr) ::algorithm::v2::ScreenshotInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::ScreenshotInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScreenshotInfo_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScreenshotInfo_AlgorithmCommunicationV2_2eproto}, {}};

static void InitDefaultsScreenFrame_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_ScreenFrame_default_instance_;
    new (ptr) ::algorithm::v2::ScreenFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::ScreenFrame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScreenFrame_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScreenFrame_AlgorithmCommunicationV2_2eproto}, {}};

static void InitDefaultsAlarmReqAdvancedParameters_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_AlarmReqAdvancedParameters_default_instance_;
    new (ptr) ::algorithm::v2::AlarmReqAdvancedParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::AlarmReqAdvancedParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AlarmReqAdvancedParameters_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAlarmReqAdvancedParameters_AlgorithmCommunicationV2_2eproto}, {}};

static void InitDefaultsAlarmReqInfo_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_AlarmReqInfo_default_instance_;
    new (ptr) ::algorithm::v2::AlarmReqInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::AlarmReqInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AlarmReqInfo_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAlarmReqInfo_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_AlarmReqAdvancedParameters_AlgorithmCommunicationV2_2eproto.base,}};

static void InitDefaultsAlarm_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_Alarm_default_instance_;
    new (ptr) ::algorithm::v2::Alarm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::Alarm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Alarm_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAlarm_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_DetectedObject_AlgorithmCommunicationV2_2eproto.base,}};

static void InitDefaultsAlarms_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_Alarms_default_instance_;
    new (ptr) ::algorithm::v2::Alarms();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::Alarms::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Alarms_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAlarms_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_Alarm_AlgorithmCommunicationV2_2eproto.base,}};

static void InitDefaultsFeatureIPVideoSource_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_FeatureIPVideoSource_default_instance_;
    new (ptr) ::algorithm::v2::FeatureIPVideoSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::FeatureIPVideoSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FeatureIPVideoSource_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFeatureIPVideoSource_AlgorithmCommunicationV2_2eproto}, {}};

static void InitDefaultsFeatureCustom_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_FeatureCustom_default_instance_;
    new (ptr) ::algorithm::v2::FeatureCustom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::FeatureCustom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FeatureCustom_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFeatureCustom_AlgorithmCommunicationV2_2eproto}, {}};

static void InitDefaultsSystemFeature_AlgorithmCommunicationV2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algorithm::v2::_SystemFeature_default_instance_;
    new (ptr) ::algorithm::v2::SystemFeature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algorithm::v2::SystemFeature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SystemFeature_AlgorithmCommunicationV2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSystemFeature_AlgorithmCommunicationV2_2eproto}, {
      &scc_info_FeatureCustom_AlgorithmCommunicationV2_2eproto.base,
      &scc_info_FeatureIPVideoSource_AlgorithmCommunicationV2_2eproto.base,}};

void InitDefaults_AlgorithmCommunicationV2_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_AlgorithmHead_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlgorithmStatus_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlgorithmInformation_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlgorithmListResponse_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SmartMotionRegion_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SmartMotionAlgorithmParameters_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocationInformation_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PanChangeAlgorithmParameters_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrivacyMaskingParameters_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FaceDetectionParameters_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlgorithmParameters_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlgorithmParametersSetRequest_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LineCrossRegion_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rectangle_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DetectedObject_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScreenshotInfo_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScreenFrame_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlarmReqAdvancedParameters_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlarmReqInfo_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Alarm_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Alarms_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FeatureIPVideoSource_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FeatureCustom_AlgorithmCommunicationV2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SystemFeature_AlgorithmCommunicationV2_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_AlgorithmCommunicationV2_2eproto[25];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_AlgorithmCommunicationV2_2eproto[7];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_AlgorithmCommunicationV2_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_AlgorithmCommunicationV2_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmHead, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmHead, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::algorithm::v2::AlgorithmHeadDefaultTypeInternal, ptz_head_),
  offsetof(::algorithm::v2::AlgorithmHeadDefaultTypeInternal, algorithm_index_),
  offsetof(::algorithm::v2::AlgorithmHeadDefaultTypeInternal, algorithm_node_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmHead, friendly_name_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmHead, head_selection_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmStatus, is_running_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmInformation, head_info_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmInformation, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmListResponse, algorithms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SmartMotionRegion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SmartMotionRegion, detection_region_point_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SmartMotionRegion, wander_time_msecs_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SmartMotionRegion, stand_time_msecs_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SmartMotionRegion, active_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SmartMotionRegion, motion_direction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SmartMotionAlgorithmParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SmartMotionAlgorithmParameters, regions_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SmartMotionAlgorithmParameters, min_region_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SmartMotionAlgorithmParameters, max_region_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SmartMotionAlgorithmParameters, lines_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SmartMotionAlgorithmParameters, tracking_object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::LocationInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::LocationInformation, pan_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::LocationInformation, tilt_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::LocationInformation, zoom_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::PanChangeAlgorithmParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::PanChangeAlgorithmParameters, locationinformation_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::PanChangeAlgorithmParameters, intervalforcirculation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::PrivacyMaskingParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::FaceDetectionParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmParameters, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::algorithm::v2::AlgorithmParametersDefaultTypeInternal, smart_parameters_),
  offsetof(::algorithm::v2::AlgorithmParametersDefaultTypeInternal, pan_change_parameters_),
  offsetof(::algorithm::v2::AlgorithmParametersDefaultTypeInternal, detection_parameters_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmParameters, pre_processing_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmParameters, video_stabilization_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmParameters, tamper_detection_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmParameters, privacy_masking_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmParameters, run_mode_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmParameters, pre_processing_degree_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmParameters, parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmParametersSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmParametersSetRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmParametersSetRequest, algorithm_),
  offsetof(::algorithm::v2::AlgorithmParametersSetRequestDefaultTypeInternal, pre_),
  offsetof(::algorithm::v2::AlgorithmParametersSetRequestDefaultTypeInternal, video_stabilization_),
  offsetof(::algorithm::v2::AlgorithmParametersSetRequestDefaultTypeInternal, tamper_detection_),
  offsetof(::algorithm::v2::AlgorithmParametersSetRequestDefaultTypeInternal, privacy_masking_),
  offsetof(::algorithm::v2::AlgorithmParametersSetRequestDefaultTypeInternal, run_mode_),
  offsetof(::algorithm::v2::AlgorithmParametersSetRequestDefaultTypeInternal, pre_processing_degree_),
  offsetof(::algorithm::v2::AlgorithmParametersSetRequestDefaultTypeInternal, smart_parameters_),
  offsetof(::algorithm::v2::AlgorithmParametersSetRequestDefaultTypeInternal, pan_change_parameters_),
  offsetof(::algorithm::v2::AlgorithmParametersSetRequestDefaultTypeInternal, detection_parameters_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlgorithmParametersSetRequest, parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Point, x_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Point, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::LineCrossRegion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::LineCrossRegion, pt1_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::LineCrossRegion, pt2_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::LineCrossRegion, active_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Rectangle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Rectangle, top_left_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Rectangle, bottom_right_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::DetectedObject, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::DetectedObject, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::DetectedObject, bounding_box_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::DetectedObject, object_type_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::DetectedObject, event_),
  offsetof(::algorithm::v2::DetectedObjectDefaultTypeInternal, object_counter_),
  offsetof(::algorithm::v2::DetectedObjectDefaultTypeInternal, object_guid_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::DetectedObject, object_color_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::DetectedObject, object_direction_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::DetectedObject, object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::ScreenshotInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::ScreenshotInfo, channelid_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::ScreenshotInfo, quality_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::ScreenshotInfo, fps_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::ScreenFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::ScreenFrame, frame_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::ScreenFrame, quality_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::ScreenFrame, ts_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::ScreenFrame, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlarmReqAdvancedParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlarmReqAdvancedParameters, enabled_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlarmReqAdvancedParameters, suppressinterval_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlarmReqAdvancedParameters, alarmqueuelength_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlarmReqAdvancedParameters, smartsnapshot_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlarmReqAdvancedParameters, smartsnapshotinterval_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlarmReqInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlarmReqInfo, filter_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlarmReqInfo, channel_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlarmReqInfo, intervalmsecs_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::AlarmReqInfo, advancedparams_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Alarm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Alarm, key_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Alarm, value_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Alarm, type_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Alarm, detected_object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Alarms, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Alarms, alarms_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::Alarms, ts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::FeatureIPVideoSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::FeatureIPVideoSource, url_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::FeatureIPVideoSource, transport_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::FeatureIPVideoSource, buffer_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::FeatureCustom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::FeatureCustom, key_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::FeatureCustom, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SystemFeature, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SystemFeature, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::algorithm::v2::SystemFeatureDefaultTypeInternal, custom_),
  offsetof(::algorithm::v2::SystemFeatureDefaultTypeInternal, video_source_),
  PROTOBUF_FIELD_OFFSET(::algorithm::v2::SystemFeature, feature_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::algorithm::v2::AlgorithmHead)},
  { 10, -1, sizeof(::algorithm::v2::AlgorithmStatus)},
  { 16, -1, sizeof(::algorithm::v2::AlgorithmInformation)},
  { 23, -1, sizeof(::algorithm::v2::AlgorithmListResponse)},
  { 29, -1, sizeof(::algorithm::v2::SmartMotionRegion)},
  { 39, -1, sizeof(::algorithm::v2::SmartMotionAlgorithmParameters)},
  { 49, -1, sizeof(::algorithm::v2::LocationInformation)},
  { 57, -1, sizeof(::algorithm::v2::PanChangeAlgorithmParameters)},
  { 64, -1, sizeof(::algorithm::v2::PrivacyMaskingParameters)},
  { 69, -1, sizeof(::algorithm::v2::FaceDetectionParameters)},
  { 74, -1, sizeof(::algorithm::v2::AlgorithmParameters)},
  { 89, -1, sizeof(::algorithm::v2::AlgorithmParametersSetRequest)},
  { 105, -1, sizeof(::algorithm::v2::Point)},
  { 112, -1, sizeof(::algorithm::v2::LineCrossRegion)},
  { 120, -1, sizeof(::algorithm::v2::Rectangle)},
  { 127, -1, sizeof(::algorithm::v2::DetectedObject)},
  { 140, -1, sizeof(::algorithm::v2::ScreenshotInfo)},
  { 148, -1, sizeof(::algorithm::v2::ScreenFrame)},
  { 157, -1, sizeof(::algorithm::v2::AlarmReqAdvancedParameters)},
  { 167, -1, sizeof(::algorithm::v2::AlarmReqInfo)},
  { 176, -1, sizeof(::algorithm::v2::Alarm)},
  { 185, -1, sizeof(::algorithm::v2::Alarms)},
  { 192, -1, sizeof(::algorithm::v2::FeatureIPVideoSource)},
  { 200, -1, sizeof(::algorithm::v2::FeatureCustom)},
  { 207, -1, sizeof(::algorithm::v2::SystemFeature)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_AlgorithmHead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_AlgorithmStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_AlgorithmInformation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_AlgorithmListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_SmartMotionRegion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_SmartMotionAlgorithmParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_LocationInformation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_PanChangeAlgorithmParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_PrivacyMaskingParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_FaceDetectionParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_AlgorithmParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_AlgorithmParametersSetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_LineCrossRegion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_Rectangle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_DetectedObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_ScreenshotInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_ScreenFrame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_AlarmReqAdvancedParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_AlarmReqInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_Alarm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_Alarms_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_FeatureIPVideoSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_FeatureCustom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algorithm::v2::_SystemFeature_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_AlgorithmCommunicationV2_2eproto = {
  {}, AddDescriptors_AlgorithmCommunicationV2_2eproto, "AlgorithmCommunicationV2.proto", schemas,
  file_default_instances, TableStruct_AlgorithmCommunicationV2_2eproto::offsets,
  file_level_metadata_AlgorithmCommunicationV2_2eproto, 25, file_level_enum_descriptors_AlgorithmCommunicationV2_2eproto, file_level_service_descriptors_AlgorithmCommunicationV2_2eproto,
};

const char descriptor_table_protodef_AlgorithmCommunicationV2_2eproto[] =
  "\n\036AlgorithmCommunicationV2.proto\022\014algori"
  "thm.v2\032\033google/protobuf/empty.proto\"\201\001\n\r"
  "AlgorithmHead\022\022\n\010ptz_head\030\001 \001(\005H\000\022\031\n\017alg"
  "orithm_index\030\002 \001(\005H\000\022\030\n\016algorithm_node\030\003"
  " \001(\tH\000\022\025\n\rfriendly_name\030\004 \001(\tB\020\n\016head_se"
  "lection\"%\n\017AlgorithmStatus\022\022\n\nis_running"
  "\030\001 \001(\010\"u\n\024AlgorithmInformation\022.\n\thead_i"
  "nfo\030\001 \001(\0132\033.algorithm.v2.AlgorithmHead\022-"
  "\n\006status\030\002 \001(\0132\035.algorithm.v2.AlgorithmS"
  "tatus\"O\n\025AlgorithmListResponse\0226\n\nalgori"
  "thms\030\001 \003(\0132\".algorithm.v2.AlgorithmInfor"
  "mation\"\306\001\n\021SmartMotionRegion\0223\n\026detectio"
  "n_region_point\030\001 \003(\0132\023.algorithm.v2.Poin"
  "t\022\031\n\021wander_time_msecs\030\002 \001(\005\022\030\n\020stand_ti"
  "me_msecs\030\003 \001(\005\022\016\n\006active\030\004 \001(\010\0227\n\020motion"
  "_direction\030\005 \003(\0162\035.algorithm.v2.MotionDi"
  "rection\"\214\002\n\036SmartMotionAlgorithmParamete"
  "rs\0220\n\007regions\030\001 \003(\0132\037.algorithm.v2.Smart"
  "MotionRegion\022+\n\nmin_region\030\002 \001(\0132\027.algor"
  "ithm.v2.Rectangle\022+\n\nmax_region\030\003 \001(\0132\027."
  "algorithm.v2.Rectangle\022,\n\005lines\030\004 \003(\0132\035."
  "algorithm.v2.LineCrossRegion\0220\n\017tracking"
  "_object\030\005 \001(\0132\027.algorithm.v2.Rectangle\">"
  "\n\023LocationInformation\022\013\n\003pan\030\001 \001(\002\022\014\n\004ti"
  "lt\030\002 \001(\002\022\014\n\004zoom\030\003 \001(\002\"~\n\034PanChangeAlgor"
  "ithmParameters\022>\n\023locationInformation\030\001 "
  "\003(\0132!.algorithm.v2.LocationInformation\022\036"
  "\n\026intervalForCirculation\030\002 \001(\003\"\032\n\030Privac"
  "yMaskingParameters\"\031\n\027FaceDetectionParam"
  "eters\"\316\003\n\023AlgorithmParameters\022H\n\020smart_p"
  "arameters\030\001 \001(\0132,.algorithm.v2.SmartMoti"
  "onAlgorithmParametersH\000\022K\n\025pan_change_pa"
  "rameters\030\003 \001(\0132*.algorithm.v2.PanChangeA"
  "lgorithmParametersH\000\022E\n\024detection_parame"
  "ters\030\006 \001(\0132%.algorithm.v2.FaceDetectionP"
  "arametersH\000\0223\n\016pre_processing\030\007 \001(\0162\033.al"
  "gorithm.v2.PreProcessing\022\033\n\023video_stabil"
  "ization\030\010 \001(\010\022\030\n\020tamper_detection\030\t \001(\010\022"
  "\027\n\017privacy_masking\030\n \001(\010\022\'\n\010run_mode\030\013 \001"
  "(\0162\025.algorithm.v2.RunMode\022\035\n\025pre_process"
  "ing_degree\030\014 \001(\002B\014\n\nparameters\"\211\004\n\035Algor"
  "ithmParametersSetRequest\022.\n\talgorithm\030\001 "
  "\001(\0132\033.algorithm.v2.AlgorithmHead\022*\n\003pre\030"
  "\002 \001(\0162\033.algorithm.v2.PreProcessingH\000\022\035\n\023"
  "video_stabilization\030\003 \001(\010H\000\022\032\n\020tamper_de"
  "tection\030\004 \001(\010H\000\022\031\n\017privacy_masking\030\005 \001(\010"
  "H\000\022)\n\010run_mode\030\006 \001(\0162\025.algorithm.v2.RunM"
  "odeH\000\022\037\n\025pre_processing_degree\030\007 \001(\002H\000\022H"
  "\n\020smart_parameters\030\010 \001(\0132,.algorithm.v2."
  "SmartMotionAlgorithmParametersH\000\022K\n\025pan_"
  "change_parameters\030\n \001(\0132*.algorithm.v2.P"
  "anChangeAlgorithmParametersH\000\022E\n\024detecti"
  "on_parameters\030\013 \001(\0132%.algorithm.v2.FaceD"
  "etectionParametersH\000B\014\n\nparameters\"\035\n\005Po"
  "int\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\"e\n\017LineCrossRe"
  "gion\022 \n\003pt1\030\001 \001(\0132\023.algorithm.v2.Point\022 "
  "\n\003pt2\030\002 \001(\0132\023.algorithm.v2.Point\022\016\n\006acti"
  "ve\030\003 \001(\010\"]\n\tRectangle\022%\n\010top_left\030\001 \001(\0132"
  "\023.algorithm.v2.Point\022)\n\014bottom_right\030\002 \001"
  "(\0132\023.algorithm.v2.Point\"\241\005\n\016DetectedObje"
  "ct\022-\n\014bounding_box\030\001 \001(\0132\027.algorithm.v2."
  "Rectangle\022<\n\013object_type\030\002 \001(\0162\'.algorit"
  "hm.v2.DetectedObject.ObjectType\0225\n\005event"
  "\030\003 \001(\0162&.algorithm.v2.DetectedObject.Eve"
  "ntType\022\030\n\016object_counter\030\004 \001(\005H\000\022\025\n\013obje"
  "ct_guid\030\005 \001(\tH\000\022>\n\014object_color\030\006 \001(\0162(."
  "algorithm.v2.DetectedObject.ObjectColor\022"
  "7\n\020object_direction\030\007 \001(\0162\035.algorithm.v2"
  ".MotionDirection\"0\n\nObjectType\022\t\n\005HUMAN\020"
  "\000\022\013\n\007VEHICLE\020\001\022\n\n\006OTHERS\020\002\"\222\001\n\tEventType"
  "\022\010\n\004NONE\020\000\022\r\n\tROI_ENTER\020\001\022\016\n\nLINE_CROSS\020"
  "\002\022\r\n\tWANDERING\020\003\022\017\n\013LEFT_OBJECT\020\004\022\014\n\010STA"
  "NDING\020\005\022\r\n\tROI_LEAVE\020\006\022\014\n\010ROI_WAIT\020\007\022\021\n\r"
  "STOLEN_OBJECT\020\010\"m\n\013ObjectColor\022\010\n\004DARK\020\000"
  "\022\010\n\004GRAY\020\001\022\t\n\005LIGHT\020\002\022\007\n\003RED\020\003\022\n\n\006YELLOW"
  "\020\004\022\t\n\005GREEN\020\005\022\010\n\004CYAN\020\006\022\010\n\004BLUE\020\007\022\013\n\007MAG"
  "ENTA\020\010B\013\n\tobject_id\"A\n\016ScreenshotInfo\022\021\n"
  "\tchannelId\030\001 \001(\005\022\017\n\007quality\030\002 \001(\005\022\013\n\003fps"
  "\030\003 \001(\002\"K\n\013ScreenFrame\022\r\n\005frame\030\001 \001(\014\022\017\n\007"
  "quality\030\002 \001(\005\022\n\n\002ts\030\003 \001(\003\022\020\n\010metadata\030\004 "
  "\001(\t\"\227\001\n\032AlarmReqAdvancedParameters\022\017\n\007en"
  "abled\030\001 \001(\010\022\030\n\020suppressInterval\030\002 \001(\005\022\030\n"
  "\020alarmQueueLength\030\003 \001(\005\022\025\n\rsmartSnapshot"
  "\030\004 \001(\010\022\035\n\025smartSnapshotInterval\030\005 \001(\005\"\210\001"
  "\n\014AlarmReqInfo\022\016\n\006filter\030\001 \001(\t\022\017\n\007channe"
  "l\030\002 \001(\005\022\025\n\rintervalMsecs\030\003 \001(\005\022@\n\016advanc"
  "edParams\030\004 \001(\0132(.algorithm.v2.AlarmReqAd"
  "vancedParameters\"h\n\005Alarm\022\013\n\003key\030\001 \003(\t\022\r"
  "\n\005value\030\002 \003(\t\022\014\n\004type\030\003 \001(\t\0225\n\017detected_"
  "object\030\004 \003(\0132\034.algorithm.v2.DetectedObje"
  "ct\"9\n\006Alarms\022#\n\006alarms\030\001 \003(\0132\023.algorithm"
  ".v2.Alarm\022\n\n\002ts\030\002 \001(\003\"\230\001\n\024FeatureIPVideo"
  "Source\022\013\n\003url\030\001 \001(\t\022\?\n\ttransport\030\002 \001(\0162,"
  ".algorithm.v2.FeatureIPVideoSource.Trans"
  "port\022\023\n\013buffer_size\030\003 \001(\005\"\035\n\tTransport\022\007"
  "\n\003UDP\020\000\022\007\n\003TCP\020\001\"+\n\rFeatureCustom\022\013\n\003key"
  "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\205\001\n\rSystemFeature\022"
  "-\n\006custom\030\001 \001(\0132\033.algorithm.v2.FeatureCu"
  "stomH\000\022:\n\014video_source\030\002 \001(\0132\".algorithm"
  ".v2.FeatureIPVideoSourceH\000B\t\n\007feature*|\n"
  "\017MotionDirection\022\t\n\005RIGHT\020\000\022\016\n\nDOWN_RIGH"
  "T\020\001\022\010\n\004DOWN\020\002\022\r\n\tDOWN_LEFT\020\003\022\010\n\004LEFT\020\004\022\013"
  "\n\007UP_LEFT\020\005\022\006\n\002UP\020\006\022\014\n\010UP_RIGHT\020\007\022\010\n\004STO"
  "P\020\010*A\n\rPreProcessing\022\010\n\004NONE\020\000\022\030\n\024CONTRA"
  "ST_ENHANCEMENT\020\001\022\014\n\010DEHAZING\020\002*^\n\007RunMod"
  "e\022\016\n\nAUTO_TRACK\020\000\022\023\n\017SEMI_AUTO_TRACK\020\001\022\020"
  "\n\014MANUEL_TRACK\020\002\022\020\n\014SMART_MOTION\020\003\022\n\n\006BY"
  "PASS\020\0042\376\006\n\020AlgorithmService\022J\n\rGetScreen"
  "Shot\022\034.algorithm.v2.ScreenshotInfo\032\031.alg"
  "orithm.v2.ScreenFrame\"\000\022R\n\023GetScreenShot"
  "Stream\022\034.algorithm.v2.ScreenshotInfo\032\031.a"
  "lgorithm.v2.ScreenFrame\"\0000\001\022E\n\014RunAlgori"
  "thm\022\033.algorithm.v2.AlgorithmHead\032\026.googl"
  "e.protobuf.Empty\"\000\022I\n\020RestartAlgorithm\022\033"
  ".algorithm.v2.AlgorithmHead\032\026.google.pro"
  "tobuf.Empty\"\000\022F\n\rStopAlgorithm\022\033.algorit"
  "hm.v2.AlgorithmHead\032\026.google.protobuf.Em"
  "pty\"\000\022_\n\026SetAlgorithmParameters\022+.algori"
  "thm.v2.AlgorithmParametersSetRequest\032\026.g"
  "oogle.protobuf.Empty\"\000\022Z\n\026GetAlgorithmPa"
  "rameters\022\033.algorithm.v2.AlgorithmHead\032!."
  "algorithm.v2.AlgorithmParameters\"\000\022O\n\016Li"
  "stAlgorithms\022\026.google.protobuf.Empty\032#.a"
  "lgorithm.v2.AlgorithmListResponse\"\000\022N\n\020G"
  "etSystemFeature\022\033.algorithm.v2.SystemFea"
  "ture\032\033.algorithm.v2.SystemFeature\"\000\022N\n\020S"
  "etSystemFeature\022\033.algorithm.v2.SystemFea"
  "ture\032\033.algorithm.v2.SystemFeature\"\000\022B\n\010G"
  "etAlarm\022\032.algorithm.v2.AlarmReqInfo\032\024.al"
  "gorithm.v2.Alarms\"\000(\0010\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_AlgorithmCommunicationV2_2eproto = {
  false, InitDefaults_AlgorithmCommunicationV2_2eproto, 
  descriptor_table_protodef_AlgorithmCommunicationV2_2eproto,
  "AlgorithmCommunicationV2.proto", &assign_descriptors_table_AlgorithmCommunicationV2_2eproto, 5191,
};

void AddDescriptors_AlgorithmCommunicationV2_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_google_2fprotobuf_2fempty_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_AlgorithmCommunicationV2_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_AlgorithmCommunicationV2_2eproto = []() { AddDescriptors_AlgorithmCommunicationV2_2eproto(); return true; }();
namespace algorithm {
namespace v2 {
const ::google::protobuf::EnumDescriptor* DetectedObject_ObjectType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunicationV2_2eproto[0];
}
bool DetectedObject_ObjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DetectedObject_ObjectType DetectedObject::HUMAN;
const DetectedObject_ObjectType DetectedObject::VEHICLE;
const DetectedObject_ObjectType DetectedObject::OTHERS;
const DetectedObject_ObjectType DetectedObject::ObjectType_MIN;
const DetectedObject_ObjectType DetectedObject::ObjectType_MAX;
const int DetectedObject::ObjectType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DetectedObject_EventType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunicationV2_2eproto[1];
}
bool DetectedObject_EventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DetectedObject_EventType DetectedObject::NONE;
const DetectedObject_EventType DetectedObject::ROI_ENTER;
const DetectedObject_EventType DetectedObject::LINE_CROSS;
const DetectedObject_EventType DetectedObject::WANDERING;
const DetectedObject_EventType DetectedObject::LEFT_OBJECT;
const DetectedObject_EventType DetectedObject::STANDING;
const DetectedObject_EventType DetectedObject::ROI_LEAVE;
const DetectedObject_EventType DetectedObject::ROI_WAIT;
const DetectedObject_EventType DetectedObject::STOLEN_OBJECT;
const DetectedObject_EventType DetectedObject::EventType_MIN;
const DetectedObject_EventType DetectedObject::EventType_MAX;
const int DetectedObject::EventType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DetectedObject_ObjectColor_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunicationV2_2eproto[2];
}
bool DetectedObject_ObjectColor_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DetectedObject_ObjectColor DetectedObject::DARK;
const DetectedObject_ObjectColor DetectedObject::GRAY;
const DetectedObject_ObjectColor DetectedObject::LIGHT;
const DetectedObject_ObjectColor DetectedObject::RED;
const DetectedObject_ObjectColor DetectedObject::YELLOW;
const DetectedObject_ObjectColor DetectedObject::GREEN;
const DetectedObject_ObjectColor DetectedObject::CYAN;
const DetectedObject_ObjectColor DetectedObject::BLUE;
const DetectedObject_ObjectColor DetectedObject::MAGENTA;
const DetectedObject_ObjectColor DetectedObject::ObjectColor_MIN;
const DetectedObject_ObjectColor DetectedObject::ObjectColor_MAX;
const int DetectedObject::ObjectColor_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FeatureIPVideoSource_Transport_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunicationV2_2eproto[3];
}
bool FeatureIPVideoSource_Transport_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FeatureIPVideoSource_Transport FeatureIPVideoSource::UDP;
const FeatureIPVideoSource_Transport FeatureIPVideoSource::TCP;
const FeatureIPVideoSource_Transport FeatureIPVideoSource::Transport_MIN;
const FeatureIPVideoSource_Transport FeatureIPVideoSource::Transport_MAX;
const int FeatureIPVideoSource::Transport_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MotionDirection_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunicationV2_2eproto[4];
}
bool MotionDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PreProcessing_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunicationV2_2eproto[5];
}
bool PreProcessing_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RunMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunicationV2_2eproto[6];
}
bool RunMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AlgorithmHead::InitAsDefaultInstance() {
  ::algorithm::v2::_AlgorithmHead_default_instance_.ptz_head_ = 0;
  ::algorithm::v2::_AlgorithmHead_default_instance_.algorithm_index_ = 0;
  ::algorithm::v2::_AlgorithmHead_default_instance_.algorithm_node_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class AlgorithmHead::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlgorithmHead::kPtzHeadFieldNumber;
const int AlgorithmHead::kAlgorithmIndexFieldNumber;
const int AlgorithmHead::kAlgorithmNodeFieldNumber;
const int AlgorithmHead::kFriendlyNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlgorithmHead::AlgorithmHead()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.AlgorithmHead)
}
AlgorithmHead::AlgorithmHead(const AlgorithmHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friendly_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friendly_name().size() > 0) {
    friendly_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendly_name_);
  }
  clear_has_head_selection();
  switch (from.head_selection_case()) {
    case kPtzHead: {
      set_ptz_head(from.ptz_head());
      break;
    }
    case kAlgorithmIndex: {
      set_algorithm_index(from.algorithm_index());
      break;
    }
    case kAlgorithmNode: {
      set_algorithm_node(from.algorithm_node());
      break;
    }
    case HEAD_SELECTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.AlgorithmHead)
}

void AlgorithmHead::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlgorithmHead_AlgorithmCommunicationV2_2eproto.base);
  friendly_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_head_selection();
}

AlgorithmHead::~AlgorithmHead() {
  // @@protoc_insertion_point(destructor:algorithm.v2.AlgorithmHead)
  SharedDtor();
}

void AlgorithmHead::SharedDtor() {
  friendly_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_head_selection()) {
    clear_head_selection();
  }
}

void AlgorithmHead::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlgorithmHead& AlgorithmHead::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlgorithmHead_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void AlgorithmHead::clear_head_selection() {
// @@protoc_insertion_point(one_of_clear_start:algorithm.v2.AlgorithmHead)
  switch (head_selection_case()) {
    case kPtzHead: {
      // No need to clear
      break;
    }
    case kAlgorithmIndex: {
      // No need to clear
      break;
    }
    case kAlgorithmNode: {
      head_selection_.algorithm_node_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case HEAD_SELECTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = HEAD_SELECTION_NOT_SET;
}


void AlgorithmHead::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.AlgorithmHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendly_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_head_selection();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlgorithmHead::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlgorithmHead*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 ptz_head = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_ptz_head(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 algorithm_index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_algorithm_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string algorithm_node = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("algorithm.v2.AlgorithmHead.algorithm_node");
        object = msg->mutable_algorithm_node();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string friendly_name = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("algorithm.v2.AlgorithmHead.friendly_name");
        object = msg->mutable_friendly_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlgorithmHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.AlgorithmHead)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ptz_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          clear_head_selection();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &head_selection_.ptz_head_)));
          set_has_ptz_head();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 algorithm_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          clear_head_selection();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &head_selection_.algorithm_index_)));
          set_has_algorithm_index();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string algorithm_node = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_algorithm_node()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->algorithm_node().data(), static_cast<int>(this->algorithm_node().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algorithm.v2.AlgorithmHead.algorithm_node"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friendly_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friendly_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algorithm.v2.AlgorithmHead.friendly_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.AlgorithmHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.AlgorithmHead)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlgorithmHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.AlgorithmHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ptz_head = 1;
  if (has_ptz_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ptz_head(), output);
  }

  // int32 algorithm_index = 2;
  if (has_algorithm_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->algorithm_index(), output);
  }

  // string algorithm_node = 3;
  if (has_algorithm_node()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm_node().data(), static_cast<int>(this->algorithm_node().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.AlgorithmHead.algorithm_node");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->algorithm_node(), output);
  }

  // string friendly_name = 4;
  if (this->friendly_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.AlgorithmHead.friendly_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->friendly_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.AlgorithmHead)
}

::google::protobuf::uint8* AlgorithmHead::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.AlgorithmHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ptz_head = 1;
  if (has_ptz_head()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ptz_head(), target);
  }

  // int32 algorithm_index = 2;
  if (has_algorithm_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->algorithm_index(), target);
  }

  // string algorithm_node = 3;
  if (has_algorithm_node()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm_node().data(), static_cast<int>(this->algorithm_node().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.AlgorithmHead.algorithm_node");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->algorithm_node(), target);
  }

  // string friendly_name = 4;
  if (this->friendly_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.AlgorithmHead.friendly_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->friendly_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.AlgorithmHead)
  return target;
}

size_t AlgorithmHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.AlgorithmHead)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string friendly_name = 4;
  if (this->friendly_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friendly_name());
  }

  switch (head_selection_case()) {
    // int32 ptz_head = 1;
    case kPtzHead: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ptz_head());
      break;
    }
    // int32 algorithm_index = 2;
    case kAlgorithmIndex: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->algorithm_index());
      break;
    }
    // string algorithm_node = 3;
    case kAlgorithmNode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->algorithm_node());
      break;
    }
    case HEAD_SELECTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlgorithmHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.AlgorithmHead)
  GOOGLE_DCHECK_NE(&from, this);
  const AlgorithmHead* source =
      ::google::protobuf::DynamicCastToGenerated<AlgorithmHead>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.AlgorithmHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.AlgorithmHead)
    MergeFrom(*source);
  }
}

void AlgorithmHead::MergeFrom(const AlgorithmHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.AlgorithmHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.friendly_name().size() > 0) {

    friendly_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendly_name_);
  }
  switch (from.head_selection_case()) {
    case kPtzHead: {
      set_ptz_head(from.ptz_head());
      break;
    }
    case kAlgorithmIndex: {
      set_algorithm_index(from.algorithm_index());
      break;
    }
    case kAlgorithmNode: {
      set_algorithm_node(from.algorithm_node());
      break;
    }
    case HEAD_SELECTION_NOT_SET: {
      break;
    }
  }
}

void AlgorithmHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.AlgorithmHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlgorithmHead::CopyFrom(const AlgorithmHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.AlgorithmHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlgorithmHead::IsInitialized() const {
  return true;
}

void AlgorithmHead::Swap(AlgorithmHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlgorithmHead::InternalSwap(AlgorithmHead* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  friendly_name_.Swap(&other->friendly_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(head_selection_, other->head_selection_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata AlgorithmHead::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlgorithmStatus::InitAsDefaultInstance() {
}
class AlgorithmStatus::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlgorithmStatus::kIsRunningFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlgorithmStatus::AlgorithmStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.AlgorithmStatus)
}
AlgorithmStatus::AlgorithmStatus(const AlgorithmStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_running_ = from.is_running_;
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.AlgorithmStatus)
}

void AlgorithmStatus::SharedCtor() {
  is_running_ = false;
}

AlgorithmStatus::~AlgorithmStatus() {
  // @@protoc_insertion_point(destructor:algorithm.v2.AlgorithmStatus)
  SharedDtor();
}

void AlgorithmStatus::SharedDtor() {
}

void AlgorithmStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlgorithmStatus& AlgorithmStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlgorithmStatus_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void AlgorithmStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.AlgorithmStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_running_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlgorithmStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlgorithmStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool is_running = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_is_running(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlgorithmStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.AlgorithmStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_running = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_running_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.AlgorithmStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.AlgorithmStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlgorithmStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.AlgorithmStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_running = 1;
  if (this->is_running() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_running(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.AlgorithmStatus)
}

::google::protobuf::uint8* AlgorithmStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.AlgorithmStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_running = 1;
  if (this->is_running() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_running(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.AlgorithmStatus)
  return target;
}

size_t AlgorithmStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.AlgorithmStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_running = 1;
  if (this->is_running() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlgorithmStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.AlgorithmStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const AlgorithmStatus* source =
      ::google::protobuf::DynamicCastToGenerated<AlgorithmStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.AlgorithmStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.AlgorithmStatus)
    MergeFrom(*source);
  }
}

void AlgorithmStatus::MergeFrom(const AlgorithmStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.AlgorithmStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_running() != 0) {
    set_is_running(from.is_running());
  }
}

void AlgorithmStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.AlgorithmStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlgorithmStatus::CopyFrom(const AlgorithmStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.AlgorithmStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlgorithmStatus::IsInitialized() const {
  return true;
}

void AlgorithmStatus::Swap(AlgorithmStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlgorithmStatus::InternalSwap(AlgorithmStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(is_running_, other->is_running_);
}

::google::protobuf::Metadata AlgorithmStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlgorithmInformation::InitAsDefaultInstance() {
  ::algorithm::v2::_AlgorithmInformation_default_instance_._instance.get_mutable()->head_info_ = const_cast< ::algorithm::v2::AlgorithmHead*>(
      ::algorithm::v2::AlgorithmHead::internal_default_instance());
  ::algorithm::v2::_AlgorithmInformation_default_instance_._instance.get_mutable()->status_ = const_cast< ::algorithm::v2::AlgorithmStatus*>(
      ::algorithm::v2::AlgorithmStatus::internal_default_instance());
}
class AlgorithmInformation::HasBitSetters {
 public:
  static const ::algorithm::v2::AlgorithmHead& head_info(const AlgorithmInformation* msg);
  static const ::algorithm::v2::AlgorithmStatus& status(const AlgorithmInformation* msg);
};

const ::algorithm::v2::AlgorithmHead&
AlgorithmInformation::HasBitSetters::head_info(const AlgorithmInformation* msg) {
  return *msg->head_info_;
}
const ::algorithm::v2::AlgorithmStatus&
AlgorithmInformation::HasBitSetters::status(const AlgorithmInformation* msg) {
  return *msg->status_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlgorithmInformation::kHeadInfoFieldNumber;
const int AlgorithmInformation::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlgorithmInformation::AlgorithmInformation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.AlgorithmInformation)
}
AlgorithmInformation::AlgorithmInformation(const AlgorithmInformation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head_info()) {
    head_info_ = new ::algorithm::v2::AlgorithmHead(*from.head_info_);
  } else {
    head_info_ = nullptr;
  }
  if (from.has_status()) {
    status_ = new ::algorithm::v2::AlgorithmStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.AlgorithmInformation)
}

void AlgorithmInformation::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlgorithmInformation_AlgorithmCommunicationV2_2eproto.base);
  ::memset(&head_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&head_info_)) + sizeof(status_));
}

AlgorithmInformation::~AlgorithmInformation() {
  // @@protoc_insertion_point(destructor:algorithm.v2.AlgorithmInformation)
  SharedDtor();
}

void AlgorithmInformation::SharedDtor() {
  if (this != internal_default_instance()) delete head_info_;
  if (this != internal_default_instance()) delete status_;
}

void AlgorithmInformation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlgorithmInformation& AlgorithmInformation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlgorithmInformation_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void AlgorithmInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.AlgorithmInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && head_info_ != nullptr) {
    delete head_info_;
  }
  head_info_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlgorithmInformation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlgorithmInformation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .algorithm.v2.AlgorithmHead head_info = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::AlgorithmHead::_InternalParse;
        object = msg->mutable_head_info();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .algorithm.v2.AlgorithmStatus status = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::AlgorithmStatus::_InternalParse;
        object = msg->mutable_status();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlgorithmInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.AlgorithmInformation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .algorithm.v2.AlgorithmHead head_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.AlgorithmStatus status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.AlgorithmInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.AlgorithmInformation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlgorithmInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.AlgorithmInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.AlgorithmHead head_info = 1;
  if (this->has_head_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::head_info(this), output);
  }

  // .algorithm.v2.AlgorithmStatus status = 2;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::status(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.AlgorithmInformation)
}

::google::protobuf::uint8* AlgorithmInformation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.AlgorithmInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.AlgorithmHead head_info = 1;
  if (this->has_head_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::head_info(this), target);
  }

  // .algorithm.v2.AlgorithmStatus status = 2;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::status(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.AlgorithmInformation)
  return target;
}

size_t AlgorithmInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.AlgorithmInformation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .algorithm.v2.AlgorithmHead head_info = 1;
  if (this->has_head_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_info_);
  }

  // .algorithm.v2.AlgorithmStatus status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlgorithmInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.AlgorithmInformation)
  GOOGLE_DCHECK_NE(&from, this);
  const AlgorithmInformation* source =
      ::google::protobuf::DynamicCastToGenerated<AlgorithmInformation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.AlgorithmInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.AlgorithmInformation)
    MergeFrom(*source);
  }
}

void AlgorithmInformation::MergeFrom(const AlgorithmInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.AlgorithmInformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_head_info()) {
    mutable_head_info()->::algorithm::v2::AlgorithmHead::MergeFrom(from.head_info());
  }
  if (from.has_status()) {
    mutable_status()->::algorithm::v2::AlgorithmStatus::MergeFrom(from.status());
  }
}

void AlgorithmInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.AlgorithmInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlgorithmInformation::CopyFrom(const AlgorithmInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.AlgorithmInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlgorithmInformation::IsInitialized() const {
  return true;
}

void AlgorithmInformation::Swap(AlgorithmInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlgorithmInformation::InternalSwap(AlgorithmInformation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(head_info_, other->head_info_);
  swap(status_, other->status_);
}

::google::protobuf::Metadata AlgorithmInformation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlgorithmListResponse::InitAsDefaultInstance() {
}
class AlgorithmListResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlgorithmListResponse::kAlgorithmsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlgorithmListResponse::AlgorithmListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.AlgorithmListResponse)
}
AlgorithmListResponse::AlgorithmListResponse(const AlgorithmListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      algorithms_(from.algorithms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.AlgorithmListResponse)
}

void AlgorithmListResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlgorithmListResponse_AlgorithmCommunicationV2_2eproto.base);
}

AlgorithmListResponse::~AlgorithmListResponse() {
  // @@protoc_insertion_point(destructor:algorithm.v2.AlgorithmListResponse)
  SharedDtor();
}

void AlgorithmListResponse::SharedDtor() {
}

void AlgorithmListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlgorithmListResponse& AlgorithmListResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlgorithmListResponse_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void AlgorithmListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.AlgorithmListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  algorithms_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlgorithmListResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlgorithmListResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .algorithm.v2.AlgorithmInformation algorithms = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::algorithm::v2::AlgorithmInformation::_InternalParse;
          object = msg->add_algorithms();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlgorithmListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.AlgorithmListResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .algorithm.v2.AlgorithmInformation algorithms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_algorithms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.AlgorithmListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.AlgorithmListResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlgorithmListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.AlgorithmListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .algorithm.v2.AlgorithmInformation algorithms = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->algorithms_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->algorithms(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.AlgorithmListResponse)
}

::google::protobuf::uint8* AlgorithmListResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.AlgorithmListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .algorithm.v2.AlgorithmInformation algorithms = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->algorithms_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->algorithms(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.AlgorithmListResponse)
  return target;
}

size_t AlgorithmListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.AlgorithmListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .algorithm.v2.AlgorithmInformation algorithms = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->algorithms_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->algorithms(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlgorithmListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.AlgorithmListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AlgorithmListResponse* source =
      ::google::protobuf::DynamicCastToGenerated<AlgorithmListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.AlgorithmListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.AlgorithmListResponse)
    MergeFrom(*source);
  }
}

void AlgorithmListResponse::MergeFrom(const AlgorithmListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.AlgorithmListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  algorithms_.MergeFrom(from.algorithms_);
}

void AlgorithmListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.AlgorithmListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlgorithmListResponse::CopyFrom(const AlgorithmListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.AlgorithmListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlgorithmListResponse::IsInitialized() const {
  return true;
}

void AlgorithmListResponse::Swap(AlgorithmListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlgorithmListResponse::InternalSwap(AlgorithmListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&algorithms_)->InternalSwap(CastToBase(&other->algorithms_));
}

::google::protobuf::Metadata AlgorithmListResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SmartMotionRegion::InitAsDefaultInstance() {
}
class SmartMotionRegion::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SmartMotionRegion::kDetectionRegionPointFieldNumber;
const int SmartMotionRegion::kWanderTimeMsecsFieldNumber;
const int SmartMotionRegion::kStandTimeMsecsFieldNumber;
const int SmartMotionRegion::kActiveFieldNumber;
const int SmartMotionRegion::kMotionDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SmartMotionRegion::SmartMotionRegion()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.SmartMotionRegion)
}
SmartMotionRegion::SmartMotionRegion(const SmartMotionRegion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      detection_region_point_(from.detection_region_point_),
      motion_direction_(from.motion_direction_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&wander_time_msecs_, &from.wander_time_msecs_,
    static_cast<size_t>(reinterpret_cast<char*>(&active_) -
    reinterpret_cast<char*>(&wander_time_msecs_)) + sizeof(active_));
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.SmartMotionRegion)
}

void SmartMotionRegion::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SmartMotionRegion_AlgorithmCommunicationV2_2eproto.base);
  ::memset(&wander_time_msecs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&active_) -
      reinterpret_cast<char*>(&wander_time_msecs_)) + sizeof(active_));
}

SmartMotionRegion::~SmartMotionRegion() {
  // @@protoc_insertion_point(destructor:algorithm.v2.SmartMotionRegion)
  SharedDtor();
}

void SmartMotionRegion::SharedDtor() {
}

void SmartMotionRegion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SmartMotionRegion& SmartMotionRegion::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SmartMotionRegion_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void SmartMotionRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.SmartMotionRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  detection_region_point_.Clear();
  motion_direction_.Clear();
  ::memset(&wander_time_msecs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&active_) -
      reinterpret_cast<char*>(&wander_time_msecs_)) + sizeof(active_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SmartMotionRegion::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SmartMotionRegion*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .algorithm.v2.Point detection_region_point = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::algorithm::v2::Point::_InternalParse;
          object = msg->add_detection_region_point();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // int32 wander_time_msecs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_wander_time_msecs(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 stand_time_msecs = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_stand_time_msecs(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool active = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_active(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .algorithm.v2.MotionDirection motion_direction = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) == 42) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedEnumParser;
          object = msg->mutable_motion_direction();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
          msg->add_motion_direction(static_cast<::algorithm::v2::MotionDirection>(val));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 40 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SmartMotionRegion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.SmartMotionRegion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .algorithm.v2.Point detection_region_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_detection_region_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 wander_time_msecs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wander_time_msecs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stand_time_msecs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stand_time_msecs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool active = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .algorithm.v2.MotionDirection motion_direction = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value = 0;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_motion_direction(static_cast< ::algorithm::v2::MotionDirection >(value));
          }
          input->PopLimit(limit);
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_motion_direction(static_cast< ::algorithm::v2::MotionDirection >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.SmartMotionRegion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.SmartMotionRegion)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SmartMotionRegion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.SmartMotionRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .algorithm.v2.Point detection_region_point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detection_region_point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->detection_region_point(static_cast<int>(i)),
      output);
  }

  // int32 wander_time_msecs = 2;
  if (this->wander_time_msecs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->wander_time_msecs(), output);
  }

  // int32 stand_time_msecs = 3;
  if (this->stand_time_msecs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->stand_time_msecs(), output);
  }

  // bool active = 4;
  if (this->active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->active(), output);
  }

  // repeated .algorithm.v2.MotionDirection motion_direction = 5;
  if (this->motion_direction_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_motion_direction_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->motion_direction_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->motion_direction(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.SmartMotionRegion)
}

::google::protobuf::uint8* SmartMotionRegion::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.SmartMotionRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .algorithm.v2.Point detection_region_point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detection_region_point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->detection_region_point(static_cast<int>(i)), target);
  }

  // int32 wander_time_msecs = 2;
  if (this->wander_time_msecs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->wander_time_msecs(), target);
  }

  // int32 stand_time_msecs = 3;
  if (this->stand_time_msecs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->stand_time_msecs(), target);
  }

  // bool active = 4;
  if (this->active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->active(), target);
  }

  // repeated .algorithm.v2.MotionDirection motion_direction = 5;
  if (this->motion_direction_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      _motion_direction_cached_byte_size_.load(std::memory_order_relaxed),
        target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->motion_direction_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.SmartMotionRegion)
  return target;
}

size_t SmartMotionRegion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.SmartMotionRegion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .algorithm.v2.Point detection_region_point = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->detection_region_point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->detection_region_point(static_cast<int>(i)));
    }
  }

  // repeated .algorithm.v2.MotionDirection motion_direction = 5;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->motion_direction_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->motion_direction(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _motion_direction_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 wander_time_msecs = 2;
  if (this->wander_time_msecs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wander_time_msecs());
  }

  // int32 stand_time_msecs = 3;
  if (this->stand_time_msecs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stand_time_msecs());
  }

  // bool active = 4;
  if (this->active() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SmartMotionRegion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.SmartMotionRegion)
  GOOGLE_DCHECK_NE(&from, this);
  const SmartMotionRegion* source =
      ::google::protobuf::DynamicCastToGenerated<SmartMotionRegion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.SmartMotionRegion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.SmartMotionRegion)
    MergeFrom(*source);
  }
}

void SmartMotionRegion::MergeFrom(const SmartMotionRegion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.SmartMotionRegion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  detection_region_point_.MergeFrom(from.detection_region_point_);
  motion_direction_.MergeFrom(from.motion_direction_);
  if (from.wander_time_msecs() != 0) {
    set_wander_time_msecs(from.wander_time_msecs());
  }
  if (from.stand_time_msecs() != 0) {
    set_stand_time_msecs(from.stand_time_msecs());
  }
  if (from.active() != 0) {
    set_active(from.active());
  }
}

void SmartMotionRegion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.SmartMotionRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmartMotionRegion::CopyFrom(const SmartMotionRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.SmartMotionRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartMotionRegion::IsInitialized() const {
  return true;
}

void SmartMotionRegion::Swap(SmartMotionRegion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SmartMotionRegion::InternalSwap(SmartMotionRegion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&detection_region_point_)->InternalSwap(CastToBase(&other->detection_region_point_));
  motion_direction_.InternalSwap(&other->motion_direction_);
  swap(wander_time_msecs_, other->wander_time_msecs_);
  swap(stand_time_msecs_, other->stand_time_msecs_);
  swap(active_, other->active_);
}

::google::protobuf::Metadata SmartMotionRegion::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SmartMotionAlgorithmParameters::InitAsDefaultInstance() {
  ::algorithm::v2::_SmartMotionAlgorithmParameters_default_instance_._instance.get_mutable()->min_region_ = const_cast< ::algorithm::v2::Rectangle*>(
      ::algorithm::v2::Rectangle::internal_default_instance());
  ::algorithm::v2::_SmartMotionAlgorithmParameters_default_instance_._instance.get_mutable()->max_region_ = const_cast< ::algorithm::v2::Rectangle*>(
      ::algorithm::v2::Rectangle::internal_default_instance());
  ::algorithm::v2::_SmartMotionAlgorithmParameters_default_instance_._instance.get_mutable()->tracking_object_ = const_cast< ::algorithm::v2::Rectangle*>(
      ::algorithm::v2::Rectangle::internal_default_instance());
}
class SmartMotionAlgorithmParameters::HasBitSetters {
 public:
  static const ::algorithm::v2::Rectangle& min_region(const SmartMotionAlgorithmParameters* msg);
  static const ::algorithm::v2::Rectangle& max_region(const SmartMotionAlgorithmParameters* msg);
  static const ::algorithm::v2::Rectangle& tracking_object(const SmartMotionAlgorithmParameters* msg);
};

const ::algorithm::v2::Rectangle&
SmartMotionAlgorithmParameters::HasBitSetters::min_region(const SmartMotionAlgorithmParameters* msg) {
  return *msg->min_region_;
}
const ::algorithm::v2::Rectangle&
SmartMotionAlgorithmParameters::HasBitSetters::max_region(const SmartMotionAlgorithmParameters* msg) {
  return *msg->max_region_;
}
const ::algorithm::v2::Rectangle&
SmartMotionAlgorithmParameters::HasBitSetters::tracking_object(const SmartMotionAlgorithmParameters* msg) {
  return *msg->tracking_object_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SmartMotionAlgorithmParameters::kRegionsFieldNumber;
const int SmartMotionAlgorithmParameters::kMinRegionFieldNumber;
const int SmartMotionAlgorithmParameters::kMaxRegionFieldNumber;
const int SmartMotionAlgorithmParameters::kLinesFieldNumber;
const int SmartMotionAlgorithmParameters::kTrackingObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SmartMotionAlgorithmParameters::SmartMotionAlgorithmParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.SmartMotionAlgorithmParameters)
}
SmartMotionAlgorithmParameters::SmartMotionAlgorithmParameters(const SmartMotionAlgorithmParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      regions_(from.regions_),
      lines_(from.lines_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min_region()) {
    min_region_ = new ::algorithm::v2::Rectangle(*from.min_region_);
  } else {
    min_region_ = nullptr;
  }
  if (from.has_max_region()) {
    max_region_ = new ::algorithm::v2::Rectangle(*from.max_region_);
  } else {
    max_region_ = nullptr;
  }
  if (from.has_tracking_object()) {
    tracking_object_ = new ::algorithm::v2::Rectangle(*from.tracking_object_);
  } else {
    tracking_object_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.SmartMotionAlgorithmParameters)
}

void SmartMotionAlgorithmParameters::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SmartMotionAlgorithmParameters_AlgorithmCommunicationV2_2eproto.base);
  ::memset(&min_region_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tracking_object_) -
      reinterpret_cast<char*>(&min_region_)) + sizeof(tracking_object_));
}

SmartMotionAlgorithmParameters::~SmartMotionAlgorithmParameters() {
  // @@protoc_insertion_point(destructor:algorithm.v2.SmartMotionAlgorithmParameters)
  SharedDtor();
}

void SmartMotionAlgorithmParameters::SharedDtor() {
  if (this != internal_default_instance()) delete min_region_;
  if (this != internal_default_instance()) delete max_region_;
  if (this != internal_default_instance()) delete tracking_object_;
}

void SmartMotionAlgorithmParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SmartMotionAlgorithmParameters& SmartMotionAlgorithmParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SmartMotionAlgorithmParameters_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void SmartMotionAlgorithmParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.SmartMotionAlgorithmParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  regions_.Clear();
  lines_.Clear();
  if (GetArenaNoVirtual() == nullptr && min_region_ != nullptr) {
    delete min_region_;
  }
  min_region_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && max_region_ != nullptr) {
    delete max_region_;
  }
  max_region_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && tracking_object_ != nullptr) {
    delete tracking_object_;
  }
  tracking_object_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SmartMotionAlgorithmParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SmartMotionAlgorithmParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .algorithm.v2.SmartMotionRegion regions = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::algorithm::v2::SmartMotionRegion::_InternalParse;
          object = msg->add_regions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // .algorithm.v2.Rectangle min_region = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::Rectangle::_InternalParse;
        object = msg->mutable_min_region();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .algorithm.v2.Rectangle max_region = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::Rectangle::_InternalParse;
        object = msg->mutable_max_region();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .algorithm.v2.LineCrossRegion lines = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::algorithm::v2::LineCrossRegion::_InternalParse;
          object = msg->add_lines();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // .algorithm.v2.Rectangle tracking_object = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::Rectangle::_InternalParse;
        object = msg->mutable_tracking_object();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SmartMotionAlgorithmParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.SmartMotionAlgorithmParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .algorithm.v2.SmartMotionRegion regions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_regions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.Rectangle min_region = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_region()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.Rectangle max_region = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_region()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .algorithm.v2.LineCrossRegion lines = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lines()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.Rectangle tracking_object = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tracking_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.SmartMotionAlgorithmParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.SmartMotionAlgorithmParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SmartMotionAlgorithmParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.SmartMotionAlgorithmParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .algorithm.v2.SmartMotionRegion regions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->regions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->regions(static_cast<int>(i)),
      output);
  }

  // .algorithm.v2.Rectangle min_region = 2;
  if (this->has_min_region()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::min_region(this), output);
  }

  // .algorithm.v2.Rectangle max_region = 3;
  if (this->has_max_region()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::max_region(this), output);
  }

  // repeated .algorithm.v2.LineCrossRegion lines = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lines_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->lines(static_cast<int>(i)),
      output);
  }

  // .algorithm.v2.Rectangle tracking_object = 5;
  if (this->has_tracking_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::tracking_object(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.SmartMotionAlgorithmParameters)
}

::google::protobuf::uint8* SmartMotionAlgorithmParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.SmartMotionAlgorithmParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .algorithm.v2.SmartMotionRegion regions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->regions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->regions(static_cast<int>(i)), target);
  }

  // .algorithm.v2.Rectangle min_region = 2;
  if (this->has_min_region()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::min_region(this), target);
  }

  // .algorithm.v2.Rectangle max_region = 3;
  if (this->has_max_region()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::max_region(this), target);
  }

  // repeated .algorithm.v2.LineCrossRegion lines = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lines_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->lines(static_cast<int>(i)), target);
  }

  // .algorithm.v2.Rectangle tracking_object = 5;
  if (this->has_tracking_object()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::tracking_object(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.SmartMotionAlgorithmParameters)
  return target;
}

size_t SmartMotionAlgorithmParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.SmartMotionAlgorithmParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .algorithm.v2.SmartMotionRegion regions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->regions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->regions(static_cast<int>(i)));
    }
  }

  // repeated .algorithm.v2.LineCrossRegion lines = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->lines_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lines(static_cast<int>(i)));
    }
  }

  // .algorithm.v2.Rectangle min_region = 2;
  if (this->has_min_region()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_region_);
  }

  // .algorithm.v2.Rectangle max_region = 3;
  if (this->has_max_region()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_region_);
  }

  // .algorithm.v2.Rectangle tracking_object = 5;
  if (this->has_tracking_object()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tracking_object_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SmartMotionAlgorithmParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.SmartMotionAlgorithmParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const SmartMotionAlgorithmParameters* source =
      ::google::protobuf::DynamicCastToGenerated<SmartMotionAlgorithmParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.SmartMotionAlgorithmParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.SmartMotionAlgorithmParameters)
    MergeFrom(*source);
  }
}

void SmartMotionAlgorithmParameters::MergeFrom(const SmartMotionAlgorithmParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.SmartMotionAlgorithmParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  regions_.MergeFrom(from.regions_);
  lines_.MergeFrom(from.lines_);
  if (from.has_min_region()) {
    mutable_min_region()->::algorithm::v2::Rectangle::MergeFrom(from.min_region());
  }
  if (from.has_max_region()) {
    mutable_max_region()->::algorithm::v2::Rectangle::MergeFrom(from.max_region());
  }
  if (from.has_tracking_object()) {
    mutable_tracking_object()->::algorithm::v2::Rectangle::MergeFrom(from.tracking_object());
  }
}

void SmartMotionAlgorithmParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.SmartMotionAlgorithmParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmartMotionAlgorithmParameters::CopyFrom(const SmartMotionAlgorithmParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.SmartMotionAlgorithmParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartMotionAlgorithmParameters::IsInitialized() const {
  return true;
}

void SmartMotionAlgorithmParameters::Swap(SmartMotionAlgorithmParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SmartMotionAlgorithmParameters::InternalSwap(SmartMotionAlgorithmParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&regions_)->InternalSwap(CastToBase(&other->regions_));
  CastToBase(&lines_)->InternalSwap(CastToBase(&other->lines_));
  swap(min_region_, other->min_region_);
  swap(max_region_, other->max_region_);
  swap(tracking_object_, other->tracking_object_);
}

::google::protobuf::Metadata SmartMotionAlgorithmParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LocationInformation::InitAsDefaultInstance() {
}
class LocationInformation::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocationInformation::kPanFieldNumber;
const int LocationInformation::kTiltFieldNumber;
const int LocationInformation::kZoomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocationInformation::LocationInformation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.LocationInformation)
}
LocationInformation::LocationInformation(const LocationInformation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pan_, &from.pan_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoom_) -
    reinterpret_cast<char*>(&pan_)) + sizeof(zoom_));
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.LocationInformation)
}

void LocationInformation::SharedCtor() {
  ::memset(&pan_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoom_) -
      reinterpret_cast<char*>(&pan_)) + sizeof(zoom_));
}

LocationInformation::~LocationInformation() {
  // @@protoc_insertion_point(destructor:algorithm.v2.LocationInformation)
  SharedDtor();
}

void LocationInformation::SharedDtor() {
}

void LocationInformation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocationInformation& LocationInformation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LocationInformation_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void LocationInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.LocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pan_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoom_) -
      reinterpret_cast<char*>(&pan_)) + sizeof(zoom_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LocationInformation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LocationInformation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float pan = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_pan(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float tilt = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_tilt(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float zoom = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_zoom(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LocationInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.LocationInformation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float pan = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float tilt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tilt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float zoom = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zoom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.LocationInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.LocationInformation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LocationInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.LocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pan = 1;
  if (this->pan() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->pan(), output);
  }

  // float tilt = 2;
  if (this->tilt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->tilt(), output);
  }

  // float zoom = 3;
  if (this->zoom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->zoom(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.LocationInformation)
}

::google::protobuf::uint8* LocationInformation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.LocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pan = 1;
  if (this->pan() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->pan(), target);
  }

  // float tilt = 2;
  if (this->tilt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->tilt(), target);
  }

  // float zoom = 3;
  if (this->zoom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->zoom(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.LocationInformation)
  return target;
}

size_t LocationInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.LocationInformation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float pan = 1;
  if (this->pan() != 0) {
    total_size += 1 + 4;
  }

  // float tilt = 2;
  if (this->tilt() != 0) {
    total_size += 1 + 4;
  }

  // float zoom = 3;
  if (this->zoom() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocationInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.LocationInformation)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationInformation* source =
      ::google::protobuf::DynamicCastToGenerated<LocationInformation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.LocationInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.LocationInformation)
    MergeFrom(*source);
  }
}

void LocationInformation::MergeFrom(const LocationInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.LocationInformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pan() != 0) {
    set_pan(from.pan());
  }
  if (from.tilt() != 0) {
    set_tilt(from.tilt());
  }
  if (from.zoom() != 0) {
    set_zoom(from.zoom());
  }
}

void LocationInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.LocationInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationInformation::CopyFrom(const LocationInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.LocationInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationInformation::IsInitialized() const {
  return true;
}

void LocationInformation::Swap(LocationInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocationInformation::InternalSwap(LocationInformation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pan_, other->pan_);
  swap(tilt_, other->tilt_);
  swap(zoom_, other->zoom_);
}

::google::protobuf::Metadata LocationInformation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PanChangeAlgorithmParameters::InitAsDefaultInstance() {
}
class PanChangeAlgorithmParameters::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PanChangeAlgorithmParameters::kLocationInformationFieldNumber;
const int PanChangeAlgorithmParameters::kIntervalForCirculationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PanChangeAlgorithmParameters::PanChangeAlgorithmParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.PanChangeAlgorithmParameters)
}
PanChangeAlgorithmParameters::PanChangeAlgorithmParameters(const PanChangeAlgorithmParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      locationinformation_(from.locationinformation_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  intervalforcirculation_ = from.intervalforcirculation_;
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.PanChangeAlgorithmParameters)
}

void PanChangeAlgorithmParameters::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PanChangeAlgorithmParameters_AlgorithmCommunicationV2_2eproto.base);
  intervalforcirculation_ = PROTOBUF_LONGLONG(0);
}

PanChangeAlgorithmParameters::~PanChangeAlgorithmParameters() {
  // @@protoc_insertion_point(destructor:algorithm.v2.PanChangeAlgorithmParameters)
  SharedDtor();
}

void PanChangeAlgorithmParameters::SharedDtor() {
}

void PanChangeAlgorithmParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PanChangeAlgorithmParameters& PanChangeAlgorithmParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PanChangeAlgorithmParameters_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void PanChangeAlgorithmParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.PanChangeAlgorithmParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locationinformation_.Clear();
  intervalforcirculation_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PanChangeAlgorithmParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PanChangeAlgorithmParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .algorithm.v2.LocationInformation locationInformation = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::algorithm::v2::LocationInformation::_InternalParse;
          object = msg->add_locationinformation();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // int64 intervalForCirculation = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_intervalforcirculation(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PanChangeAlgorithmParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.PanChangeAlgorithmParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .algorithm.v2.LocationInformation locationInformation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_locationinformation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 intervalForCirculation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &intervalforcirculation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.PanChangeAlgorithmParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.PanChangeAlgorithmParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PanChangeAlgorithmParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.PanChangeAlgorithmParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .algorithm.v2.LocationInformation locationInformation = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locationinformation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->locationinformation(static_cast<int>(i)),
      output);
  }

  // int64 intervalForCirculation = 2;
  if (this->intervalforcirculation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->intervalforcirculation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.PanChangeAlgorithmParameters)
}

::google::protobuf::uint8* PanChangeAlgorithmParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.PanChangeAlgorithmParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .algorithm.v2.LocationInformation locationInformation = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locationinformation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->locationinformation(static_cast<int>(i)), target);
  }

  // int64 intervalForCirculation = 2;
  if (this->intervalforcirculation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->intervalforcirculation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.PanChangeAlgorithmParameters)
  return target;
}

size_t PanChangeAlgorithmParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.PanChangeAlgorithmParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .algorithm.v2.LocationInformation locationInformation = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->locationinformation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locationinformation(static_cast<int>(i)));
    }
  }

  // int64 intervalForCirculation = 2;
  if (this->intervalforcirculation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->intervalforcirculation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PanChangeAlgorithmParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.PanChangeAlgorithmParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const PanChangeAlgorithmParameters* source =
      ::google::protobuf::DynamicCastToGenerated<PanChangeAlgorithmParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.PanChangeAlgorithmParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.PanChangeAlgorithmParameters)
    MergeFrom(*source);
  }
}

void PanChangeAlgorithmParameters::MergeFrom(const PanChangeAlgorithmParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.PanChangeAlgorithmParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locationinformation_.MergeFrom(from.locationinformation_);
  if (from.intervalforcirculation() != 0) {
    set_intervalforcirculation(from.intervalforcirculation());
  }
}

void PanChangeAlgorithmParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.PanChangeAlgorithmParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PanChangeAlgorithmParameters::CopyFrom(const PanChangeAlgorithmParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.PanChangeAlgorithmParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PanChangeAlgorithmParameters::IsInitialized() const {
  return true;
}

void PanChangeAlgorithmParameters::Swap(PanChangeAlgorithmParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PanChangeAlgorithmParameters::InternalSwap(PanChangeAlgorithmParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&locationinformation_)->InternalSwap(CastToBase(&other->locationinformation_));
  swap(intervalforcirculation_, other->intervalforcirculation_);
}

::google::protobuf::Metadata PanChangeAlgorithmParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PrivacyMaskingParameters::InitAsDefaultInstance() {
}
class PrivacyMaskingParameters::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrivacyMaskingParameters::PrivacyMaskingParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.PrivacyMaskingParameters)
}
PrivacyMaskingParameters::PrivacyMaskingParameters(const PrivacyMaskingParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.PrivacyMaskingParameters)
}

void PrivacyMaskingParameters::SharedCtor() {
}

PrivacyMaskingParameters::~PrivacyMaskingParameters() {
  // @@protoc_insertion_point(destructor:algorithm.v2.PrivacyMaskingParameters)
  SharedDtor();
}

void PrivacyMaskingParameters::SharedDtor() {
}

void PrivacyMaskingParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrivacyMaskingParameters& PrivacyMaskingParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PrivacyMaskingParameters_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void PrivacyMaskingParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.PrivacyMaskingParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrivacyMaskingParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PrivacyMaskingParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrivacyMaskingParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.PrivacyMaskingParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.PrivacyMaskingParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.PrivacyMaskingParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrivacyMaskingParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.PrivacyMaskingParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.PrivacyMaskingParameters)
}

::google::protobuf::uint8* PrivacyMaskingParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.PrivacyMaskingParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.PrivacyMaskingParameters)
  return target;
}

size_t PrivacyMaskingParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.PrivacyMaskingParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrivacyMaskingParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.PrivacyMaskingParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivacyMaskingParameters* source =
      ::google::protobuf::DynamicCastToGenerated<PrivacyMaskingParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.PrivacyMaskingParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.PrivacyMaskingParameters)
    MergeFrom(*source);
  }
}

void PrivacyMaskingParameters::MergeFrom(const PrivacyMaskingParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.PrivacyMaskingParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PrivacyMaskingParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.PrivacyMaskingParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivacyMaskingParameters::CopyFrom(const PrivacyMaskingParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.PrivacyMaskingParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivacyMaskingParameters::IsInitialized() const {
  return true;
}

void PrivacyMaskingParameters::Swap(PrivacyMaskingParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrivacyMaskingParameters::InternalSwap(PrivacyMaskingParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrivacyMaskingParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FaceDetectionParameters::InitAsDefaultInstance() {
}
class FaceDetectionParameters::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceDetectionParameters::FaceDetectionParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.FaceDetectionParameters)
}
FaceDetectionParameters::FaceDetectionParameters(const FaceDetectionParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.FaceDetectionParameters)
}

void FaceDetectionParameters::SharedCtor() {
}

FaceDetectionParameters::~FaceDetectionParameters() {
  // @@protoc_insertion_point(destructor:algorithm.v2.FaceDetectionParameters)
  SharedDtor();
}

void FaceDetectionParameters::SharedDtor() {
}

void FaceDetectionParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FaceDetectionParameters& FaceDetectionParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FaceDetectionParameters_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void FaceDetectionParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.FaceDetectionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FaceDetectionParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FaceDetectionParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FaceDetectionParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.FaceDetectionParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.FaceDetectionParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.FaceDetectionParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FaceDetectionParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.FaceDetectionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.FaceDetectionParameters)
}

::google::protobuf::uint8* FaceDetectionParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.FaceDetectionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.FaceDetectionParameters)
  return target;
}

size_t FaceDetectionParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.FaceDetectionParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FaceDetectionParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.FaceDetectionParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceDetectionParameters* source =
      ::google::protobuf::DynamicCastToGenerated<FaceDetectionParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.FaceDetectionParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.FaceDetectionParameters)
    MergeFrom(*source);
  }
}

void FaceDetectionParameters::MergeFrom(const FaceDetectionParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.FaceDetectionParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FaceDetectionParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.FaceDetectionParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceDetectionParameters::CopyFrom(const FaceDetectionParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.FaceDetectionParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceDetectionParameters::IsInitialized() const {
  return true;
}

void FaceDetectionParameters::Swap(FaceDetectionParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaceDetectionParameters::InternalSwap(FaceDetectionParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FaceDetectionParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlgorithmParameters::InitAsDefaultInstance() {
  ::algorithm::v2::_AlgorithmParameters_default_instance_.smart_parameters_ = const_cast< ::algorithm::v2::SmartMotionAlgorithmParameters*>(
      ::algorithm::v2::SmartMotionAlgorithmParameters::internal_default_instance());
  ::algorithm::v2::_AlgorithmParameters_default_instance_.pan_change_parameters_ = const_cast< ::algorithm::v2::PanChangeAlgorithmParameters*>(
      ::algorithm::v2::PanChangeAlgorithmParameters::internal_default_instance());
  ::algorithm::v2::_AlgorithmParameters_default_instance_.detection_parameters_ = const_cast< ::algorithm::v2::FaceDetectionParameters*>(
      ::algorithm::v2::FaceDetectionParameters::internal_default_instance());
}
class AlgorithmParameters::HasBitSetters {
 public:
  static const ::algorithm::v2::SmartMotionAlgorithmParameters& smart_parameters(const AlgorithmParameters* msg);
  static const ::algorithm::v2::PanChangeAlgorithmParameters& pan_change_parameters(const AlgorithmParameters* msg);
  static const ::algorithm::v2::FaceDetectionParameters& detection_parameters(const AlgorithmParameters* msg);
};

const ::algorithm::v2::SmartMotionAlgorithmParameters&
AlgorithmParameters::HasBitSetters::smart_parameters(const AlgorithmParameters* msg) {
  return *msg->parameters_.smart_parameters_;
}
const ::algorithm::v2::PanChangeAlgorithmParameters&
AlgorithmParameters::HasBitSetters::pan_change_parameters(const AlgorithmParameters* msg) {
  return *msg->parameters_.pan_change_parameters_;
}
const ::algorithm::v2::FaceDetectionParameters&
AlgorithmParameters::HasBitSetters::detection_parameters(const AlgorithmParameters* msg) {
  return *msg->parameters_.detection_parameters_;
}
void AlgorithmParameters::set_allocated_smart_parameters(::algorithm::v2::SmartMotionAlgorithmParameters* smart_parameters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (smart_parameters) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      smart_parameters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, smart_parameters, submessage_arena);
    }
    set_has_smart_parameters();
    parameters_.smart_parameters_ = smart_parameters;
  }
  // @@protoc_insertion_point(field_set_allocated:algorithm.v2.AlgorithmParameters.smart_parameters)
}
void AlgorithmParameters::set_allocated_pan_change_parameters(::algorithm::v2::PanChangeAlgorithmParameters* pan_change_parameters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (pan_change_parameters) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pan_change_parameters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pan_change_parameters, submessage_arena);
    }
    set_has_pan_change_parameters();
    parameters_.pan_change_parameters_ = pan_change_parameters;
  }
  // @@protoc_insertion_point(field_set_allocated:algorithm.v2.AlgorithmParameters.pan_change_parameters)
}
void AlgorithmParameters::set_allocated_detection_parameters(::algorithm::v2::FaceDetectionParameters* detection_parameters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (detection_parameters) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      detection_parameters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, detection_parameters, submessage_arena);
    }
    set_has_detection_parameters();
    parameters_.detection_parameters_ = detection_parameters;
  }
  // @@protoc_insertion_point(field_set_allocated:algorithm.v2.AlgorithmParameters.detection_parameters)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlgorithmParameters::kSmartParametersFieldNumber;
const int AlgorithmParameters::kPanChangeParametersFieldNumber;
const int AlgorithmParameters::kDetectionParametersFieldNumber;
const int AlgorithmParameters::kPreProcessingFieldNumber;
const int AlgorithmParameters::kVideoStabilizationFieldNumber;
const int AlgorithmParameters::kTamperDetectionFieldNumber;
const int AlgorithmParameters::kPrivacyMaskingFieldNumber;
const int AlgorithmParameters::kRunModeFieldNumber;
const int AlgorithmParameters::kPreProcessingDegreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlgorithmParameters::AlgorithmParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.AlgorithmParameters)
}
AlgorithmParameters::AlgorithmParameters(const AlgorithmParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pre_processing_, &from.pre_processing_,
    static_cast<size_t>(reinterpret_cast<char*>(&pre_processing_degree_) -
    reinterpret_cast<char*>(&pre_processing_)) + sizeof(pre_processing_degree_));
  clear_has_parameters();
  switch (from.parameters_case()) {
    case kSmartParameters: {
      mutable_smart_parameters()->::algorithm::v2::SmartMotionAlgorithmParameters::MergeFrom(from.smart_parameters());
      break;
    }
    case kPanChangeParameters: {
      mutable_pan_change_parameters()->::algorithm::v2::PanChangeAlgorithmParameters::MergeFrom(from.pan_change_parameters());
      break;
    }
    case kDetectionParameters: {
      mutable_detection_parameters()->::algorithm::v2::FaceDetectionParameters::MergeFrom(from.detection_parameters());
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.AlgorithmParameters)
}

void AlgorithmParameters::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlgorithmParameters_AlgorithmCommunicationV2_2eproto.base);
  ::memset(&pre_processing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pre_processing_degree_) -
      reinterpret_cast<char*>(&pre_processing_)) + sizeof(pre_processing_degree_));
  clear_has_parameters();
}

AlgorithmParameters::~AlgorithmParameters() {
  // @@protoc_insertion_point(destructor:algorithm.v2.AlgorithmParameters)
  SharedDtor();
}

void AlgorithmParameters::SharedDtor() {
  if (has_parameters()) {
    clear_parameters();
  }
}

void AlgorithmParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlgorithmParameters& AlgorithmParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlgorithmParameters_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void AlgorithmParameters::clear_parameters() {
// @@protoc_insertion_point(one_of_clear_start:algorithm.v2.AlgorithmParameters)
  switch (parameters_case()) {
    case kSmartParameters: {
      delete parameters_.smart_parameters_;
      break;
    }
    case kPanChangeParameters: {
      delete parameters_.pan_change_parameters_;
      break;
    }
    case kDetectionParameters: {
      delete parameters_.detection_parameters_;
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETERS_NOT_SET;
}


void AlgorithmParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.AlgorithmParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pre_processing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pre_processing_degree_) -
      reinterpret_cast<char*>(&pre_processing_)) + sizeof(pre_processing_degree_));
  clear_parameters();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlgorithmParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlgorithmParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .algorithm.v2.SmartMotionAlgorithmParameters smart_parameters = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::SmartMotionAlgorithmParameters::_InternalParse;
        object = msg->mutable_smart_parameters();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .algorithm.v2.PanChangeAlgorithmParameters pan_change_parameters = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::PanChangeAlgorithmParameters::_InternalParse;
        object = msg->mutable_pan_change_parameters();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .algorithm.v2.FaceDetectionParameters detection_parameters = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::FaceDetectionParameters::_InternalParse;
        object = msg->mutable_detection_parameters();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .algorithm.v2.PreProcessing pre_processing = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_pre_processing(static_cast<::algorithm::v2::PreProcessing>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool video_stabilization = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_video_stabilization(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool tamper_detection = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_tamper_detection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool privacy_masking = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_privacy_masking(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .algorithm.v2.RunMode run_mode = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_run_mode(static_cast<::algorithm::v2::RunMode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float pre_processing_degree = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 101) goto handle_unusual;
        msg->set_pre_processing_degree(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlgorithmParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.AlgorithmParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .algorithm.v2.SmartMotionAlgorithmParameters smart_parameters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_smart_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.PanChangeAlgorithmParameters pan_change_parameters = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pan_change_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.FaceDetectionParameters detection_parameters = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_detection_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.PreProcessing pre_processing = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pre_processing(static_cast< ::algorithm::v2::PreProcessing >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool video_stabilization = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &video_stabilization_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool tamper_detection = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tamper_detection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool privacy_masking = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &privacy_masking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.RunMode run_mode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_run_mode(static_cast< ::algorithm::v2::RunMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pre_processing_degree = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (101 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pre_processing_degree_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.AlgorithmParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.AlgorithmParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlgorithmParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.AlgorithmParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.SmartMotionAlgorithmParameters smart_parameters = 1;
  if (has_smart_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::smart_parameters(this), output);
  }

  // .algorithm.v2.PanChangeAlgorithmParameters pan_change_parameters = 3;
  if (has_pan_change_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::pan_change_parameters(this), output);
  }

  // .algorithm.v2.FaceDetectionParameters detection_parameters = 6;
  if (has_detection_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::detection_parameters(this), output);
  }

  // .algorithm.v2.PreProcessing pre_processing = 7;
  if (this->pre_processing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->pre_processing(), output);
  }

  // bool video_stabilization = 8;
  if (this->video_stabilization() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->video_stabilization(), output);
  }

  // bool tamper_detection = 9;
  if (this->tamper_detection() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->tamper_detection(), output);
  }

  // bool privacy_masking = 10;
  if (this->privacy_masking() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->privacy_masking(), output);
  }

  // .algorithm.v2.RunMode run_mode = 11;
  if (this->run_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->run_mode(), output);
  }

  // float pre_processing_degree = 12;
  if (this->pre_processing_degree() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->pre_processing_degree(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.AlgorithmParameters)
}

::google::protobuf::uint8* AlgorithmParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.AlgorithmParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.SmartMotionAlgorithmParameters smart_parameters = 1;
  if (has_smart_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::smart_parameters(this), target);
  }

  // .algorithm.v2.PanChangeAlgorithmParameters pan_change_parameters = 3;
  if (has_pan_change_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::pan_change_parameters(this), target);
  }

  // .algorithm.v2.FaceDetectionParameters detection_parameters = 6;
  if (has_detection_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::detection_parameters(this), target);
  }

  // .algorithm.v2.PreProcessing pre_processing = 7;
  if (this->pre_processing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->pre_processing(), target);
  }

  // bool video_stabilization = 8;
  if (this->video_stabilization() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->video_stabilization(), target);
  }

  // bool tamper_detection = 9;
  if (this->tamper_detection() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->tamper_detection(), target);
  }

  // bool privacy_masking = 10;
  if (this->privacy_masking() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->privacy_masking(), target);
  }

  // .algorithm.v2.RunMode run_mode = 11;
  if (this->run_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->run_mode(), target);
  }

  // float pre_processing_degree = 12;
  if (this->pre_processing_degree() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->pre_processing_degree(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.AlgorithmParameters)
  return target;
}

size_t AlgorithmParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.AlgorithmParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .algorithm.v2.PreProcessing pre_processing = 7;
  if (this->pre_processing() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pre_processing());
  }

  // bool video_stabilization = 8;
  if (this->video_stabilization() != 0) {
    total_size += 1 + 1;
  }

  // bool tamper_detection = 9;
  if (this->tamper_detection() != 0) {
    total_size += 1 + 1;
  }

  // bool privacy_masking = 10;
  if (this->privacy_masking() != 0) {
    total_size += 1 + 1;
  }

  // .algorithm.v2.RunMode run_mode = 11;
  if (this->run_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->run_mode());
  }

  // float pre_processing_degree = 12;
  if (this->pre_processing_degree() != 0) {
    total_size += 1 + 4;
  }

  switch (parameters_case()) {
    // .algorithm.v2.SmartMotionAlgorithmParameters smart_parameters = 1;
    case kSmartParameters: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.smart_parameters_);
      break;
    }
    // .algorithm.v2.PanChangeAlgorithmParameters pan_change_parameters = 3;
    case kPanChangeParameters: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.pan_change_parameters_);
      break;
    }
    // .algorithm.v2.FaceDetectionParameters detection_parameters = 6;
    case kDetectionParameters: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.detection_parameters_);
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlgorithmParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.AlgorithmParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AlgorithmParameters* source =
      ::google::protobuf::DynamicCastToGenerated<AlgorithmParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.AlgorithmParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.AlgorithmParameters)
    MergeFrom(*source);
  }
}

void AlgorithmParameters::MergeFrom(const AlgorithmParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.AlgorithmParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pre_processing() != 0) {
    set_pre_processing(from.pre_processing());
  }
  if (from.video_stabilization() != 0) {
    set_video_stabilization(from.video_stabilization());
  }
  if (from.tamper_detection() != 0) {
    set_tamper_detection(from.tamper_detection());
  }
  if (from.privacy_masking() != 0) {
    set_privacy_masking(from.privacy_masking());
  }
  if (from.run_mode() != 0) {
    set_run_mode(from.run_mode());
  }
  if (from.pre_processing_degree() != 0) {
    set_pre_processing_degree(from.pre_processing_degree());
  }
  switch (from.parameters_case()) {
    case kSmartParameters: {
      mutable_smart_parameters()->::algorithm::v2::SmartMotionAlgorithmParameters::MergeFrom(from.smart_parameters());
      break;
    }
    case kPanChangeParameters: {
      mutable_pan_change_parameters()->::algorithm::v2::PanChangeAlgorithmParameters::MergeFrom(from.pan_change_parameters());
      break;
    }
    case kDetectionParameters: {
      mutable_detection_parameters()->::algorithm::v2::FaceDetectionParameters::MergeFrom(from.detection_parameters());
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
}

void AlgorithmParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.AlgorithmParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlgorithmParameters::CopyFrom(const AlgorithmParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.AlgorithmParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlgorithmParameters::IsInitialized() const {
  return true;
}

void AlgorithmParameters::Swap(AlgorithmParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlgorithmParameters::InternalSwap(AlgorithmParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pre_processing_, other->pre_processing_);
  swap(video_stabilization_, other->video_stabilization_);
  swap(tamper_detection_, other->tamper_detection_);
  swap(privacy_masking_, other->privacy_masking_);
  swap(run_mode_, other->run_mode_);
  swap(pre_processing_degree_, other->pre_processing_degree_);
  swap(parameters_, other->parameters_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata AlgorithmParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlgorithmParametersSetRequest::InitAsDefaultInstance() {
  ::algorithm::v2::_AlgorithmParametersSetRequest_default_instance_._instance.get_mutable()->algorithm_ = const_cast< ::algorithm::v2::AlgorithmHead*>(
      ::algorithm::v2::AlgorithmHead::internal_default_instance());
  ::algorithm::v2::_AlgorithmParametersSetRequest_default_instance_.pre_ = 0;
  ::algorithm::v2::_AlgorithmParametersSetRequest_default_instance_.video_stabilization_ = false;
  ::algorithm::v2::_AlgorithmParametersSetRequest_default_instance_.tamper_detection_ = false;
  ::algorithm::v2::_AlgorithmParametersSetRequest_default_instance_.privacy_masking_ = false;
  ::algorithm::v2::_AlgorithmParametersSetRequest_default_instance_.run_mode_ = 0;
  ::algorithm::v2::_AlgorithmParametersSetRequest_default_instance_.pre_processing_degree_ = 0;
  ::algorithm::v2::_AlgorithmParametersSetRequest_default_instance_.smart_parameters_ = const_cast< ::algorithm::v2::SmartMotionAlgorithmParameters*>(
      ::algorithm::v2::SmartMotionAlgorithmParameters::internal_default_instance());
  ::algorithm::v2::_AlgorithmParametersSetRequest_default_instance_.pan_change_parameters_ = const_cast< ::algorithm::v2::PanChangeAlgorithmParameters*>(
      ::algorithm::v2::PanChangeAlgorithmParameters::internal_default_instance());
  ::algorithm::v2::_AlgorithmParametersSetRequest_default_instance_.detection_parameters_ = const_cast< ::algorithm::v2::FaceDetectionParameters*>(
      ::algorithm::v2::FaceDetectionParameters::internal_default_instance());
}
class AlgorithmParametersSetRequest::HasBitSetters {
 public:
  static const ::algorithm::v2::AlgorithmHead& algorithm(const AlgorithmParametersSetRequest* msg);
  static const ::algorithm::v2::SmartMotionAlgorithmParameters& smart_parameters(const AlgorithmParametersSetRequest* msg);
  static const ::algorithm::v2::PanChangeAlgorithmParameters& pan_change_parameters(const AlgorithmParametersSetRequest* msg);
  static const ::algorithm::v2::FaceDetectionParameters& detection_parameters(const AlgorithmParametersSetRequest* msg);
};

const ::algorithm::v2::AlgorithmHead&
AlgorithmParametersSetRequest::HasBitSetters::algorithm(const AlgorithmParametersSetRequest* msg) {
  return *msg->algorithm_;
}
const ::algorithm::v2::SmartMotionAlgorithmParameters&
AlgorithmParametersSetRequest::HasBitSetters::smart_parameters(const AlgorithmParametersSetRequest* msg) {
  return *msg->parameters_.smart_parameters_;
}
const ::algorithm::v2::PanChangeAlgorithmParameters&
AlgorithmParametersSetRequest::HasBitSetters::pan_change_parameters(const AlgorithmParametersSetRequest* msg) {
  return *msg->parameters_.pan_change_parameters_;
}
const ::algorithm::v2::FaceDetectionParameters&
AlgorithmParametersSetRequest::HasBitSetters::detection_parameters(const AlgorithmParametersSetRequest* msg) {
  return *msg->parameters_.detection_parameters_;
}
void AlgorithmParametersSetRequest::set_allocated_smart_parameters(::algorithm::v2::SmartMotionAlgorithmParameters* smart_parameters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (smart_parameters) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      smart_parameters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, smart_parameters, submessage_arena);
    }
    set_has_smart_parameters();
    parameters_.smart_parameters_ = smart_parameters;
  }
  // @@protoc_insertion_point(field_set_allocated:algorithm.v2.AlgorithmParametersSetRequest.smart_parameters)
}
void AlgorithmParametersSetRequest::set_allocated_pan_change_parameters(::algorithm::v2::PanChangeAlgorithmParameters* pan_change_parameters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (pan_change_parameters) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pan_change_parameters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pan_change_parameters, submessage_arena);
    }
    set_has_pan_change_parameters();
    parameters_.pan_change_parameters_ = pan_change_parameters;
  }
  // @@protoc_insertion_point(field_set_allocated:algorithm.v2.AlgorithmParametersSetRequest.pan_change_parameters)
}
void AlgorithmParametersSetRequest::set_allocated_detection_parameters(::algorithm::v2::FaceDetectionParameters* detection_parameters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (detection_parameters) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      detection_parameters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, detection_parameters, submessage_arena);
    }
    set_has_detection_parameters();
    parameters_.detection_parameters_ = detection_parameters;
  }
  // @@protoc_insertion_point(field_set_allocated:algorithm.v2.AlgorithmParametersSetRequest.detection_parameters)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlgorithmParametersSetRequest::kAlgorithmFieldNumber;
const int AlgorithmParametersSetRequest::kPreFieldNumber;
const int AlgorithmParametersSetRequest::kVideoStabilizationFieldNumber;
const int AlgorithmParametersSetRequest::kTamperDetectionFieldNumber;
const int AlgorithmParametersSetRequest::kPrivacyMaskingFieldNumber;
const int AlgorithmParametersSetRequest::kRunModeFieldNumber;
const int AlgorithmParametersSetRequest::kPreProcessingDegreeFieldNumber;
const int AlgorithmParametersSetRequest::kSmartParametersFieldNumber;
const int AlgorithmParametersSetRequest::kPanChangeParametersFieldNumber;
const int AlgorithmParametersSetRequest::kDetectionParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlgorithmParametersSetRequest::AlgorithmParametersSetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.AlgorithmParametersSetRequest)
}
AlgorithmParametersSetRequest::AlgorithmParametersSetRequest(const AlgorithmParametersSetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_algorithm()) {
    algorithm_ = new ::algorithm::v2::AlgorithmHead(*from.algorithm_);
  } else {
    algorithm_ = nullptr;
  }
  clear_has_parameters();
  switch (from.parameters_case()) {
    case kPre: {
      set_pre(from.pre());
      break;
    }
    case kVideoStabilization: {
      set_video_stabilization(from.video_stabilization());
      break;
    }
    case kTamperDetection: {
      set_tamper_detection(from.tamper_detection());
      break;
    }
    case kPrivacyMasking: {
      set_privacy_masking(from.privacy_masking());
      break;
    }
    case kRunMode: {
      set_run_mode(from.run_mode());
      break;
    }
    case kPreProcessingDegree: {
      set_pre_processing_degree(from.pre_processing_degree());
      break;
    }
    case kSmartParameters: {
      mutable_smart_parameters()->::algorithm::v2::SmartMotionAlgorithmParameters::MergeFrom(from.smart_parameters());
      break;
    }
    case kPanChangeParameters: {
      mutable_pan_change_parameters()->::algorithm::v2::PanChangeAlgorithmParameters::MergeFrom(from.pan_change_parameters());
      break;
    }
    case kDetectionParameters: {
      mutable_detection_parameters()->::algorithm::v2::FaceDetectionParameters::MergeFrom(from.detection_parameters());
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.AlgorithmParametersSetRequest)
}

void AlgorithmParametersSetRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlgorithmParametersSetRequest_AlgorithmCommunicationV2_2eproto.base);
  algorithm_ = nullptr;
  clear_has_parameters();
}

AlgorithmParametersSetRequest::~AlgorithmParametersSetRequest() {
  // @@protoc_insertion_point(destructor:algorithm.v2.AlgorithmParametersSetRequest)
  SharedDtor();
}

void AlgorithmParametersSetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete algorithm_;
  if (has_parameters()) {
    clear_parameters();
  }
}

void AlgorithmParametersSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlgorithmParametersSetRequest& AlgorithmParametersSetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlgorithmParametersSetRequest_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void AlgorithmParametersSetRequest::clear_parameters() {
// @@protoc_insertion_point(one_of_clear_start:algorithm.v2.AlgorithmParametersSetRequest)
  switch (parameters_case()) {
    case kPre: {
      // No need to clear
      break;
    }
    case kVideoStabilization: {
      // No need to clear
      break;
    }
    case kTamperDetection: {
      // No need to clear
      break;
    }
    case kPrivacyMasking: {
      // No need to clear
      break;
    }
    case kRunMode: {
      // No need to clear
      break;
    }
    case kPreProcessingDegree: {
      // No need to clear
      break;
    }
    case kSmartParameters: {
      delete parameters_.smart_parameters_;
      break;
    }
    case kPanChangeParameters: {
      delete parameters_.pan_change_parameters_;
      break;
    }
    case kDetectionParameters: {
      delete parameters_.detection_parameters_;
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETERS_NOT_SET;
}


void AlgorithmParametersSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.AlgorithmParametersSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && algorithm_ != nullptr) {
    delete algorithm_;
  }
  algorithm_ = nullptr;
  clear_parameters();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlgorithmParametersSetRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlgorithmParametersSetRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .algorithm.v2.AlgorithmHead algorithm = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::AlgorithmHead::_InternalParse;
        object = msg->mutable_algorithm();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .algorithm.v2.PreProcessing pre = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_pre(static_cast<::algorithm::v2::PreProcessing>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool video_stabilization = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_video_stabilization(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool tamper_detection = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_tamper_detection(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool privacy_masking = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_privacy_masking(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .algorithm.v2.RunMode run_mode = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_run_mode(static_cast<::algorithm::v2::RunMode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float pre_processing_degree = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 61) goto handle_unusual;
        msg->set_pre_processing_degree(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // .algorithm.v2.SmartMotionAlgorithmParameters smart_parameters = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::SmartMotionAlgorithmParameters::_InternalParse;
        object = msg->mutable_smart_parameters();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .algorithm.v2.PanChangeAlgorithmParameters pan_change_parameters = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::PanChangeAlgorithmParameters::_InternalParse;
        object = msg->mutable_pan_change_parameters();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .algorithm.v2.FaceDetectionParameters detection_parameters = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::FaceDetectionParameters::_InternalParse;
        object = msg->mutable_detection_parameters();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlgorithmParametersSetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.AlgorithmParametersSetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .algorithm.v2.AlgorithmHead algorithm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_algorithm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.PreProcessing pre = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pre(static_cast< ::algorithm::v2::PreProcessing >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool video_stabilization = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          clear_parameters();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &parameters_.video_stabilization_)));
          set_has_video_stabilization();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool tamper_detection = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          clear_parameters();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &parameters_.tamper_detection_)));
          set_has_tamper_detection();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool privacy_masking = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          clear_parameters();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &parameters_.privacy_masking_)));
          set_has_privacy_masking();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.RunMode run_mode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_run_mode(static_cast< ::algorithm::v2::RunMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pre_processing_degree = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (61 & 0xFF)) {
          clear_parameters();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &parameters_.pre_processing_degree_)));
          set_has_pre_processing_degree();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.SmartMotionAlgorithmParameters smart_parameters = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_smart_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.PanChangeAlgorithmParameters pan_change_parameters = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pan_change_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.FaceDetectionParameters detection_parameters = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_detection_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.AlgorithmParametersSetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.AlgorithmParametersSetRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlgorithmParametersSetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.AlgorithmParametersSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.AlgorithmHead algorithm = 1;
  if (this->has_algorithm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::algorithm(this), output);
  }

  // .algorithm.v2.PreProcessing pre = 2;
  if (has_pre()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->pre(), output);
  }

  // bool video_stabilization = 3;
  if (has_video_stabilization()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->video_stabilization(), output);
  }

  // bool tamper_detection = 4;
  if (has_tamper_detection()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->tamper_detection(), output);
  }

  // bool privacy_masking = 5;
  if (has_privacy_masking()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->privacy_masking(), output);
  }

  // .algorithm.v2.RunMode run_mode = 6;
  if (has_run_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->run_mode(), output);
  }

  // float pre_processing_degree = 7;
  if (has_pre_processing_degree()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->pre_processing_degree(), output);
  }

  // .algorithm.v2.SmartMotionAlgorithmParameters smart_parameters = 8;
  if (has_smart_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::smart_parameters(this), output);
  }

  // .algorithm.v2.PanChangeAlgorithmParameters pan_change_parameters = 10;
  if (has_pan_change_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::pan_change_parameters(this), output);
  }

  // .algorithm.v2.FaceDetectionParameters detection_parameters = 11;
  if (has_detection_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::detection_parameters(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.AlgorithmParametersSetRequest)
}

::google::protobuf::uint8* AlgorithmParametersSetRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.AlgorithmParametersSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.AlgorithmHead algorithm = 1;
  if (this->has_algorithm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::algorithm(this), target);
  }

  // .algorithm.v2.PreProcessing pre = 2;
  if (has_pre()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->pre(), target);
  }

  // bool video_stabilization = 3;
  if (has_video_stabilization()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->video_stabilization(), target);
  }

  // bool tamper_detection = 4;
  if (has_tamper_detection()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->tamper_detection(), target);
  }

  // bool privacy_masking = 5;
  if (has_privacy_masking()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->privacy_masking(), target);
  }

  // .algorithm.v2.RunMode run_mode = 6;
  if (has_run_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->run_mode(), target);
  }

  // float pre_processing_degree = 7;
  if (has_pre_processing_degree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->pre_processing_degree(), target);
  }

  // .algorithm.v2.SmartMotionAlgorithmParameters smart_parameters = 8;
  if (has_smart_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::smart_parameters(this), target);
  }

  // .algorithm.v2.PanChangeAlgorithmParameters pan_change_parameters = 10;
  if (has_pan_change_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::pan_change_parameters(this), target);
  }

  // .algorithm.v2.FaceDetectionParameters detection_parameters = 11;
  if (has_detection_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::detection_parameters(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.AlgorithmParametersSetRequest)
  return target;
}

size_t AlgorithmParametersSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.AlgorithmParametersSetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .algorithm.v2.AlgorithmHead algorithm = 1;
  if (this->has_algorithm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *algorithm_);
  }

  switch (parameters_case()) {
    // .algorithm.v2.PreProcessing pre = 2;
    case kPre: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pre());
      break;
    }
    // bool video_stabilization = 3;
    case kVideoStabilization: {
      total_size += 1 + 1;
      break;
    }
    // bool tamper_detection = 4;
    case kTamperDetection: {
      total_size += 1 + 1;
      break;
    }
    // bool privacy_masking = 5;
    case kPrivacyMasking: {
      total_size += 1 + 1;
      break;
    }
    // .algorithm.v2.RunMode run_mode = 6;
    case kRunMode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->run_mode());
      break;
    }
    // float pre_processing_degree = 7;
    case kPreProcessingDegree: {
      total_size += 1 + 4;
      break;
    }
    // .algorithm.v2.SmartMotionAlgorithmParameters smart_parameters = 8;
    case kSmartParameters: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.smart_parameters_);
      break;
    }
    // .algorithm.v2.PanChangeAlgorithmParameters pan_change_parameters = 10;
    case kPanChangeParameters: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.pan_change_parameters_);
      break;
    }
    // .algorithm.v2.FaceDetectionParameters detection_parameters = 11;
    case kDetectionParameters: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.detection_parameters_);
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlgorithmParametersSetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.AlgorithmParametersSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AlgorithmParametersSetRequest* source =
      ::google::protobuf::DynamicCastToGenerated<AlgorithmParametersSetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.AlgorithmParametersSetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.AlgorithmParametersSetRequest)
    MergeFrom(*source);
  }
}

void AlgorithmParametersSetRequest::MergeFrom(const AlgorithmParametersSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.AlgorithmParametersSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_algorithm()) {
    mutable_algorithm()->::algorithm::v2::AlgorithmHead::MergeFrom(from.algorithm());
  }
  switch (from.parameters_case()) {
    case kPre: {
      set_pre(from.pre());
      break;
    }
    case kVideoStabilization: {
      set_video_stabilization(from.video_stabilization());
      break;
    }
    case kTamperDetection: {
      set_tamper_detection(from.tamper_detection());
      break;
    }
    case kPrivacyMasking: {
      set_privacy_masking(from.privacy_masking());
      break;
    }
    case kRunMode: {
      set_run_mode(from.run_mode());
      break;
    }
    case kPreProcessingDegree: {
      set_pre_processing_degree(from.pre_processing_degree());
      break;
    }
    case kSmartParameters: {
      mutable_smart_parameters()->::algorithm::v2::SmartMotionAlgorithmParameters::MergeFrom(from.smart_parameters());
      break;
    }
    case kPanChangeParameters: {
      mutable_pan_change_parameters()->::algorithm::v2::PanChangeAlgorithmParameters::MergeFrom(from.pan_change_parameters());
      break;
    }
    case kDetectionParameters: {
      mutable_detection_parameters()->::algorithm::v2::FaceDetectionParameters::MergeFrom(from.detection_parameters());
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
}

void AlgorithmParametersSetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.AlgorithmParametersSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlgorithmParametersSetRequest::CopyFrom(const AlgorithmParametersSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.AlgorithmParametersSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlgorithmParametersSetRequest::IsInitialized() const {
  return true;
}

void AlgorithmParametersSetRequest::Swap(AlgorithmParametersSetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlgorithmParametersSetRequest::InternalSwap(AlgorithmParametersSetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(algorithm_, other->algorithm_);
  swap(parameters_, other->parameters_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata AlgorithmParametersSetRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Point::InitAsDefaultInstance() {
}
class Point::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kXFieldNumber;
const int Point::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.Point)
}

void Point::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:algorithm.v2.Point)
  SharedDtor();
}

void Point::SharedDtor() {
}

void Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Point& Point::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Point_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Point::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Point*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_x(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float y = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_y(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.Point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.Point)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.Point)
}

::google::protobuf::uint8* Point::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.Point)
  return target;
}

size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Point* source =
      ::google::protobuf::DynamicCastToGenerated<Point>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.Point)
    MergeFrom(*source);
  }
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(x_, other->x_);
  swap(y_, other->y_);
}

::google::protobuf::Metadata Point::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LineCrossRegion::InitAsDefaultInstance() {
  ::algorithm::v2::_LineCrossRegion_default_instance_._instance.get_mutable()->pt1_ = const_cast< ::algorithm::v2::Point*>(
      ::algorithm::v2::Point::internal_default_instance());
  ::algorithm::v2::_LineCrossRegion_default_instance_._instance.get_mutable()->pt2_ = const_cast< ::algorithm::v2::Point*>(
      ::algorithm::v2::Point::internal_default_instance());
}
class LineCrossRegion::HasBitSetters {
 public:
  static const ::algorithm::v2::Point& pt1(const LineCrossRegion* msg);
  static const ::algorithm::v2::Point& pt2(const LineCrossRegion* msg);
};

const ::algorithm::v2::Point&
LineCrossRegion::HasBitSetters::pt1(const LineCrossRegion* msg) {
  return *msg->pt1_;
}
const ::algorithm::v2::Point&
LineCrossRegion::HasBitSetters::pt2(const LineCrossRegion* msg) {
  return *msg->pt2_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LineCrossRegion::kPt1FieldNumber;
const int LineCrossRegion::kPt2FieldNumber;
const int LineCrossRegion::kActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LineCrossRegion::LineCrossRegion()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.LineCrossRegion)
}
LineCrossRegion::LineCrossRegion(const LineCrossRegion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pt1()) {
    pt1_ = new ::algorithm::v2::Point(*from.pt1_);
  } else {
    pt1_ = nullptr;
  }
  if (from.has_pt2()) {
    pt2_ = new ::algorithm::v2::Point(*from.pt2_);
  } else {
    pt2_ = nullptr;
  }
  active_ = from.active_;
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.LineCrossRegion)
}

void LineCrossRegion::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LineCrossRegion_AlgorithmCommunicationV2_2eproto.base);
  ::memset(&pt1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&active_) -
      reinterpret_cast<char*>(&pt1_)) + sizeof(active_));
}

LineCrossRegion::~LineCrossRegion() {
  // @@protoc_insertion_point(destructor:algorithm.v2.LineCrossRegion)
  SharedDtor();
}

void LineCrossRegion::SharedDtor() {
  if (this != internal_default_instance()) delete pt1_;
  if (this != internal_default_instance()) delete pt2_;
}

void LineCrossRegion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LineCrossRegion& LineCrossRegion::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LineCrossRegion_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void LineCrossRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.LineCrossRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && pt1_ != nullptr) {
    delete pt1_;
  }
  pt1_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && pt2_ != nullptr) {
    delete pt2_;
  }
  pt2_ = nullptr;
  active_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LineCrossRegion::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LineCrossRegion*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .algorithm.v2.Point pt1 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::Point::_InternalParse;
        object = msg->mutable_pt1();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .algorithm.v2.Point pt2 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::Point::_InternalParse;
        object = msg->mutable_pt2();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool active = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_active(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LineCrossRegion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.LineCrossRegion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .algorithm.v2.Point pt1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.Point pt2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool active = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.LineCrossRegion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.LineCrossRegion)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LineCrossRegion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.LineCrossRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.Point pt1 = 1;
  if (this->has_pt1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pt1(this), output);
  }

  // .algorithm.v2.Point pt2 = 2;
  if (this->has_pt2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pt2(this), output);
  }

  // bool active = 3;
  if (this->active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->active(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.LineCrossRegion)
}

::google::protobuf::uint8* LineCrossRegion::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.LineCrossRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.Point pt1 = 1;
  if (this->has_pt1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pt1(this), target);
  }

  // .algorithm.v2.Point pt2 = 2;
  if (this->has_pt2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pt2(this), target);
  }

  // bool active = 3;
  if (this->active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->active(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.LineCrossRegion)
  return target;
}

size_t LineCrossRegion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.LineCrossRegion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .algorithm.v2.Point pt1 = 1;
  if (this->has_pt1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pt1_);
  }

  // .algorithm.v2.Point pt2 = 2;
  if (this->has_pt2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pt2_);
  }

  // bool active = 3;
  if (this->active() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LineCrossRegion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.LineCrossRegion)
  GOOGLE_DCHECK_NE(&from, this);
  const LineCrossRegion* source =
      ::google::protobuf::DynamicCastToGenerated<LineCrossRegion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.LineCrossRegion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.LineCrossRegion)
    MergeFrom(*source);
  }
}

void LineCrossRegion::MergeFrom(const LineCrossRegion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.LineCrossRegion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pt1()) {
    mutable_pt1()->::algorithm::v2::Point::MergeFrom(from.pt1());
  }
  if (from.has_pt2()) {
    mutable_pt2()->::algorithm::v2::Point::MergeFrom(from.pt2());
  }
  if (from.active() != 0) {
    set_active(from.active());
  }
}

void LineCrossRegion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.LineCrossRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LineCrossRegion::CopyFrom(const LineCrossRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.LineCrossRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LineCrossRegion::IsInitialized() const {
  return true;
}

void LineCrossRegion::Swap(LineCrossRegion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LineCrossRegion::InternalSwap(LineCrossRegion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pt1_, other->pt1_);
  swap(pt2_, other->pt2_);
  swap(active_, other->active_);
}

::google::protobuf::Metadata LineCrossRegion::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rectangle::InitAsDefaultInstance() {
  ::algorithm::v2::_Rectangle_default_instance_._instance.get_mutable()->top_left_ = const_cast< ::algorithm::v2::Point*>(
      ::algorithm::v2::Point::internal_default_instance());
  ::algorithm::v2::_Rectangle_default_instance_._instance.get_mutable()->bottom_right_ = const_cast< ::algorithm::v2::Point*>(
      ::algorithm::v2::Point::internal_default_instance());
}
class Rectangle::HasBitSetters {
 public:
  static const ::algorithm::v2::Point& top_left(const Rectangle* msg);
  static const ::algorithm::v2::Point& bottom_right(const Rectangle* msg);
};

const ::algorithm::v2::Point&
Rectangle::HasBitSetters::top_left(const Rectangle* msg) {
  return *msg->top_left_;
}
const ::algorithm::v2::Point&
Rectangle::HasBitSetters::bottom_right(const Rectangle* msg) {
  return *msg->bottom_right_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rectangle::kTopLeftFieldNumber;
const int Rectangle::kBottomRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rectangle::Rectangle()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.Rectangle)
}
Rectangle::Rectangle(const Rectangle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_top_left()) {
    top_left_ = new ::algorithm::v2::Point(*from.top_left_);
  } else {
    top_left_ = nullptr;
  }
  if (from.has_bottom_right()) {
    bottom_right_ = new ::algorithm::v2::Point(*from.bottom_right_);
  } else {
    bottom_right_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.Rectangle)
}

void Rectangle::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rectangle_AlgorithmCommunicationV2_2eproto.base);
  ::memset(&top_left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottom_right_) -
      reinterpret_cast<char*>(&top_left_)) + sizeof(bottom_right_));
}

Rectangle::~Rectangle() {
  // @@protoc_insertion_point(destructor:algorithm.v2.Rectangle)
  SharedDtor();
}

void Rectangle::SharedDtor() {
  if (this != internal_default_instance()) delete top_left_;
  if (this != internal_default_instance()) delete bottom_right_;
}

void Rectangle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rectangle& Rectangle::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rectangle_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void Rectangle::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.Rectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && top_left_ != nullptr) {
    delete top_left_;
  }
  top_left_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && bottom_right_ != nullptr) {
    delete bottom_right_;
  }
  bottom_right_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rectangle::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rectangle*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .algorithm.v2.Point top_left = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::Point::_InternalParse;
        object = msg->mutable_top_left();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .algorithm.v2.Point bottom_right = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::Point::_InternalParse;
        object = msg->mutable_bottom_right();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rectangle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.Rectangle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .algorithm.v2.Point top_left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.Point bottom_right = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bottom_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.Rectangle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.Rectangle)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rectangle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.Rectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.Point top_left = 1;
  if (this->has_top_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::top_left(this), output);
  }

  // .algorithm.v2.Point bottom_right = 2;
  if (this->has_bottom_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::bottom_right(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.Rectangle)
}

::google::protobuf::uint8* Rectangle::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.Rectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.Point top_left = 1;
  if (this->has_top_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::top_left(this), target);
  }

  // .algorithm.v2.Point bottom_right = 2;
  if (this->has_bottom_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::bottom_right(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.Rectangle)
  return target;
}

size_t Rectangle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.Rectangle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .algorithm.v2.Point top_left = 1;
  if (this->has_top_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_left_);
  }

  // .algorithm.v2.Point bottom_right = 2;
  if (this->has_bottom_right()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bottom_right_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rectangle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.Rectangle)
  GOOGLE_DCHECK_NE(&from, this);
  const Rectangle* source =
      ::google::protobuf::DynamicCastToGenerated<Rectangle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.Rectangle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.Rectangle)
    MergeFrom(*source);
  }
}

void Rectangle::MergeFrom(const Rectangle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.Rectangle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_top_left()) {
    mutable_top_left()->::algorithm::v2::Point::MergeFrom(from.top_left());
  }
  if (from.has_bottom_right()) {
    mutable_bottom_right()->::algorithm::v2::Point::MergeFrom(from.bottom_right());
  }
}

void Rectangle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.Rectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rectangle::CopyFrom(const Rectangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.Rectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rectangle::IsInitialized() const {
  return true;
}

void Rectangle::Swap(Rectangle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rectangle::InternalSwap(Rectangle* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(top_left_, other->top_left_);
  swap(bottom_right_, other->bottom_right_);
}

::google::protobuf::Metadata Rectangle::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DetectedObject::InitAsDefaultInstance() {
  ::algorithm::v2::_DetectedObject_default_instance_._instance.get_mutable()->bounding_box_ = const_cast< ::algorithm::v2::Rectangle*>(
      ::algorithm::v2::Rectangle::internal_default_instance());
  ::algorithm::v2::_DetectedObject_default_instance_.object_counter_ = 0;
  ::algorithm::v2::_DetectedObject_default_instance_.object_guid_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class DetectedObject::HasBitSetters {
 public:
  static const ::algorithm::v2::Rectangle& bounding_box(const DetectedObject* msg);
};

const ::algorithm::v2::Rectangle&
DetectedObject::HasBitSetters::bounding_box(const DetectedObject* msg) {
  return *msg->bounding_box_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedObject::kBoundingBoxFieldNumber;
const int DetectedObject::kObjectTypeFieldNumber;
const int DetectedObject::kEventFieldNumber;
const int DetectedObject::kObjectCounterFieldNumber;
const int DetectedObject::kObjectGuidFieldNumber;
const int DetectedObject::kObjectColorFieldNumber;
const int DetectedObject::kObjectDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedObject::DetectedObject()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.DetectedObject)
}
DetectedObject::DetectedObject(const DetectedObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bounding_box()) {
    bounding_box_ = new ::algorithm::v2::Rectangle(*from.bounding_box_);
  } else {
    bounding_box_ = nullptr;
  }
  ::memcpy(&object_type_, &from.object_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&object_direction_) -
    reinterpret_cast<char*>(&object_type_)) + sizeof(object_direction_));
  clear_has_object_id();
  switch (from.object_id_case()) {
    case kObjectCounter: {
      set_object_counter(from.object_counter());
      break;
    }
    case kObjectGuid: {
      set_object_guid(from.object_guid());
      break;
    }
    case OBJECT_ID_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.DetectedObject)
}

void DetectedObject::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DetectedObject_AlgorithmCommunicationV2_2eproto.base);
  ::memset(&bounding_box_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&object_direction_) -
      reinterpret_cast<char*>(&bounding_box_)) + sizeof(object_direction_));
  clear_has_object_id();
}

DetectedObject::~DetectedObject() {
  // @@protoc_insertion_point(destructor:algorithm.v2.DetectedObject)
  SharedDtor();
}

void DetectedObject::SharedDtor() {
  if (this != internal_default_instance()) delete bounding_box_;
  if (has_object_id()) {
    clear_object_id();
  }
}

void DetectedObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DetectedObject& DetectedObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DetectedObject_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void DetectedObject::clear_object_id() {
// @@protoc_insertion_point(one_of_clear_start:algorithm.v2.DetectedObject)
  switch (object_id_case()) {
    case kObjectCounter: {
      // No need to clear
      break;
    }
    case kObjectGuid: {
      object_id_.object_guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case OBJECT_ID_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OBJECT_ID_NOT_SET;
}


void DetectedObject::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.DetectedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && bounding_box_ != nullptr) {
    delete bounding_box_;
  }
  bounding_box_ = nullptr;
  ::memset(&object_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&object_direction_) -
      reinterpret_cast<char*>(&object_type_)) + sizeof(object_direction_));
  clear_object_id();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DetectedObject::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DetectedObject*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .algorithm.v2.Rectangle bounding_box = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::Rectangle::_InternalParse;
        object = msg->mutable_bounding_box();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .algorithm.v2.DetectedObject.ObjectType object_type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_object_type(static_cast<::algorithm::v2::DetectedObject_ObjectType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .algorithm.v2.DetectedObject.EventType event = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_event(static_cast<::algorithm::v2::DetectedObject_EventType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 object_counter = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_object_counter(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string object_guid = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("algorithm.v2.DetectedObject.object_guid");
        object = msg->mutable_object_guid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .algorithm.v2.DetectedObject.ObjectColor object_color = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_object_color(static_cast<::algorithm::v2::DetectedObject_ObjectColor>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .algorithm.v2.MotionDirection object_direction = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_object_direction(static_cast<::algorithm::v2::MotionDirection>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DetectedObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.DetectedObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .algorithm.v2.Rectangle bounding_box = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounding_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.DetectedObject.ObjectType object_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_object_type(static_cast< ::algorithm::v2::DetectedObject_ObjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.DetectedObject.EventType event = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_event(static_cast< ::algorithm::v2::DetectedObject_EventType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 object_counter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          clear_object_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &object_id_.object_counter_)));
          set_has_object_counter();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string object_guid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_guid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_guid().data(), static_cast<int>(this->object_guid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algorithm.v2.DetectedObject.object_guid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.DetectedObject.ObjectColor object_color = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_object_color(static_cast< ::algorithm::v2::DetectedObject_ObjectColor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.MotionDirection object_direction = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_object_direction(static_cast< ::algorithm::v2::MotionDirection >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.DetectedObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.DetectedObject)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DetectedObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.DetectedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.Rectangle bounding_box = 1;
  if (this->has_bounding_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::bounding_box(this), output);
  }

  // .algorithm.v2.DetectedObject.ObjectType object_type = 2;
  if (this->object_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->object_type(), output);
  }

  // .algorithm.v2.DetectedObject.EventType event = 3;
  if (this->event() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->event(), output);
  }

  // int32 object_counter = 4;
  if (has_object_counter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->object_counter(), output);
  }

  // string object_guid = 5;
  if (has_object_guid()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_guid().data(), static_cast<int>(this->object_guid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.DetectedObject.object_guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->object_guid(), output);
  }

  // .algorithm.v2.DetectedObject.ObjectColor object_color = 6;
  if (this->object_color() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->object_color(), output);
  }

  // .algorithm.v2.MotionDirection object_direction = 7;
  if (this->object_direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->object_direction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.DetectedObject)
}

::google::protobuf::uint8* DetectedObject::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.DetectedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.Rectangle bounding_box = 1;
  if (this->has_bounding_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::bounding_box(this), target);
  }

  // .algorithm.v2.DetectedObject.ObjectType object_type = 2;
  if (this->object_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->object_type(), target);
  }

  // .algorithm.v2.DetectedObject.EventType event = 3;
  if (this->event() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->event(), target);
  }

  // int32 object_counter = 4;
  if (has_object_counter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->object_counter(), target);
  }

  // string object_guid = 5;
  if (has_object_guid()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_guid().data(), static_cast<int>(this->object_guid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.DetectedObject.object_guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->object_guid(), target);
  }

  // .algorithm.v2.DetectedObject.ObjectColor object_color = 6;
  if (this->object_color() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->object_color(), target);
  }

  // .algorithm.v2.MotionDirection object_direction = 7;
  if (this->object_direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->object_direction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.DetectedObject)
  return target;
}

size_t DetectedObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.DetectedObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .algorithm.v2.Rectangle bounding_box = 1;
  if (this->has_bounding_box()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bounding_box_);
  }

  // .algorithm.v2.DetectedObject.ObjectType object_type = 2;
  if (this->object_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->object_type());
  }

  // .algorithm.v2.DetectedObject.EventType event = 3;
  if (this->event() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event());
  }

  // .algorithm.v2.DetectedObject.ObjectColor object_color = 6;
  if (this->object_color() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->object_color());
  }

  // .algorithm.v2.MotionDirection object_direction = 7;
  if (this->object_direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->object_direction());
  }

  switch (object_id_case()) {
    // int32 object_counter = 4;
    case kObjectCounter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->object_counter());
      break;
    }
    // string object_guid = 5;
    case kObjectGuid: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->object_guid());
      break;
    }
    case OBJECT_ID_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DetectedObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.DetectedObject)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedObject* source =
      ::google::protobuf::DynamicCastToGenerated<DetectedObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.DetectedObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.DetectedObject)
    MergeFrom(*source);
  }
}

void DetectedObject::MergeFrom(const DetectedObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.DetectedObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bounding_box()) {
    mutable_bounding_box()->::algorithm::v2::Rectangle::MergeFrom(from.bounding_box());
  }
  if (from.object_type() != 0) {
    set_object_type(from.object_type());
  }
  if (from.event() != 0) {
    set_event(from.event());
  }
  if (from.object_color() != 0) {
    set_object_color(from.object_color());
  }
  if (from.object_direction() != 0) {
    set_object_direction(from.object_direction());
  }
  switch (from.object_id_case()) {
    case kObjectCounter: {
      set_object_counter(from.object_counter());
      break;
    }
    case kObjectGuid: {
      set_object_guid(from.object_guid());
      break;
    }
    case OBJECT_ID_NOT_SET: {
      break;
    }
  }
}

void DetectedObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.DetectedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedObject::CopyFrom(const DetectedObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.DetectedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedObject::IsInitialized() const {
  return true;
}

void DetectedObject::Swap(DetectedObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedObject::InternalSwap(DetectedObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(bounding_box_, other->bounding_box_);
  swap(object_type_, other->object_type_);
  swap(event_, other->event_);
  swap(object_color_, other->object_color_);
  swap(object_direction_, other->object_direction_);
  swap(object_id_, other->object_id_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata DetectedObject::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ScreenshotInfo::InitAsDefaultInstance() {
}
class ScreenshotInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScreenshotInfo::kChannelIdFieldNumber;
const int ScreenshotInfo::kQualityFieldNumber;
const int ScreenshotInfo::kFpsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScreenshotInfo::ScreenshotInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.ScreenshotInfo)
}
ScreenshotInfo::ScreenshotInfo(const ScreenshotInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&channelid_, &from.channelid_,
    static_cast<size_t>(reinterpret_cast<char*>(&fps_) -
    reinterpret_cast<char*>(&channelid_)) + sizeof(fps_));
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.ScreenshotInfo)
}

void ScreenshotInfo::SharedCtor() {
  ::memset(&channelid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fps_) -
      reinterpret_cast<char*>(&channelid_)) + sizeof(fps_));
}

ScreenshotInfo::~ScreenshotInfo() {
  // @@protoc_insertion_point(destructor:algorithm.v2.ScreenshotInfo)
  SharedDtor();
}

void ScreenshotInfo::SharedDtor() {
}

void ScreenshotInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScreenshotInfo& ScreenshotInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ScreenshotInfo_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void ScreenshotInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.ScreenshotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channelid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fps_) -
      reinterpret_cast<char*>(&channelid_)) + sizeof(fps_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ScreenshotInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ScreenshotInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 channelId = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_channelid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 quality = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_quality(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float fps = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_fps(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ScreenshotInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.ScreenshotInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 channelId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 quality = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fps = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.ScreenshotInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.ScreenshotInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ScreenshotInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.ScreenshotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 channelId = 1;
  if (this->channelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->channelid(), output);
  }

  // int32 quality = 2;
  if (this->quality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->quality(), output);
  }

  // float fps = 3;
  if (this->fps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->fps(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.ScreenshotInfo)
}

::google::protobuf::uint8* ScreenshotInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.ScreenshotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 channelId = 1;
  if (this->channelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->channelid(), target);
  }

  // int32 quality = 2;
  if (this->quality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->quality(), target);
  }

  // float fps = 3;
  if (this->fps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->fps(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.ScreenshotInfo)
  return target;
}

size_t ScreenshotInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.ScreenshotInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 channelId = 1;
  if (this->channelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channelid());
  }

  // int32 quality = 2;
  if (this->quality() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quality());
  }

  // float fps = 3;
  if (this->fps() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScreenshotInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.ScreenshotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ScreenshotInfo* source =
      ::google::protobuf::DynamicCastToGenerated<ScreenshotInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.ScreenshotInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.ScreenshotInfo)
    MergeFrom(*source);
  }
}

void ScreenshotInfo::MergeFrom(const ScreenshotInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.ScreenshotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channelid() != 0) {
    set_channelid(from.channelid());
  }
  if (from.quality() != 0) {
    set_quality(from.quality());
  }
  if (from.fps() != 0) {
    set_fps(from.fps());
  }
}

void ScreenshotInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.ScreenshotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScreenshotInfo::CopyFrom(const ScreenshotInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.ScreenshotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScreenshotInfo::IsInitialized() const {
  return true;
}

void ScreenshotInfo::Swap(ScreenshotInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScreenshotInfo::InternalSwap(ScreenshotInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(channelid_, other->channelid_);
  swap(quality_, other->quality_);
  swap(fps_, other->fps_);
}

::google::protobuf::Metadata ScreenshotInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ScreenFrame::InitAsDefaultInstance() {
}
class ScreenFrame::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScreenFrame::kFrameFieldNumber;
const int ScreenFrame::kQualityFieldNumber;
const int ScreenFrame::kTsFieldNumber;
const int ScreenFrame::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScreenFrame::ScreenFrame()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.ScreenFrame)
}
ScreenFrame::ScreenFrame(const ScreenFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.frame().size() > 0) {
    frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_);
  }
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metadata().size() > 0) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  ::memcpy(&ts_, &from.ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&quality_) -
    reinterpret_cast<char*>(&ts_)) + sizeof(quality_));
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.ScreenFrame)
}

void ScreenFrame::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ScreenFrame_AlgorithmCommunicationV2_2eproto.base);
  frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quality_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(quality_));
}

ScreenFrame::~ScreenFrame() {
  // @@protoc_insertion_point(destructor:algorithm.v2.ScreenFrame)
  SharedDtor();
}

void ScreenFrame::SharedDtor() {
  frame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScreenFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScreenFrame& ScreenFrame::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ScreenFrame_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void ScreenFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.ScreenFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quality_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(quality_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ScreenFrame::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ScreenFrame*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes frame = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_frame();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 quality = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_quality(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 ts = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ts(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string metadata = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("algorithm.v2.ScreenFrame.metadata");
        object = msg->mutable_metadata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ScreenFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.ScreenFrame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes frame = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 quality = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string metadata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metadata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metadata().data(), static_cast<int>(this->metadata().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algorithm.v2.ScreenFrame.metadata"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.ScreenFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.ScreenFrame)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ScreenFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.ScreenFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes frame = 1;
  if (this->frame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->frame(), output);
  }

  // int32 quality = 2;
  if (this->quality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->quality(), output);
  }

  // int64 ts = 3;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->ts(), output);
  }

  // string metadata = 4;
  if (this->metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.ScreenFrame.metadata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->metadata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.ScreenFrame)
}

::google::protobuf::uint8* ScreenFrame::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.ScreenFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes frame = 1;
  if (this->frame().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->frame(), target);
  }

  // int32 quality = 2;
  if (this->quality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->quality(), target);
  }

  // int64 ts = 3;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->ts(), target);
  }

  // string metadata = 4;
  if (this->metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.ScreenFrame.metadata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->metadata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.ScreenFrame)
  return target;
}

size_t ScreenFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.ScreenFrame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes frame = 1;
  if (this->frame().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->frame());
  }

  // string metadata = 4;
  if (this->metadata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metadata());
  }

  // int64 ts = 3;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  // int32 quality = 2;
  if (this->quality() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quality());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScreenFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.ScreenFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const ScreenFrame* source =
      ::google::protobuf::DynamicCastToGenerated<ScreenFrame>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.ScreenFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.ScreenFrame)
    MergeFrom(*source);
  }
}

void ScreenFrame::MergeFrom(const ScreenFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.ScreenFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.frame().size() > 0) {

    frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_);
  }
  if (from.metadata().size() > 0) {

    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
  if (from.quality() != 0) {
    set_quality(from.quality());
  }
}

void ScreenFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.ScreenFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScreenFrame::CopyFrom(const ScreenFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.ScreenFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScreenFrame::IsInitialized() const {
  return true;
}

void ScreenFrame::Swap(ScreenFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScreenFrame::InternalSwap(ScreenFrame* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  frame_.Swap(&other->frame_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ts_, other->ts_);
  swap(quality_, other->quality_);
}

::google::protobuf::Metadata ScreenFrame::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlarmReqAdvancedParameters::InitAsDefaultInstance() {
}
class AlarmReqAdvancedParameters::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlarmReqAdvancedParameters::kEnabledFieldNumber;
const int AlarmReqAdvancedParameters::kSuppressIntervalFieldNumber;
const int AlarmReqAdvancedParameters::kAlarmQueueLengthFieldNumber;
const int AlarmReqAdvancedParameters::kSmartSnapshotFieldNumber;
const int AlarmReqAdvancedParameters::kSmartSnapshotIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlarmReqAdvancedParameters::AlarmReqAdvancedParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.AlarmReqAdvancedParameters)
}
AlarmReqAdvancedParameters::AlarmReqAdvancedParameters(const AlarmReqAdvancedParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&suppressinterval_, &from.suppressinterval_,
    static_cast<size_t>(reinterpret_cast<char*>(&smartsnapshotinterval_) -
    reinterpret_cast<char*>(&suppressinterval_)) + sizeof(smartsnapshotinterval_));
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.AlarmReqAdvancedParameters)
}

void AlarmReqAdvancedParameters::SharedCtor() {
  ::memset(&suppressinterval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&smartsnapshotinterval_) -
      reinterpret_cast<char*>(&suppressinterval_)) + sizeof(smartsnapshotinterval_));
}

AlarmReqAdvancedParameters::~AlarmReqAdvancedParameters() {
  // @@protoc_insertion_point(destructor:algorithm.v2.AlarmReqAdvancedParameters)
  SharedDtor();
}

void AlarmReqAdvancedParameters::SharedDtor() {
}

void AlarmReqAdvancedParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlarmReqAdvancedParameters& AlarmReqAdvancedParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlarmReqAdvancedParameters_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void AlarmReqAdvancedParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.AlarmReqAdvancedParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&suppressinterval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&smartsnapshotinterval_) -
      reinterpret_cast<char*>(&suppressinterval_)) + sizeof(smartsnapshotinterval_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlarmReqAdvancedParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlarmReqAdvancedParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 suppressInterval = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_suppressinterval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 alarmQueueLength = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_alarmqueuelength(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool smartSnapshot = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_smartsnapshot(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 smartSnapshotInterval = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_smartsnapshotinterval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlarmReqAdvancedParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.AlarmReqAdvancedParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 suppressInterval = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suppressinterval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 alarmQueueLength = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmqueuelength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool smartSnapshot = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &smartsnapshot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 smartSnapshotInterval = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &smartsnapshotinterval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.AlarmReqAdvancedParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.AlarmReqAdvancedParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlarmReqAdvancedParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.AlarmReqAdvancedParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // int32 suppressInterval = 2;
  if (this->suppressinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->suppressinterval(), output);
  }

  // int32 alarmQueueLength = 3;
  if (this->alarmqueuelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->alarmqueuelength(), output);
  }

  // bool smartSnapshot = 4;
  if (this->smartsnapshot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->smartsnapshot(), output);
  }

  // int32 smartSnapshotInterval = 5;
  if (this->smartsnapshotinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->smartsnapshotinterval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.AlarmReqAdvancedParameters)
}

::google::protobuf::uint8* AlarmReqAdvancedParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.AlarmReqAdvancedParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // int32 suppressInterval = 2;
  if (this->suppressinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->suppressinterval(), target);
  }

  // int32 alarmQueueLength = 3;
  if (this->alarmqueuelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->alarmqueuelength(), target);
  }

  // bool smartSnapshot = 4;
  if (this->smartsnapshot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->smartsnapshot(), target);
  }

  // int32 smartSnapshotInterval = 5;
  if (this->smartsnapshotinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->smartsnapshotinterval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.AlarmReqAdvancedParameters)
  return target;
}

size_t AlarmReqAdvancedParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.AlarmReqAdvancedParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 suppressInterval = 2;
  if (this->suppressinterval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suppressinterval());
  }

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool smartSnapshot = 4;
  if (this->smartsnapshot() != 0) {
    total_size += 1 + 1;
  }

  // int32 alarmQueueLength = 3;
  if (this->alarmqueuelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->alarmqueuelength());
  }

  // int32 smartSnapshotInterval = 5;
  if (this->smartsnapshotinterval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->smartsnapshotinterval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlarmReqAdvancedParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.AlarmReqAdvancedParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AlarmReqAdvancedParameters* source =
      ::google::protobuf::DynamicCastToGenerated<AlarmReqAdvancedParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.AlarmReqAdvancedParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.AlarmReqAdvancedParameters)
    MergeFrom(*source);
  }
}

void AlarmReqAdvancedParameters::MergeFrom(const AlarmReqAdvancedParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.AlarmReqAdvancedParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suppressinterval() != 0) {
    set_suppressinterval(from.suppressinterval());
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
  if (from.smartsnapshot() != 0) {
    set_smartsnapshot(from.smartsnapshot());
  }
  if (from.alarmqueuelength() != 0) {
    set_alarmqueuelength(from.alarmqueuelength());
  }
  if (from.smartsnapshotinterval() != 0) {
    set_smartsnapshotinterval(from.smartsnapshotinterval());
  }
}

void AlarmReqAdvancedParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.AlarmReqAdvancedParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmReqAdvancedParameters::CopyFrom(const AlarmReqAdvancedParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.AlarmReqAdvancedParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmReqAdvancedParameters::IsInitialized() const {
  return true;
}

void AlarmReqAdvancedParameters::Swap(AlarmReqAdvancedParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlarmReqAdvancedParameters::InternalSwap(AlarmReqAdvancedParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(suppressinterval_, other->suppressinterval_);
  swap(enabled_, other->enabled_);
  swap(smartsnapshot_, other->smartsnapshot_);
  swap(alarmqueuelength_, other->alarmqueuelength_);
  swap(smartsnapshotinterval_, other->smartsnapshotinterval_);
}

::google::protobuf::Metadata AlarmReqAdvancedParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlarmReqInfo::InitAsDefaultInstance() {
  ::algorithm::v2::_AlarmReqInfo_default_instance_._instance.get_mutable()->advancedparams_ = const_cast< ::algorithm::v2::AlarmReqAdvancedParameters*>(
      ::algorithm::v2::AlarmReqAdvancedParameters::internal_default_instance());
}
class AlarmReqInfo::HasBitSetters {
 public:
  static const ::algorithm::v2::AlarmReqAdvancedParameters& advancedparams(const AlarmReqInfo* msg);
};

const ::algorithm::v2::AlarmReqAdvancedParameters&
AlarmReqInfo::HasBitSetters::advancedparams(const AlarmReqInfo* msg) {
  return *msg->advancedparams_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlarmReqInfo::kFilterFieldNumber;
const int AlarmReqInfo::kChannelFieldNumber;
const int AlarmReqInfo::kIntervalMsecsFieldNumber;
const int AlarmReqInfo::kAdvancedParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlarmReqInfo::AlarmReqInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.AlarmReqInfo)
}
AlarmReqInfo::AlarmReqInfo(const AlarmReqInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.has_advancedparams()) {
    advancedparams_ = new ::algorithm::v2::AlarmReqAdvancedParameters(*from.advancedparams_);
  } else {
    advancedparams_ = nullptr;
  }
  ::memcpy(&channel_, &from.channel_,
    static_cast<size_t>(reinterpret_cast<char*>(&intervalmsecs_) -
    reinterpret_cast<char*>(&channel_)) + sizeof(intervalmsecs_));
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.AlarmReqInfo)
}

void AlarmReqInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlarmReqInfo_AlgorithmCommunicationV2_2eproto.base);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&advancedparams_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intervalmsecs_) -
      reinterpret_cast<char*>(&advancedparams_)) + sizeof(intervalmsecs_));
}

AlarmReqInfo::~AlarmReqInfo() {
  // @@protoc_insertion_point(destructor:algorithm.v2.AlarmReqInfo)
  SharedDtor();
}

void AlarmReqInfo::SharedDtor() {
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete advancedparams_;
}

void AlarmReqInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlarmReqInfo& AlarmReqInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlarmReqInfo_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void AlarmReqInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.AlarmReqInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && advancedparams_ != nullptr) {
    delete advancedparams_;
  }
  advancedparams_ = nullptr;
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intervalmsecs_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(intervalmsecs_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlarmReqInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlarmReqInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string filter = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("algorithm.v2.AlarmReqInfo.filter");
        object = msg->mutable_filter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 channel = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_channel(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 intervalMsecs = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_intervalmsecs(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .algorithm.v2.AlarmReqAdvancedParameters advancedParams = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::AlarmReqAdvancedParameters::_InternalParse;
        object = msg->mutable_advancedparams();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlarmReqInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.AlarmReqInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algorithm.v2.AlarmReqInfo.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 intervalMsecs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intervalmsecs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.AlarmReqAdvancedParameters advancedParams = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advancedparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.AlarmReqInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.AlarmReqInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlarmReqInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.AlarmReqInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 1;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.AlarmReqInfo.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filter(), output);
  }

  // int32 channel = 2;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel(), output);
  }

  // int32 intervalMsecs = 3;
  if (this->intervalmsecs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->intervalmsecs(), output);
  }

  // .algorithm.v2.AlarmReqAdvancedParameters advancedParams = 4;
  if (this->has_advancedparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::advancedparams(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.AlarmReqInfo)
}

::google::protobuf::uint8* AlarmReqInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.AlarmReqInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 1;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.AlarmReqInfo.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filter(), target);
  }

  // int32 channel = 2;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel(), target);
  }

  // int32 intervalMsecs = 3;
  if (this->intervalmsecs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->intervalmsecs(), target);
  }

  // .algorithm.v2.AlarmReqAdvancedParameters advancedParams = 4;
  if (this->has_advancedparams()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::advancedparams(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.AlarmReqInfo)
  return target;
}

size_t AlarmReqInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.AlarmReqInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filter = 1;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // .algorithm.v2.AlarmReqAdvancedParameters advancedParams = 4;
  if (this->has_advancedparams()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advancedparams_);
  }

  // int32 channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // int32 intervalMsecs = 3;
  if (this->intervalmsecs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intervalmsecs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlarmReqInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.AlarmReqInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AlarmReqInfo* source =
      ::google::protobuf::DynamicCastToGenerated<AlarmReqInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.AlarmReqInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.AlarmReqInfo)
    MergeFrom(*source);
  }
}

void AlarmReqInfo::MergeFrom(const AlarmReqInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.AlarmReqInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.has_advancedparams()) {
    mutable_advancedparams()->::algorithm::v2::AlarmReqAdvancedParameters::MergeFrom(from.advancedparams());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.intervalmsecs() != 0) {
    set_intervalmsecs(from.intervalmsecs());
  }
}

void AlarmReqInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.AlarmReqInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmReqInfo::CopyFrom(const AlarmReqInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.AlarmReqInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmReqInfo::IsInitialized() const {
  return true;
}

void AlarmReqInfo::Swap(AlarmReqInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlarmReqInfo::InternalSwap(AlarmReqInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(advancedparams_, other->advancedparams_);
  swap(channel_, other->channel_);
  swap(intervalmsecs_, other->intervalmsecs_);
}

::google::protobuf::Metadata AlarmReqInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Alarm::InitAsDefaultInstance() {
}
class Alarm::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Alarm::kKeyFieldNumber;
const int Alarm::kValueFieldNumber;
const int Alarm::kTypeFieldNumber;
const int Alarm::kDetectedObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Alarm::Alarm()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.Alarm)
}
Alarm::Alarm(const Alarm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      key_(from.key_),
      value_(from.value_),
      detected_object_(from.detected_object_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.Alarm)
}

void Alarm::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Alarm_AlgorithmCommunicationV2_2eproto.base);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Alarm::~Alarm() {
  // @@protoc_insertion_point(destructor:algorithm.v2.Alarm)
  SharedDtor();
}

void Alarm::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Alarm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Alarm& Alarm::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Alarm_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void Alarm::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.Alarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.Clear();
  value_.Clear();
  detected_object_.Clear();
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Alarm::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Alarm*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("algorithm.v2.Alarm.key");
          object = msg->add_key();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated string value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("algorithm.v2.Alarm.value");
          object = msg->add_value();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // string type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("algorithm.v2.Alarm.type");
        object = msg->mutable_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .algorithm.v2.DetectedObject detected_object = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::algorithm::v2::DetectedObject::_InternalParse;
          object = msg->add_detected_object();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Alarm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.Alarm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key(this->key_size() - 1).data(),
            static_cast<int>(this->key(this->key_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algorithm.v2.Alarm.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value(this->value_size() - 1).data(),
            static_cast<int>(this->value(this->value_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algorithm.v2.Alarm.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algorithm.v2.Alarm.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .algorithm.v2.DetectedObject detected_object = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_detected_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.Alarm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.Alarm)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Alarm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.Alarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string key = 1;
  for (int i = 0, n = this->key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key(i).data(), static_cast<int>(this->key(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.Alarm.key");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->key(i), output);
  }

  // repeated string value = 2;
  for (int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value(i).data(), static_cast<int>(this->value(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.Alarm.value");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->value(i), output);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.Alarm.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // repeated .algorithm.v2.DetectedObject detected_object = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detected_object_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->detected_object(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.Alarm)
}

::google::protobuf::uint8* Alarm::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.Alarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string key = 1;
  for (int i = 0, n = this->key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key(i).data(), static_cast<int>(this->key(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.Alarm.key");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->key(i), target);
  }

  // repeated string value = 2;
  for (int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value(i).data(), static_cast<int>(this->value(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.Alarm.value");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->value(i), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.Alarm.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // repeated .algorithm.v2.DetectedObject detected_object = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detected_object_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->detected_object(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.Alarm)
  return target;
}

size_t Alarm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.Alarm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string key = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->key_size());
  for (int i = 0, n = this->key_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->key(i));
  }

  // repeated string value = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->value_size());
  for (int i = 0, n = this->value_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->value(i));
  }

  // repeated .algorithm.v2.DetectedObject detected_object = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->detected_object_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->detected_object(static_cast<int>(i)));
    }
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Alarm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.Alarm)
  GOOGLE_DCHECK_NE(&from, this);
  const Alarm* source =
      ::google::protobuf::DynamicCastToGenerated<Alarm>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.Alarm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.Alarm)
    MergeFrom(*source);
  }
}

void Alarm::MergeFrom(const Alarm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.Alarm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_.MergeFrom(from.key_);
  value_.MergeFrom(from.value_);
  detected_object_.MergeFrom(from.detected_object_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void Alarm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.Alarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Alarm::CopyFrom(const Alarm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.Alarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Alarm::IsInitialized() const {
  return true;
}

void Alarm::Swap(Alarm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Alarm::InternalSwap(Alarm* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.InternalSwap(CastToBase(&other->key_));
  value_.InternalSwap(CastToBase(&other->value_));
  CastToBase(&detected_object_)->InternalSwap(CastToBase(&other->detected_object_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Alarm::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Alarms::InitAsDefaultInstance() {
}
class Alarms::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Alarms::kAlarmsFieldNumber;
const int Alarms::kTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Alarms::Alarms()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.Alarms)
}
Alarms::Alarms(const Alarms& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      alarms_(from.alarms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ts_ = from.ts_;
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.Alarms)
}

void Alarms::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Alarms_AlgorithmCommunicationV2_2eproto.base);
  ts_ = PROTOBUF_LONGLONG(0);
}

Alarms::~Alarms() {
  // @@protoc_insertion_point(destructor:algorithm.v2.Alarms)
  SharedDtor();
}

void Alarms::SharedDtor() {
}

void Alarms::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Alarms& Alarms::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Alarms_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void Alarms::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.Alarms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alarms_.Clear();
  ts_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Alarms::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Alarms*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .algorithm.v2.Alarm alarms = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::algorithm::v2::Alarm::_InternalParse;
          object = msg->add_alarms();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // int64 ts = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_ts(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Alarms::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.Alarms)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .algorithm.v2.Alarm alarms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_alarms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.Alarms)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.Alarms)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Alarms::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.Alarms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .algorithm.v2.Alarm alarms = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alarms_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->alarms(static_cast<int>(i)),
      output);
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ts(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.Alarms)
}

::google::protobuf::uint8* Alarms::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.Alarms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .algorithm.v2.Alarm alarms = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alarms_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->alarms(static_cast<int>(i)), target);
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ts(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.Alarms)
  return target;
}

size_t Alarms::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.Alarms)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .algorithm.v2.Alarm alarms = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->alarms_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->alarms(static_cast<int>(i)));
    }
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Alarms::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.Alarms)
  GOOGLE_DCHECK_NE(&from, this);
  const Alarms* source =
      ::google::protobuf::DynamicCastToGenerated<Alarms>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.Alarms)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.Alarms)
    MergeFrom(*source);
  }
}

void Alarms::MergeFrom(const Alarms& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.Alarms)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alarms_.MergeFrom(from.alarms_);
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
}

void Alarms::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.Alarms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Alarms::CopyFrom(const Alarms& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.Alarms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Alarms::IsInitialized() const {
  return true;
}

void Alarms::Swap(Alarms* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Alarms::InternalSwap(Alarms* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&alarms_)->InternalSwap(CastToBase(&other->alarms_));
  swap(ts_, other->ts_);
}

::google::protobuf::Metadata Alarms::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FeatureIPVideoSource::InitAsDefaultInstance() {
}
class FeatureIPVideoSource::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FeatureIPVideoSource::kUrlFieldNumber;
const int FeatureIPVideoSource::kTransportFieldNumber;
const int FeatureIPVideoSource::kBufferSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeatureIPVideoSource::FeatureIPVideoSource()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.FeatureIPVideoSource)
}
FeatureIPVideoSource::FeatureIPVideoSource(const FeatureIPVideoSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&transport_, &from.transport_,
    static_cast<size_t>(reinterpret_cast<char*>(&buffer_size_) -
    reinterpret_cast<char*>(&transport_)) + sizeof(buffer_size_));
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.FeatureIPVideoSource)
}

void FeatureIPVideoSource::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FeatureIPVideoSource_AlgorithmCommunicationV2_2eproto.base);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buffer_size_) -
      reinterpret_cast<char*>(&transport_)) + sizeof(buffer_size_));
}

FeatureIPVideoSource::~FeatureIPVideoSource() {
  // @@protoc_insertion_point(destructor:algorithm.v2.FeatureIPVideoSource)
  SharedDtor();
}

void FeatureIPVideoSource::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FeatureIPVideoSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FeatureIPVideoSource& FeatureIPVideoSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FeatureIPVideoSource_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void FeatureIPVideoSource::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.FeatureIPVideoSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buffer_size_) -
      reinterpret_cast<char*>(&transport_)) + sizeof(buffer_size_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FeatureIPVideoSource::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FeatureIPVideoSource*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("algorithm.v2.FeatureIPVideoSource.url");
        object = msg->mutable_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .algorithm.v2.FeatureIPVideoSource.Transport transport = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_transport(static_cast<::algorithm::v2::FeatureIPVideoSource_Transport>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 buffer_size = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_buffer_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FeatureIPVideoSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.FeatureIPVideoSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algorithm.v2.FeatureIPVideoSource.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.FeatureIPVideoSource.Transport transport = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_transport(static_cast< ::algorithm::v2::FeatureIPVideoSource_Transport >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 buffer_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buffer_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.FeatureIPVideoSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.FeatureIPVideoSource)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FeatureIPVideoSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.FeatureIPVideoSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.FeatureIPVideoSource.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // .algorithm.v2.FeatureIPVideoSource.Transport transport = 2;
  if (this->transport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->transport(), output);
  }

  // int32 buffer_size = 3;
  if (this->buffer_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->buffer_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.FeatureIPVideoSource)
}

::google::protobuf::uint8* FeatureIPVideoSource::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.FeatureIPVideoSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.FeatureIPVideoSource.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // .algorithm.v2.FeatureIPVideoSource.Transport transport = 2;
  if (this->transport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->transport(), target);
  }

  // int32 buffer_size = 3;
  if (this->buffer_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->buffer_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.FeatureIPVideoSource)
  return target;
}

size_t FeatureIPVideoSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.FeatureIPVideoSource)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // .algorithm.v2.FeatureIPVideoSource.Transport transport = 2;
  if (this->transport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->transport());
  }

  // int32 buffer_size = 3;
  if (this->buffer_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->buffer_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FeatureIPVideoSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.FeatureIPVideoSource)
  GOOGLE_DCHECK_NE(&from, this);
  const FeatureIPVideoSource* source =
      ::google::protobuf::DynamicCastToGenerated<FeatureIPVideoSource>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.FeatureIPVideoSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.FeatureIPVideoSource)
    MergeFrom(*source);
  }
}

void FeatureIPVideoSource::MergeFrom(const FeatureIPVideoSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.FeatureIPVideoSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.transport() != 0) {
    set_transport(from.transport());
  }
  if (from.buffer_size() != 0) {
    set_buffer_size(from.buffer_size());
  }
}

void FeatureIPVideoSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.FeatureIPVideoSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeatureIPVideoSource::CopyFrom(const FeatureIPVideoSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.FeatureIPVideoSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureIPVideoSource::IsInitialized() const {
  return true;
}

void FeatureIPVideoSource::Swap(FeatureIPVideoSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeatureIPVideoSource::InternalSwap(FeatureIPVideoSource* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transport_, other->transport_);
  swap(buffer_size_, other->buffer_size_);
}

::google::protobuf::Metadata FeatureIPVideoSource::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FeatureCustom::InitAsDefaultInstance() {
}
class FeatureCustom::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FeatureCustom::kKeyFieldNumber;
const int FeatureCustom::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeatureCustom::FeatureCustom()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.FeatureCustom)
}
FeatureCustom::FeatureCustom(const FeatureCustom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.FeatureCustom)
}

void FeatureCustom::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FeatureCustom_AlgorithmCommunicationV2_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FeatureCustom::~FeatureCustom() {
  // @@protoc_insertion_point(destructor:algorithm.v2.FeatureCustom)
  SharedDtor();
}

void FeatureCustom::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FeatureCustom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FeatureCustom& FeatureCustom::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FeatureCustom_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void FeatureCustom::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.FeatureCustom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FeatureCustom::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FeatureCustom*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("algorithm.v2.FeatureCustom.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("algorithm.v2.FeatureCustom.value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FeatureCustom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.FeatureCustom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algorithm.v2.FeatureCustom.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algorithm.v2.FeatureCustom.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.FeatureCustom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.FeatureCustom)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FeatureCustom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.FeatureCustom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.FeatureCustom.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.FeatureCustom.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.FeatureCustom)
}

::google::protobuf::uint8* FeatureCustom::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.FeatureCustom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.FeatureCustom.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algorithm.v2.FeatureCustom.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.FeatureCustom)
  return target;
}

size_t FeatureCustom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.FeatureCustom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FeatureCustom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.FeatureCustom)
  GOOGLE_DCHECK_NE(&from, this);
  const FeatureCustom* source =
      ::google::protobuf::DynamicCastToGenerated<FeatureCustom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.FeatureCustom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.FeatureCustom)
    MergeFrom(*source);
  }
}

void FeatureCustom::MergeFrom(const FeatureCustom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.FeatureCustom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void FeatureCustom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.FeatureCustom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeatureCustom::CopyFrom(const FeatureCustom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.FeatureCustom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureCustom::IsInitialized() const {
  return true;
}

void FeatureCustom::Swap(FeatureCustom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeatureCustom::InternalSwap(FeatureCustom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata FeatureCustom::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SystemFeature::InitAsDefaultInstance() {
  ::algorithm::v2::_SystemFeature_default_instance_.custom_ = const_cast< ::algorithm::v2::FeatureCustom*>(
      ::algorithm::v2::FeatureCustom::internal_default_instance());
  ::algorithm::v2::_SystemFeature_default_instance_.video_source_ = const_cast< ::algorithm::v2::FeatureIPVideoSource*>(
      ::algorithm::v2::FeatureIPVideoSource::internal_default_instance());
}
class SystemFeature::HasBitSetters {
 public:
  static const ::algorithm::v2::FeatureCustom& custom(const SystemFeature* msg);
  static const ::algorithm::v2::FeatureIPVideoSource& video_source(const SystemFeature* msg);
};

const ::algorithm::v2::FeatureCustom&
SystemFeature::HasBitSetters::custom(const SystemFeature* msg) {
  return *msg->feature_.custom_;
}
const ::algorithm::v2::FeatureIPVideoSource&
SystemFeature::HasBitSetters::video_source(const SystemFeature* msg) {
  return *msg->feature_.video_source_;
}
void SystemFeature::set_allocated_custom(::algorithm::v2::FeatureCustom* custom) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_feature();
  if (custom) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      custom = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    feature_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:algorithm.v2.SystemFeature.custom)
}
void SystemFeature::set_allocated_video_source(::algorithm::v2::FeatureIPVideoSource* video_source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_feature();
  if (video_source) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      video_source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, video_source, submessage_arena);
    }
    set_has_video_source();
    feature_.video_source_ = video_source;
  }
  // @@protoc_insertion_point(field_set_allocated:algorithm.v2.SystemFeature.video_source)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemFeature::kCustomFieldNumber;
const int SystemFeature::kVideoSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemFeature::SystemFeature()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:algorithm.v2.SystemFeature)
}
SystemFeature::SystemFeature(const SystemFeature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_feature();
  switch (from.feature_case()) {
    case kCustom: {
      mutable_custom()->::algorithm::v2::FeatureCustom::MergeFrom(from.custom());
      break;
    }
    case kVideoSource: {
      mutable_video_source()->::algorithm::v2::FeatureIPVideoSource::MergeFrom(from.video_source());
      break;
    }
    case FEATURE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:algorithm.v2.SystemFeature)
}

void SystemFeature::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SystemFeature_AlgorithmCommunicationV2_2eproto.base);
  clear_has_feature();
}

SystemFeature::~SystemFeature() {
  // @@protoc_insertion_point(destructor:algorithm.v2.SystemFeature)
  SharedDtor();
}

void SystemFeature::SharedDtor() {
  if (has_feature()) {
    clear_feature();
  }
}

void SystemFeature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SystemFeature& SystemFeature::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SystemFeature_AlgorithmCommunicationV2_2eproto.base);
  return *internal_default_instance();
}


void SystemFeature::clear_feature() {
// @@protoc_insertion_point(one_of_clear_start:algorithm.v2.SystemFeature)
  switch (feature_case()) {
    case kCustom: {
      delete feature_.custom_;
      break;
    }
    case kVideoSource: {
      delete feature_.video_source_;
      break;
    }
    case FEATURE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FEATURE_NOT_SET;
}


void SystemFeature::Clear() {
// @@protoc_insertion_point(message_clear_start:algorithm.v2.SystemFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_feature();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SystemFeature::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SystemFeature*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .algorithm.v2.FeatureCustom custom = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::FeatureCustom::_InternalParse;
        object = msg->mutable_custom();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .algorithm.v2.FeatureIPVideoSource video_source = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::algorithm::v2::FeatureIPVideoSource::_InternalParse;
        object = msg->mutable_video_source();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SystemFeature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algorithm.v2.SystemFeature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .algorithm.v2.FeatureCustom custom = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_custom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .algorithm.v2.FeatureIPVideoSource video_source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_video_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algorithm.v2.SystemFeature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algorithm.v2.SystemFeature)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SystemFeature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algorithm.v2.SystemFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.FeatureCustom custom = 1;
  if (has_custom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::custom(this), output);
  }

  // .algorithm.v2.FeatureIPVideoSource video_source = 2;
  if (has_video_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::video_source(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:algorithm.v2.SystemFeature)
}

::google::protobuf::uint8* SystemFeature::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:algorithm.v2.SystemFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .algorithm.v2.FeatureCustom custom = 1;
  if (has_custom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::custom(this), target);
  }

  // .algorithm.v2.FeatureIPVideoSource video_source = 2;
  if (has_video_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::video_source(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algorithm.v2.SystemFeature)
  return target;
}

size_t SystemFeature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algorithm.v2.SystemFeature)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (feature_case()) {
    // .algorithm.v2.FeatureCustom custom = 1;
    case kCustom: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *feature_.custom_);
      break;
    }
    // .algorithm.v2.FeatureIPVideoSource video_source = 2;
    case kVideoSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *feature_.video_source_);
      break;
    }
    case FEATURE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemFeature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algorithm.v2.SystemFeature)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemFeature* source =
      ::google::protobuf::DynamicCastToGenerated<SystemFeature>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algorithm.v2.SystemFeature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algorithm.v2.SystemFeature)
    MergeFrom(*source);
  }
}

void SystemFeature::MergeFrom(const SystemFeature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algorithm.v2.SystemFeature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.feature_case()) {
    case kCustom: {
      mutable_custom()->::algorithm::v2::FeatureCustom::MergeFrom(from.custom());
      break;
    }
    case kVideoSource: {
      mutable_video_source()->::algorithm::v2::FeatureIPVideoSource::MergeFrom(from.video_source());
      break;
    }
    case FEATURE_NOT_SET: {
      break;
    }
  }
}

void SystemFeature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algorithm.v2.SystemFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemFeature::CopyFrom(const SystemFeature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algorithm.v2.SystemFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemFeature::IsInitialized() const {
  return true;
}

void SystemFeature::Swap(SystemFeature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemFeature::InternalSwap(SystemFeature* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(feature_, other->feature_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata SystemFeature::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunicationV2_2eproto);
  return ::file_level_metadata_AlgorithmCommunicationV2_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace algorithm
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::algorithm::v2::AlgorithmHead* Arena::CreateMaybeMessage< ::algorithm::v2::AlgorithmHead >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::AlgorithmHead >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::AlgorithmStatus* Arena::CreateMaybeMessage< ::algorithm::v2::AlgorithmStatus >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::AlgorithmStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::AlgorithmInformation* Arena::CreateMaybeMessage< ::algorithm::v2::AlgorithmInformation >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::AlgorithmInformation >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::AlgorithmListResponse* Arena::CreateMaybeMessage< ::algorithm::v2::AlgorithmListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::AlgorithmListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::SmartMotionRegion* Arena::CreateMaybeMessage< ::algorithm::v2::SmartMotionRegion >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::SmartMotionRegion >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::SmartMotionAlgorithmParameters* Arena::CreateMaybeMessage< ::algorithm::v2::SmartMotionAlgorithmParameters >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::SmartMotionAlgorithmParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::LocationInformation* Arena::CreateMaybeMessage< ::algorithm::v2::LocationInformation >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::LocationInformation >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::PanChangeAlgorithmParameters* Arena::CreateMaybeMessage< ::algorithm::v2::PanChangeAlgorithmParameters >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::PanChangeAlgorithmParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::PrivacyMaskingParameters* Arena::CreateMaybeMessage< ::algorithm::v2::PrivacyMaskingParameters >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::PrivacyMaskingParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::FaceDetectionParameters* Arena::CreateMaybeMessage< ::algorithm::v2::FaceDetectionParameters >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::FaceDetectionParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::AlgorithmParameters* Arena::CreateMaybeMessage< ::algorithm::v2::AlgorithmParameters >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::AlgorithmParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::AlgorithmParametersSetRequest* Arena::CreateMaybeMessage< ::algorithm::v2::AlgorithmParametersSetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::AlgorithmParametersSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::Point* Arena::CreateMaybeMessage< ::algorithm::v2::Point >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::Point >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::LineCrossRegion* Arena::CreateMaybeMessage< ::algorithm::v2::LineCrossRegion >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::LineCrossRegion >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::Rectangle* Arena::CreateMaybeMessage< ::algorithm::v2::Rectangle >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::Rectangle >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::DetectedObject* Arena::CreateMaybeMessage< ::algorithm::v2::DetectedObject >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::DetectedObject >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::ScreenshotInfo* Arena::CreateMaybeMessage< ::algorithm::v2::ScreenshotInfo >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::ScreenshotInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::ScreenFrame* Arena::CreateMaybeMessage< ::algorithm::v2::ScreenFrame >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::ScreenFrame >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::AlarmReqAdvancedParameters* Arena::CreateMaybeMessage< ::algorithm::v2::AlarmReqAdvancedParameters >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::AlarmReqAdvancedParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::AlarmReqInfo* Arena::CreateMaybeMessage< ::algorithm::v2::AlarmReqInfo >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::AlarmReqInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::Alarm* Arena::CreateMaybeMessage< ::algorithm::v2::Alarm >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::Alarm >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::Alarms* Arena::CreateMaybeMessage< ::algorithm::v2::Alarms >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::Alarms >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::FeatureIPVideoSource* Arena::CreateMaybeMessage< ::algorithm::v2::FeatureIPVideoSource >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::FeatureIPVideoSource >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::FeatureCustom* Arena::CreateMaybeMessage< ::algorithm::v2::FeatureCustom >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::FeatureCustom >(arena);
}
template<> PROTOBUF_NOINLINE ::algorithm::v2::SystemFeature* Arena::CreateMaybeMessage< ::algorithm::v2::SystemFeature >(Arena* arena) {
  return Arena::CreateInternal< ::algorithm::v2::SystemFeature >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
