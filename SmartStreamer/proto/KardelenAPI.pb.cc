// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KardelenAPI.proto

#include "KardelenAPI.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AbsoluteMoveParameters_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Boresight_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Calibration_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LocationInformation_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NumericParameter_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PosInfo_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RelativeMoveParameters_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AbsoluteMoveResult_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Polygon_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ROI_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Rectangle_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RelativeMoveResult_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UpdateCameraStatusParameters_KardelenAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_CameraStatus_KardelenAPI_2eproto;
namespace kaapi {
class LocationInformationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocationInformation> _instance;
} _LocationInformation_default_instance_;
class ListOfLocationInformationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListOfLocationInformation> _instance;
} _ListOfLocationInformation_default_instance_;
class CalibrationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalibrationRequest> _instance;
} _CalibrationRequest_default_instance_;
class MotionROIRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MotionROIRequest> _instance;
} _MotionROIRequest_default_instance_;
class ApiVersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApiVersion> _instance;
} _ApiVersion_default_instance_;
class ClickParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClickParameter> _instance;
} _ClickParameter_default_instance_;
class GetNumericParameterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetNumericParameterRequest> _instance;
} _GetNumericParameterRequest_default_instance_;
class GetNumericParameterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetNumericParameterResponse> _instance;
} _GetNumericParameterResponse_default_instance_;
class GetEnumParameterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetEnumParameterRequest> _instance;
} _GetEnumParameterRequest_default_instance_;
class GetEnumParameterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetEnumParameterResponse> _instance;
} _GetEnumParameterResponse_default_instance_;
class SetNumericParameterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNumericParameterRequest> _instance;
} _SetNumericParameterRequest_default_instance_;
class SetNumericParameterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetNumericParameterResponse> _instance;
} _SetNumericParameterResponse_default_instance_;
class SetEnumParameterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetEnumParameterRequest> _instance;
} _SetEnumParameterRequest_default_instance_;
class SetEnumParameterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetEnumParameterResponse> _instance;
} _SetEnumParameterResponse_default_instance_;
class SetEnumCommandRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetEnumCommandRequest> _instance;
} _SetEnumCommandRequest_default_instance_;
class SetEnumCommandResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetEnumCommandResponse> _instance;
} _SetEnumCommandResponse_default_instance_;
class SetCameraRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetCameraRequest> _instance;
} _SetCameraRequest_default_instance_;
class SetCameraResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetCameraResponse> _instance;
} _SetCameraResponse_default_instance_;
class CommWriteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommWrite> _instance;
} _CommWrite_default_instance_;
class CommReadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommRead> _instance;
} _CommRead_default_instance_;
class UpdateCameraStatusParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateCameraStatusParameters> _instance;
} _UpdateCameraStatusParameters_default_instance_;
class GetCameraStatusParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetCameraStatusParameters> _instance;
} _GetCameraStatusParameters_default_instance_;
class CameraStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CameraStatus> _instance;
} _CameraStatus_default_instance_;
class RectangleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rectangle> _instance;
} _Rectangle_default_instance_;
class PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point> _instance;
} _Point_default_instance_;
class PolygonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Polygon> _instance;
} _Polygon_default_instance_;
class ROIDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ROI> _instance;
} _ROI_default_instance_;
class BoresightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Boresight> _instance;
} _Boresight_default_instance_;
class CalibrationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Calibration> _instance;
} _Calibration_default_instance_;
class NumericParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NumericParameter> _instance;
} _NumericParameter_default_instance_;
class RelativeMoveParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RelativeMoveParameters> _instance;
} _RelativeMoveParameters_default_instance_;
class RelativeMoveResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RelativeMoveResult> _instance;
} _RelativeMoveResult_default_instance_;
class AbsoluteMoveParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AbsoluteMoveParameters> _instance;
} _AbsoluteMoveParameters_default_instance_;
class AbsoluteMoveResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AbsoluteMoveResult> _instance;
} _AbsoluteMoveResult_default_instance_;
class PosInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PosInfo> _instance;
} _PosInfo_default_instance_;
}  // namespace kaapi
static void InitDefaultsLocationInformation_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_LocationInformation_default_instance_;
    new (ptr) ::kaapi::LocationInformation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::LocationInformation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LocationInformation_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLocationInformation_KardelenAPI_2eproto}, {}};

static void InitDefaultsListOfLocationInformation_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_ListOfLocationInformation_default_instance_;
    new (ptr) ::kaapi::ListOfLocationInformation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::ListOfLocationInformation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListOfLocationInformation_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListOfLocationInformation_KardelenAPI_2eproto}, {
      &scc_info_LocationInformation_KardelenAPI_2eproto.base,}};

static void InitDefaultsCalibrationRequest_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_CalibrationRequest_default_instance_;
    new (ptr) ::kaapi::CalibrationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::CalibrationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CalibrationRequest_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCalibrationRequest_KardelenAPI_2eproto}, {}};

static void InitDefaultsMotionROIRequest_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_MotionROIRequest_default_instance_;
    new (ptr) ::kaapi::MotionROIRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::MotionROIRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MotionROIRequest_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMotionROIRequest_KardelenAPI_2eproto}, {
      &scc_info_Polygon_KardelenAPI_2eproto.base,
      &scc_info_Rectangle_KardelenAPI_2eproto.base,}};

static void InitDefaultsApiVersion_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_ApiVersion_default_instance_;
    new (ptr) ::kaapi::ApiVersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::ApiVersion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ApiVersion_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApiVersion_KardelenAPI_2eproto}, {}};

static void InitDefaultsClickParameter_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_ClickParameter_default_instance_;
    new (ptr) ::kaapi::ClickParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::ClickParameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClickParameter_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClickParameter_KardelenAPI_2eproto}, {
      &scc_info_Point_KardelenAPI_2eproto.base,}};

static void InitDefaultsGetNumericParameterRequest_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_GetNumericParameterRequest_default_instance_;
    new (ptr) ::kaapi::GetNumericParameterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::GetNumericParameterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetNumericParameterRequest_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetNumericParameterRequest_KardelenAPI_2eproto}, {}};

static void InitDefaultsGetNumericParameterResponse_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_GetNumericParameterResponse_default_instance_;
    new (ptr) ::kaapi::GetNumericParameterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::GetNumericParameterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetNumericParameterResponse_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetNumericParameterResponse_KardelenAPI_2eproto}, {
      &scc_info_NumericParameter_KardelenAPI_2eproto.base,}};

static void InitDefaultsGetEnumParameterRequest_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_GetEnumParameterRequest_default_instance_;
    new (ptr) ::kaapi::GetEnumParameterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::GetEnumParameterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetEnumParameterRequest_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetEnumParameterRequest_KardelenAPI_2eproto}, {}};

static void InitDefaultsGetEnumParameterResponse_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_GetEnumParameterResponse_default_instance_;
    new (ptr) ::kaapi::GetEnumParameterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::GetEnumParameterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetEnumParameterResponse_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetEnumParameterResponse_KardelenAPI_2eproto}, {}};

static void InitDefaultsSetNumericParameterRequest_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_SetNumericParameterRequest_default_instance_;
    new (ptr) ::kaapi::SetNumericParameterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::SetNumericParameterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetNumericParameterRequest_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetNumericParameterRequest_KardelenAPI_2eproto}, {
      &scc_info_NumericParameter_KardelenAPI_2eproto.base,}};

static void InitDefaultsSetNumericParameterResponse_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_SetNumericParameterResponse_default_instance_;
    new (ptr) ::kaapi::SetNumericParameterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::SetNumericParameterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetNumericParameterResponse_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetNumericParameterResponse_KardelenAPI_2eproto}, {
      &scc_info_NumericParameter_KardelenAPI_2eproto.base,}};

static void InitDefaultsSetEnumParameterRequest_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_SetEnumParameterRequest_default_instance_;
    new (ptr) ::kaapi::SetEnumParameterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::SetEnumParameterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetEnumParameterRequest_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetEnumParameterRequest_KardelenAPI_2eproto}, {}};

static void InitDefaultsSetEnumParameterResponse_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_SetEnumParameterResponse_default_instance_;
    new (ptr) ::kaapi::SetEnumParameterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::SetEnumParameterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetEnumParameterResponse_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetEnumParameterResponse_KardelenAPI_2eproto}, {}};

static void InitDefaultsSetEnumCommandRequest_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_SetEnumCommandRequest_default_instance_;
    new (ptr) ::kaapi::SetEnumCommandRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::SetEnumCommandRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetEnumCommandRequest_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetEnumCommandRequest_KardelenAPI_2eproto}, {}};

static void InitDefaultsSetEnumCommandResponse_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_SetEnumCommandResponse_default_instance_;
    new (ptr) ::kaapi::SetEnumCommandResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::SetEnumCommandResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetEnumCommandResponse_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetEnumCommandResponse_KardelenAPI_2eproto}, {}};

static void InitDefaultsSetCameraRequest_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_SetCameraRequest_default_instance_;
    new (ptr) ::kaapi::SetCameraRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::SetCameraRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetCameraRequest_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetCameraRequest_KardelenAPI_2eproto}, {}};

static void InitDefaultsSetCameraResponse_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_SetCameraResponse_default_instance_;
    new (ptr) ::kaapi::SetCameraResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::SetCameraResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetCameraResponse_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetCameraResponse_KardelenAPI_2eproto}, {}};

static void InitDefaultsCommWrite_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_CommWrite_default_instance_;
    new (ptr) ::kaapi::CommWrite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::CommWrite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CommWrite_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCommWrite_KardelenAPI_2eproto}, {
      &scc_info_AbsoluteMoveParameters_KardelenAPI_2eproto.base,
      &scc_info_RelativeMoveParameters_KardelenAPI_2eproto.base,
      &scc_info_UpdateCameraStatusParameters_KardelenAPI_2eproto.base,}};

static void InitDefaultsCommRead_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_CommRead_default_instance_;
    new (ptr) ::kaapi::CommRead();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::CommRead::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_CommRead_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsCommRead_KardelenAPI_2eproto}, {
      &scc_info_PosInfo_KardelenAPI_2eproto.base,
      &scc_info_CameraStatus_KardelenAPI_2eproto.base,
      &scc_info_AbsoluteMoveResult_KardelenAPI_2eproto.base,
      &scc_info_RelativeMoveResult_KardelenAPI_2eproto.base,}};

static void InitDefaultsUpdateCameraStatusParameters_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_UpdateCameraStatusParameters_default_instance_;
    new (ptr) ::kaapi::UpdateCameraStatusParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::UpdateCameraStatusParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateCameraStatusParameters_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateCameraStatusParameters_KardelenAPI_2eproto}, {
      &scc_info_CameraStatus_KardelenAPI_2eproto.base,}};

static void InitDefaultsGetCameraStatusParameters_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_GetCameraStatusParameters_default_instance_;
    new (ptr) ::kaapi::GetCameraStatusParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::GetCameraStatusParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetCameraStatusParameters_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetCameraStatusParameters_KardelenAPI_2eproto}, {}};

static void InitDefaultsCameraStatus_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_CameraStatus_default_instance_;
    new (ptr) ::kaapi::CameraStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::CameraStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_CameraStatus_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsCameraStatus_KardelenAPI_2eproto}, {
      &scc_info_NumericParameter_KardelenAPI_2eproto.base,
      &scc_info_Calibration_KardelenAPI_2eproto.base,
      &scc_info_Boresight_KardelenAPI_2eproto.base,
      &scc_info_ROI_KardelenAPI_2eproto.base,
      &scc_info_Rectangle_KardelenAPI_2eproto.base,}};

static void InitDefaultsRectangle_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_Rectangle_default_instance_;
    new (ptr) ::kaapi::Rectangle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::Rectangle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Rectangle_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRectangle_KardelenAPI_2eproto}, {
      &scc_info_Point_KardelenAPI_2eproto.base,}};

static void InitDefaultsPoint_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_Point_default_instance_;
    new (ptr) ::kaapi::Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::Point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint_KardelenAPI_2eproto}, {}};

static void InitDefaultsPolygon_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_Polygon_default_instance_;
    new (ptr) ::kaapi::Polygon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::Polygon::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Polygon_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPolygon_KardelenAPI_2eproto}, {
      &scc_info_Point_KardelenAPI_2eproto.base,}};

static void InitDefaultsROI_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_ROI_default_instance_;
    new (ptr) ::kaapi::ROI();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::ROI::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ROI_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsROI_KardelenAPI_2eproto}, {
      &scc_info_Polygon_KardelenAPI_2eproto.base,}};

static void InitDefaultsBoresight_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_Boresight_default_instance_;
    new (ptr) ::kaapi::Boresight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::Boresight::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Boresight_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBoresight_KardelenAPI_2eproto}, {}};

static void InitDefaultsCalibration_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_Calibration_default_instance_;
    new (ptr) ::kaapi::Calibration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::Calibration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Calibration_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCalibration_KardelenAPI_2eproto}, {}};

static void InitDefaultsNumericParameter_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_NumericParameter_default_instance_;
    new (ptr) ::kaapi::NumericParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::NumericParameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NumericParameter_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNumericParameter_KardelenAPI_2eproto}, {}};

static void InitDefaultsRelativeMoveParameters_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_RelativeMoveParameters_default_instance_;
    new (ptr) ::kaapi::RelativeMoveParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::RelativeMoveParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RelativeMoveParameters_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRelativeMoveParameters_KardelenAPI_2eproto}, {}};

static void InitDefaultsRelativeMoveResult_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_RelativeMoveResult_default_instance_;
    new (ptr) ::kaapi::RelativeMoveResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::RelativeMoveResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RelativeMoveResult_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRelativeMoveResult_KardelenAPI_2eproto}, {
      &scc_info_PosInfo_KardelenAPI_2eproto.base,}};

static void InitDefaultsAbsoluteMoveParameters_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_AbsoluteMoveParameters_default_instance_;
    new (ptr) ::kaapi::AbsoluteMoveParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::AbsoluteMoveParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AbsoluteMoveParameters_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAbsoluteMoveParameters_KardelenAPI_2eproto}, {}};

static void InitDefaultsAbsoluteMoveResult_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_AbsoluteMoveResult_default_instance_;
    new (ptr) ::kaapi::AbsoluteMoveResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::AbsoluteMoveResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AbsoluteMoveResult_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAbsoluteMoveResult_KardelenAPI_2eproto}, {
      &scc_info_PosInfo_KardelenAPI_2eproto.base,}};

static void InitDefaultsPosInfo_KardelenAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kaapi::_PosInfo_default_instance_;
    new (ptr) ::kaapi::PosInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kaapi::PosInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PosInfo_KardelenAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPosInfo_KardelenAPI_2eproto}, {}};

void InitDefaults_KardelenAPI_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_LocationInformation_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListOfLocationInformation_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CalibrationRequest_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MotionROIRequest_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApiVersion_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClickParameter_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetNumericParameterRequest_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetNumericParameterResponse_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetEnumParameterRequest_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetEnumParameterResponse_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetNumericParameterRequest_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetNumericParameterResponse_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetEnumParameterRequest_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetEnumParameterResponse_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetEnumCommandRequest_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetEnumCommandResponse_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetCameraRequest_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetCameraResponse_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommWrite_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommRead_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateCameraStatusParameters_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetCameraStatusParameters_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CameraStatus_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rectangle_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Polygon_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ROI_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Boresight_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Calibration_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NumericParameter_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RelativeMoveParameters_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RelativeMoveResult_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AbsoluteMoveParameters_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AbsoluteMoveResult_KardelenAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PosInfo_KardelenAPI_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_KardelenAPI_2eproto[35];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_KardelenAPI_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_KardelenAPI_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_KardelenAPI_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::LocationInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::LocationInformation, pan_),
  PROTOBUF_FIELD_OFFSET(::kaapi::LocationInformation, tilt_),
  PROTOBUF_FIELD_OFFSET(::kaapi::LocationInformation, zoom_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::ListOfLocationInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::ListOfLocationInformation, locationinformation_),
  PROTOBUF_FIELD_OFFSET(::kaapi::ListOfLocationInformation, intervalforcirculation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::CalibrationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::CalibrationRequest, value1_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CalibrationRequest, value2_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CalibrationRequest, mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::MotionROIRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::MotionROIRequest, roi_),
  PROTOBUF_FIELD_OFFSET(::kaapi::MotionROIRequest, far_),
  PROTOBUF_FIELD_OFFSET(::kaapi::MotionROIRequest, close_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::ApiVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::ApiVersion, date_),
  PROTOBUF_FIELD_OFFSET(::kaapi::ApiVersion, time_),
  PROTOBUF_FIELD_OFFSET(::kaapi::ApiVersion, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::ClickParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::ClickParameter, pt_),
  PROTOBUF_FIELD_OFFSET(::kaapi::ClickParameter, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::GetNumericParameterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::GetNumericParameterRequest, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::GetNumericParameterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::GetNumericParameterResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::GetEnumParameterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::GetEnumParameterRequest, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::GetEnumParameterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::GetEnumParameterResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetNumericParameterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetNumericParameterRequest, index_),
  PROTOBUF_FIELD_OFFSET(::kaapi::SetNumericParameterRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetNumericParameterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetNumericParameterResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetEnumParameterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetEnumParameterRequest, index_),
  PROTOBUF_FIELD_OFFSET(::kaapi::SetEnumParameterRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetEnumParameterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetEnumParameterResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetEnumCommandRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetEnumCommandRequest, index_),
  PROTOBUF_FIELD_OFFSET(::kaapi::SetEnumCommandRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetEnumCommandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetEnumCommandResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetCameraRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetCameraRequest, cameratype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetCameraResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::SetCameraResponse, capabilities_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::CommWrite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::CommWrite, action_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CommWrite, abspars_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CommWrite, relpars_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CommWrite, updpars_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::CommRead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::CommRead, posinfo_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CommRead, status_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CommRead, absres_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CommRead, relres_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CommRead, keys_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CommRead, values_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CommRead, framedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::UpdateCameraStatusParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::UpdateCameraStatusParameters, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::GetCameraStatusParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::GetCameraStatusParameters, filters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::CameraStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::CameraStatus, capabilities_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CameraStatus, numericparametersvector_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CameraStatus, numericparameters_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CameraStatus, enumparametersvector_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CameraStatus, enumparameters_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CameraStatus, enumcommandsvector_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CameraStatus, enumcommands_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CameraStatus, calibration_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CameraStatus, boresight_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CameraStatus, roi_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CameraStatus, fence_),
  PROTOBUF_FIELD_OFFSET(::kaapi::CameraStatus, objectdetections_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::Rectangle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::Rectangle, topleft_),
  PROTOBUF_FIELD_OFFSET(::kaapi::Rectangle, width_),
  PROTOBUF_FIELD_OFFSET(::kaapi::Rectangle, height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::Point, x_),
  PROTOBUF_FIELD_OFFSET(::kaapi::Point, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::Polygon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::Polygon, points_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::ROI, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::ROI, roicount_),
  PROTOBUF_FIELD_OFFSET(::kaapi::ROI, regions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::Boresight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::Boresight, d0_),
  PROTOBUF_FIELD_OFFSET(::kaapi::Boresight, d1_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::Calibration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::Calibration, d0_),
  PROTOBUF_FIELD_OFFSET(::kaapi::Calibration, d1_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::NumericParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::NumericParameter, value_),
  PROTOBUF_FIELD_OFFSET(::kaapi::NumericParameter, byte0_),
  PROTOBUF_FIELD_OFFSET(::kaapi::NumericParameter, byte1_),
  PROTOBUF_FIELD_OFFSET(::kaapi::NumericParameter, byte2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::RelativeMoveParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::RelativeMoveParameters, panspeed_),
  PROTOBUF_FIELD_OFFSET(::kaapi::RelativeMoveParameters, tiltspeed_),
  PROTOBUF_FIELD_OFFSET(::kaapi::RelativeMoveParameters, zoomspeed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::RelativeMoveResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::RelativeMoveResult, posinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::AbsoluteMoveParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::AbsoluteMoveParameters, panpos_),
  PROTOBUF_FIELD_OFFSET(::kaapi::AbsoluteMoveParameters, tiltpos_),
  PROTOBUF_FIELD_OFFSET(::kaapi::AbsoluteMoveParameters, zoompos_),
  PROTOBUF_FIELD_OFFSET(::kaapi::AbsoluteMoveParameters, panspeed_),
  PROTOBUF_FIELD_OFFSET(::kaapi::AbsoluteMoveParameters, tiltspeed_),
  PROTOBUF_FIELD_OFFSET(::kaapi::AbsoluteMoveParameters, zoomspeed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::AbsoluteMoveResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::AbsoluteMoveResult, completionstatus_),
  PROTOBUF_FIELD_OFFSET(::kaapi::AbsoluteMoveResult, posinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kaapi::PosInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kaapi::PosInfo, panpos_),
  PROTOBUF_FIELD_OFFSET(::kaapi::PosInfo, tiltpos_),
  PROTOBUF_FIELD_OFFSET(::kaapi::PosInfo, zoompos_),
  PROTOBUF_FIELD_OFFSET(::kaapi::PosInfo, fovh_),
  PROTOBUF_FIELD_OFFSET(::kaapi::PosInfo, fovv_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::kaapi::LocationInformation)},
  { 8, -1, sizeof(::kaapi::ListOfLocationInformation)},
  { 15, -1, sizeof(::kaapi::CalibrationRequest)},
  { 23, -1, sizeof(::kaapi::MotionROIRequest)},
  { 31, -1, sizeof(::kaapi::ApiVersion)},
  { 39, -1, sizeof(::kaapi::ClickParameter)},
  { 46, -1, sizeof(::kaapi::GetNumericParameterRequest)},
  { 52, -1, sizeof(::kaapi::GetNumericParameterResponse)},
  { 58, -1, sizeof(::kaapi::GetEnumParameterRequest)},
  { 64, -1, sizeof(::kaapi::GetEnumParameterResponse)},
  { 70, -1, sizeof(::kaapi::SetNumericParameterRequest)},
  { 77, -1, sizeof(::kaapi::SetNumericParameterResponse)},
  { 83, -1, sizeof(::kaapi::SetEnumParameterRequest)},
  { 90, -1, sizeof(::kaapi::SetEnumParameterResponse)},
  { 96, -1, sizeof(::kaapi::SetEnumCommandRequest)},
  { 103, -1, sizeof(::kaapi::SetEnumCommandResponse)},
  { 109, -1, sizeof(::kaapi::SetCameraRequest)},
  { 115, -1, sizeof(::kaapi::SetCameraResponse)},
  { 121, -1, sizeof(::kaapi::CommWrite)},
  { 130, -1, sizeof(::kaapi::CommRead)},
  { 142, -1, sizeof(::kaapi::UpdateCameraStatusParameters)},
  { 148, -1, sizeof(::kaapi::GetCameraStatusParameters)},
  { 154, -1, sizeof(::kaapi::CameraStatus)},
  { 171, -1, sizeof(::kaapi::Rectangle)},
  { 179, -1, sizeof(::kaapi::Point)},
  { 186, -1, sizeof(::kaapi::Polygon)},
  { 192, -1, sizeof(::kaapi::ROI)},
  { 199, -1, sizeof(::kaapi::Boresight)},
  { 206, -1, sizeof(::kaapi::Calibration)},
  { 213, -1, sizeof(::kaapi::NumericParameter)},
  { 222, -1, sizeof(::kaapi::RelativeMoveParameters)},
  { 230, -1, sizeof(::kaapi::RelativeMoveResult)},
  { 236, -1, sizeof(::kaapi::AbsoluteMoveParameters)},
  { 247, -1, sizeof(::kaapi::AbsoluteMoveResult)},
  { 254, -1, sizeof(::kaapi::PosInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_LocationInformation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_ListOfLocationInformation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_CalibrationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_MotionROIRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_ApiVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_ClickParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_GetNumericParameterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_GetNumericParameterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_GetEnumParameterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_GetEnumParameterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_SetNumericParameterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_SetNumericParameterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_SetEnumParameterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_SetEnumParameterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_SetEnumCommandRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_SetEnumCommandResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_SetCameraRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_SetCameraResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_CommWrite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_CommRead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_UpdateCameraStatusParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_GetCameraStatusParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_CameraStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_Rectangle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_Polygon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_ROI_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_Boresight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_Calibration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_NumericParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_RelativeMoveParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_RelativeMoveResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_AbsoluteMoveParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_AbsoluteMoveResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kaapi::_PosInfo_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_KardelenAPI_2eproto = {
  {}, AddDescriptors_KardelenAPI_2eproto, "KardelenAPI.proto", schemas,
  file_default_instances, TableStruct_KardelenAPI_2eproto::offsets,
  file_level_metadata_KardelenAPI_2eproto, 35, file_level_enum_descriptors_KardelenAPI_2eproto, file_level_service_descriptors_KardelenAPI_2eproto,
};

const char descriptor_table_protodef_KardelenAPI_2eproto[] =
  "\n\021KardelenAPI.proto\022\005kaapi\032\033google/proto"
  "buf/empty.proto\">\n\023LocationInformation\022\013"
  "\n\003pan\030\001 \001(\002\022\014\n\004tilt\030\002 \001(\002\022\014\n\004zoom\030\003 \001(\002\""
  "t\n\031ListOfLocationInformation\0227\n\023location"
  "Information\030\001 \003(\0132\032.kaapi.LocationInform"
  "ation\022\036\n\026intervalForCirculation\030\002 \001(\003\"B\n"
  "\022CalibrationRequest\022\016\n\006value1\030\001 \001(\002\022\016\n\006v"
  "alue2\030\002 \001(\002\022\014\n\004mode\030\003 \001(\005\"o\n\020MotionROIRe"
  "quest\022\033\n\003roi\030\001 \001(\0132\016.kaapi.Polygon\022\035\n\003fa"
  "r\030\002 \001(\0132\020.kaapi.Rectangle\022\037\n\005close\030\003 \001(\013"
  "2\020.kaapi.Rectangle\"9\n\nApiVersion\022\014\n\004date"
  "\030\001 \001(\t\022\014\n\004time\030\002 \001(\t\022\017\n\007version\030\003 \001(\t\"9\n"
  "\016ClickParameter\022\030\n\002pt\030\001 \001(\0132\014.kaapi.Poin"
  "t\022\r\n\005value\030\002 \001(\005\"+\n\032GetNumericParameterR"
  "equest\022\r\n\005index\030\001 \001(\005\"E\n\033GetNumericParam"
  "eterResponse\022&\n\005value\030\001 \001(\0132\027.kaapi.Nume"
  "ricParameter\"(\n\027GetEnumParameterRequest\022"
  "\r\n\005index\030\001 \001(\005\")\n\030GetEnumParameterRespon"
  "se\022\r\n\005value\030\001 \001(\005\"S\n\032SetNumericParameter"
  "Request\022\r\n\005index\030\001 \001(\005\022&\n\005value\030\002 \001(\0132\027."
  "kaapi.NumericParameter\"E\n\033SetNumericPara"
  "meterResponse\022&\n\005value\030\001 \001(\0132\027.kaapi.Num"
  "ericParameter\"7\n\027SetEnumParameterRequest"
  "\022\r\n\005index\030\001 \001(\005\022\r\n\005value\030\002 \001(\005\")\n\030SetEnu"
  "mParameterResponse\022\r\n\005value\030\001 \001(\005\"5\n\025Set"
  "EnumCommandRequest\022\r\n\005index\030\001 \001(\005\022\r\n\005val"
  "ue\030\002 \001(\005\"\'\n\026SetEnumCommandResponse\022\r\n\005va"
  "lue\030\001 \001(\005\"&\n\020SetCameraRequest\022\022\n\ncameraT"
  "ype\030\001 \001(\005\")\n\021SetCameraResponse\022\024\n\014capabi"
  "lities\030\001 \001(\003\"\226\002\n\tCommWrite\022\'\n\006action\030\001 \001"
  "(\0162\027.kaapi.CommWrite.Action\022.\n\007abspars\030\002"
  " \001(\0132\035.kaapi.AbsoluteMoveParameters\022.\n\007r"
  "elpars\030\003 \001(\0132\035.kaapi.RelativeMoveParamet"
  "ers\0224\n\007updpars\030\004 \001(\0132#.kaapi.UpdateCamer"
  "aStatusParameters\"J\n\006Action\022\010\n\004NONE\020\000\022\014\n"
  "\010MOVE_ABS\020\001\022\014\n\010MOVE_REL\020\002\022\n\n\006UPDATE\020\003\022\016\n"
  "\nSET_CAMERA\020\004\"\327\001\n\010CommRead\022\037\n\007posInfo\030\001 "
  "\001(\0132\016.kaapi.PosInfo\022#\n\006status\030\002 \001(\0132\023.ka"
  "api.CameraStatus\022)\n\006absres\030\003 \001(\0132\031.kaapi"
  ".AbsoluteMoveResult\022)\n\006relres\030\004 \001(\0132\031.ka"
  "api.RelativeMoveResult\022\014\n\004keys\030\005 \003(\t\022\016\n\006"
  "values\030\006 \003(\t\022\021\n\tframeData\030\007 \001(\014\"C\n\034Updat"
  "eCameraStatusParameters\022#\n\006status\030\001 \001(\0132"
  "\023.kaapi.CameraStatus\",\n\031GetCameraStatusP"
  "arameters\022\017\n\007filters\030\001 \001(\003\"\217\003\n\014CameraSta"
  "tus\022\024\n\014capabilities\030\001 \001(\003\022\037\n\027numericPara"
  "metersVector\030\002 \001(\005\0222\n\021numericParameters\030"
  "\003 \003(\0132\027.kaapi.NumericParameter\022\034\n\024enumPa"
  "rametersVector\030\004 \001(\005\022\026\n\016enumParameters\030\005"
  " \003(\005\022\032\n\022enumCommandsVector\030\006 \001(\005\022\024\n\014enum"
  "Commands\030\007 \003(\005\022\'\n\013calibration\030\010 \001(\0132\022.ka"
  "api.Calibration\022#\n\tboresight\030\t \001(\0132\020.kaa"
  "pi.Boresight\022\027\n\003roi\030\n \001(\0132\n.kaapi.ROI\022\031\n"
  "\005fence\030\013 \001(\0132\n.kaapi.ROI\022*\n\020objectDetect"
  "ions\030\014 \003(\0132\020.kaapi.Rectangle\"I\n\tRectangl"
  "e\022\035\n\007topLeft\030\001 \001(\0132\014.kaapi.Point\022\r\n\005widt"
  "h\030\002 \001(\005\022\016\n\006height\030\003 \001(\005\"\035\n\005Point\022\t\n\001x\030\001 "
  "\001(\002\022\t\n\001y\030\002 \001(\002\"\'\n\007Polygon\022\034\n\006points\030\001 \003("
  "\0132\014.kaapi.Point\"8\n\003ROI\022\020\n\010roiCount\030\001 \001(\005"
  "\022\037\n\007regions\030\002 \003(\0132\016.kaapi.Polygon\"#\n\tBor"
  "esight\022\n\n\002d0\030\001 \001(\005\022\n\n\002d1\030\002 \001(\005\"%\n\013Calibr"
  "ation\022\n\n\002d0\030\001 \001(\001\022\n\n\002d1\030\002 \001(\001\"N\n\020Numeric"
  "Parameter\022\r\n\005value\030\001 \001(\001\022\r\n\005byte0\030\002 \001(\005\022"
  "\r\n\005byte1\030\003 \001(\005\022\r\n\005byte2\030\004 \001(\005\"P\n\026Relativ"
  "eMoveParameters\022\020\n\010panSpeed\030\001 \001(\002\022\021\n\ttil"
  "tSpeed\030\002 \001(\002\022\021\n\tzoomSpeed\030\003 \001(\002\"5\n\022Relat"
  "iveMoveResult\022\037\n\007posInfo\030\001 \001(\0132\016.kaapi.P"
  "osInfo\"\202\001\n\026AbsoluteMoveParameters\022\016\n\006pan"
  "Pos\030\001 \001(\002\022\017\n\007tiltPos\030\002 \001(\002\022\017\n\007zoomPos\030\003 "
  "\001(\002\022\020\n\010panSpeed\030\004 \001(\002\022\021\n\ttiltSpeed\030\005 \001(\002"
  "\022\021\n\tzoomSpeed\030\006 \001(\002\"\242\001\n\022AbsoluteMoveResu"
  "lt\022>\n\020completionStatus\030\001 \001(\0162$.kaapi.Abs"
  "oluteMoveResult.Completion\022\037\n\007posInfo\030\002 "
  "\001(\0132\016.kaapi.PosInfo\"+\n\nCompletion\022\r\n\tCOM"
  "PLETED\020\000\022\016\n\nINPROGRESS\020\001\"W\n\007PosInfo\022\016\n\006p"
  "anPos\030\001 \001(\002\022\017\n\007tiltPos\030\002 \001(\002\022\017\n\007zoomPos\030"
  "\003 \001(\002\022\014\n\004fovh\030\004 \001(\002\022\014\n\004fovv\030\005 \001(\0022\331\n\n\rCa"
  "meraService\0227\n\013GetPosition\022\026.google.prot"
  "obuf.Empty\032\016.kaapi.PosInfo\"\000\022J\n\014MoveAbso"
  "lute\022\035.kaapi.AbsoluteMoveParameters\032\031.ka"
  "api.AbsoluteMoveResult\"\000\022J\n\014MoveRelative"
  "\022\035.kaapi.RelativeMoveParameters\032\031.kaapi."
  "RelativeMoveResult\"\000\022J\n\017GetCameraStatus\022"
  " .kaapi.GetCameraStatusParameters\032\023.kaap"
  "i.CameraStatus\"\000\022P\n\022UpdateCameraStatus\022#"
  ".kaapi.UpdateCameraStatusParameters\032\023.ka"
  "api.CameraStatus\"\000\022@\n\tSetCamera\022\027.kaapi."
  "SetCameraRequest\032\030.kaapi.SetCameraRespon"
  "se\"\000\022^\n\023GetNumericParameter\022!.kaapi.GetN"
  "umericParameterRequest\032\".kaapi.GetNumeri"
  "cParameterResponse\"\000\022U\n\020GetEnumParameter"
  "\022\036.kaapi.GetEnumParameterRequest\032\037.kaapi"
  ".GetEnumParameterResponse\"\000\022^\n\023SetNumeri"
  "cParameter\022!.kaapi.SetNumericParameterRe"
  "quest\032\".kaapi.SetNumericParameterRespons"
  "e\"\000\022U\n\020SetEnumParameter\022\036.kaapi.SetEnumP"
  "arameterRequest\032\037.kaapi.SetEnumParameter"
  "Response\"\000\022O\n\016SetEnumCommand\022\034.kaapi.Set"
  "EnumCommandRequest\032\035.kaapi.SetEnumComman"
  "dResponse\"\000\0229\n\nGetVersion\022\026.google.proto"
  "buf.Empty\032\021.kaapi.ApiVersion\"\000\022>\n\013Screen"
  "Click\022\025.kaapi.ClickParameter\032\026.google.pr"
  "otobuf.Empty\"\000\022\?\n\024CommunicationChannel\022\020"
  ".kaapi.CommWrite\032\017.kaapi.CommRead\"\000(\0010\001\022"
  "A\n\014SetMotionROI\022\027.kaapi.MotionROIRequest"
  "\032\026.google.protobuf.Empty\"\000\022<\n\016SetTrackWi"
  "ndow\022\020.kaapi.Rectangle\032\026.google.protobuf"
  ".Empty\"\000\022E\n\016SetCalibration\022\031.kaapi.Calib"
  "rationRequest\032\026.google.protobuf.Empty\"\000\022"
  "T\n\026SetAselChangeLocations\022 .kaapi.ListOf"
  "LocationInformation\032\026.google.protobuf.Em"
  "pty\"\000B2\n0tr.com.aselsan.kardelen.orion.m"
  "essage.definitionb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_KardelenAPI_2eproto = {
  false, InitDefaults_KardelenAPI_2eproto, 
  descriptor_table_protodef_KardelenAPI_2eproto,
  "KardelenAPI.proto", &assign_descriptors_table_KardelenAPI_2eproto, 4505,
};

void AddDescriptors_KardelenAPI_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_google_2fprotobuf_2fempty_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_KardelenAPI_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_KardelenAPI_2eproto = []() { AddDescriptors_KardelenAPI_2eproto(); return true; }();
namespace kaapi {
const ::google::protobuf::EnumDescriptor* CommWrite_Action_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_KardelenAPI_2eproto);
  return file_level_enum_descriptors_KardelenAPI_2eproto[0];
}
bool CommWrite_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CommWrite_Action CommWrite::NONE;
const CommWrite_Action CommWrite::MOVE_ABS;
const CommWrite_Action CommWrite::MOVE_REL;
const CommWrite_Action CommWrite::UPDATE;
const CommWrite_Action CommWrite::SET_CAMERA;
const CommWrite_Action CommWrite::Action_MIN;
const CommWrite_Action CommWrite::Action_MAX;
const int CommWrite::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AbsoluteMoveResult_Completion_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_KardelenAPI_2eproto);
  return file_level_enum_descriptors_KardelenAPI_2eproto[1];
}
bool AbsoluteMoveResult_Completion_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AbsoluteMoveResult_Completion AbsoluteMoveResult::COMPLETED;
const AbsoluteMoveResult_Completion AbsoluteMoveResult::INPROGRESS;
const AbsoluteMoveResult_Completion AbsoluteMoveResult::Completion_MIN;
const AbsoluteMoveResult_Completion AbsoluteMoveResult::Completion_MAX;
const int AbsoluteMoveResult::Completion_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void LocationInformation::InitAsDefaultInstance() {
}
class LocationInformation::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocationInformation::kPanFieldNumber;
const int LocationInformation::kTiltFieldNumber;
const int LocationInformation::kZoomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocationInformation::LocationInformation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.LocationInformation)
}
LocationInformation::LocationInformation(const LocationInformation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pan_, &from.pan_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoom_) -
    reinterpret_cast<char*>(&pan_)) + sizeof(zoom_));
  // @@protoc_insertion_point(copy_constructor:kaapi.LocationInformation)
}

void LocationInformation::SharedCtor() {
  ::memset(&pan_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoom_) -
      reinterpret_cast<char*>(&pan_)) + sizeof(zoom_));
}

LocationInformation::~LocationInformation() {
  // @@protoc_insertion_point(destructor:kaapi.LocationInformation)
  SharedDtor();
}

void LocationInformation::SharedDtor() {
}

void LocationInformation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocationInformation& LocationInformation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LocationInformation_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void LocationInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.LocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pan_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoom_) -
      reinterpret_cast<char*>(&pan_)) + sizeof(zoom_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LocationInformation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LocationInformation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float pan = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_pan(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float tilt = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_tilt(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float zoom = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_zoom(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LocationInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.LocationInformation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float pan = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float tilt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tilt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float zoom = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zoom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.LocationInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.LocationInformation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LocationInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.LocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pan = 1;
  if (this->pan() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->pan(), output);
  }

  // float tilt = 2;
  if (this->tilt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->tilt(), output);
  }

  // float zoom = 3;
  if (this->zoom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->zoom(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.LocationInformation)
}

::google::protobuf::uint8* LocationInformation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.LocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pan = 1;
  if (this->pan() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->pan(), target);
  }

  // float tilt = 2;
  if (this->tilt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->tilt(), target);
  }

  // float zoom = 3;
  if (this->zoom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->zoom(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.LocationInformation)
  return target;
}

size_t LocationInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.LocationInformation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float pan = 1;
  if (this->pan() != 0) {
    total_size += 1 + 4;
  }

  // float tilt = 2;
  if (this->tilt() != 0) {
    total_size += 1 + 4;
  }

  // float zoom = 3;
  if (this->zoom() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocationInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.LocationInformation)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationInformation* source =
      ::google::protobuf::DynamicCastToGenerated<LocationInformation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.LocationInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.LocationInformation)
    MergeFrom(*source);
  }
}

void LocationInformation::MergeFrom(const LocationInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.LocationInformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pan() != 0) {
    set_pan(from.pan());
  }
  if (from.tilt() != 0) {
    set_tilt(from.tilt());
  }
  if (from.zoom() != 0) {
    set_zoom(from.zoom());
  }
}

void LocationInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.LocationInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationInformation::CopyFrom(const LocationInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.LocationInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationInformation::IsInitialized() const {
  return true;
}

void LocationInformation::Swap(LocationInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocationInformation::InternalSwap(LocationInformation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pan_, other->pan_);
  swap(tilt_, other->tilt_);
  swap(zoom_, other->zoom_);
}

::google::protobuf::Metadata LocationInformation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListOfLocationInformation::InitAsDefaultInstance() {
}
class ListOfLocationInformation::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListOfLocationInformation::kLocationInformationFieldNumber;
const int ListOfLocationInformation::kIntervalForCirculationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListOfLocationInformation::ListOfLocationInformation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.ListOfLocationInformation)
}
ListOfLocationInformation::ListOfLocationInformation(const ListOfLocationInformation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      locationinformation_(from.locationinformation_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  intervalforcirculation_ = from.intervalforcirculation_;
  // @@protoc_insertion_point(copy_constructor:kaapi.ListOfLocationInformation)
}

void ListOfLocationInformation::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListOfLocationInformation_KardelenAPI_2eproto.base);
  intervalforcirculation_ = PROTOBUF_LONGLONG(0);
}

ListOfLocationInformation::~ListOfLocationInformation() {
  // @@protoc_insertion_point(destructor:kaapi.ListOfLocationInformation)
  SharedDtor();
}

void ListOfLocationInformation::SharedDtor() {
}

void ListOfLocationInformation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListOfLocationInformation& ListOfLocationInformation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListOfLocationInformation_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void ListOfLocationInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.ListOfLocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locationinformation_.Clear();
  intervalforcirculation_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListOfLocationInformation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListOfLocationInformation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .kaapi.LocationInformation locationInformation = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::kaapi::LocationInformation::_InternalParse;
          object = msg->add_locationinformation();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // int64 intervalForCirculation = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_intervalforcirculation(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListOfLocationInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.ListOfLocationInformation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .kaapi.LocationInformation locationInformation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_locationinformation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 intervalForCirculation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &intervalforcirculation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.ListOfLocationInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.ListOfLocationInformation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListOfLocationInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.ListOfLocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kaapi.LocationInformation locationInformation = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locationinformation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->locationinformation(static_cast<int>(i)),
      output);
  }

  // int64 intervalForCirculation = 2;
  if (this->intervalforcirculation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->intervalforcirculation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.ListOfLocationInformation)
}

::google::protobuf::uint8* ListOfLocationInformation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.ListOfLocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kaapi.LocationInformation locationInformation = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locationinformation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->locationinformation(static_cast<int>(i)), target);
  }

  // int64 intervalForCirculation = 2;
  if (this->intervalforcirculation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->intervalforcirculation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.ListOfLocationInformation)
  return target;
}

size_t ListOfLocationInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.ListOfLocationInformation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kaapi.LocationInformation locationInformation = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->locationinformation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locationinformation(static_cast<int>(i)));
    }
  }

  // int64 intervalForCirculation = 2;
  if (this->intervalforcirculation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->intervalforcirculation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListOfLocationInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.ListOfLocationInformation)
  GOOGLE_DCHECK_NE(&from, this);
  const ListOfLocationInformation* source =
      ::google::protobuf::DynamicCastToGenerated<ListOfLocationInformation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.ListOfLocationInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.ListOfLocationInformation)
    MergeFrom(*source);
  }
}

void ListOfLocationInformation::MergeFrom(const ListOfLocationInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.ListOfLocationInformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locationinformation_.MergeFrom(from.locationinformation_);
  if (from.intervalforcirculation() != 0) {
    set_intervalforcirculation(from.intervalforcirculation());
  }
}

void ListOfLocationInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.ListOfLocationInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListOfLocationInformation::CopyFrom(const ListOfLocationInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.ListOfLocationInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOfLocationInformation::IsInitialized() const {
  return true;
}

void ListOfLocationInformation::Swap(ListOfLocationInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListOfLocationInformation::InternalSwap(ListOfLocationInformation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&locationinformation_)->InternalSwap(CastToBase(&other->locationinformation_));
  swap(intervalforcirculation_, other->intervalforcirculation_);
}

::google::protobuf::Metadata ListOfLocationInformation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CalibrationRequest::InitAsDefaultInstance() {
}
class CalibrationRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalibrationRequest::kValue1FieldNumber;
const int CalibrationRequest::kValue2FieldNumber;
const int CalibrationRequest::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalibrationRequest::CalibrationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.CalibrationRequest)
}
CalibrationRequest::CalibrationRequest(const CalibrationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value1_, &from.value1_,
    static_cast<size_t>(reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&value1_)) + sizeof(mode_));
  // @@protoc_insertion_point(copy_constructor:kaapi.CalibrationRequest)
}

void CalibrationRequest::SharedCtor() {
  ::memset(&value1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&value1_)) + sizeof(mode_));
}

CalibrationRequest::~CalibrationRequest() {
  // @@protoc_insertion_point(destructor:kaapi.CalibrationRequest)
  SharedDtor();
}

void CalibrationRequest::SharedDtor() {
}

void CalibrationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CalibrationRequest& CalibrationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CalibrationRequest_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void CalibrationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.CalibrationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&value1_)) + sizeof(mode_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CalibrationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CalibrationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float value1 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_value1(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float value2 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_value2(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // int32 mode = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_mode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CalibrationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.CalibrationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float value1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float value2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.CalibrationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.CalibrationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CalibrationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.CalibrationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value1 = 1;
  if (this->value1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->value1(), output);
  }

  // float value2 = 2;
  if (this->value2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value2(), output);
  }

  // int32 mode = 3;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.CalibrationRequest)
}

::google::protobuf::uint8* CalibrationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.CalibrationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value1 = 1;
  if (this->value1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->value1(), target);
  }

  // float value2 = 2;
  if (this->value2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->value2(), target);
  }

  // int32 mode = 3;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.CalibrationRequest)
  return target;
}

size_t CalibrationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.CalibrationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value1 = 1;
  if (this->value1() != 0) {
    total_size += 1 + 4;
  }

  // float value2 = 2;
  if (this->value2() != 0) {
    total_size += 1 + 4;
  }

  // int32 mode = 3;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CalibrationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.CalibrationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CalibrationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CalibrationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.CalibrationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.CalibrationRequest)
    MergeFrom(*source);
  }
}

void CalibrationRequest::MergeFrom(const CalibrationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.CalibrationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value1() != 0) {
    set_value1(from.value1());
  }
  if (from.value2() != 0) {
    set_value2(from.value2());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void CalibrationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.CalibrationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalibrationRequest::CopyFrom(const CalibrationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.CalibrationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalibrationRequest::IsInitialized() const {
  return true;
}

void CalibrationRequest::Swap(CalibrationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalibrationRequest::InternalSwap(CalibrationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value1_, other->value1_);
  swap(value2_, other->value2_);
  swap(mode_, other->mode_);
}

::google::protobuf::Metadata CalibrationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MotionROIRequest::InitAsDefaultInstance() {
  ::kaapi::_MotionROIRequest_default_instance_._instance.get_mutable()->roi_ = const_cast< ::kaapi::Polygon*>(
      ::kaapi::Polygon::internal_default_instance());
  ::kaapi::_MotionROIRequest_default_instance_._instance.get_mutable()->far_ = const_cast< ::kaapi::Rectangle*>(
      ::kaapi::Rectangle::internal_default_instance());
  ::kaapi::_MotionROIRequest_default_instance_._instance.get_mutable()->close_ = const_cast< ::kaapi::Rectangle*>(
      ::kaapi::Rectangle::internal_default_instance());
}
class MotionROIRequest::HasBitSetters {
 public:
  static const ::kaapi::Polygon& roi(const MotionROIRequest* msg);
  static const ::kaapi::Rectangle& far(const MotionROIRequest* msg);
  static const ::kaapi::Rectangle& close(const MotionROIRequest* msg);
};

const ::kaapi::Polygon&
MotionROIRequest::HasBitSetters::roi(const MotionROIRequest* msg) {
  return *msg->roi_;
}
const ::kaapi::Rectangle&
MotionROIRequest::HasBitSetters::far(const MotionROIRequest* msg) {
  return *msg->far_;
}
const ::kaapi::Rectangle&
MotionROIRequest::HasBitSetters::close(const MotionROIRequest* msg) {
  return *msg->close_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MotionROIRequest::kRoiFieldNumber;
const int MotionROIRequest::kFarFieldNumber;
const int MotionROIRequest::kCloseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MotionROIRequest::MotionROIRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.MotionROIRequest)
}
MotionROIRequest::MotionROIRequest(const MotionROIRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_roi()) {
    roi_ = new ::kaapi::Polygon(*from.roi_);
  } else {
    roi_ = nullptr;
  }
  if (from.has_far()) {
    far_ = new ::kaapi::Rectangle(*from.far_);
  } else {
    far_ = nullptr;
  }
  if (from.has_close()) {
    close_ = new ::kaapi::Rectangle(*from.close_);
  } else {
    close_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kaapi.MotionROIRequest)
}

void MotionROIRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MotionROIRequest_KardelenAPI_2eproto.base);
  ::memset(&roi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&close_) -
      reinterpret_cast<char*>(&roi_)) + sizeof(close_));
}

MotionROIRequest::~MotionROIRequest() {
  // @@protoc_insertion_point(destructor:kaapi.MotionROIRequest)
  SharedDtor();
}

void MotionROIRequest::SharedDtor() {
  if (this != internal_default_instance()) delete roi_;
  if (this != internal_default_instance()) delete far_;
  if (this != internal_default_instance()) delete close_;
}

void MotionROIRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MotionROIRequest& MotionROIRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MotionROIRequest_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void MotionROIRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.MotionROIRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && far_ != nullptr) {
    delete far_;
  }
  far_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && close_ != nullptr) {
    delete close_;
  }
  close_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MotionROIRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MotionROIRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .kaapi.Polygon roi = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::Polygon::_InternalParse;
        object = msg->mutable_roi();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .kaapi.Rectangle far = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::Rectangle::_InternalParse;
        object = msg->mutable_far();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .kaapi.Rectangle close = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::Rectangle::_InternalParse;
        object = msg->mutable_close();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MotionROIRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.MotionROIRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kaapi.Polygon roi = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.Rectangle far = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_far()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.Rectangle close = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_close()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.MotionROIRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.MotionROIRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MotionROIRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.MotionROIRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.Polygon roi = 1;
  if (this->has_roi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::roi(this), output);
  }

  // .kaapi.Rectangle far = 2;
  if (this->has_far()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::far(this), output);
  }

  // .kaapi.Rectangle close = 3;
  if (this->has_close()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::close(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.MotionROIRequest)
}

::google::protobuf::uint8* MotionROIRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.MotionROIRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.Polygon roi = 1;
  if (this->has_roi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::roi(this), target);
  }

  // .kaapi.Rectangle far = 2;
  if (this->has_far()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::far(this), target);
  }

  // .kaapi.Rectangle close = 3;
  if (this->has_close()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::close(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.MotionROIRequest)
  return target;
}

size_t MotionROIRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.MotionROIRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kaapi.Polygon roi = 1;
  if (this->has_roi()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *roi_);
  }

  // .kaapi.Rectangle far = 2;
  if (this->has_far()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *far_);
  }

  // .kaapi.Rectangle close = 3;
  if (this->has_close()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *close_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MotionROIRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.MotionROIRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MotionROIRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MotionROIRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.MotionROIRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.MotionROIRequest)
    MergeFrom(*source);
  }
}

void MotionROIRequest::MergeFrom(const MotionROIRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.MotionROIRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roi()) {
    mutable_roi()->::kaapi::Polygon::MergeFrom(from.roi());
  }
  if (from.has_far()) {
    mutable_far()->::kaapi::Rectangle::MergeFrom(from.far());
  }
  if (from.has_close()) {
    mutable_close()->::kaapi::Rectangle::MergeFrom(from.close());
  }
}

void MotionROIRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.MotionROIRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MotionROIRequest::CopyFrom(const MotionROIRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.MotionROIRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotionROIRequest::IsInitialized() const {
  return true;
}

void MotionROIRequest::Swap(MotionROIRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MotionROIRequest::InternalSwap(MotionROIRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(roi_, other->roi_);
  swap(far_, other->far_);
  swap(close_, other->close_);
}

::google::protobuf::Metadata MotionROIRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ApiVersion::InitAsDefaultInstance() {
}
class ApiVersion::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApiVersion::kDateFieldNumber;
const int ApiVersion::kTimeFieldNumber;
const int ApiVersion::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApiVersion::ApiVersion()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.ApiVersion)
}
ApiVersion::ApiVersion(const ApiVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.date().size() > 0) {
    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.time().size() > 0) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  // @@protoc_insertion_point(copy_constructor:kaapi.ApiVersion)
}

void ApiVersion::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ApiVersion_KardelenAPI_2eproto.base);
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ApiVersion::~ApiVersion() {
  // @@protoc_insertion_point(destructor:kaapi.ApiVersion)
  SharedDtor();
}

void ApiVersion::SharedDtor() {
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApiVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApiVersion& ApiVersion::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ApiVersion_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void ApiVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.ApiVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApiVersion::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ApiVersion*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string date = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("kaapi.ApiVersion.date");
        object = msg->mutable_date();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("kaapi.ApiVersion.time");
        object = msg->mutable_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string version = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("kaapi.ApiVersion.version");
        object = msg->mutable_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApiVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.ApiVersion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string date = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->date().data(), static_cast<int>(this->date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kaapi.ApiVersion.date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time().data(), static_cast<int>(this->time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kaapi.ApiVersion.time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kaapi.ApiVersion.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.ApiVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.ApiVersion)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApiVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.ApiVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string date = 1;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kaapi.ApiVersion.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->date(), output);
  }

  // string time = 2;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kaapi.ApiVersion.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->time(), output);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kaapi.ApiVersion.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.ApiVersion)
}

::google::protobuf::uint8* ApiVersion::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.ApiVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string date = 1;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kaapi.ApiVersion.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->date(), target);
  }

  // string time = 2;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kaapi.ApiVersion.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->time(), target);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kaapi.ApiVersion.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.ApiVersion)
  return target;
}

size_t ApiVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.ApiVersion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string date = 1;
  if (this->date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  // string time = 2;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  // string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApiVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.ApiVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const ApiVersion* source =
      ::google::protobuf::DynamicCastToGenerated<ApiVersion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.ApiVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.ApiVersion)
    MergeFrom(*source);
  }
}

void ApiVersion::MergeFrom(const ApiVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.ApiVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.date().size() > 0) {

    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void ApiVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.ApiVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApiVersion::CopyFrom(const ApiVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.ApiVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApiVersion::IsInitialized() const {
  return true;
}

void ApiVersion::Swap(ApiVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApiVersion::InternalSwap(ApiVersion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  date_.Swap(&other->date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  time_.Swap(&other->time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ApiVersion::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClickParameter::InitAsDefaultInstance() {
  ::kaapi::_ClickParameter_default_instance_._instance.get_mutable()->pt_ = const_cast< ::kaapi::Point*>(
      ::kaapi::Point::internal_default_instance());
}
class ClickParameter::HasBitSetters {
 public:
  static const ::kaapi::Point& pt(const ClickParameter* msg);
};

const ::kaapi::Point&
ClickParameter::HasBitSetters::pt(const ClickParameter* msg) {
  return *msg->pt_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClickParameter::kPtFieldNumber;
const int ClickParameter::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClickParameter::ClickParameter()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.ClickParameter)
}
ClickParameter::ClickParameter(const ClickParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pt()) {
    pt_ = new ::kaapi::Point(*from.pt_);
  } else {
    pt_ = nullptr;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:kaapi.ClickParameter)
}

void ClickParameter::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClickParameter_KardelenAPI_2eproto.base);
  ::memset(&pt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&pt_)) + sizeof(value_));
}

ClickParameter::~ClickParameter() {
  // @@protoc_insertion_point(destructor:kaapi.ClickParameter)
  SharedDtor();
}

void ClickParameter::SharedDtor() {
  if (this != internal_default_instance()) delete pt_;
}

void ClickParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClickParameter& ClickParameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClickParameter_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void ClickParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.ClickParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && pt_ != nullptr) {
    delete pt_;
  }
  pt_ = nullptr;
  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClickParameter::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClickParameter*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .kaapi.Point pt = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::Point::_InternalParse;
        object = msg->mutable_pt();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClickParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.ClickParameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kaapi.Point pt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.ClickParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.ClickParameter)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClickParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.ClickParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.Point pt = 1;
  if (this->has_pt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pt(this), output);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.ClickParameter)
}

::google::protobuf::uint8* ClickParameter::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.ClickParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.Point pt = 1;
  if (this->has_pt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pt(this), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.ClickParameter)
  return target;
}

size_t ClickParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.ClickParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kaapi.Point pt = 1;
  if (this->has_pt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pt_);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClickParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.ClickParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const ClickParameter* source =
      ::google::protobuf::DynamicCastToGenerated<ClickParameter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.ClickParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.ClickParameter)
    MergeFrom(*source);
  }
}

void ClickParameter::MergeFrom(const ClickParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.ClickParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pt()) {
    mutable_pt()->::kaapi::Point::MergeFrom(from.pt());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void ClickParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.ClickParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClickParameter::CopyFrom(const ClickParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.ClickParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClickParameter::IsInitialized() const {
  return true;
}

void ClickParameter::Swap(ClickParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClickParameter::InternalSwap(ClickParameter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pt_, other->pt_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata ClickParameter::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetNumericParameterRequest::InitAsDefaultInstance() {
}
class GetNumericParameterRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNumericParameterRequest::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNumericParameterRequest::GetNumericParameterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.GetNumericParameterRequest)
}
GetNumericParameterRequest::GetNumericParameterRequest(const GetNumericParameterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:kaapi.GetNumericParameterRequest)
}

void GetNumericParameterRequest::SharedCtor() {
  index_ = 0;
}

GetNumericParameterRequest::~GetNumericParameterRequest() {
  // @@protoc_insertion_point(destructor:kaapi.GetNumericParameterRequest)
  SharedDtor();
}

void GetNumericParameterRequest::SharedDtor() {
}

void GetNumericParameterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetNumericParameterRequest& GetNumericParameterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetNumericParameterRequest_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void GetNumericParameterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.GetNumericParameterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetNumericParameterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetNumericParameterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetNumericParameterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.GetNumericParameterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.GetNumericParameterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.GetNumericParameterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetNumericParameterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.GetNumericParameterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.GetNumericParameterRequest)
}

::google::protobuf::uint8* GetNumericParameterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.GetNumericParameterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.GetNumericParameterRequest)
  return target;
}

size_t GetNumericParameterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.GetNumericParameterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNumericParameterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.GetNumericParameterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNumericParameterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetNumericParameterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.GetNumericParameterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.GetNumericParameterRequest)
    MergeFrom(*source);
  }
}

void GetNumericParameterRequest::MergeFrom(const GetNumericParameterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.GetNumericParameterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
}

void GetNumericParameterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.GetNumericParameterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNumericParameterRequest::CopyFrom(const GetNumericParameterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.GetNumericParameterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNumericParameterRequest::IsInitialized() const {
  return true;
}

void GetNumericParameterRequest::Swap(GetNumericParameterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNumericParameterRequest::InternalSwap(GetNumericParameterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(index_, other->index_);
}

::google::protobuf::Metadata GetNumericParameterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetNumericParameterResponse::InitAsDefaultInstance() {
  ::kaapi::_GetNumericParameterResponse_default_instance_._instance.get_mutable()->value_ = const_cast< ::kaapi::NumericParameter*>(
      ::kaapi::NumericParameter::internal_default_instance());
}
class GetNumericParameterResponse::HasBitSetters {
 public:
  static const ::kaapi::NumericParameter& value(const GetNumericParameterResponse* msg);
};

const ::kaapi::NumericParameter&
GetNumericParameterResponse::HasBitSetters::value(const GetNumericParameterResponse* msg) {
  return *msg->value_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNumericParameterResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNumericParameterResponse::GetNumericParameterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.GetNumericParameterResponse)
}
GetNumericParameterResponse::GetNumericParameterResponse(const GetNumericParameterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::kaapi::NumericParameter(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kaapi.GetNumericParameterResponse)
}

void GetNumericParameterResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetNumericParameterResponse_KardelenAPI_2eproto.base);
  value_ = nullptr;
}

GetNumericParameterResponse::~GetNumericParameterResponse() {
  // @@protoc_insertion_point(destructor:kaapi.GetNumericParameterResponse)
  SharedDtor();
}

void GetNumericParameterResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void GetNumericParameterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetNumericParameterResponse& GetNumericParameterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetNumericParameterResponse_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void GetNumericParameterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.GetNumericParameterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetNumericParameterResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetNumericParameterResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .kaapi.NumericParameter value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::NumericParameter::_InternalParse;
        object = msg->mutable_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetNumericParameterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.GetNumericParameterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kaapi.NumericParameter value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.GetNumericParameterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.GetNumericParameterResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetNumericParameterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.GetNumericParameterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.NumericParameter value = 1;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::value(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.GetNumericParameterResponse)
}

::google::protobuf::uint8* GetNumericParameterResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.GetNumericParameterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.NumericParameter value = 1;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::value(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.GetNumericParameterResponse)
  return target;
}

size_t GetNumericParameterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.GetNumericParameterResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kaapi.NumericParameter value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNumericParameterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.GetNumericParameterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNumericParameterResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetNumericParameterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.GetNumericParameterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.GetNumericParameterResponse)
    MergeFrom(*source);
  }
}

void GetNumericParameterResponse::MergeFrom(const GetNumericParameterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.GetNumericParameterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::kaapi::NumericParameter::MergeFrom(from.value());
  }
}

void GetNumericParameterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.GetNumericParameterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNumericParameterResponse::CopyFrom(const GetNumericParameterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.GetNumericParameterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNumericParameterResponse::IsInitialized() const {
  return true;
}

void GetNumericParameterResponse::Swap(GetNumericParameterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNumericParameterResponse::InternalSwap(GetNumericParameterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata GetNumericParameterResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetEnumParameterRequest::InitAsDefaultInstance() {
}
class GetEnumParameterRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetEnumParameterRequest::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetEnumParameterRequest::GetEnumParameterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.GetEnumParameterRequest)
}
GetEnumParameterRequest::GetEnumParameterRequest(const GetEnumParameterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:kaapi.GetEnumParameterRequest)
}

void GetEnumParameterRequest::SharedCtor() {
  index_ = 0;
}

GetEnumParameterRequest::~GetEnumParameterRequest() {
  // @@protoc_insertion_point(destructor:kaapi.GetEnumParameterRequest)
  SharedDtor();
}

void GetEnumParameterRequest::SharedDtor() {
}

void GetEnumParameterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEnumParameterRequest& GetEnumParameterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetEnumParameterRequest_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void GetEnumParameterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.GetEnumParameterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetEnumParameterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetEnumParameterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetEnumParameterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.GetEnumParameterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.GetEnumParameterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.GetEnumParameterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetEnumParameterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.GetEnumParameterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.GetEnumParameterRequest)
}

::google::protobuf::uint8* GetEnumParameterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.GetEnumParameterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.GetEnumParameterRequest)
  return target;
}

size_t GetEnumParameterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.GetEnumParameterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEnumParameterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.GetEnumParameterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEnumParameterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetEnumParameterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.GetEnumParameterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.GetEnumParameterRequest)
    MergeFrom(*source);
  }
}

void GetEnumParameterRequest::MergeFrom(const GetEnumParameterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.GetEnumParameterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
}

void GetEnumParameterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.GetEnumParameterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEnumParameterRequest::CopyFrom(const GetEnumParameterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.GetEnumParameterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEnumParameterRequest::IsInitialized() const {
  return true;
}

void GetEnumParameterRequest::Swap(GetEnumParameterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetEnumParameterRequest::InternalSwap(GetEnumParameterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(index_, other->index_);
}

::google::protobuf::Metadata GetEnumParameterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetEnumParameterResponse::InitAsDefaultInstance() {
}
class GetEnumParameterResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetEnumParameterResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetEnumParameterResponse::GetEnumParameterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.GetEnumParameterResponse)
}
GetEnumParameterResponse::GetEnumParameterResponse(const GetEnumParameterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:kaapi.GetEnumParameterResponse)
}

void GetEnumParameterResponse::SharedCtor() {
  value_ = 0;
}

GetEnumParameterResponse::~GetEnumParameterResponse() {
  // @@protoc_insertion_point(destructor:kaapi.GetEnumParameterResponse)
  SharedDtor();
}

void GetEnumParameterResponse::SharedDtor() {
}

void GetEnumParameterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEnumParameterResponse& GetEnumParameterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetEnumParameterResponse_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void GetEnumParameterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.GetEnumParameterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetEnumParameterResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetEnumParameterResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetEnumParameterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.GetEnumParameterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.GetEnumParameterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.GetEnumParameterResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetEnumParameterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.GetEnumParameterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.GetEnumParameterResponse)
}

::google::protobuf::uint8* GetEnumParameterResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.GetEnumParameterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.GetEnumParameterResponse)
  return target;
}

size_t GetEnumParameterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.GetEnumParameterResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEnumParameterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.GetEnumParameterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEnumParameterResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetEnumParameterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.GetEnumParameterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.GetEnumParameterResponse)
    MergeFrom(*source);
  }
}

void GetEnumParameterResponse::MergeFrom(const GetEnumParameterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.GetEnumParameterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void GetEnumParameterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.GetEnumParameterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEnumParameterResponse::CopyFrom(const GetEnumParameterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.GetEnumParameterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEnumParameterResponse::IsInitialized() const {
  return true;
}

void GetEnumParameterResponse::Swap(GetEnumParameterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetEnumParameterResponse::InternalSwap(GetEnumParameterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata GetEnumParameterResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetNumericParameterRequest::InitAsDefaultInstance() {
  ::kaapi::_SetNumericParameterRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::kaapi::NumericParameter*>(
      ::kaapi::NumericParameter::internal_default_instance());
}
class SetNumericParameterRequest::HasBitSetters {
 public:
  static const ::kaapi::NumericParameter& value(const SetNumericParameterRequest* msg);
};

const ::kaapi::NumericParameter&
SetNumericParameterRequest::HasBitSetters::value(const SetNumericParameterRequest* msg) {
  return *msg->value_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNumericParameterRequest::kIndexFieldNumber;
const int SetNumericParameterRequest::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNumericParameterRequest::SetNumericParameterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.SetNumericParameterRequest)
}
SetNumericParameterRequest::SetNumericParameterRequest(const SetNumericParameterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::kaapi::NumericParameter(*from.value_);
  } else {
    value_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:kaapi.SetNumericParameterRequest)
}

void SetNumericParameterRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetNumericParameterRequest_KardelenAPI_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&value_)) + sizeof(index_));
}

SetNumericParameterRequest::~SetNumericParameterRequest() {
  // @@protoc_insertion_point(destructor:kaapi.SetNumericParameterRequest)
  SharedDtor();
}

void SetNumericParameterRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void SetNumericParameterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetNumericParameterRequest& SetNumericParameterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetNumericParameterRequest_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void SetNumericParameterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.SetNumericParameterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetNumericParameterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetNumericParameterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .kaapi.NumericParameter value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::NumericParameter::_InternalParse;
        object = msg->mutable_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetNumericParameterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.SetNumericParameterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.NumericParameter value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.SetNumericParameterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.SetNumericParameterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetNumericParameterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.SetNumericParameterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // .kaapi.NumericParameter value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::value(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.SetNumericParameterRequest)
}

::google::protobuf::uint8* SetNumericParameterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.SetNumericParameterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // .kaapi.NumericParameter value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::value(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.SetNumericParameterRequest)
  return target;
}

size_t SetNumericParameterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.SetNumericParameterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kaapi.NumericParameter value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetNumericParameterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.SetNumericParameterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNumericParameterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetNumericParameterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.SetNumericParameterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.SetNumericParameterRequest)
    MergeFrom(*source);
  }
}

void SetNumericParameterRequest::MergeFrom(const SetNumericParameterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.SetNumericParameterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::kaapi::NumericParameter::MergeFrom(from.value());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void SetNumericParameterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.SetNumericParameterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNumericParameterRequest::CopyFrom(const SetNumericParameterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.SetNumericParameterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNumericParameterRequest::IsInitialized() const {
  return true;
}

void SetNumericParameterRequest::Swap(SetNumericParameterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNumericParameterRequest::InternalSwap(SetNumericParameterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(index_, other->index_);
}

::google::protobuf::Metadata SetNumericParameterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetNumericParameterResponse::InitAsDefaultInstance() {
  ::kaapi::_SetNumericParameterResponse_default_instance_._instance.get_mutable()->value_ = const_cast< ::kaapi::NumericParameter*>(
      ::kaapi::NumericParameter::internal_default_instance());
}
class SetNumericParameterResponse::HasBitSetters {
 public:
  static const ::kaapi::NumericParameter& value(const SetNumericParameterResponse* msg);
};

const ::kaapi::NumericParameter&
SetNumericParameterResponse::HasBitSetters::value(const SetNumericParameterResponse* msg) {
  return *msg->value_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNumericParameterResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNumericParameterResponse::SetNumericParameterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.SetNumericParameterResponse)
}
SetNumericParameterResponse::SetNumericParameterResponse(const SetNumericParameterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::kaapi::NumericParameter(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kaapi.SetNumericParameterResponse)
}

void SetNumericParameterResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetNumericParameterResponse_KardelenAPI_2eproto.base);
  value_ = nullptr;
}

SetNumericParameterResponse::~SetNumericParameterResponse() {
  // @@protoc_insertion_point(destructor:kaapi.SetNumericParameterResponse)
  SharedDtor();
}

void SetNumericParameterResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void SetNumericParameterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetNumericParameterResponse& SetNumericParameterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetNumericParameterResponse_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void SetNumericParameterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.SetNumericParameterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetNumericParameterResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetNumericParameterResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .kaapi.NumericParameter value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::NumericParameter::_InternalParse;
        object = msg->mutable_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetNumericParameterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.SetNumericParameterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kaapi.NumericParameter value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.SetNumericParameterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.SetNumericParameterResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetNumericParameterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.SetNumericParameterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.NumericParameter value = 1;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::value(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.SetNumericParameterResponse)
}

::google::protobuf::uint8* SetNumericParameterResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.SetNumericParameterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.NumericParameter value = 1;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::value(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.SetNumericParameterResponse)
  return target;
}

size_t SetNumericParameterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.SetNumericParameterResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kaapi.NumericParameter value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetNumericParameterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.SetNumericParameterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNumericParameterResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SetNumericParameterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.SetNumericParameterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.SetNumericParameterResponse)
    MergeFrom(*source);
  }
}

void SetNumericParameterResponse::MergeFrom(const SetNumericParameterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.SetNumericParameterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::kaapi::NumericParameter::MergeFrom(from.value());
  }
}

void SetNumericParameterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.SetNumericParameterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNumericParameterResponse::CopyFrom(const SetNumericParameterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.SetNumericParameterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNumericParameterResponse::IsInitialized() const {
  return true;
}

void SetNumericParameterResponse::Swap(SetNumericParameterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNumericParameterResponse::InternalSwap(SetNumericParameterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata SetNumericParameterResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetEnumParameterRequest::InitAsDefaultInstance() {
}
class SetEnumParameterRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetEnumParameterRequest::kIndexFieldNumber;
const int SetEnumParameterRequest::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetEnumParameterRequest::SetEnumParameterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.SetEnumParameterRequest)
}
SetEnumParameterRequest::SetEnumParameterRequest(const SetEnumParameterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&index_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:kaapi.SetEnumParameterRequest)
}

void SetEnumParameterRequest::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&index_)) + sizeof(value_));
}

SetEnumParameterRequest::~SetEnumParameterRequest() {
  // @@protoc_insertion_point(destructor:kaapi.SetEnumParameterRequest)
  SharedDtor();
}

void SetEnumParameterRequest::SharedDtor() {
}

void SetEnumParameterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetEnumParameterRequest& SetEnumParameterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetEnumParameterRequest_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void SetEnumParameterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.SetEnumParameterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&index_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetEnumParameterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetEnumParameterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetEnumParameterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.SetEnumParameterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.SetEnumParameterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.SetEnumParameterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetEnumParameterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.SetEnumParameterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.SetEnumParameterRequest)
}

::google::protobuf::uint8* SetEnumParameterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.SetEnumParameterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.SetEnumParameterRequest)
  return target;
}

size_t SetEnumParameterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.SetEnumParameterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetEnumParameterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.SetEnumParameterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetEnumParameterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetEnumParameterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.SetEnumParameterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.SetEnumParameterRequest)
    MergeFrom(*source);
  }
}

void SetEnumParameterRequest::MergeFrom(const SetEnumParameterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.SetEnumParameterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void SetEnumParameterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.SetEnumParameterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetEnumParameterRequest::CopyFrom(const SetEnumParameterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.SetEnumParameterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEnumParameterRequest::IsInitialized() const {
  return true;
}

void SetEnumParameterRequest::Swap(SetEnumParameterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetEnumParameterRequest::InternalSwap(SetEnumParameterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(index_, other->index_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata SetEnumParameterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetEnumParameterResponse::InitAsDefaultInstance() {
}
class SetEnumParameterResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetEnumParameterResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetEnumParameterResponse::SetEnumParameterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.SetEnumParameterResponse)
}
SetEnumParameterResponse::SetEnumParameterResponse(const SetEnumParameterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:kaapi.SetEnumParameterResponse)
}

void SetEnumParameterResponse::SharedCtor() {
  value_ = 0;
}

SetEnumParameterResponse::~SetEnumParameterResponse() {
  // @@protoc_insertion_point(destructor:kaapi.SetEnumParameterResponse)
  SharedDtor();
}

void SetEnumParameterResponse::SharedDtor() {
}

void SetEnumParameterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetEnumParameterResponse& SetEnumParameterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetEnumParameterResponse_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void SetEnumParameterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.SetEnumParameterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetEnumParameterResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetEnumParameterResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetEnumParameterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.SetEnumParameterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.SetEnumParameterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.SetEnumParameterResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetEnumParameterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.SetEnumParameterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.SetEnumParameterResponse)
}

::google::protobuf::uint8* SetEnumParameterResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.SetEnumParameterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.SetEnumParameterResponse)
  return target;
}

size_t SetEnumParameterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.SetEnumParameterResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetEnumParameterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.SetEnumParameterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetEnumParameterResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SetEnumParameterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.SetEnumParameterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.SetEnumParameterResponse)
    MergeFrom(*source);
  }
}

void SetEnumParameterResponse::MergeFrom(const SetEnumParameterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.SetEnumParameterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void SetEnumParameterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.SetEnumParameterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetEnumParameterResponse::CopyFrom(const SetEnumParameterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.SetEnumParameterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEnumParameterResponse::IsInitialized() const {
  return true;
}

void SetEnumParameterResponse::Swap(SetEnumParameterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetEnumParameterResponse::InternalSwap(SetEnumParameterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata SetEnumParameterResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetEnumCommandRequest::InitAsDefaultInstance() {
}
class SetEnumCommandRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetEnumCommandRequest::kIndexFieldNumber;
const int SetEnumCommandRequest::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetEnumCommandRequest::SetEnumCommandRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.SetEnumCommandRequest)
}
SetEnumCommandRequest::SetEnumCommandRequest(const SetEnumCommandRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&index_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:kaapi.SetEnumCommandRequest)
}

void SetEnumCommandRequest::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&index_)) + sizeof(value_));
}

SetEnumCommandRequest::~SetEnumCommandRequest() {
  // @@protoc_insertion_point(destructor:kaapi.SetEnumCommandRequest)
  SharedDtor();
}

void SetEnumCommandRequest::SharedDtor() {
}

void SetEnumCommandRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetEnumCommandRequest& SetEnumCommandRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetEnumCommandRequest_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void SetEnumCommandRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.SetEnumCommandRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&index_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetEnumCommandRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetEnumCommandRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetEnumCommandRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.SetEnumCommandRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.SetEnumCommandRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.SetEnumCommandRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetEnumCommandRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.SetEnumCommandRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.SetEnumCommandRequest)
}

::google::protobuf::uint8* SetEnumCommandRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.SetEnumCommandRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.SetEnumCommandRequest)
  return target;
}

size_t SetEnumCommandRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.SetEnumCommandRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetEnumCommandRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.SetEnumCommandRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetEnumCommandRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetEnumCommandRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.SetEnumCommandRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.SetEnumCommandRequest)
    MergeFrom(*source);
  }
}

void SetEnumCommandRequest::MergeFrom(const SetEnumCommandRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.SetEnumCommandRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void SetEnumCommandRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.SetEnumCommandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetEnumCommandRequest::CopyFrom(const SetEnumCommandRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.SetEnumCommandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEnumCommandRequest::IsInitialized() const {
  return true;
}

void SetEnumCommandRequest::Swap(SetEnumCommandRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetEnumCommandRequest::InternalSwap(SetEnumCommandRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(index_, other->index_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata SetEnumCommandRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetEnumCommandResponse::InitAsDefaultInstance() {
}
class SetEnumCommandResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetEnumCommandResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetEnumCommandResponse::SetEnumCommandResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.SetEnumCommandResponse)
}
SetEnumCommandResponse::SetEnumCommandResponse(const SetEnumCommandResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:kaapi.SetEnumCommandResponse)
}

void SetEnumCommandResponse::SharedCtor() {
  value_ = 0;
}

SetEnumCommandResponse::~SetEnumCommandResponse() {
  // @@protoc_insertion_point(destructor:kaapi.SetEnumCommandResponse)
  SharedDtor();
}

void SetEnumCommandResponse::SharedDtor() {
}

void SetEnumCommandResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetEnumCommandResponse& SetEnumCommandResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetEnumCommandResponse_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void SetEnumCommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.SetEnumCommandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetEnumCommandResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetEnumCommandResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetEnumCommandResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.SetEnumCommandResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.SetEnumCommandResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.SetEnumCommandResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetEnumCommandResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.SetEnumCommandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.SetEnumCommandResponse)
}

::google::protobuf::uint8* SetEnumCommandResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.SetEnumCommandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.SetEnumCommandResponse)
  return target;
}

size_t SetEnumCommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.SetEnumCommandResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetEnumCommandResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.SetEnumCommandResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetEnumCommandResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SetEnumCommandResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.SetEnumCommandResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.SetEnumCommandResponse)
    MergeFrom(*source);
  }
}

void SetEnumCommandResponse::MergeFrom(const SetEnumCommandResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.SetEnumCommandResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void SetEnumCommandResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.SetEnumCommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetEnumCommandResponse::CopyFrom(const SetEnumCommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.SetEnumCommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEnumCommandResponse::IsInitialized() const {
  return true;
}

void SetEnumCommandResponse::Swap(SetEnumCommandResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetEnumCommandResponse::InternalSwap(SetEnumCommandResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata SetEnumCommandResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetCameraRequest::InitAsDefaultInstance() {
}
class SetCameraRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetCameraRequest::kCameraTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetCameraRequest::SetCameraRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.SetCameraRequest)
}
SetCameraRequest::SetCameraRequest(const SetCameraRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cameratype_ = from.cameratype_;
  // @@protoc_insertion_point(copy_constructor:kaapi.SetCameraRequest)
}

void SetCameraRequest::SharedCtor() {
  cameratype_ = 0;
}

SetCameraRequest::~SetCameraRequest() {
  // @@protoc_insertion_point(destructor:kaapi.SetCameraRequest)
  SharedDtor();
}

void SetCameraRequest::SharedDtor() {
}

void SetCameraRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetCameraRequest& SetCameraRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetCameraRequest_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void SetCameraRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.SetCameraRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cameratype_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetCameraRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetCameraRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 cameraType = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_cameratype(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetCameraRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.SetCameraRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 cameraType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cameratype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.SetCameraRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.SetCameraRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetCameraRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.SetCameraRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cameraType = 1;
  if (this->cameratype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cameratype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.SetCameraRequest)
}

::google::protobuf::uint8* SetCameraRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.SetCameraRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cameraType = 1;
  if (this->cameratype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cameratype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.SetCameraRequest)
  return target;
}

size_t SetCameraRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.SetCameraRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 cameraType = 1;
  if (this->cameratype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cameratype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetCameraRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.SetCameraRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetCameraRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetCameraRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.SetCameraRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.SetCameraRequest)
    MergeFrom(*source);
  }
}

void SetCameraRequest::MergeFrom(const SetCameraRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.SetCameraRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cameratype() != 0) {
    set_cameratype(from.cameratype());
  }
}

void SetCameraRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.SetCameraRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCameraRequest::CopyFrom(const SetCameraRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.SetCameraRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCameraRequest::IsInitialized() const {
  return true;
}

void SetCameraRequest::Swap(SetCameraRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetCameraRequest::InternalSwap(SetCameraRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(cameratype_, other->cameratype_);
}

::google::protobuf::Metadata SetCameraRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetCameraResponse::InitAsDefaultInstance() {
}
class SetCameraResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetCameraResponse::kCapabilitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetCameraResponse::SetCameraResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.SetCameraResponse)
}
SetCameraResponse::SetCameraResponse(const SetCameraResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  capabilities_ = from.capabilities_;
  // @@protoc_insertion_point(copy_constructor:kaapi.SetCameraResponse)
}

void SetCameraResponse::SharedCtor() {
  capabilities_ = PROTOBUF_LONGLONG(0);
}

SetCameraResponse::~SetCameraResponse() {
  // @@protoc_insertion_point(destructor:kaapi.SetCameraResponse)
  SharedDtor();
}

void SetCameraResponse::SharedDtor() {
}

void SetCameraResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetCameraResponse& SetCameraResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetCameraResponse_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void SetCameraResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.SetCameraResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  capabilities_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetCameraResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetCameraResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 capabilities = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_capabilities(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetCameraResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.SetCameraResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 capabilities = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &capabilities_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.SetCameraResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.SetCameraResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetCameraResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.SetCameraResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 capabilities = 1;
  if (this->capabilities() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->capabilities(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.SetCameraResponse)
}

::google::protobuf::uint8* SetCameraResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.SetCameraResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 capabilities = 1;
  if (this->capabilities() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->capabilities(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.SetCameraResponse)
  return target;
}

size_t SetCameraResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.SetCameraResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 capabilities = 1;
  if (this->capabilities() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->capabilities());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetCameraResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.SetCameraResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetCameraResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SetCameraResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.SetCameraResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.SetCameraResponse)
    MergeFrom(*source);
  }
}

void SetCameraResponse::MergeFrom(const SetCameraResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.SetCameraResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.capabilities() != 0) {
    set_capabilities(from.capabilities());
  }
}

void SetCameraResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.SetCameraResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCameraResponse::CopyFrom(const SetCameraResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.SetCameraResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCameraResponse::IsInitialized() const {
  return true;
}

void SetCameraResponse::Swap(SetCameraResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetCameraResponse::InternalSwap(SetCameraResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(capabilities_, other->capabilities_);
}

::google::protobuf::Metadata SetCameraResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CommWrite::InitAsDefaultInstance() {
  ::kaapi::_CommWrite_default_instance_._instance.get_mutable()->abspars_ = const_cast< ::kaapi::AbsoluteMoveParameters*>(
      ::kaapi::AbsoluteMoveParameters::internal_default_instance());
  ::kaapi::_CommWrite_default_instance_._instance.get_mutable()->relpars_ = const_cast< ::kaapi::RelativeMoveParameters*>(
      ::kaapi::RelativeMoveParameters::internal_default_instance());
  ::kaapi::_CommWrite_default_instance_._instance.get_mutable()->updpars_ = const_cast< ::kaapi::UpdateCameraStatusParameters*>(
      ::kaapi::UpdateCameraStatusParameters::internal_default_instance());
}
class CommWrite::HasBitSetters {
 public:
  static const ::kaapi::AbsoluteMoveParameters& abspars(const CommWrite* msg);
  static const ::kaapi::RelativeMoveParameters& relpars(const CommWrite* msg);
  static const ::kaapi::UpdateCameraStatusParameters& updpars(const CommWrite* msg);
};

const ::kaapi::AbsoluteMoveParameters&
CommWrite::HasBitSetters::abspars(const CommWrite* msg) {
  return *msg->abspars_;
}
const ::kaapi::RelativeMoveParameters&
CommWrite::HasBitSetters::relpars(const CommWrite* msg) {
  return *msg->relpars_;
}
const ::kaapi::UpdateCameraStatusParameters&
CommWrite::HasBitSetters::updpars(const CommWrite* msg) {
  return *msg->updpars_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommWrite::kActionFieldNumber;
const int CommWrite::kAbsparsFieldNumber;
const int CommWrite::kRelparsFieldNumber;
const int CommWrite::kUpdparsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommWrite::CommWrite()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.CommWrite)
}
CommWrite::CommWrite(const CommWrite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_abspars()) {
    abspars_ = new ::kaapi::AbsoluteMoveParameters(*from.abspars_);
  } else {
    abspars_ = nullptr;
  }
  if (from.has_relpars()) {
    relpars_ = new ::kaapi::RelativeMoveParameters(*from.relpars_);
  } else {
    relpars_ = nullptr;
  }
  if (from.has_updpars()) {
    updpars_ = new ::kaapi::UpdateCameraStatusParameters(*from.updpars_);
  } else {
    updpars_ = nullptr;
  }
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:kaapi.CommWrite)
}

void CommWrite::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CommWrite_KardelenAPI_2eproto.base);
  ::memset(&abspars_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&abspars_)) + sizeof(action_));
}

CommWrite::~CommWrite() {
  // @@protoc_insertion_point(destructor:kaapi.CommWrite)
  SharedDtor();
}

void CommWrite::SharedDtor() {
  if (this != internal_default_instance()) delete abspars_;
  if (this != internal_default_instance()) delete relpars_;
  if (this != internal_default_instance()) delete updpars_;
}

void CommWrite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommWrite& CommWrite::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CommWrite_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void CommWrite::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.CommWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && abspars_ != nullptr) {
    delete abspars_;
  }
  abspars_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && relpars_ != nullptr) {
    delete relpars_;
  }
  relpars_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && updpars_ != nullptr) {
    delete updpars_;
  }
  updpars_ = nullptr;
  action_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CommWrite::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CommWrite*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .kaapi.CommWrite.Action action = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_action(static_cast<::kaapi::CommWrite_Action>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .kaapi.AbsoluteMoveParameters abspars = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::AbsoluteMoveParameters::_InternalParse;
        object = msg->mutable_abspars();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .kaapi.RelativeMoveParameters relpars = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::RelativeMoveParameters::_InternalParse;
        object = msg->mutable_relpars();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .kaapi.UpdateCameraStatusParameters updpars = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::UpdateCameraStatusParameters::_InternalParse;
        object = msg->mutable_updpars();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CommWrite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.CommWrite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kaapi.CommWrite.Action action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::kaapi::CommWrite_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.AbsoluteMoveParameters abspars = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_abspars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.RelativeMoveParameters relpars = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_relpars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.UpdateCameraStatusParameters updpars = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updpars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.CommWrite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.CommWrite)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CommWrite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.CommWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.CommWrite.Action action = 1;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->action(), output);
  }

  // .kaapi.AbsoluteMoveParameters abspars = 2;
  if (this->has_abspars()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::abspars(this), output);
  }

  // .kaapi.RelativeMoveParameters relpars = 3;
  if (this->has_relpars()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::relpars(this), output);
  }

  // .kaapi.UpdateCameraStatusParameters updpars = 4;
  if (this->has_updpars()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::updpars(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.CommWrite)
}

::google::protobuf::uint8* CommWrite::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.CommWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.CommWrite.Action action = 1;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->action(), target);
  }

  // .kaapi.AbsoluteMoveParameters abspars = 2;
  if (this->has_abspars()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::abspars(this), target);
  }

  // .kaapi.RelativeMoveParameters relpars = 3;
  if (this->has_relpars()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::relpars(this), target);
  }

  // .kaapi.UpdateCameraStatusParameters updpars = 4;
  if (this->has_updpars()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::updpars(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.CommWrite)
  return target;
}

size_t CommWrite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.CommWrite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kaapi.AbsoluteMoveParameters abspars = 2;
  if (this->has_abspars()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *abspars_);
  }

  // .kaapi.RelativeMoveParameters relpars = 3;
  if (this->has_relpars()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *relpars_);
  }

  // .kaapi.UpdateCameraStatusParameters updpars = 4;
  if (this->has_updpars()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *updpars_);
  }

  // .kaapi.CommWrite.Action action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommWrite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.CommWrite)
  GOOGLE_DCHECK_NE(&from, this);
  const CommWrite* source =
      ::google::protobuf::DynamicCastToGenerated<CommWrite>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.CommWrite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.CommWrite)
    MergeFrom(*source);
  }
}

void CommWrite::MergeFrom(const CommWrite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.CommWrite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_abspars()) {
    mutable_abspars()->::kaapi::AbsoluteMoveParameters::MergeFrom(from.abspars());
  }
  if (from.has_relpars()) {
    mutable_relpars()->::kaapi::RelativeMoveParameters::MergeFrom(from.relpars());
  }
  if (from.has_updpars()) {
    mutable_updpars()->::kaapi::UpdateCameraStatusParameters::MergeFrom(from.updpars());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void CommWrite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.CommWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommWrite::CopyFrom(const CommWrite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.CommWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommWrite::IsInitialized() const {
  return true;
}

void CommWrite::Swap(CommWrite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommWrite::InternalSwap(CommWrite* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(abspars_, other->abspars_);
  swap(relpars_, other->relpars_);
  swap(updpars_, other->updpars_);
  swap(action_, other->action_);
}

::google::protobuf::Metadata CommWrite::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CommRead::InitAsDefaultInstance() {
  ::kaapi::_CommRead_default_instance_._instance.get_mutable()->posinfo_ = const_cast< ::kaapi::PosInfo*>(
      ::kaapi::PosInfo::internal_default_instance());
  ::kaapi::_CommRead_default_instance_._instance.get_mutable()->status_ = const_cast< ::kaapi::CameraStatus*>(
      ::kaapi::CameraStatus::internal_default_instance());
  ::kaapi::_CommRead_default_instance_._instance.get_mutable()->absres_ = const_cast< ::kaapi::AbsoluteMoveResult*>(
      ::kaapi::AbsoluteMoveResult::internal_default_instance());
  ::kaapi::_CommRead_default_instance_._instance.get_mutable()->relres_ = const_cast< ::kaapi::RelativeMoveResult*>(
      ::kaapi::RelativeMoveResult::internal_default_instance());
}
class CommRead::HasBitSetters {
 public:
  static const ::kaapi::PosInfo& posinfo(const CommRead* msg);
  static const ::kaapi::CameraStatus& status(const CommRead* msg);
  static const ::kaapi::AbsoluteMoveResult& absres(const CommRead* msg);
  static const ::kaapi::RelativeMoveResult& relres(const CommRead* msg);
};

const ::kaapi::PosInfo&
CommRead::HasBitSetters::posinfo(const CommRead* msg) {
  return *msg->posinfo_;
}
const ::kaapi::CameraStatus&
CommRead::HasBitSetters::status(const CommRead* msg) {
  return *msg->status_;
}
const ::kaapi::AbsoluteMoveResult&
CommRead::HasBitSetters::absres(const CommRead* msg) {
  return *msg->absres_;
}
const ::kaapi::RelativeMoveResult&
CommRead::HasBitSetters::relres(const CommRead* msg) {
  return *msg->relres_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommRead::kPosInfoFieldNumber;
const int CommRead::kStatusFieldNumber;
const int CommRead::kAbsresFieldNumber;
const int CommRead::kRelresFieldNumber;
const int CommRead::kKeysFieldNumber;
const int CommRead::kValuesFieldNumber;
const int CommRead::kFrameDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommRead::CommRead()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.CommRead)
}
CommRead::CommRead(const CommRead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      keys_(from.keys_),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  framedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.framedata().size() > 0) {
    framedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.framedata_);
  }
  if (from.has_posinfo()) {
    posinfo_ = new ::kaapi::PosInfo(*from.posinfo_);
  } else {
    posinfo_ = nullptr;
  }
  if (from.has_status()) {
    status_ = new ::kaapi::CameraStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from.has_absres()) {
    absres_ = new ::kaapi::AbsoluteMoveResult(*from.absres_);
  } else {
    absres_ = nullptr;
  }
  if (from.has_relres()) {
    relres_ = new ::kaapi::RelativeMoveResult(*from.relres_);
  } else {
    relres_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kaapi.CommRead)
}

void CommRead::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CommRead_KardelenAPI_2eproto.base);
  framedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&posinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relres_) -
      reinterpret_cast<char*>(&posinfo_)) + sizeof(relres_));
}

CommRead::~CommRead() {
  // @@protoc_insertion_point(destructor:kaapi.CommRead)
  SharedDtor();
}

void CommRead::SharedDtor() {
  framedata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete posinfo_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete absres_;
  if (this != internal_default_instance()) delete relres_;
}

void CommRead::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommRead& CommRead::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CommRead_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void CommRead::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.CommRead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  values_.Clear();
  framedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && posinfo_ != nullptr) {
    delete posinfo_;
  }
  posinfo_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && absres_ != nullptr) {
    delete absres_;
  }
  absres_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && relres_ != nullptr) {
    delete relres_;
  }
  relres_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CommRead::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CommRead*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .kaapi.PosInfo posInfo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::PosInfo::_InternalParse;
        object = msg->mutable_posinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .kaapi.CameraStatus status = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::CameraStatus::_InternalParse;
        object = msg->mutable_status();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .kaapi.AbsoluteMoveResult absres = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::AbsoluteMoveResult::_InternalParse;
        object = msg->mutable_absres();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .kaapi.RelativeMoveResult relres = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::RelativeMoveResult::_InternalParse;
        object = msg->mutable_relres();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated string keys = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("kaapi.CommRead.keys");
          object = msg->add_keys();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // repeated string values = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("kaapi.CommRead.values");
          object = msg->add_values();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // bytes frameData = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_framedata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CommRead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.CommRead)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kaapi.PosInfo posInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_posinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.CameraStatus status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.AbsoluteMoveResult absres = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_absres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.RelativeMoveResult relres = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_relres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string keys = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_keys()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keys(this->keys_size() - 1).data(),
            static_cast<int>(this->keys(this->keys_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kaapi.CommRead.keys"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string values = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->values(this->values_size() - 1).data(),
            static_cast<int>(this->values(this->values_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kaapi.CommRead.values"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes frameData = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_framedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.CommRead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.CommRead)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CommRead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.CommRead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.PosInfo posInfo = 1;
  if (this->has_posinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::posinfo(this), output);
  }

  // .kaapi.CameraStatus status = 2;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::status(this), output);
  }

  // .kaapi.AbsoluteMoveResult absres = 3;
  if (this->has_absres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::absres(this), output);
  }

  // .kaapi.RelativeMoveResult relres = 4;
  if (this->has_relres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::relres(this), output);
  }

  // repeated string keys = 5;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kaapi.CommRead.keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->keys(i), output);
  }

  // repeated string values = 6;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kaapi.CommRead.values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->values(i), output);
  }

  // bytes frameData = 7;
  if (this->framedata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->framedata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.CommRead)
}

::google::protobuf::uint8* CommRead::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.CommRead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.PosInfo posInfo = 1;
  if (this->has_posinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::posinfo(this), target);
  }

  // .kaapi.CameraStatus status = 2;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::status(this), target);
  }

  // .kaapi.AbsoluteMoveResult absres = 3;
  if (this->has_absres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::absres(this), target);
  }

  // .kaapi.RelativeMoveResult relres = 4;
  if (this->has_relres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::relres(this), target);
  }

  // repeated string keys = 5;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kaapi.CommRead.keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->keys(i), target);
  }

  // repeated string values = 6;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kaapi.CommRead.values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->values(i), target);
  }

  // bytes frameData = 7;
  if (this->framedata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->framedata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.CommRead)
  return target;
}

size_t CommRead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.CommRead)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keys = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->keys(i));
  }

  // repeated string values = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->values(i));
  }

  // bytes frameData = 7;
  if (this->framedata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->framedata());
  }

  // .kaapi.PosInfo posInfo = 1;
  if (this->has_posinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *posinfo_);
  }

  // .kaapi.CameraStatus status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .kaapi.AbsoluteMoveResult absres = 3;
  if (this->has_absres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *absres_);
  }

  // .kaapi.RelativeMoveResult relres = 4;
  if (this->has_relres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *relres_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommRead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.CommRead)
  GOOGLE_DCHECK_NE(&from, this);
  const CommRead* source =
      ::google::protobuf::DynamicCastToGenerated<CommRead>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.CommRead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.CommRead)
    MergeFrom(*source);
  }
}

void CommRead::MergeFrom(const CommRead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.CommRead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  values_.MergeFrom(from.values_);
  if (from.framedata().size() > 0) {

    framedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.framedata_);
  }
  if (from.has_posinfo()) {
    mutable_posinfo()->::kaapi::PosInfo::MergeFrom(from.posinfo());
  }
  if (from.has_status()) {
    mutable_status()->::kaapi::CameraStatus::MergeFrom(from.status());
  }
  if (from.has_absres()) {
    mutable_absres()->::kaapi::AbsoluteMoveResult::MergeFrom(from.absres());
  }
  if (from.has_relres()) {
    mutable_relres()->::kaapi::RelativeMoveResult::MergeFrom(from.relres());
  }
}

void CommRead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.CommRead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommRead::CopyFrom(const CommRead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.CommRead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommRead::IsInitialized() const {
  return true;
}

void CommRead::Swap(CommRead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommRead::InternalSwap(CommRead* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  keys_.InternalSwap(CastToBase(&other->keys_));
  values_.InternalSwap(CastToBase(&other->values_));
  framedata_.Swap(&other->framedata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(posinfo_, other->posinfo_);
  swap(status_, other->status_);
  swap(absres_, other->absres_);
  swap(relres_, other->relres_);
}

::google::protobuf::Metadata CommRead::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateCameraStatusParameters::InitAsDefaultInstance() {
  ::kaapi::_UpdateCameraStatusParameters_default_instance_._instance.get_mutable()->status_ = const_cast< ::kaapi::CameraStatus*>(
      ::kaapi::CameraStatus::internal_default_instance());
}
class UpdateCameraStatusParameters::HasBitSetters {
 public:
  static const ::kaapi::CameraStatus& status(const UpdateCameraStatusParameters* msg);
};

const ::kaapi::CameraStatus&
UpdateCameraStatusParameters::HasBitSetters::status(const UpdateCameraStatusParameters* msg) {
  return *msg->status_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateCameraStatusParameters::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateCameraStatusParameters::UpdateCameraStatusParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.UpdateCameraStatusParameters)
}
UpdateCameraStatusParameters::UpdateCameraStatusParameters(const UpdateCameraStatusParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::kaapi::CameraStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kaapi.UpdateCameraStatusParameters)
}

void UpdateCameraStatusParameters::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateCameraStatusParameters_KardelenAPI_2eproto.base);
  status_ = nullptr;
}

UpdateCameraStatusParameters::~UpdateCameraStatusParameters() {
  // @@protoc_insertion_point(destructor:kaapi.UpdateCameraStatusParameters)
  SharedDtor();
}

void UpdateCameraStatusParameters::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void UpdateCameraStatusParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCameraStatusParameters& UpdateCameraStatusParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateCameraStatusParameters_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void UpdateCameraStatusParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.UpdateCameraStatusParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateCameraStatusParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateCameraStatusParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .kaapi.CameraStatus status = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::CameraStatus::_InternalParse;
        object = msg->mutable_status();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateCameraStatusParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.UpdateCameraStatusParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kaapi.CameraStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.UpdateCameraStatusParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.UpdateCameraStatusParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateCameraStatusParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.UpdateCameraStatusParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.CameraStatus status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::status(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.UpdateCameraStatusParameters)
}

::google::protobuf::uint8* UpdateCameraStatusParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.UpdateCameraStatusParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.CameraStatus status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::status(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.UpdateCameraStatusParameters)
  return target;
}

size_t UpdateCameraStatusParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.UpdateCameraStatusParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kaapi.CameraStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCameraStatusParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.UpdateCameraStatusParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCameraStatusParameters* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateCameraStatusParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.UpdateCameraStatusParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.UpdateCameraStatusParameters)
    MergeFrom(*source);
  }
}

void UpdateCameraStatusParameters::MergeFrom(const UpdateCameraStatusParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.UpdateCameraStatusParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::kaapi::CameraStatus::MergeFrom(from.status());
  }
}

void UpdateCameraStatusParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.UpdateCameraStatusParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCameraStatusParameters::CopyFrom(const UpdateCameraStatusParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.UpdateCameraStatusParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCameraStatusParameters::IsInitialized() const {
  return true;
}

void UpdateCameraStatusParameters::Swap(UpdateCameraStatusParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateCameraStatusParameters::InternalSwap(UpdateCameraStatusParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::google::protobuf::Metadata UpdateCameraStatusParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetCameraStatusParameters::InitAsDefaultInstance() {
}
class GetCameraStatusParameters::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCameraStatusParameters::kFiltersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCameraStatusParameters::GetCameraStatusParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.GetCameraStatusParameters)
}
GetCameraStatusParameters::GetCameraStatusParameters(const GetCameraStatusParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filters_ = from.filters_;
  // @@protoc_insertion_point(copy_constructor:kaapi.GetCameraStatusParameters)
}

void GetCameraStatusParameters::SharedCtor() {
  filters_ = PROTOBUF_LONGLONG(0);
}

GetCameraStatusParameters::~GetCameraStatusParameters() {
  // @@protoc_insertion_point(destructor:kaapi.GetCameraStatusParameters)
  SharedDtor();
}

void GetCameraStatusParameters::SharedDtor() {
}

void GetCameraStatusParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCameraStatusParameters& GetCameraStatusParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetCameraStatusParameters_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void GetCameraStatusParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.GetCameraStatusParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filters_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetCameraStatusParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetCameraStatusParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 filters = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_filters(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetCameraStatusParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.GetCameraStatusParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 filters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &filters_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.GetCameraStatusParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.GetCameraStatusParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetCameraStatusParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.GetCameraStatusParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 filters = 1;
  if (this->filters() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->filters(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.GetCameraStatusParameters)
}

::google::protobuf::uint8* GetCameraStatusParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.GetCameraStatusParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 filters = 1;
  if (this->filters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->filters(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.GetCameraStatusParameters)
  return target;
}

size_t GetCameraStatusParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.GetCameraStatusParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 filters = 1;
  if (this->filters() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->filters());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCameraStatusParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.GetCameraStatusParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCameraStatusParameters* source =
      ::google::protobuf::DynamicCastToGenerated<GetCameraStatusParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.GetCameraStatusParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.GetCameraStatusParameters)
    MergeFrom(*source);
  }
}

void GetCameraStatusParameters::MergeFrom(const GetCameraStatusParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.GetCameraStatusParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filters() != 0) {
    set_filters(from.filters());
  }
}

void GetCameraStatusParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.GetCameraStatusParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCameraStatusParameters::CopyFrom(const GetCameraStatusParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.GetCameraStatusParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCameraStatusParameters::IsInitialized() const {
  return true;
}

void GetCameraStatusParameters::Swap(GetCameraStatusParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCameraStatusParameters::InternalSwap(GetCameraStatusParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(filters_, other->filters_);
}

::google::protobuf::Metadata GetCameraStatusParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CameraStatus::InitAsDefaultInstance() {
  ::kaapi::_CameraStatus_default_instance_._instance.get_mutable()->calibration_ = const_cast< ::kaapi::Calibration*>(
      ::kaapi::Calibration::internal_default_instance());
  ::kaapi::_CameraStatus_default_instance_._instance.get_mutable()->boresight_ = const_cast< ::kaapi::Boresight*>(
      ::kaapi::Boresight::internal_default_instance());
  ::kaapi::_CameraStatus_default_instance_._instance.get_mutable()->roi_ = const_cast< ::kaapi::ROI*>(
      ::kaapi::ROI::internal_default_instance());
  ::kaapi::_CameraStatus_default_instance_._instance.get_mutable()->fence_ = const_cast< ::kaapi::ROI*>(
      ::kaapi::ROI::internal_default_instance());
}
class CameraStatus::HasBitSetters {
 public:
  static const ::kaapi::Calibration& calibration(const CameraStatus* msg);
  static const ::kaapi::Boresight& boresight(const CameraStatus* msg);
  static const ::kaapi::ROI& roi(const CameraStatus* msg);
  static const ::kaapi::ROI& fence(const CameraStatus* msg);
};

const ::kaapi::Calibration&
CameraStatus::HasBitSetters::calibration(const CameraStatus* msg) {
  return *msg->calibration_;
}
const ::kaapi::Boresight&
CameraStatus::HasBitSetters::boresight(const CameraStatus* msg) {
  return *msg->boresight_;
}
const ::kaapi::ROI&
CameraStatus::HasBitSetters::roi(const CameraStatus* msg) {
  return *msg->roi_;
}
const ::kaapi::ROI&
CameraStatus::HasBitSetters::fence(const CameraStatus* msg) {
  return *msg->fence_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CameraStatus::kCapabilitiesFieldNumber;
const int CameraStatus::kNumericParametersVectorFieldNumber;
const int CameraStatus::kNumericParametersFieldNumber;
const int CameraStatus::kEnumParametersVectorFieldNumber;
const int CameraStatus::kEnumParametersFieldNumber;
const int CameraStatus::kEnumCommandsVectorFieldNumber;
const int CameraStatus::kEnumCommandsFieldNumber;
const int CameraStatus::kCalibrationFieldNumber;
const int CameraStatus::kBoresightFieldNumber;
const int CameraStatus::kRoiFieldNumber;
const int CameraStatus::kFenceFieldNumber;
const int CameraStatus::kObjectDetectionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CameraStatus::CameraStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.CameraStatus)
}
CameraStatus::CameraStatus(const CameraStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      numericparameters_(from.numericparameters_),
      enumparameters_(from.enumparameters_),
      enumcommands_(from.enumcommands_),
      objectdetections_(from.objectdetections_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_calibration()) {
    calibration_ = new ::kaapi::Calibration(*from.calibration_);
  } else {
    calibration_ = nullptr;
  }
  if (from.has_boresight()) {
    boresight_ = new ::kaapi::Boresight(*from.boresight_);
  } else {
    boresight_ = nullptr;
  }
  if (from.has_roi()) {
    roi_ = new ::kaapi::ROI(*from.roi_);
  } else {
    roi_ = nullptr;
  }
  if (from.has_fence()) {
    fence_ = new ::kaapi::ROI(*from.fence_);
  } else {
    fence_ = nullptr;
  }
  ::memcpy(&capabilities_, &from.capabilities_,
    static_cast<size_t>(reinterpret_cast<char*>(&enumcommandsvector_) -
    reinterpret_cast<char*>(&capabilities_)) + sizeof(enumcommandsvector_));
  // @@protoc_insertion_point(copy_constructor:kaapi.CameraStatus)
}

void CameraStatus::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CameraStatus_KardelenAPI_2eproto.base);
  ::memset(&calibration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enumcommandsvector_) -
      reinterpret_cast<char*>(&calibration_)) + sizeof(enumcommandsvector_));
}

CameraStatus::~CameraStatus() {
  // @@protoc_insertion_point(destructor:kaapi.CameraStatus)
  SharedDtor();
}

void CameraStatus::SharedDtor() {
  if (this != internal_default_instance()) delete calibration_;
  if (this != internal_default_instance()) delete boresight_;
  if (this != internal_default_instance()) delete roi_;
  if (this != internal_default_instance()) delete fence_;
}

void CameraStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CameraStatus& CameraStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CameraStatus_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void CameraStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.CameraStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  numericparameters_.Clear();
  enumparameters_.Clear();
  enumcommands_.Clear();
  objectdetections_.Clear();
  if (GetArenaNoVirtual() == nullptr && calibration_ != nullptr) {
    delete calibration_;
  }
  calibration_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && boresight_ != nullptr) {
    delete boresight_;
  }
  boresight_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && fence_ != nullptr) {
    delete fence_;
  }
  fence_ = nullptr;
  ::memset(&capabilities_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enumcommandsvector_) -
      reinterpret_cast<char*>(&capabilities_)) + sizeof(enumcommandsvector_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CameraStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CameraStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 capabilities = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_capabilities(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 numericParametersVector = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_numericparametersvector(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .kaapi.NumericParameter numericParameters = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::kaapi::NumericParameter::_InternalParse;
          object = msg->add_numericparameters();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // int32 enumParametersVector = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_enumparametersvector(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated int32 enumParameters = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) == 42) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedInt32Parser;
          object = msg->mutable_enumparameters();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        do {
          msg->add_enumparameters(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 40 && (ptr += 1));
        break;
      }
      // int32 enumCommandsVector = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_enumcommandsvector(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated int32 enumCommands = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) == 58) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedInt32Parser;
          object = msg->mutable_enumcommands();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        do {
          msg->add_enumcommands(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 56 && (ptr += 1));
        break;
      }
      // .kaapi.Calibration calibration = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::Calibration::_InternalParse;
        object = msg->mutable_calibration();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .kaapi.Boresight boresight = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::Boresight::_InternalParse;
        object = msg->mutable_boresight();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .kaapi.ROI roi = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::ROI::_InternalParse;
        object = msg->mutable_roi();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .kaapi.ROI fence = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::ROI::_InternalParse;
        object = msg->mutable_fence();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .kaapi.Rectangle objectDetections = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::kaapi::Rectangle::_InternalParse;
          object = msg->add_objectdetections();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 98 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CameraStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.CameraStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 capabilities = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &capabilities_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 numericParametersVector = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numericparametersvector_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kaapi.NumericParameter numericParameters = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_numericparameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 enumParametersVector = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enumparametersvector_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 enumParameters = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_enumparameters())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_enumparameters())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 enumCommandsVector = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enumcommandsvector_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 enumCommands = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_enumcommands())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_enumcommands())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.Calibration calibration = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_calibration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.Boresight boresight = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boresight()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.ROI roi = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.ROI fence = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kaapi.Rectangle objectDetections = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_objectdetections()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.CameraStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.CameraStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CameraStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.CameraStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 capabilities = 1;
  if (this->capabilities() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->capabilities(), output);
  }

  // int32 numericParametersVector = 2;
  if (this->numericparametersvector() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->numericparametersvector(), output);
  }

  // repeated .kaapi.NumericParameter numericParameters = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->numericparameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->numericparameters(static_cast<int>(i)),
      output);
  }

  // int32 enumParametersVector = 4;
  if (this->enumparametersvector() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->enumparametersvector(), output);
  }

  // repeated int32 enumParameters = 5;
  if (this->enumparameters_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_enumparameters_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->enumparameters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->enumparameters(i), output);
  }

  // int32 enumCommandsVector = 6;
  if (this->enumcommandsvector() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->enumcommandsvector(), output);
  }

  // repeated int32 enumCommands = 7;
  if (this->enumcommands_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_enumcommands_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->enumcommands_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->enumcommands(i), output);
  }

  // .kaapi.Calibration calibration = 8;
  if (this->has_calibration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::calibration(this), output);
  }

  // .kaapi.Boresight boresight = 9;
  if (this->has_boresight()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::boresight(this), output);
  }

  // .kaapi.ROI roi = 10;
  if (this->has_roi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::roi(this), output);
  }

  // .kaapi.ROI fence = 11;
  if (this->has_fence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::fence(this), output);
  }

  // repeated .kaapi.Rectangle objectDetections = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objectdetections_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->objectdetections(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.CameraStatus)
}

::google::protobuf::uint8* CameraStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.CameraStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 capabilities = 1;
  if (this->capabilities() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->capabilities(), target);
  }

  // int32 numericParametersVector = 2;
  if (this->numericparametersvector() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->numericparametersvector(), target);
  }

  // repeated .kaapi.NumericParameter numericParameters = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->numericparameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->numericparameters(static_cast<int>(i)), target);
  }

  // int32 enumParametersVector = 4;
  if (this->enumparametersvector() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->enumparametersvector(), target);
  }

  // repeated int32 enumParameters = 5;
  if (this->enumparameters_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _enumparameters_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->enumparameters_, target);
  }

  // int32 enumCommandsVector = 6;
  if (this->enumcommandsvector() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->enumcommandsvector(), target);
  }

  // repeated int32 enumCommands = 7;
  if (this->enumcommands_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _enumcommands_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->enumcommands_, target);
  }

  // .kaapi.Calibration calibration = 8;
  if (this->has_calibration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::calibration(this), target);
  }

  // .kaapi.Boresight boresight = 9;
  if (this->has_boresight()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::boresight(this), target);
  }

  // .kaapi.ROI roi = 10;
  if (this->has_roi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::roi(this), target);
  }

  // .kaapi.ROI fence = 11;
  if (this->has_fence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::fence(this), target);
  }

  // repeated .kaapi.Rectangle objectDetections = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objectdetections_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->objectdetections(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.CameraStatus)
  return target;
}

size_t CameraStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.CameraStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kaapi.NumericParameter numericParameters = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->numericparameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->numericparameters(static_cast<int>(i)));
    }
  }

  // repeated int32 enumParameters = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->enumparameters_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _enumparameters_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 enumCommands = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->enumcommands_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _enumcommands_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .kaapi.Rectangle objectDetections = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->objectdetections_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objectdetections(static_cast<int>(i)));
    }
  }

  // .kaapi.Calibration calibration = 8;
  if (this->has_calibration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *calibration_);
  }

  // .kaapi.Boresight boresight = 9;
  if (this->has_boresight()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *boresight_);
  }

  // .kaapi.ROI roi = 10;
  if (this->has_roi()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *roi_);
  }

  // .kaapi.ROI fence = 11;
  if (this->has_fence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fence_);
  }

  // int64 capabilities = 1;
  if (this->capabilities() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->capabilities());
  }

  // int32 numericParametersVector = 2;
  if (this->numericparametersvector() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numericparametersvector());
  }

  // int32 enumParametersVector = 4;
  if (this->enumparametersvector() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->enumparametersvector());
  }

  // int32 enumCommandsVector = 6;
  if (this->enumcommandsvector() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->enumcommandsvector());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CameraStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.CameraStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CameraStatus* source =
      ::google::protobuf::DynamicCastToGenerated<CameraStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.CameraStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.CameraStatus)
    MergeFrom(*source);
  }
}

void CameraStatus::MergeFrom(const CameraStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.CameraStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  numericparameters_.MergeFrom(from.numericparameters_);
  enumparameters_.MergeFrom(from.enumparameters_);
  enumcommands_.MergeFrom(from.enumcommands_);
  objectdetections_.MergeFrom(from.objectdetections_);
  if (from.has_calibration()) {
    mutable_calibration()->::kaapi::Calibration::MergeFrom(from.calibration());
  }
  if (from.has_boresight()) {
    mutable_boresight()->::kaapi::Boresight::MergeFrom(from.boresight());
  }
  if (from.has_roi()) {
    mutable_roi()->::kaapi::ROI::MergeFrom(from.roi());
  }
  if (from.has_fence()) {
    mutable_fence()->::kaapi::ROI::MergeFrom(from.fence());
  }
  if (from.capabilities() != 0) {
    set_capabilities(from.capabilities());
  }
  if (from.numericparametersvector() != 0) {
    set_numericparametersvector(from.numericparametersvector());
  }
  if (from.enumparametersvector() != 0) {
    set_enumparametersvector(from.enumparametersvector());
  }
  if (from.enumcommandsvector() != 0) {
    set_enumcommandsvector(from.enumcommandsvector());
  }
}

void CameraStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.CameraStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CameraStatus::CopyFrom(const CameraStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.CameraStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CameraStatus::IsInitialized() const {
  return true;
}

void CameraStatus::Swap(CameraStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CameraStatus::InternalSwap(CameraStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&numericparameters_)->InternalSwap(CastToBase(&other->numericparameters_));
  enumparameters_.InternalSwap(&other->enumparameters_);
  enumcommands_.InternalSwap(&other->enumcommands_);
  CastToBase(&objectdetections_)->InternalSwap(CastToBase(&other->objectdetections_));
  swap(calibration_, other->calibration_);
  swap(boresight_, other->boresight_);
  swap(roi_, other->roi_);
  swap(fence_, other->fence_);
  swap(capabilities_, other->capabilities_);
  swap(numericparametersvector_, other->numericparametersvector_);
  swap(enumparametersvector_, other->enumparametersvector_);
  swap(enumcommandsvector_, other->enumcommandsvector_);
}

::google::protobuf::Metadata CameraStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rectangle::InitAsDefaultInstance() {
  ::kaapi::_Rectangle_default_instance_._instance.get_mutable()->topleft_ = const_cast< ::kaapi::Point*>(
      ::kaapi::Point::internal_default_instance());
}
class Rectangle::HasBitSetters {
 public:
  static const ::kaapi::Point& topleft(const Rectangle* msg);
};

const ::kaapi::Point&
Rectangle::HasBitSetters::topleft(const Rectangle* msg) {
  return *msg->topleft_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rectangle::kTopLeftFieldNumber;
const int Rectangle::kWidthFieldNumber;
const int Rectangle::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rectangle::Rectangle()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.Rectangle)
}
Rectangle::Rectangle(const Rectangle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_topleft()) {
    topleft_ = new ::kaapi::Point(*from.topleft_);
  } else {
    topleft_ = nullptr;
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:kaapi.Rectangle)
}

void Rectangle::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rectangle_KardelenAPI_2eproto.base);
  ::memset(&topleft_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&topleft_)) + sizeof(height_));
}

Rectangle::~Rectangle() {
  // @@protoc_insertion_point(destructor:kaapi.Rectangle)
  SharedDtor();
}

void Rectangle::SharedDtor() {
  if (this != internal_default_instance()) delete topleft_;
}

void Rectangle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rectangle& Rectangle::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rectangle_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void Rectangle::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.Rectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && topleft_ != nullptr) {
    delete topleft_;
  }
  topleft_ = nullptr;
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rectangle::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rectangle*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .kaapi.Point topLeft = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::Point::_InternalParse;
        object = msg->mutable_topleft();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 width = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_width(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 height = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_height(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rectangle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.Rectangle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kaapi.Point topLeft = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_topleft()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.Rectangle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.Rectangle)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rectangle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.Rectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.Point topLeft = 1;
  if (this->has_topleft()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::topleft(this), output);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.Rectangle)
}

::google::protobuf::uint8* Rectangle::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.Rectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.Point topLeft = 1;
  if (this->has_topleft()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::topleft(this), target);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.Rectangle)
  return target;
}

size_t Rectangle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.Rectangle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kaapi.Point topLeft = 1;
  if (this->has_topleft()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *topleft_);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rectangle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.Rectangle)
  GOOGLE_DCHECK_NE(&from, this);
  const Rectangle* source =
      ::google::protobuf::DynamicCastToGenerated<Rectangle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.Rectangle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.Rectangle)
    MergeFrom(*source);
  }
}

void Rectangle::MergeFrom(const Rectangle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.Rectangle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_topleft()) {
    mutable_topleft()->::kaapi::Point::MergeFrom(from.topleft());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void Rectangle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.Rectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rectangle::CopyFrom(const Rectangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.Rectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rectangle::IsInitialized() const {
  return true;
}

void Rectangle::Swap(Rectangle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rectangle::InternalSwap(Rectangle* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(topleft_, other->topleft_);
  swap(width_, other->width_);
  swap(height_, other->height_);
}

::google::protobuf::Metadata Rectangle::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Point::InitAsDefaultInstance() {
}
class Point::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kXFieldNumber;
const int Point::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:kaapi.Point)
}

void Point::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:kaapi.Point)
  SharedDtor();
}

void Point::SharedDtor() {
}

void Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Point& Point::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Point_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Point::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Point*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_x(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float y = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_y(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.Point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.Point)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.Point)
}

::google::protobuf::uint8* Point::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.Point)
  return target;
}

size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Point* source =
      ::google::protobuf::DynamicCastToGenerated<Point>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.Point)
    MergeFrom(*source);
  }
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(x_, other->x_);
  swap(y_, other->y_);
}

::google::protobuf::Metadata Point::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Polygon::InitAsDefaultInstance() {
}
class Polygon::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Polygon::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Polygon::Polygon()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.Polygon)
}
Polygon::Polygon(const Polygon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kaapi.Polygon)
}

void Polygon::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Polygon_KardelenAPI_2eproto.base);
}

Polygon::~Polygon() {
  // @@protoc_insertion_point(destructor:kaapi.Polygon)
  SharedDtor();
}

void Polygon::SharedDtor() {
}

void Polygon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Polygon& Polygon::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Polygon_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void Polygon::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Polygon::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Polygon*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .kaapi.Point points = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::kaapi::Point::_InternalParse;
          object = msg->add_points();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Polygon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.Polygon)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .kaapi.Point points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.Polygon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.Polygon)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Polygon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kaapi.Point points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->points(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.Polygon)
}

::google::protobuf::uint8* Polygon::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kaapi.Point points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->points(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.Polygon)
  return target;
}

size_t Polygon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.Polygon)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kaapi.Point points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Polygon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  const Polygon* source =
      ::google::protobuf::DynamicCastToGenerated<Polygon>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.Polygon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.Polygon)
    MergeFrom(*source);
  }
}

void Polygon::MergeFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
}

void Polygon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Polygon::CopyFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Polygon::IsInitialized() const {
  return true;
}

void Polygon::Swap(Polygon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Polygon::InternalSwap(Polygon* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&points_)->InternalSwap(CastToBase(&other->points_));
}

::google::protobuf::Metadata Polygon::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ROI::InitAsDefaultInstance() {
}
class ROI::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ROI::kRoiCountFieldNumber;
const int ROI::kRegionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ROI::ROI()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.ROI)
}
ROI::ROI(const ROI& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      regions_(from.regions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roicount_ = from.roicount_;
  // @@protoc_insertion_point(copy_constructor:kaapi.ROI)
}

void ROI::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ROI_KardelenAPI_2eproto.base);
  roicount_ = 0;
}

ROI::~ROI() {
  // @@protoc_insertion_point(destructor:kaapi.ROI)
  SharedDtor();
}

void ROI::SharedDtor() {
}

void ROI::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROI& ROI::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ROI_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void ROI::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.ROI)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  regions_.Clear();
  roicount_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ROI::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ROI*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 roiCount = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_roicount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .kaapi.Polygon regions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::kaapi::Polygon::_InternalParse;
          object = msg->add_regions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ROI::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.ROI)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 roiCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roicount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kaapi.Polygon regions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_regions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.ROI)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.ROI)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ROI::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.ROI)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roiCount = 1;
  if (this->roicount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roicount(), output);
  }

  // repeated .kaapi.Polygon regions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->regions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->regions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.ROI)
}

::google::protobuf::uint8* ROI::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.ROI)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roiCount = 1;
  if (this->roicount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roicount(), target);
  }

  // repeated .kaapi.Polygon regions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->regions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->regions(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.ROI)
  return target;
}

size_t ROI::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.ROI)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kaapi.Polygon regions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->regions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->regions(static_cast<int>(i)));
    }
  }

  // int32 roiCount = 1;
  if (this->roicount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roicount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROI::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.ROI)
  GOOGLE_DCHECK_NE(&from, this);
  const ROI* source =
      ::google::protobuf::DynamicCastToGenerated<ROI>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.ROI)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.ROI)
    MergeFrom(*source);
  }
}

void ROI::MergeFrom(const ROI& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.ROI)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  regions_.MergeFrom(from.regions_);
  if (from.roicount() != 0) {
    set_roicount(from.roicount());
  }
}

void ROI::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.ROI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROI::CopyFrom(const ROI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.ROI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROI::IsInitialized() const {
  return true;
}

void ROI::Swap(ROI* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ROI::InternalSwap(ROI* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&regions_)->InternalSwap(CastToBase(&other->regions_));
  swap(roicount_, other->roicount_);
}

::google::protobuf::Metadata ROI::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Boresight::InitAsDefaultInstance() {
}
class Boresight::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Boresight::kD0FieldNumber;
const int Boresight::kD1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Boresight::Boresight()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.Boresight)
}
Boresight::Boresight(const Boresight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&d0_, &from.d0_,
    static_cast<size_t>(reinterpret_cast<char*>(&d1_) -
    reinterpret_cast<char*>(&d0_)) + sizeof(d1_));
  // @@protoc_insertion_point(copy_constructor:kaapi.Boresight)
}

void Boresight::SharedCtor() {
  ::memset(&d0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&d1_) -
      reinterpret_cast<char*>(&d0_)) + sizeof(d1_));
}

Boresight::~Boresight() {
  // @@protoc_insertion_point(destructor:kaapi.Boresight)
  SharedDtor();
}

void Boresight::SharedDtor() {
}

void Boresight::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Boresight& Boresight::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Boresight_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void Boresight::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.Boresight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&d0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&d1_) -
      reinterpret_cast<char*>(&d0_)) + sizeof(d1_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Boresight::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Boresight*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 d0 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_d0(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 d1 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_d1(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Boresight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.Boresight)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 d0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &d0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 d1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &d1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.Boresight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.Boresight)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Boresight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.Boresight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 d0 = 1;
  if (this->d0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->d0(), output);
  }

  // int32 d1 = 2;
  if (this->d1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->d1(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.Boresight)
}

::google::protobuf::uint8* Boresight::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.Boresight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 d0 = 1;
  if (this->d0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->d0(), target);
  }

  // int32 d1 = 2;
  if (this->d1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->d1(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.Boresight)
  return target;
}

size_t Boresight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.Boresight)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 d0 = 1;
  if (this->d0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->d0());
  }

  // int32 d1 = 2;
  if (this->d1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->d1());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Boresight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.Boresight)
  GOOGLE_DCHECK_NE(&from, this);
  const Boresight* source =
      ::google::protobuf::DynamicCastToGenerated<Boresight>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.Boresight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.Boresight)
    MergeFrom(*source);
  }
}

void Boresight::MergeFrom(const Boresight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.Boresight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.d0() != 0) {
    set_d0(from.d0());
  }
  if (from.d1() != 0) {
    set_d1(from.d1());
  }
}

void Boresight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.Boresight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Boresight::CopyFrom(const Boresight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.Boresight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Boresight::IsInitialized() const {
  return true;
}

void Boresight::Swap(Boresight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Boresight::InternalSwap(Boresight* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(d0_, other->d0_);
  swap(d1_, other->d1_);
}

::google::protobuf::Metadata Boresight::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Calibration::InitAsDefaultInstance() {
}
class Calibration::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Calibration::kD0FieldNumber;
const int Calibration::kD1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Calibration::Calibration()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.Calibration)
}
Calibration::Calibration(const Calibration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&d0_, &from.d0_,
    static_cast<size_t>(reinterpret_cast<char*>(&d1_) -
    reinterpret_cast<char*>(&d0_)) + sizeof(d1_));
  // @@protoc_insertion_point(copy_constructor:kaapi.Calibration)
}

void Calibration::SharedCtor() {
  ::memset(&d0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&d1_) -
      reinterpret_cast<char*>(&d0_)) + sizeof(d1_));
}

Calibration::~Calibration() {
  // @@protoc_insertion_point(destructor:kaapi.Calibration)
  SharedDtor();
}

void Calibration::SharedDtor() {
}

void Calibration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Calibration& Calibration::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Calibration_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void Calibration::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.Calibration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&d0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&d1_) -
      reinterpret_cast<char*>(&d0_)) + sizeof(d1_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Calibration::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Calibration*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double d0 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_d0(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double d1 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_d1(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Calibration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.Calibration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double d0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &d0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double d1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &d1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.Calibration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.Calibration)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Calibration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.Calibration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double d0 = 1;
  if (this->d0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->d0(), output);
  }

  // double d1 = 2;
  if (this->d1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->d1(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.Calibration)
}

::google::protobuf::uint8* Calibration::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.Calibration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double d0 = 1;
  if (this->d0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->d0(), target);
  }

  // double d1 = 2;
  if (this->d1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->d1(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.Calibration)
  return target;
}

size_t Calibration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.Calibration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double d0 = 1;
  if (this->d0() != 0) {
    total_size += 1 + 8;
  }

  // double d1 = 2;
  if (this->d1() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Calibration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.Calibration)
  GOOGLE_DCHECK_NE(&from, this);
  const Calibration* source =
      ::google::protobuf::DynamicCastToGenerated<Calibration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.Calibration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.Calibration)
    MergeFrom(*source);
  }
}

void Calibration::MergeFrom(const Calibration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.Calibration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.d0() != 0) {
    set_d0(from.d0());
  }
  if (from.d1() != 0) {
    set_d1(from.d1());
  }
}

void Calibration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.Calibration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Calibration::CopyFrom(const Calibration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.Calibration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Calibration::IsInitialized() const {
  return true;
}

void Calibration::Swap(Calibration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Calibration::InternalSwap(Calibration* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(d0_, other->d0_);
  swap(d1_, other->d1_);
}

::google::protobuf::Metadata Calibration::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NumericParameter::InitAsDefaultInstance() {
}
class NumericParameter::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NumericParameter::kValueFieldNumber;
const int NumericParameter::kByte0FieldNumber;
const int NumericParameter::kByte1FieldNumber;
const int NumericParameter::kByte2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NumericParameter::NumericParameter()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.NumericParameter)
}
NumericParameter::NumericParameter(const NumericParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&byte2_) -
    reinterpret_cast<char*>(&value_)) + sizeof(byte2_));
  // @@protoc_insertion_point(copy_constructor:kaapi.NumericParameter)
}

void NumericParameter::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte2_) -
      reinterpret_cast<char*>(&value_)) + sizeof(byte2_));
}

NumericParameter::~NumericParameter() {
  // @@protoc_insertion_point(destructor:kaapi.NumericParameter)
  SharedDtor();
}

void NumericParameter::SharedDtor() {
}

void NumericParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NumericParameter& NumericParameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NumericParameter_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void NumericParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.NumericParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&byte2_) -
      reinterpret_cast<char*>(&value_)) + sizeof(byte2_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NumericParameter::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NumericParameter*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_value(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // int32 byte0 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_byte0(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 byte1 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_byte1(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 byte2 = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_byte2(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NumericParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.NumericParameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 byte0 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &byte0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 byte1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &byte1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 byte2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &byte2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.NumericParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.NumericParameter)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NumericParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.NumericParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->value(), output);
  }

  // int32 byte0 = 2;
  if (this->byte0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->byte0(), output);
  }

  // int32 byte1 = 3;
  if (this->byte1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->byte1(), output);
  }

  // int32 byte2 = 4;
  if (this->byte2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->byte2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.NumericParameter)
}

::google::protobuf::uint8* NumericParameter::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.NumericParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->value(), target);
  }

  // int32 byte0 = 2;
  if (this->byte0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->byte0(), target);
  }

  // int32 byte1 = 3;
  if (this->byte1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->byte1(), target);
  }

  // int32 byte2 = 4;
  if (this->byte2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->byte2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.NumericParameter)
  return target;
}

size_t NumericParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.NumericParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double value = 1;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  // int32 byte0 = 2;
  if (this->byte0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->byte0());
  }

  // int32 byte1 = 3;
  if (this->byte1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->byte1());
  }

  // int32 byte2 = 4;
  if (this->byte2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->byte2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NumericParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.NumericParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const NumericParameter* source =
      ::google::protobuf::DynamicCastToGenerated<NumericParameter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.NumericParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.NumericParameter)
    MergeFrom(*source);
  }
}

void NumericParameter::MergeFrom(const NumericParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.NumericParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.byte0() != 0) {
    set_byte0(from.byte0());
  }
  if (from.byte1() != 0) {
    set_byte1(from.byte1());
  }
  if (from.byte2() != 0) {
    set_byte2(from.byte2());
  }
}

void NumericParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.NumericParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumericParameter::CopyFrom(const NumericParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.NumericParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumericParameter::IsInitialized() const {
  return true;
}

void NumericParameter::Swap(NumericParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NumericParameter::InternalSwap(NumericParameter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(byte0_, other->byte0_);
  swap(byte1_, other->byte1_);
  swap(byte2_, other->byte2_);
}

::google::protobuf::Metadata NumericParameter::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RelativeMoveParameters::InitAsDefaultInstance() {
}
class RelativeMoveParameters::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RelativeMoveParameters::kPanSpeedFieldNumber;
const int RelativeMoveParameters::kTiltSpeedFieldNumber;
const int RelativeMoveParameters::kZoomSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RelativeMoveParameters::RelativeMoveParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.RelativeMoveParameters)
}
RelativeMoveParameters::RelativeMoveParameters(const RelativeMoveParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&panspeed_, &from.panspeed_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoomspeed_) -
    reinterpret_cast<char*>(&panspeed_)) + sizeof(zoomspeed_));
  // @@protoc_insertion_point(copy_constructor:kaapi.RelativeMoveParameters)
}

void RelativeMoveParameters::SharedCtor() {
  ::memset(&panspeed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoomspeed_) -
      reinterpret_cast<char*>(&panspeed_)) + sizeof(zoomspeed_));
}

RelativeMoveParameters::~RelativeMoveParameters() {
  // @@protoc_insertion_point(destructor:kaapi.RelativeMoveParameters)
  SharedDtor();
}

void RelativeMoveParameters::SharedDtor() {
}

void RelativeMoveParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RelativeMoveParameters& RelativeMoveParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RelativeMoveParameters_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void RelativeMoveParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.RelativeMoveParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&panspeed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoomspeed_) -
      reinterpret_cast<char*>(&panspeed_)) + sizeof(zoomspeed_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RelativeMoveParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RelativeMoveParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float panSpeed = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_panspeed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float tiltSpeed = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_tiltspeed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float zoomSpeed = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_zoomspeed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RelativeMoveParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.RelativeMoveParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float panSpeed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &panspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float tiltSpeed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tiltspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float zoomSpeed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zoomspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.RelativeMoveParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.RelativeMoveParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RelativeMoveParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.RelativeMoveParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float panSpeed = 1;
  if (this->panspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->panspeed(), output);
  }

  // float tiltSpeed = 2;
  if (this->tiltspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->tiltspeed(), output);
  }

  // float zoomSpeed = 3;
  if (this->zoomspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->zoomspeed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.RelativeMoveParameters)
}

::google::protobuf::uint8* RelativeMoveParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.RelativeMoveParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float panSpeed = 1;
  if (this->panspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->panspeed(), target);
  }

  // float tiltSpeed = 2;
  if (this->tiltspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->tiltspeed(), target);
  }

  // float zoomSpeed = 3;
  if (this->zoomspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->zoomspeed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.RelativeMoveParameters)
  return target;
}

size_t RelativeMoveParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.RelativeMoveParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float panSpeed = 1;
  if (this->panspeed() != 0) {
    total_size += 1 + 4;
  }

  // float tiltSpeed = 2;
  if (this->tiltspeed() != 0) {
    total_size += 1 + 4;
  }

  // float zoomSpeed = 3;
  if (this->zoomspeed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelativeMoveParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.RelativeMoveParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const RelativeMoveParameters* source =
      ::google::protobuf::DynamicCastToGenerated<RelativeMoveParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.RelativeMoveParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.RelativeMoveParameters)
    MergeFrom(*source);
  }
}

void RelativeMoveParameters::MergeFrom(const RelativeMoveParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.RelativeMoveParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.panspeed() != 0) {
    set_panspeed(from.panspeed());
  }
  if (from.tiltspeed() != 0) {
    set_tiltspeed(from.tiltspeed());
  }
  if (from.zoomspeed() != 0) {
    set_zoomspeed(from.zoomspeed());
  }
}

void RelativeMoveParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.RelativeMoveParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelativeMoveParameters::CopyFrom(const RelativeMoveParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.RelativeMoveParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelativeMoveParameters::IsInitialized() const {
  return true;
}

void RelativeMoveParameters::Swap(RelativeMoveParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RelativeMoveParameters::InternalSwap(RelativeMoveParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(panspeed_, other->panspeed_);
  swap(tiltspeed_, other->tiltspeed_);
  swap(zoomspeed_, other->zoomspeed_);
}

::google::protobuf::Metadata RelativeMoveParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RelativeMoveResult::InitAsDefaultInstance() {
  ::kaapi::_RelativeMoveResult_default_instance_._instance.get_mutable()->posinfo_ = const_cast< ::kaapi::PosInfo*>(
      ::kaapi::PosInfo::internal_default_instance());
}
class RelativeMoveResult::HasBitSetters {
 public:
  static const ::kaapi::PosInfo& posinfo(const RelativeMoveResult* msg);
};

const ::kaapi::PosInfo&
RelativeMoveResult::HasBitSetters::posinfo(const RelativeMoveResult* msg) {
  return *msg->posinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RelativeMoveResult::kPosInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RelativeMoveResult::RelativeMoveResult()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.RelativeMoveResult)
}
RelativeMoveResult::RelativeMoveResult(const RelativeMoveResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_posinfo()) {
    posinfo_ = new ::kaapi::PosInfo(*from.posinfo_);
  } else {
    posinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kaapi.RelativeMoveResult)
}

void RelativeMoveResult::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RelativeMoveResult_KardelenAPI_2eproto.base);
  posinfo_ = nullptr;
}

RelativeMoveResult::~RelativeMoveResult() {
  // @@protoc_insertion_point(destructor:kaapi.RelativeMoveResult)
  SharedDtor();
}

void RelativeMoveResult::SharedDtor() {
  if (this != internal_default_instance()) delete posinfo_;
}

void RelativeMoveResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RelativeMoveResult& RelativeMoveResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RelativeMoveResult_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void RelativeMoveResult::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.RelativeMoveResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && posinfo_ != nullptr) {
    delete posinfo_;
  }
  posinfo_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RelativeMoveResult::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RelativeMoveResult*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .kaapi.PosInfo posInfo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::PosInfo::_InternalParse;
        object = msg->mutable_posinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RelativeMoveResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.RelativeMoveResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kaapi.PosInfo posInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_posinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.RelativeMoveResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.RelativeMoveResult)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RelativeMoveResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.RelativeMoveResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.PosInfo posInfo = 1;
  if (this->has_posinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::posinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.RelativeMoveResult)
}

::google::protobuf::uint8* RelativeMoveResult::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.RelativeMoveResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.PosInfo posInfo = 1;
  if (this->has_posinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::posinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.RelativeMoveResult)
  return target;
}

size_t RelativeMoveResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.RelativeMoveResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kaapi.PosInfo posInfo = 1;
  if (this->has_posinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *posinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelativeMoveResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.RelativeMoveResult)
  GOOGLE_DCHECK_NE(&from, this);
  const RelativeMoveResult* source =
      ::google::protobuf::DynamicCastToGenerated<RelativeMoveResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.RelativeMoveResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.RelativeMoveResult)
    MergeFrom(*source);
  }
}

void RelativeMoveResult::MergeFrom(const RelativeMoveResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.RelativeMoveResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_posinfo()) {
    mutable_posinfo()->::kaapi::PosInfo::MergeFrom(from.posinfo());
  }
}

void RelativeMoveResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.RelativeMoveResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelativeMoveResult::CopyFrom(const RelativeMoveResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.RelativeMoveResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelativeMoveResult::IsInitialized() const {
  return true;
}

void RelativeMoveResult::Swap(RelativeMoveResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RelativeMoveResult::InternalSwap(RelativeMoveResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(posinfo_, other->posinfo_);
}

::google::protobuf::Metadata RelativeMoveResult::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AbsoluteMoveParameters::InitAsDefaultInstance() {
}
class AbsoluteMoveParameters::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbsoluteMoveParameters::kPanPosFieldNumber;
const int AbsoluteMoveParameters::kTiltPosFieldNumber;
const int AbsoluteMoveParameters::kZoomPosFieldNumber;
const int AbsoluteMoveParameters::kPanSpeedFieldNumber;
const int AbsoluteMoveParameters::kTiltSpeedFieldNumber;
const int AbsoluteMoveParameters::kZoomSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbsoluteMoveParameters::AbsoluteMoveParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.AbsoluteMoveParameters)
}
AbsoluteMoveParameters::AbsoluteMoveParameters(const AbsoluteMoveParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&panpos_, &from.panpos_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoomspeed_) -
    reinterpret_cast<char*>(&panpos_)) + sizeof(zoomspeed_));
  // @@protoc_insertion_point(copy_constructor:kaapi.AbsoluteMoveParameters)
}

void AbsoluteMoveParameters::SharedCtor() {
  ::memset(&panpos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoomspeed_) -
      reinterpret_cast<char*>(&panpos_)) + sizeof(zoomspeed_));
}

AbsoluteMoveParameters::~AbsoluteMoveParameters() {
  // @@protoc_insertion_point(destructor:kaapi.AbsoluteMoveParameters)
  SharedDtor();
}

void AbsoluteMoveParameters::SharedDtor() {
}

void AbsoluteMoveParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AbsoluteMoveParameters& AbsoluteMoveParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AbsoluteMoveParameters_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void AbsoluteMoveParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.AbsoluteMoveParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&panpos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoomspeed_) -
      reinterpret_cast<char*>(&panpos_)) + sizeof(zoomspeed_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AbsoluteMoveParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AbsoluteMoveParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float panPos = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_panpos(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float tiltPos = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_tiltpos(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float zoomPos = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_zoompos(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float panSpeed = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        msg->set_panspeed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float tiltSpeed = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 45) goto handle_unusual;
        msg->set_tiltspeed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float zoomSpeed = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 53) goto handle_unusual;
        msg->set_zoomspeed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AbsoluteMoveParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.AbsoluteMoveParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float panPos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &panpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float tiltPos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tiltpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float zoomPos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zoompos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float panSpeed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &panspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float tiltSpeed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (45 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tiltspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float zoomSpeed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (53 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zoomspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.AbsoluteMoveParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.AbsoluteMoveParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AbsoluteMoveParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.AbsoluteMoveParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float panPos = 1;
  if (this->panpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->panpos(), output);
  }

  // float tiltPos = 2;
  if (this->tiltpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->tiltpos(), output);
  }

  // float zoomPos = 3;
  if (this->zoompos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->zoompos(), output);
  }

  // float panSpeed = 4;
  if (this->panspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->panspeed(), output);
  }

  // float tiltSpeed = 5;
  if (this->tiltspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->tiltspeed(), output);
  }

  // float zoomSpeed = 6;
  if (this->zoomspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->zoomspeed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.AbsoluteMoveParameters)
}

::google::protobuf::uint8* AbsoluteMoveParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.AbsoluteMoveParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float panPos = 1;
  if (this->panpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->panpos(), target);
  }

  // float tiltPos = 2;
  if (this->tiltpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->tiltpos(), target);
  }

  // float zoomPos = 3;
  if (this->zoompos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->zoompos(), target);
  }

  // float panSpeed = 4;
  if (this->panspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->panspeed(), target);
  }

  // float tiltSpeed = 5;
  if (this->tiltspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->tiltspeed(), target);
  }

  // float zoomSpeed = 6;
  if (this->zoomspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->zoomspeed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.AbsoluteMoveParameters)
  return target;
}

size_t AbsoluteMoveParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.AbsoluteMoveParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float panPos = 1;
  if (this->panpos() != 0) {
    total_size += 1 + 4;
  }

  // float tiltPos = 2;
  if (this->tiltpos() != 0) {
    total_size += 1 + 4;
  }

  // float zoomPos = 3;
  if (this->zoompos() != 0) {
    total_size += 1 + 4;
  }

  // float panSpeed = 4;
  if (this->panspeed() != 0) {
    total_size += 1 + 4;
  }

  // float tiltSpeed = 5;
  if (this->tiltspeed() != 0) {
    total_size += 1 + 4;
  }

  // float zoomSpeed = 6;
  if (this->zoomspeed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AbsoluteMoveParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.AbsoluteMoveParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AbsoluteMoveParameters* source =
      ::google::protobuf::DynamicCastToGenerated<AbsoluteMoveParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.AbsoluteMoveParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.AbsoluteMoveParameters)
    MergeFrom(*source);
  }
}

void AbsoluteMoveParameters::MergeFrom(const AbsoluteMoveParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.AbsoluteMoveParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.panpos() != 0) {
    set_panpos(from.panpos());
  }
  if (from.tiltpos() != 0) {
    set_tiltpos(from.tiltpos());
  }
  if (from.zoompos() != 0) {
    set_zoompos(from.zoompos());
  }
  if (from.panspeed() != 0) {
    set_panspeed(from.panspeed());
  }
  if (from.tiltspeed() != 0) {
    set_tiltspeed(from.tiltspeed());
  }
  if (from.zoomspeed() != 0) {
    set_zoomspeed(from.zoomspeed());
  }
}

void AbsoluteMoveParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.AbsoluteMoveParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbsoluteMoveParameters::CopyFrom(const AbsoluteMoveParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.AbsoluteMoveParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbsoluteMoveParameters::IsInitialized() const {
  return true;
}

void AbsoluteMoveParameters::Swap(AbsoluteMoveParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbsoluteMoveParameters::InternalSwap(AbsoluteMoveParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(panpos_, other->panpos_);
  swap(tiltpos_, other->tiltpos_);
  swap(zoompos_, other->zoompos_);
  swap(panspeed_, other->panspeed_);
  swap(tiltspeed_, other->tiltspeed_);
  swap(zoomspeed_, other->zoomspeed_);
}

::google::protobuf::Metadata AbsoluteMoveParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AbsoluteMoveResult::InitAsDefaultInstance() {
  ::kaapi::_AbsoluteMoveResult_default_instance_._instance.get_mutable()->posinfo_ = const_cast< ::kaapi::PosInfo*>(
      ::kaapi::PosInfo::internal_default_instance());
}
class AbsoluteMoveResult::HasBitSetters {
 public:
  static const ::kaapi::PosInfo& posinfo(const AbsoluteMoveResult* msg);
};

const ::kaapi::PosInfo&
AbsoluteMoveResult::HasBitSetters::posinfo(const AbsoluteMoveResult* msg) {
  return *msg->posinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbsoluteMoveResult::kCompletionStatusFieldNumber;
const int AbsoluteMoveResult::kPosInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbsoluteMoveResult::AbsoluteMoveResult()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.AbsoluteMoveResult)
}
AbsoluteMoveResult::AbsoluteMoveResult(const AbsoluteMoveResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_posinfo()) {
    posinfo_ = new ::kaapi::PosInfo(*from.posinfo_);
  } else {
    posinfo_ = nullptr;
  }
  completionstatus_ = from.completionstatus_;
  // @@protoc_insertion_point(copy_constructor:kaapi.AbsoluteMoveResult)
}

void AbsoluteMoveResult::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AbsoluteMoveResult_KardelenAPI_2eproto.base);
  ::memset(&posinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&completionstatus_) -
      reinterpret_cast<char*>(&posinfo_)) + sizeof(completionstatus_));
}

AbsoluteMoveResult::~AbsoluteMoveResult() {
  // @@protoc_insertion_point(destructor:kaapi.AbsoluteMoveResult)
  SharedDtor();
}

void AbsoluteMoveResult::SharedDtor() {
  if (this != internal_default_instance()) delete posinfo_;
}

void AbsoluteMoveResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AbsoluteMoveResult& AbsoluteMoveResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AbsoluteMoveResult_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void AbsoluteMoveResult::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.AbsoluteMoveResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && posinfo_ != nullptr) {
    delete posinfo_;
  }
  posinfo_ = nullptr;
  completionstatus_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AbsoluteMoveResult::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AbsoluteMoveResult*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .kaapi.AbsoluteMoveResult.Completion completionStatus = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_completionstatus(static_cast<::kaapi::AbsoluteMoveResult_Completion>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .kaapi.PosInfo posInfo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::kaapi::PosInfo::_InternalParse;
        object = msg->mutable_posinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AbsoluteMoveResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.AbsoluteMoveResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kaapi.AbsoluteMoveResult.Completion completionStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_completionstatus(static_cast< ::kaapi::AbsoluteMoveResult_Completion >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kaapi.PosInfo posInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_posinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.AbsoluteMoveResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.AbsoluteMoveResult)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AbsoluteMoveResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.AbsoluteMoveResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.AbsoluteMoveResult.Completion completionStatus = 1;
  if (this->completionstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->completionstatus(), output);
  }

  // .kaapi.PosInfo posInfo = 2;
  if (this->has_posinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::posinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.AbsoluteMoveResult)
}

::google::protobuf::uint8* AbsoluteMoveResult::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.AbsoluteMoveResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kaapi.AbsoluteMoveResult.Completion completionStatus = 1;
  if (this->completionstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->completionstatus(), target);
  }

  // .kaapi.PosInfo posInfo = 2;
  if (this->has_posinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::posinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.AbsoluteMoveResult)
  return target;
}

size_t AbsoluteMoveResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.AbsoluteMoveResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kaapi.PosInfo posInfo = 2;
  if (this->has_posinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *posinfo_);
  }

  // .kaapi.AbsoluteMoveResult.Completion completionStatus = 1;
  if (this->completionstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->completionstatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AbsoluteMoveResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.AbsoluteMoveResult)
  GOOGLE_DCHECK_NE(&from, this);
  const AbsoluteMoveResult* source =
      ::google::protobuf::DynamicCastToGenerated<AbsoluteMoveResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.AbsoluteMoveResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.AbsoluteMoveResult)
    MergeFrom(*source);
  }
}

void AbsoluteMoveResult::MergeFrom(const AbsoluteMoveResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.AbsoluteMoveResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_posinfo()) {
    mutable_posinfo()->::kaapi::PosInfo::MergeFrom(from.posinfo());
  }
  if (from.completionstatus() != 0) {
    set_completionstatus(from.completionstatus());
  }
}

void AbsoluteMoveResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.AbsoluteMoveResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbsoluteMoveResult::CopyFrom(const AbsoluteMoveResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.AbsoluteMoveResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbsoluteMoveResult::IsInitialized() const {
  return true;
}

void AbsoluteMoveResult::Swap(AbsoluteMoveResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbsoluteMoveResult::InternalSwap(AbsoluteMoveResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(posinfo_, other->posinfo_);
  swap(completionstatus_, other->completionstatus_);
}

::google::protobuf::Metadata AbsoluteMoveResult::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PosInfo::InitAsDefaultInstance() {
}
class PosInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PosInfo::kPanPosFieldNumber;
const int PosInfo::kTiltPosFieldNumber;
const int PosInfo::kZoomPosFieldNumber;
const int PosInfo::kFovhFieldNumber;
const int PosInfo::kFovvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PosInfo::PosInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kaapi.PosInfo)
}
PosInfo::PosInfo(const PosInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&panpos_, &from.panpos_,
    static_cast<size_t>(reinterpret_cast<char*>(&fovv_) -
    reinterpret_cast<char*>(&panpos_)) + sizeof(fovv_));
  // @@protoc_insertion_point(copy_constructor:kaapi.PosInfo)
}

void PosInfo::SharedCtor() {
  ::memset(&panpos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fovv_) -
      reinterpret_cast<char*>(&panpos_)) + sizeof(fovv_));
}

PosInfo::~PosInfo() {
  // @@protoc_insertion_point(destructor:kaapi.PosInfo)
  SharedDtor();
}

void PosInfo::SharedDtor() {
}

void PosInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PosInfo& PosInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PosInfo_KardelenAPI_2eproto.base);
  return *internal_default_instance();
}


void PosInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:kaapi.PosInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&panpos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fovv_) -
      reinterpret_cast<char*>(&panpos_)) + sizeof(fovv_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PosInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PosInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float panPos = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_panpos(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float tiltPos = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_tiltpos(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float zoomPos = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_zoompos(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float fovh = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        msg->set_fovh(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float fovv = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 45) goto handle_unusual;
        msg->set_fovv(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PosInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kaapi.PosInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float panPos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &panpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float tiltPos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tiltpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float zoomPos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zoompos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fovh = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fovh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fovv = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (45 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fovv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kaapi.PosInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kaapi.PosInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PosInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kaapi.PosInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float panPos = 1;
  if (this->panpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->panpos(), output);
  }

  // float tiltPos = 2;
  if (this->tiltpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->tiltpos(), output);
  }

  // float zoomPos = 3;
  if (this->zoompos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->zoompos(), output);
  }

  // float fovh = 4;
  if (this->fovh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->fovh(), output);
  }

  // float fovv = 5;
  if (this->fovv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->fovv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kaapi.PosInfo)
}

::google::protobuf::uint8* PosInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kaapi.PosInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float panPos = 1;
  if (this->panpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->panpos(), target);
  }

  // float tiltPos = 2;
  if (this->tiltpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->tiltpos(), target);
  }

  // float zoomPos = 3;
  if (this->zoompos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->zoompos(), target);
  }

  // float fovh = 4;
  if (this->fovh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->fovh(), target);
  }

  // float fovv = 5;
  if (this->fovv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->fovv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kaapi.PosInfo)
  return target;
}

size_t PosInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kaapi.PosInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float panPos = 1;
  if (this->panpos() != 0) {
    total_size += 1 + 4;
  }

  // float tiltPos = 2;
  if (this->tiltpos() != 0) {
    total_size += 1 + 4;
  }

  // float zoomPos = 3;
  if (this->zoompos() != 0) {
    total_size += 1 + 4;
  }

  // float fovh = 4;
  if (this->fovh() != 0) {
    total_size += 1 + 4;
  }

  // float fovv = 5;
  if (this->fovv() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PosInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kaapi.PosInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PosInfo* source =
      ::google::protobuf::DynamicCastToGenerated<PosInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kaapi.PosInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kaapi.PosInfo)
    MergeFrom(*source);
  }
}

void PosInfo::MergeFrom(const PosInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kaapi.PosInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.panpos() != 0) {
    set_panpos(from.panpos());
  }
  if (from.tiltpos() != 0) {
    set_tiltpos(from.tiltpos());
  }
  if (from.zoompos() != 0) {
    set_zoompos(from.zoompos());
  }
  if (from.fovh() != 0) {
    set_fovh(from.fovh());
  }
  if (from.fovv() != 0) {
    set_fovv(from.fovv());
  }
}

void PosInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kaapi.PosInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PosInfo::CopyFrom(const PosInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kaapi.PosInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PosInfo::IsInitialized() const {
  return true;
}

void PosInfo::Swap(PosInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PosInfo::InternalSwap(PosInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(panpos_, other->panpos_);
  swap(tiltpos_, other->tiltpos_);
  swap(zoompos_, other->zoompos_);
  swap(fovh_, other->fovh_);
  swap(fovv_, other->fovv_);
}

::google::protobuf::Metadata PosInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_KardelenAPI_2eproto);
  return ::file_level_metadata_KardelenAPI_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace kaapi
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::kaapi::LocationInformation* Arena::CreateMaybeMessage< ::kaapi::LocationInformation >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::LocationInformation >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::ListOfLocationInformation* Arena::CreateMaybeMessage< ::kaapi::ListOfLocationInformation >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::ListOfLocationInformation >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::CalibrationRequest* Arena::CreateMaybeMessage< ::kaapi::CalibrationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::CalibrationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::MotionROIRequest* Arena::CreateMaybeMessage< ::kaapi::MotionROIRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::MotionROIRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::ApiVersion* Arena::CreateMaybeMessage< ::kaapi::ApiVersion >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::ApiVersion >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::ClickParameter* Arena::CreateMaybeMessage< ::kaapi::ClickParameter >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::ClickParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::GetNumericParameterRequest* Arena::CreateMaybeMessage< ::kaapi::GetNumericParameterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::GetNumericParameterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::GetNumericParameterResponse* Arena::CreateMaybeMessage< ::kaapi::GetNumericParameterResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::GetNumericParameterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::GetEnumParameterRequest* Arena::CreateMaybeMessage< ::kaapi::GetEnumParameterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::GetEnumParameterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::GetEnumParameterResponse* Arena::CreateMaybeMessage< ::kaapi::GetEnumParameterResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::GetEnumParameterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::SetNumericParameterRequest* Arena::CreateMaybeMessage< ::kaapi::SetNumericParameterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::SetNumericParameterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::SetNumericParameterResponse* Arena::CreateMaybeMessage< ::kaapi::SetNumericParameterResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::SetNumericParameterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::SetEnumParameterRequest* Arena::CreateMaybeMessage< ::kaapi::SetEnumParameterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::SetEnumParameterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::SetEnumParameterResponse* Arena::CreateMaybeMessage< ::kaapi::SetEnumParameterResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::SetEnumParameterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::SetEnumCommandRequest* Arena::CreateMaybeMessage< ::kaapi::SetEnumCommandRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::SetEnumCommandRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::SetEnumCommandResponse* Arena::CreateMaybeMessage< ::kaapi::SetEnumCommandResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::SetEnumCommandResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::SetCameraRequest* Arena::CreateMaybeMessage< ::kaapi::SetCameraRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::SetCameraRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::SetCameraResponse* Arena::CreateMaybeMessage< ::kaapi::SetCameraResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::SetCameraResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::CommWrite* Arena::CreateMaybeMessage< ::kaapi::CommWrite >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::CommWrite >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::CommRead* Arena::CreateMaybeMessage< ::kaapi::CommRead >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::CommRead >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::UpdateCameraStatusParameters* Arena::CreateMaybeMessage< ::kaapi::UpdateCameraStatusParameters >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::UpdateCameraStatusParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::GetCameraStatusParameters* Arena::CreateMaybeMessage< ::kaapi::GetCameraStatusParameters >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::GetCameraStatusParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::CameraStatus* Arena::CreateMaybeMessage< ::kaapi::CameraStatus >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::CameraStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::Rectangle* Arena::CreateMaybeMessage< ::kaapi::Rectangle >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::Rectangle >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::Point* Arena::CreateMaybeMessage< ::kaapi::Point >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::Point >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::Polygon* Arena::CreateMaybeMessage< ::kaapi::Polygon >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::Polygon >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::ROI* Arena::CreateMaybeMessage< ::kaapi::ROI >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::ROI >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::Boresight* Arena::CreateMaybeMessage< ::kaapi::Boresight >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::Boresight >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::Calibration* Arena::CreateMaybeMessage< ::kaapi::Calibration >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::Calibration >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::NumericParameter* Arena::CreateMaybeMessage< ::kaapi::NumericParameter >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::NumericParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::RelativeMoveParameters* Arena::CreateMaybeMessage< ::kaapi::RelativeMoveParameters >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::RelativeMoveParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::RelativeMoveResult* Arena::CreateMaybeMessage< ::kaapi::RelativeMoveResult >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::RelativeMoveResult >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::AbsoluteMoveParameters* Arena::CreateMaybeMessage< ::kaapi::AbsoluteMoveParameters >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::AbsoluteMoveParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::AbsoluteMoveResult* Arena::CreateMaybeMessage< ::kaapi::AbsoluteMoveResult >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::AbsoluteMoveResult >(arena);
}
template<> PROTOBUF_NOINLINE ::kaapi::PosInfo* Arena::CreateMaybeMessage< ::kaapi::PosInfo >(Arena* arena) {
  return Arena::CreateInternal< ::kaapi::PosInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
