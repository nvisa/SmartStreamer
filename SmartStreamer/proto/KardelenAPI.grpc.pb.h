// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: KardelenAPI.proto
#ifndef GRPC_KardelenAPI_2eproto__INCLUDED
#define GRPC_KardelenAPI_2eproto__INCLUDED

#include "KardelenAPI.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace kaapi {

class CameraService final {
 public:
  static constexpr char const* service_full_name() {
    return "kaapi.CameraService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetPosition(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::kaapi::PosInfo* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::PosInfo>> AsyncGetPosition(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::PosInfo>>(AsyncGetPositionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::PosInfo>> PrepareAsyncGetPosition(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::PosInfo>>(PrepareAsyncGetPositionRaw(context, request, cq));
    }
    virtual ::grpc::Status MoveAbsolute(::grpc::ClientContext* context, const ::kaapi::AbsoluteMoveParameters& request, ::kaapi::AbsoluteMoveResult* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::AbsoluteMoveResult>> AsyncMoveAbsolute(::grpc::ClientContext* context, const ::kaapi::AbsoluteMoveParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::AbsoluteMoveResult>>(AsyncMoveAbsoluteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::AbsoluteMoveResult>> PrepareAsyncMoveAbsolute(::grpc::ClientContext* context, const ::kaapi::AbsoluteMoveParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::AbsoluteMoveResult>>(PrepareAsyncMoveAbsoluteRaw(context, request, cq));
    }
    virtual ::grpc::Status MoveRelative(::grpc::ClientContext* context, const ::kaapi::RelativeMoveParameters& request, ::kaapi::RelativeMoveResult* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::RelativeMoveResult>> AsyncMoveRelative(::grpc::ClientContext* context, const ::kaapi::RelativeMoveParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::RelativeMoveResult>>(AsyncMoveRelativeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::RelativeMoveResult>> PrepareAsyncMoveRelative(::grpc::ClientContext* context, const ::kaapi::RelativeMoveParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::RelativeMoveResult>>(PrepareAsyncMoveRelativeRaw(context, request, cq));
    }
    virtual ::grpc::Status GetCameraStatus(::grpc::ClientContext* context, const ::kaapi::GetCameraStatusParameters& request, ::kaapi::CameraStatus* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::CameraStatus>> AsyncGetCameraStatus(::grpc::ClientContext* context, const ::kaapi::GetCameraStatusParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::CameraStatus>>(AsyncGetCameraStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::CameraStatus>> PrepareAsyncGetCameraStatus(::grpc::ClientContext* context, const ::kaapi::GetCameraStatusParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::CameraStatus>>(PrepareAsyncGetCameraStatusRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateCameraStatus(::grpc::ClientContext* context, const ::kaapi::UpdateCameraStatusParameters& request, ::kaapi::CameraStatus* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::CameraStatus>> AsyncUpdateCameraStatus(::grpc::ClientContext* context, const ::kaapi::UpdateCameraStatusParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::CameraStatus>>(AsyncUpdateCameraStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::CameraStatus>> PrepareAsyncUpdateCameraStatus(::grpc::ClientContext* context, const ::kaapi::UpdateCameraStatusParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::CameraStatus>>(PrepareAsyncUpdateCameraStatusRaw(context, request, cq));
    }
    virtual ::grpc::Status SetCamera(::grpc::ClientContext* context, const ::kaapi::SetCameraRequest& request, ::kaapi::SetCameraResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetCameraResponse>> AsyncSetCamera(::grpc::ClientContext* context, const ::kaapi::SetCameraRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetCameraResponse>>(AsyncSetCameraRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetCameraResponse>> PrepareAsyncSetCamera(::grpc::ClientContext* context, const ::kaapi::SetCameraRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetCameraResponse>>(PrepareAsyncSetCameraRaw(context, request, cq));
    }
    virtual ::grpc::Status GetNumericParameter(::grpc::ClientContext* context, const ::kaapi::GetNumericParameterRequest& request, ::kaapi::GetNumericParameterResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::GetNumericParameterResponse>> AsyncGetNumericParameter(::grpc::ClientContext* context, const ::kaapi::GetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::GetNumericParameterResponse>>(AsyncGetNumericParameterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::GetNumericParameterResponse>> PrepareAsyncGetNumericParameter(::grpc::ClientContext* context, const ::kaapi::GetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::GetNumericParameterResponse>>(PrepareAsyncGetNumericParameterRaw(context, request, cq));
    }
    virtual ::grpc::Status GetEnumParameter(::grpc::ClientContext* context, const ::kaapi::GetEnumParameterRequest& request, ::kaapi::GetEnumParameterResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::GetEnumParameterResponse>> AsyncGetEnumParameter(::grpc::ClientContext* context, const ::kaapi::GetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::GetEnumParameterResponse>>(AsyncGetEnumParameterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::GetEnumParameterResponse>> PrepareAsyncGetEnumParameter(::grpc::ClientContext* context, const ::kaapi::GetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::GetEnumParameterResponse>>(PrepareAsyncGetEnumParameterRaw(context, request, cq));
    }
    virtual ::grpc::Status SetNumericParameter(::grpc::ClientContext* context, const ::kaapi::SetNumericParameterRequest& request, ::kaapi::SetNumericParameterResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetNumericParameterResponse>> AsyncSetNumericParameter(::grpc::ClientContext* context, const ::kaapi::SetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetNumericParameterResponse>>(AsyncSetNumericParameterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetNumericParameterResponse>> PrepareAsyncSetNumericParameter(::grpc::ClientContext* context, const ::kaapi::SetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetNumericParameterResponse>>(PrepareAsyncSetNumericParameterRaw(context, request, cq));
    }
    virtual ::grpc::Status SetEnumParameter(::grpc::ClientContext* context, const ::kaapi::SetEnumParameterRequest& request, ::kaapi::SetEnumParameterResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetEnumParameterResponse>> AsyncSetEnumParameter(::grpc::ClientContext* context, const ::kaapi::SetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetEnumParameterResponse>>(AsyncSetEnumParameterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetEnumParameterResponse>> PrepareAsyncSetEnumParameter(::grpc::ClientContext* context, const ::kaapi::SetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetEnumParameterResponse>>(PrepareAsyncSetEnumParameterRaw(context, request, cq));
    }
    virtual ::grpc::Status SetEnumCommand(::grpc::ClientContext* context, const ::kaapi::SetEnumCommandRequest& request, ::kaapi::SetEnumCommandResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetEnumCommandResponse>> AsyncSetEnumCommand(::grpc::ClientContext* context, const ::kaapi::SetEnumCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetEnumCommandResponse>>(AsyncSetEnumCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetEnumCommandResponse>> PrepareAsyncSetEnumCommand(::grpc::ClientContext* context, const ::kaapi::SetEnumCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetEnumCommandResponse>>(PrepareAsyncSetEnumCommandRaw(context, request, cq));
    }
    virtual ::grpc::Status GetVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::kaapi::ApiVersion* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::ApiVersion>> AsyncGetVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::ApiVersion>>(AsyncGetVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::ApiVersion>> PrepareAsyncGetVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::ApiVersion>>(PrepareAsyncGetVersionRaw(context, request, cq));
    }
    virtual ::grpc::Status ScreenClick(::grpc::ClientContext* context, const ::kaapi::ClickParameter& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncScreenClick(::grpc::ClientContext* context, const ::kaapi::ClickParameter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncScreenClickRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncScreenClick(::grpc::ClientContext* context, const ::kaapi::ClickParameter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncScreenClickRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::kaapi::CommWrite, ::kaapi::CommRead>> CommunicationChannel(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::kaapi::CommWrite, ::kaapi::CommRead>>(CommunicationChannelRaw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::kaapi::CommWrite, ::kaapi::CommRead>> AsyncCommunicationChannel(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::kaapi::CommWrite, ::kaapi::CommRead>>(AsyncCommunicationChannelRaw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::kaapi::CommWrite, ::kaapi::CommRead>> PrepareAsyncCommunicationChannel(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::kaapi::CommWrite, ::kaapi::CommRead>>(PrepareAsyncCommunicationChannelRaw(context, cq));
    }
    virtual ::grpc::Status SetMotionROI(::grpc::ClientContext* context, const ::kaapi::MotionROIRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetMotionROI(::grpc::ClientContext* context, const ::kaapi::MotionROIRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetMotionROIRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetMotionROI(::grpc::ClientContext* context, const ::kaapi::MotionROIRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetMotionROIRaw(context, request, cq));
    }
    virtual ::grpc::Status SetTrackWindow(::grpc::ClientContext* context, const ::kaapi::Rectangle& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetTrackWindow(::grpc::ClientContext* context, const ::kaapi::Rectangle& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetTrackWindowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetTrackWindow(::grpc::ClientContext* context, const ::kaapi::Rectangle& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetTrackWindowRaw(context, request, cq));
    }
    virtual ::grpc::Status SetCalibration(::grpc::ClientContext* context, const ::kaapi::CalibrationRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetCalibration(::grpc::ClientContext* context, const ::kaapi::CalibrationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetCalibrationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetCalibration(::grpc::ClientContext* context, const ::kaapi::CalibrationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetCalibrationRaw(context, request, cq));
    }
    virtual ::grpc::Status SetAselChangeLocations(::grpc::ClientContext* context, const ::kaapi::ListOfLocationInformation& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetAselChangeLocations(::grpc::ClientContext* context, const ::kaapi::ListOfLocationInformation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetAselChangeLocationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetAselChangeLocations(::grpc::ClientContext* context, const ::kaapi::ListOfLocationInformation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetAselChangeLocationsRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      virtual void GetPosition(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::kaapi::PosInfo* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MoveAbsolute(::grpc::ClientContext* context, const ::kaapi::AbsoluteMoveParameters* request, ::kaapi::AbsoluteMoveResult* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MoveRelative(::grpc::ClientContext* context, const ::kaapi::RelativeMoveParameters* request, ::kaapi::RelativeMoveResult* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCameraStatus(::grpc::ClientContext* context, const ::kaapi::GetCameraStatusParameters* request, ::kaapi::CameraStatus* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateCameraStatus(::grpc::ClientContext* context, const ::kaapi::UpdateCameraStatusParameters* request, ::kaapi::CameraStatus* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetCamera(::grpc::ClientContext* context, const ::kaapi::SetCameraRequest* request, ::kaapi::SetCameraResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetNumericParameter(::grpc::ClientContext* context, const ::kaapi::GetNumericParameterRequest* request, ::kaapi::GetNumericParameterResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEnumParameter(::grpc::ClientContext* context, const ::kaapi::GetEnumParameterRequest* request, ::kaapi::GetEnumParameterResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetNumericParameter(::grpc::ClientContext* context, const ::kaapi::SetNumericParameterRequest* request, ::kaapi::SetNumericParameterResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetEnumParameter(::grpc::ClientContext* context, const ::kaapi::SetEnumParameterRequest* request, ::kaapi::SetEnumParameterResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetEnumCommand(::grpc::ClientContext* context, const ::kaapi::SetEnumCommandRequest* request, ::kaapi::SetEnumCommandResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::kaapi::ApiVersion* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ScreenClick(::grpc::ClientContext* context, const ::kaapi::ClickParameter* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CommunicationChannel(::grpc::ClientContext* context, ::grpc::experimental::ClientBidiReactor< ::kaapi::CommWrite,::kaapi::CommRead>* reactor) = 0;
      virtual void SetMotionROI(::grpc::ClientContext* context, const ::kaapi::MotionROIRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetTrackWindow(::grpc::ClientContext* context, const ::kaapi::Rectangle* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetCalibration(::grpc::ClientContext* context, const ::kaapi::CalibrationRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetAselChangeLocations(::grpc::ClientContext* context, const ::kaapi::ListOfLocationInformation* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::PosInfo>* AsyncGetPositionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::PosInfo>* PrepareAsyncGetPositionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::AbsoluteMoveResult>* AsyncMoveAbsoluteRaw(::grpc::ClientContext* context, const ::kaapi::AbsoluteMoveParameters& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::AbsoluteMoveResult>* PrepareAsyncMoveAbsoluteRaw(::grpc::ClientContext* context, const ::kaapi::AbsoluteMoveParameters& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::RelativeMoveResult>* AsyncMoveRelativeRaw(::grpc::ClientContext* context, const ::kaapi::RelativeMoveParameters& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::RelativeMoveResult>* PrepareAsyncMoveRelativeRaw(::grpc::ClientContext* context, const ::kaapi::RelativeMoveParameters& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::CameraStatus>* AsyncGetCameraStatusRaw(::grpc::ClientContext* context, const ::kaapi::GetCameraStatusParameters& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::CameraStatus>* PrepareAsyncGetCameraStatusRaw(::grpc::ClientContext* context, const ::kaapi::GetCameraStatusParameters& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::CameraStatus>* AsyncUpdateCameraStatusRaw(::grpc::ClientContext* context, const ::kaapi::UpdateCameraStatusParameters& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::CameraStatus>* PrepareAsyncUpdateCameraStatusRaw(::grpc::ClientContext* context, const ::kaapi::UpdateCameraStatusParameters& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetCameraResponse>* AsyncSetCameraRaw(::grpc::ClientContext* context, const ::kaapi::SetCameraRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetCameraResponse>* PrepareAsyncSetCameraRaw(::grpc::ClientContext* context, const ::kaapi::SetCameraRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::GetNumericParameterResponse>* AsyncGetNumericParameterRaw(::grpc::ClientContext* context, const ::kaapi::GetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::GetNumericParameterResponse>* PrepareAsyncGetNumericParameterRaw(::grpc::ClientContext* context, const ::kaapi::GetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::GetEnumParameterResponse>* AsyncGetEnumParameterRaw(::grpc::ClientContext* context, const ::kaapi::GetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::GetEnumParameterResponse>* PrepareAsyncGetEnumParameterRaw(::grpc::ClientContext* context, const ::kaapi::GetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetNumericParameterResponse>* AsyncSetNumericParameterRaw(::grpc::ClientContext* context, const ::kaapi::SetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetNumericParameterResponse>* PrepareAsyncSetNumericParameterRaw(::grpc::ClientContext* context, const ::kaapi::SetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetEnumParameterResponse>* AsyncSetEnumParameterRaw(::grpc::ClientContext* context, const ::kaapi::SetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetEnumParameterResponse>* PrepareAsyncSetEnumParameterRaw(::grpc::ClientContext* context, const ::kaapi::SetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetEnumCommandResponse>* AsyncSetEnumCommandRaw(::grpc::ClientContext* context, const ::kaapi::SetEnumCommandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::SetEnumCommandResponse>* PrepareAsyncSetEnumCommandRaw(::grpc::ClientContext* context, const ::kaapi::SetEnumCommandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::ApiVersion>* AsyncGetVersionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::kaapi::ApiVersion>* PrepareAsyncGetVersionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncScreenClickRaw(::grpc::ClientContext* context, const ::kaapi::ClickParameter& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncScreenClickRaw(::grpc::ClientContext* context, const ::kaapi::ClickParameter& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::kaapi::CommWrite, ::kaapi::CommRead>* CommunicationChannelRaw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::kaapi::CommWrite, ::kaapi::CommRead>* AsyncCommunicationChannelRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::kaapi::CommWrite, ::kaapi::CommRead>* PrepareAsyncCommunicationChannelRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetMotionROIRaw(::grpc::ClientContext* context, const ::kaapi::MotionROIRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetMotionROIRaw(::grpc::ClientContext* context, const ::kaapi::MotionROIRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetTrackWindowRaw(::grpc::ClientContext* context, const ::kaapi::Rectangle& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetTrackWindowRaw(::grpc::ClientContext* context, const ::kaapi::Rectangle& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetCalibrationRaw(::grpc::ClientContext* context, const ::kaapi::CalibrationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetCalibrationRaw(::grpc::ClientContext* context, const ::kaapi::CalibrationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetAselChangeLocationsRaw(::grpc::ClientContext* context, const ::kaapi::ListOfLocationInformation& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetAselChangeLocationsRaw(::grpc::ClientContext* context, const ::kaapi::ListOfLocationInformation& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status GetPosition(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::kaapi::PosInfo* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::PosInfo>> AsyncGetPosition(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::PosInfo>>(AsyncGetPositionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::PosInfo>> PrepareAsyncGetPosition(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::PosInfo>>(PrepareAsyncGetPositionRaw(context, request, cq));
    }
    ::grpc::Status MoveAbsolute(::grpc::ClientContext* context, const ::kaapi::AbsoluteMoveParameters& request, ::kaapi::AbsoluteMoveResult* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::AbsoluteMoveResult>> AsyncMoveAbsolute(::grpc::ClientContext* context, const ::kaapi::AbsoluteMoveParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::AbsoluteMoveResult>>(AsyncMoveAbsoluteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::AbsoluteMoveResult>> PrepareAsyncMoveAbsolute(::grpc::ClientContext* context, const ::kaapi::AbsoluteMoveParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::AbsoluteMoveResult>>(PrepareAsyncMoveAbsoluteRaw(context, request, cq));
    }
    ::grpc::Status MoveRelative(::grpc::ClientContext* context, const ::kaapi::RelativeMoveParameters& request, ::kaapi::RelativeMoveResult* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::RelativeMoveResult>> AsyncMoveRelative(::grpc::ClientContext* context, const ::kaapi::RelativeMoveParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::RelativeMoveResult>>(AsyncMoveRelativeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::RelativeMoveResult>> PrepareAsyncMoveRelative(::grpc::ClientContext* context, const ::kaapi::RelativeMoveParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::RelativeMoveResult>>(PrepareAsyncMoveRelativeRaw(context, request, cq));
    }
    ::grpc::Status GetCameraStatus(::grpc::ClientContext* context, const ::kaapi::GetCameraStatusParameters& request, ::kaapi::CameraStatus* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::CameraStatus>> AsyncGetCameraStatus(::grpc::ClientContext* context, const ::kaapi::GetCameraStatusParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::CameraStatus>>(AsyncGetCameraStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::CameraStatus>> PrepareAsyncGetCameraStatus(::grpc::ClientContext* context, const ::kaapi::GetCameraStatusParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::CameraStatus>>(PrepareAsyncGetCameraStatusRaw(context, request, cq));
    }
    ::grpc::Status UpdateCameraStatus(::grpc::ClientContext* context, const ::kaapi::UpdateCameraStatusParameters& request, ::kaapi::CameraStatus* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::CameraStatus>> AsyncUpdateCameraStatus(::grpc::ClientContext* context, const ::kaapi::UpdateCameraStatusParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::CameraStatus>>(AsyncUpdateCameraStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::CameraStatus>> PrepareAsyncUpdateCameraStatus(::grpc::ClientContext* context, const ::kaapi::UpdateCameraStatusParameters& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::CameraStatus>>(PrepareAsyncUpdateCameraStatusRaw(context, request, cq));
    }
    ::grpc::Status SetCamera(::grpc::ClientContext* context, const ::kaapi::SetCameraRequest& request, ::kaapi::SetCameraResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetCameraResponse>> AsyncSetCamera(::grpc::ClientContext* context, const ::kaapi::SetCameraRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetCameraResponse>>(AsyncSetCameraRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetCameraResponse>> PrepareAsyncSetCamera(::grpc::ClientContext* context, const ::kaapi::SetCameraRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetCameraResponse>>(PrepareAsyncSetCameraRaw(context, request, cq));
    }
    ::grpc::Status GetNumericParameter(::grpc::ClientContext* context, const ::kaapi::GetNumericParameterRequest& request, ::kaapi::GetNumericParameterResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::GetNumericParameterResponse>> AsyncGetNumericParameter(::grpc::ClientContext* context, const ::kaapi::GetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::GetNumericParameterResponse>>(AsyncGetNumericParameterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::GetNumericParameterResponse>> PrepareAsyncGetNumericParameter(::grpc::ClientContext* context, const ::kaapi::GetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::GetNumericParameterResponse>>(PrepareAsyncGetNumericParameterRaw(context, request, cq));
    }
    ::grpc::Status GetEnumParameter(::grpc::ClientContext* context, const ::kaapi::GetEnumParameterRequest& request, ::kaapi::GetEnumParameterResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::GetEnumParameterResponse>> AsyncGetEnumParameter(::grpc::ClientContext* context, const ::kaapi::GetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::GetEnumParameterResponse>>(AsyncGetEnumParameterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::GetEnumParameterResponse>> PrepareAsyncGetEnumParameter(::grpc::ClientContext* context, const ::kaapi::GetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::GetEnumParameterResponse>>(PrepareAsyncGetEnumParameterRaw(context, request, cq));
    }
    ::grpc::Status SetNumericParameter(::grpc::ClientContext* context, const ::kaapi::SetNumericParameterRequest& request, ::kaapi::SetNumericParameterResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetNumericParameterResponse>> AsyncSetNumericParameter(::grpc::ClientContext* context, const ::kaapi::SetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetNumericParameterResponse>>(AsyncSetNumericParameterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetNumericParameterResponse>> PrepareAsyncSetNumericParameter(::grpc::ClientContext* context, const ::kaapi::SetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetNumericParameterResponse>>(PrepareAsyncSetNumericParameterRaw(context, request, cq));
    }
    ::grpc::Status SetEnumParameter(::grpc::ClientContext* context, const ::kaapi::SetEnumParameterRequest& request, ::kaapi::SetEnumParameterResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetEnumParameterResponse>> AsyncSetEnumParameter(::grpc::ClientContext* context, const ::kaapi::SetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetEnumParameterResponse>>(AsyncSetEnumParameterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetEnumParameterResponse>> PrepareAsyncSetEnumParameter(::grpc::ClientContext* context, const ::kaapi::SetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetEnumParameterResponse>>(PrepareAsyncSetEnumParameterRaw(context, request, cq));
    }
    ::grpc::Status SetEnumCommand(::grpc::ClientContext* context, const ::kaapi::SetEnumCommandRequest& request, ::kaapi::SetEnumCommandResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetEnumCommandResponse>> AsyncSetEnumCommand(::grpc::ClientContext* context, const ::kaapi::SetEnumCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetEnumCommandResponse>>(AsyncSetEnumCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetEnumCommandResponse>> PrepareAsyncSetEnumCommand(::grpc::ClientContext* context, const ::kaapi::SetEnumCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::SetEnumCommandResponse>>(PrepareAsyncSetEnumCommandRaw(context, request, cq));
    }
    ::grpc::Status GetVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::kaapi::ApiVersion* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::ApiVersion>> AsyncGetVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::ApiVersion>>(AsyncGetVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::ApiVersion>> PrepareAsyncGetVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::kaapi::ApiVersion>>(PrepareAsyncGetVersionRaw(context, request, cq));
    }
    ::grpc::Status ScreenClick(::grpc::ClientContext* context, const ::kaapi::ClickParameter& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncScreenClick(::grpc::ClientContext* context, const ::kaapi::ClickParameter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncScreenClickRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncScreenClick(::grpc::ClientContext* context, const ::kaapi::ClickParameter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncScreenClickRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::kaapi::CommWrite, ::kaapi::CommRead>> CommunicationChannel(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::kaapi::CommWrite, ::kaapi::CommRead>>(CommunicationChannelRaw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::kaapi::CommWrite, ::kaapi::CommRead>> AsyncCommunicationChannel(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::kaapi::CommWrite, ::kaapi::CommRead>>(AsyncCommunicationChannelRaw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::kaapi::CommWrite, ::kaapi::CommRead>> PrepareAsyncCommunicationChannel(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::kaapi::CommWrite, ::kaapi::CommRead>>(PrepareAsyncCommunicationChannelRaw(context, cq));
    }
    ::grpc::Status SetMotionROI(::grpc::ClientContext* context, const ::kaapi::MotionROIRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetMotionROI(::grpc::ClientContext* context, const ::kaapi::MotionROIRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetMotionROIRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetMotionROI(::grpc::ClientContext* context, const ::kaapi::MotionROIRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetMotionROIRaw(context, request, cq));
    }
    ::grpc::Status SetTrackWindow(::grpc::ClientContext* context, const ::kaapi::Rectangle& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetTrackWindow(::grpc::ClientContext* context, const ::kaapi::Rectangle& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetTrackWindowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetTrackWindow(::grpc::ClientContext* context, const ::kaapi::Rectangle& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetTrackWindowRaw(context, request, cq));
    }
    ::grpc::Status SetCalibration(::grpc::ClientContext* context, const ::kaapi::CalibrationRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetCalibration(::grpc::ClientContext* context, const ::kaapi::CalibrationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetCalibrationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetCalibration(::grpc::ClientContext* context, const ::kaapi::CalibrationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetCalibrationRaw(context, request, cq));
    }
    ::grpc::Status SetAselChangeLocations(::grpc::ClientContext* context, const ::kaapi::ListOfLocationInformation& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetAselChangeLocations(::grpc::ClientContext* context, const ::kaapi::ListOfLocationInformation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetAselChangeLocationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetAselChangeLocations(::grpc::ClientContext* context, const ::kaapi::ListOfLocationInformation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetAselChangeLocationsRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void GetPosition(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::kaapi::PosInfo* response, std::function<void(::grpc::Status)>) override;
      void MoveAbsolute(::grpc::ClientContext* context, const ::kaapi::AbsoluteMoveParameters* request, ::kaapi::AbsoluteMoveResult* response, std::function<void(::grpc::Status)>) override;
      void MoveRelative(::grpc::ClientContext* context, const ::kaapi::RelativeMoveParameters* request, ::kaapi::RelativeMoveResult* response, std::function<void(::grpc::Status)>) override;
      void GetCameraStatus(::grpc::ClientContext* context, const ::kaapi::GetCameraStatusParameters* request, ::kaapi::CameraStatus* response, std::function<void(::grpc::Status)>) override;
      void UpdateCameraStatus(::grpc::ClientContext* context, const ::kaapi::UpdateCameraStatusParameters* request, ::kaapi::CameraStatus* response, std::function<void(::grpc::Status)>) override;
      void SetCamera(::grpc::ClientContext* context, const ::kaapi::SetCameraRequest* request, ::kaapi::SetCameraResponse* response, std::function<void(::grpc::Status)>) override;
      void GetNumericParameter(::grpc::ClientContext* context, const ::kaapi::GetNumericParameterRequest* request, ::kaapi::GetNumericParameterResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEnumParameter(::grpc::ClientContext* context, const ::kaapi::GetEnumParameterRequest* request, ::kaapi::GetEnumParameterResponse* response, std::function<void(::grpc::Status)>) override;
      void SetNumericParameter(::grpc::ClientContext* context, const ::kaapi::SetNumericParameterRequest* request, ::kaapi::SetNumericParameterResponse* response, std::function<void(::grpc::Status)>) override;
      void SetEnumParameter(::grpc::ClientContext* context, const ::kaapi::SetEnumParameterRequest* request, ::kaapi::SetEnumParameterResponse* response, std::function<void(::grpc::Status)>) override;
      void SetEnumCommand(::grpc::ClientContext* context, const ::kaapi::SetEnumCommandRequest* request, ::kaapi::SetEnumCommandResponse* response, std::function<void(::grpc::Status)>) override;
      void GetVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::kaapi::ApiVersion* response, std::function<void(::grpc::Status)>) override;
      void ScreenClick(::grpc::ClientContext* context, const ::kaapi::ClickParameter* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void CommunicationChannel(::grpc::ClientContext* context, ::grpc::experimental::ClientBidiReactor< ::kaapi::CommWrite,::kaapi::CommRead>* reactor) override;
      void SetMotionROI(::grpc::ClientContext* context, const ::kaapi::MotionROIRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetTrackWindow(::grpc::ClientContext* context, const ::kaapi::Rectangle* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetCalibration(::grpc::ClientContext* context, const ::kaapi::CalibrationRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetAselChangeLocations(::grpc::ClientContext* context, const ::kaapi::ListOfLocationInformation* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::kaapi::PosInfo>* AsyncGetPositionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::PosInfo>* PrepareAsyncGetPositionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::AbsoluteMoveResult>* AsyncMoveAbsoluteRaw(::grpc::ClientContext* context, const ::kaapi::AbsoluteMoveParameters& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::AbsoluteMoveResult>* PrepareAsyncMoveAbsoluteRaw(::grpc::ClientContext* context, const ::kaapi::AbsoluteMoveParameters& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::RelativeMoveResult>* AsyncMoveRelativeRaw(::grpc::ClientContext* context, const ::kaapi::RelativeMoveParameters& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::RelativeMoveResult>* PrepareAsyncMoveRelativeRaw(::grpc::ClientContext* context, const ::kaapi::RelativeMoveParameters& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::CameraStatus>* AsyncGetCameraStatusRaw(::grpc::ClientContext* context, const ::kaapi::GetCameraStatusParameters& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::CameraStatus>* PrepareAsyncGetCameraStatusRaw(::grpc::ClientContext* context, const ::kaapi::GetCameraStatusParameters& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::CameraStatus>* AsyncUpdateCameraStatusRaw(::grpc::ClientContext* context, const ::kaapi::UpdateCameraStatusParameters& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::CameraStatus>* PrepareAsyncUpdateCameraStatusRaw(::grpc::ClientContext* context, const ::kaapi::UpdateCameraStatusParameters& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::SetCameraResponse>* AsyncSetCameraRaw(::grpc::ClientContext* context, const ::kaapi::SetCameraRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::SetCameraResponse>* PrepareAsyncSetCameraRaw(::grpc::ClientContext* context, const ::kaapi::SetCameraRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::GetNumericParameterResponse>* AsyncGetNumericParameterRaw(::grpc::ClientContext* context, const ::kaapi::GetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::GetNumericParameterResponse>* PrepareAsyncGetNumericParameterRaw(::grpc::ClientContext* context, const ::kaapi::GetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::GetEnumParameterResponse>* AsyncGetEnumParameterRaw(::grpc::ClientContext* context, const ::kaapi::GetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::GetEnumParameterResponse>* PrepareAsyncGetEnumParameterRaw(::grpc::ClientContext* context, const ::kaapi::GetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::SetNumericParameterResponse>* AsyncSetNumericParameterRaw(::grpc::ClientContext* context, const ::kaapi::SetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::SetNumericParameterResponse>* PrepareAsyncSetNumericParameterRaw(::grpc::ClientContext* context, const ::kaapi::SetNumericParameterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::SetEnumParameterResponse>* AsyncSetEnumParameterRaw(::grpc::ClientContext* context, const ::kaapi::SetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::SetEnumParameterResponse>* PrepareAsyncSetEnumParameterRaw(::grpc::ClientContext* context, const ::kaapi::SetEnumParameterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::SetEnumCommandResponse>* AsyncSetEnumCommandRaw(::grpc::ClientContext* context, const ::kaapi::SetEnumCommandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::SetEnumCommandResponse>* PrepareAsyncSetEnumCommandRaw(::grpc::ClientContext* context, const ::kaapi::SetEnumCommandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::ApiVersion>* AsyncGetVersionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::kaapi::ApiVersion>* PrepareAsyncGetVersionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncScreenClickRaw(::grpc::ClientContext* context, const ::kaapi::ClickParameter& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncScreenClickRaw(::grpc::ClientContext* context, const ::kaapi::ClickParameter& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::kaapi::CommWrite, ::kaapi::CommRead>* CommunicationChannelRaw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::kaapi::CommWrite, ::kaapi::CommRead>* AsyncCommunicationChannelRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::kaapi::CommWrite, ::kaapi::CommRead>* PrepareAsyncCommunicationChannelRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetMotionROIRaw(::grpc::ClientContext* context, const ::kaapi::MotionROIRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetMotionROIRaw(::grpc::ClientContext* context, const ::kaapi::MotionROIRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetTrackWindowRaw(::grpc::ClientContext* context, const ::kaapi::Rectangle& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetTrackWindowRaw(::grpc::ClientContext* context, const ::kaapi::Rectangle& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetCalibrationRaw(::grpc::ClientContext* context, const ::kaapi::CalibrationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetCalibrationRaw(::grpc::ClientContext* context, const ::kaapi::CalibrationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetAselChangeLocationsRaw(::grpc::ClientContext* context, const ::kaapi::ListOfLocationInformation& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetAselChangeLocationsRaw(::grpc::ClientContext* context, const ::kaapi::ListOfLocationInformation& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetPosition_;
    const ::grpc::internal::RpcMethod rpcmethod_MoveAbsolute_;
    const ::grpc::internal::RpcMethod rpcmethod_MoveRelative_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCameraStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateCameraStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_SetCamera_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNumericParameter_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEnumParameter_;
    const ::grpc::internal::RpcMethod rpcmethod_SetNumericParameter_;
    const ::grpc::internal::RpcMethod rpcmethod_SetEnumParameter_;
    const ::grpc::internal::RpcMethod rpcmethod_SetEnumCommand_;
    const ::grpc::internal::RpcMethod rpcmethod_GetVersion_;
    const ::grpc::internal::RpcMethod rpcmethod_ScreenClick_;
    const ::grpc::internal::RpcMethod rpcmethod_CommunicationChannel_;
    const ::grpc::internal::RpcMethod rpcmethod_SetMotionROI_;
    const ::grpc::internal::RpcMethod rpcmethod_SetTrackWindow_;
    const ::grpc::internal::RpcMethod rpcmethod_SetCalibration_;
    const ::grpc::internal::RpcMethod rpcmethod_SetAselChangeLocations_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetPosition(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::PosInfo* response);
    virtual ::grpc::Status MoveAbsolute(::grpc::ServerContext* context, const ::kaapi::AbsoluteMoveParameters* request, ::kaapi::AbsoluteMoveResult* response);
    virtual ::grpc::Status MoveRelative(::grpc::ServerContext* context, const ::kaapi::RelativeMoveParameters* request, ::kaapi::RelativeMoveResult* response);
    virtual ::grpc::Status GetCameraStatus(::grpc::ServerContext* context, const ::kaapi::GetCameraStatusParameters* request, ::kaapi::CameraStatus* response);
    virtual ::grpc::Status UpdateCameraStatus(::grpc::ServerContext* context, const ::kaapi::UpdateCameraStatusParameters* request, ::kaapi::CameraStatus* response);
    virtual ::grpc::Status SetCamera(::grpc::ServerContext* context, const ::kaapi::SetCameraRequest* request, ::kaapi::SetCameraResponse* response);
    virtual ::grpc::Status GetNumericParameter(::grpc::ServerContext* context, const ::kaapi::GetNumericParameterRequest* request, ::kaapi::GetNumericParameterResponse* response);
    virtual ::grpc::Status GetEnumParameter(::grpc::ServerContext* context, const ::kaapi::GetEnumParameterRequest* request, ::kaapi::GetEnumParameterResponse* response);
    virtual ::grpc::Status SetNumericParameter(::grpc::ServerContext* context, const ::kaapi::SetNumericParameterRequest* request, ::kaapi::SetNumericParameterResponse* response);
    virtual ::grpc::Status SetEnumParameter(::grpc::ServerContext* context, const ::kaapi::SetEnumParameterRequest* request, ::kaapi::SetEnumParameterResponse* response);
    virtual ::grpc::Status SetEnumCommand(::grpc::ServerContext* context, const ::kaapi::SetEnumCommandRequest* request, ::kaapi::SetEnumCommandResponse* response);
    virtual ::grpc::Status GetVersion(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::ApiVersion* response);
    virtual ::grpc::Status ScreenClick(::grpc::ServerContext* context, const ::kaapi::ClickParameter* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status CommunicationChannel(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::kaapi::CommRead, ::kaapi::CommWrite>* stream);
    virtual ::grpc::Status SetMotionROI(::grpc::ServerContext* context, const ::kaapi::MotionROIRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetTrackWindow(::grpc::ServerContext* context, const ::kaapi::Rectangle* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetCalibration(::grpc::ServerContext* context, const ::kaapi::CalibrationRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetAselChangeLocations(::grpc::ServerContext* context, const ::kaapi::ListOfLocationInformation* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetPosition() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPosition(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::PosInfo* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPosition(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::kaapi::PosInfo>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MoveAbsolute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_MoveAbsolute() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_MoveAbsolute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveAbsolute(::grpc::ServerContext* context, const ::kaapi::AbsoluteMoveParameters* request, ::kaapi::AbsoluteMoveResult* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveAbsolute(::grpc::ServerContext* context, ::kaapi::AbsoluteMoveParameters* request, ::grpc::ServerAsyncResponseWriter< ::kaapi::AbsoluteMoveResult>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MoveRelative : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_MoveRelative() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_MoveRelative() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveRelative(::grpc::ServerContext* context, const ::kaapi::RelativeMoveParameters* request, ::kaapi::RelativeMoveResult* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveRelative(::grpc::ServerContext* context, ::kaapi::RelativeMoveParameters* request, ::grpc::ServerAsyncResponseWriter< ::kaapi::RelativeMoveResult>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCameraStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetCameraStatus() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetCameraStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCameraStatus(::grpc::ServerContext* context, const ::kaapi::GetCameraStatusParameters* request, ::kaapi::CameraStatus* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCameraStatus(::grpc::ServerContext* context, ::kaapi::GetCameraStatusParameters* request, ::grpc::ServerAsyncResponseWriter< ::kaapi::CameraStatus>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateCameraStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateCameraStatus() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_UpdateCameraStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCameraStatus(::grpc::ServerContext* context, const ::kaapi::UpdateCameraStatusParameters* request, ::kaapi::CameraStatus* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCameraStatus(::grpc::ServerContext* context, ::kaapi::UpdateCameraStatusParameters* request, ::grpc::ServerAsyncResponseWriter< ::kaapi::CameraStatus>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetCamera : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetCamera() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SetCamera() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCamera(::grpc::ServerContext* context, const ::kaapi::SetCameraRequest* request, ::kaapi::SetCameraResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCamera(::grpc::ServerContext* context, ::kaapi::SetCameraRequest* request, ::grpc::ServerAsyncResponseWriter< ::kaapi::SetCameraResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNumericParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetNumericParameter() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetNumericParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNumericParameter(::grpc::ServerContext* context, const ::kaapi::GetNumericParameterRequest* request, ::kaapi::GetNumericParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNumericParameter(::grpc::ServerContext* context, ::kaapi::GetNumericParameterRequest* request, ::grpc::ServerAsyncResponseWriter< ::kaapi::GetNumericParameterResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEnumParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetEnumParameter() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetEnumParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEnumParameter(::grpc::ServerContext* context, const ::kaapi::GetEnumParameterRequest* request, ::kaapi::GetEnumParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEnumParameter(::grpc::ServerContext* context, ::kaapi::GetEnumParameterRequest* request, ::grpc::ServerAsyncResponseWriter< ::kaapi::GetEnumParameterResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetNumericParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetNumericParameter() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_SetNumericParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNumericParameter(::grpc::ServerContext* context, const ::kaapi::SetNumericParameterRequest* request, ::kaapi::SetNumericParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetNumericParameter(::grpc::ServerContext* context, ::kaapi::SetNumericParameterRequest* request, ::grpc::ServerAsyncResponseWriter< ::kaapi::SetNumericParameterResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetEnumParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetEnumParameter() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_SetEnumParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumParameter(::grpc::ServerContext* context, const ::kaapi::SetEnumParameterRequest* request, ::kaapi::SetEnumParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetEnumParameter(::grpc::ServerContext* context, ::kaapi::SetEnumParameterRequest* request, ::grpc::ServerAsyncResponseWriter< ::kaapi::SetEnumParameterResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetEnumCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetEnumCommand() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_SetEnumCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumCommand(::grpc::ServerContext* context, const ::kaapi::SetEnumCommandRequest* request, ::kaapi::SetEnumCommandResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetEnumCommand(::grpc::ServerContext* context, ::kaapi::SetEnumCommandRequest* request, ::grpc::ServerAsyncResponseWriter< ::kaapi::SetEnumCommandResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetVersion() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVersion(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::ApiVersion* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVersion(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::kaapi::ApiVersion>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ScreenClick : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ScreenClick() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_ScreenClick() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ScreenClick(::grpc::ServerContext* context, const ::kaapi::ClickParameter* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestScreenClick(::grpc::ServerContext* context, ::kaapi::ClickParameter* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CommunicationChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CommunicationChannel() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_CommunicationChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommunicationChannel(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::kaapi::CommRead, ::kaapi::CommWrite>* stream)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCommunicationChannel(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::kaapi::CommRead, ::kaapi::CommWrite>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(13, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetMotionROI : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetMotionROI() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_SetMotionROI() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMotionROI(::grpc::ServerContext* context, const ::kaapi::MotionROIRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetMotionROI(::grpc::ServerContext* context, ::kaapi::MotionROIRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetTrackWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetTrackWindow() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_SetTrackWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackWindow(::grpc::ServerContext* context, const ::kaapi::Rectangle* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetTrackWindow(::grpc::ServerContext* context, ::kaapi::Rectangle* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetCalibration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetCalibration() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_SetCalibration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCalibration(::grpc::ServerContext* context, const ::kaapi::CalibrationRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCalibration(::grpc::ServerContext* context, ::kaapi::CalibrationRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetAselChangeLocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetAselChangeLocations() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_SetAselChangeLocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAselChangeLocations(::grpc::ServerContext* context, const ::kaapi::ListOfLocationInformation* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetAselChangeLocations(::grpc::ServerContext* context, ::kaapi::ListOfLocationInformation* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetPosition<WithAsyncMethod_MoveAbsolute<WithAsyncMethod_MoveRelative<WithAsyncMethod_GetCameraStatus<WithAsyncMethod_UpdateCameraStatus<WithAsyncMethod_SetCamera<WithAsyncMethod_GetNumericParameter<WithAsyncMethod_GetEnumParameter<WithAsyncMethod_SetNumericParameter<WithAsyncMethod_SetEnumParameter<WithAsyncMethod_SetEnumCommand<WithAsyncMethod_GetVersion<WithAsyncMethod_ScreenClick<WithAsyncMethod_CommunicationChannel<WithAsyncMethod_SetMotionROI<WithAsyncMethod_SetTrackWindow<WithAsyncMethod_SetCalibration<WithAsyncMethod_SetAselChangeLocations<Service > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_GetPosition() {
      ::grpc::Service::experimental().MarkMethodCallback(0,
        new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::kaapi::PosInfo>(
          [this](::grpc::ServerContext* context,
                 const ::google::protobuf::Empty* request,
                 ::kaapi::PosInfo* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->GetPosition(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_GetPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPosition(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::PosInfo* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetPosition(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::PosInfo* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_MoveAbsolute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_MoveAbsolute() {
      ::grpc::Service::experimental().MarkMethodCallback(1,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::AbsoluteMoveParameters, ::kaapi::AbsoluteMoveResult>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::AbsoluteMoveParameters* request,
                 ::kaapi::AbsoluteMoveResult* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->MoveAbsolute(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_MoveAbsolute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveAbsolute(::grpc::ServerContext* context, const ::kaapi::AbsoluteMoveParameters* request, ::kaapi::AbsoluteMoveResult* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void MoveAbsolute(::grpc::ServerContext* context, const ::kaapi::AbsoluteMoveParameters* request, ::kaapi::AbsoluteMoveResult* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_MoveRelative : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_MoveRelative() {
      ::grpc::Service::experimental().MarkMethodCallback(2,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::RelativeMoveParameters, ::kaapi::RelativeMoveResult>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::RelativeMoveParameters* request,
                 ::kaapi::RelativeMoveResult* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->MoveRelative(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_MoveRelative() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveRelative(::grpc::ServerContext* context, const ::kaapi::RelativeMoveParameters* request, ::kaapi::RelativeMoveResult* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void MoveRelative(::grpc::ServerContext* context, const ::kaapi::RelativeMoveParameters* request, ::kaapi::RelativeMoveResult* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetCameraStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_GetCameraStatus() {
      ::grpc::Service::experimental().MarkMethodCallback(3,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::GetCameraStatusParameters, ::kaapi::CameraStatus>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::GetCameraStatusParameters* request,
                 ::kaapi::CameraStatus* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->GetCameraStatus(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_GetCameraStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCameraStatus(::grpc::ServerContext* context, const ::kaapi::GetCameraStatusParameters* request, ::kaapi::CameraStatus* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetCameraStatus(::grpc::ServerContext* context, const ::kaapi::GetCameraStatusParameters* request, ::kaapi::CameraStatus* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateCameraStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_UpdateCameraStatus() {
      ::grpc::Service::experimental().MarkMethodCallback(4,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::UpdateCameraStatusParameters, ::kaapi::CameraStatus>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::UpdateCameraStatusParameters* request,
                 ::kaapi::CameraStatus* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->UpdateCameraStatus(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_UpdateCameraStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCameraStatus(::grpc::ServerContext* context, const ::kaapi::UpdateCameraStatusParameters* request, ::kaapi::CameraStatus* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void UpdateCameraStatus(::grpc::ServerContext* context, const ::kaapi::UpdateCameraStatusParameters* request, ::kaapi::CameraStatus* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SetCamera : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_SetCamera() {
      ::grpc::Service::experimental().MarkMethodCallback(5,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::SetCameraRequest, ::kaapi::SetCameraResponse>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::SetCameraRequest* request,
                 ::kaapi::SetCameraResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->SetCamera(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_SetCamera() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCamera(::grpc::ServerContext* context, const ::kaapi::SetCameraRequest* request, ::kaapi::SetCameraResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetCamera(::grpc::ServerContext* context, const ::kaapi::SetCameraRequest* request, ::kaapi::SetCameraResponse* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetNumericParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_GetNumericParameter() {
      ::grpc::Service::experimental().MarkMethodCallback(6,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::GetNumericParameterRequest, ::kaapi::GetNumericParameterResponse>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::GetNumericParameterRequest* request,
                 ::kaapi::GetNumericParameterResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->GetNumericParameter(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_GetNumericParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNumericParameter(::grpc::ServerContext* context, const ::kaapi::GetNumericParameterRequest* request, ::kaapi::GetNumericParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetNumericParameter(::grpc::ServerContext* context, const ::kaapi::GetNumericParameterRequest* request, ::kaapi::GetNumericParameterResponse* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetEnumParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_GetEnumParameter() {
      ::grpc::Service::experimental().MarkMethodCallback(7,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::GetEnumParameterRequest, ::kaapi::GetEnumParameterResponse>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::GetEnumParameterRequest* request,
                 ::kaapi::GetEnumParameterResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->GetEnumParameter(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_GetEnumParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEnumParameter(::grpc::ServerContext* context, const ::kaapi::GetEnumParameterRequest* request, ::kaapi::GetEnumParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetEnumParameter(::grpc::ServerContext* context, const ::kaapi::GetEnumParameterRequest* request, ::kaapi::GetEnumParameterResponse* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SetNumericParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_SetNumericParameter() {
      ::grpc::Service::experimental().MarkMethodCallback(8,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::SetNumericParameterRequest, ::kaapi::SetNumericParameterResponse>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::SetNumericParameterRequest* request,
                 ::kaapi::SetNumericParameterResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->SetNumericParameter(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_SetNumericParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNumericParameter(::grpc::ServerContext* context, const ::kaapi::SetNumericParameterRequest* request, ::kaapi::SetNumericParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetNumericParameter(::grpc::ServerContext* context, const ::kaapi::SetNumericParameterRequest* request, ::kaapi::SetNumericParameterResponse* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SetEnumParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_SetEnumParameter() {
      ::grpc::Service::experimental().MarkMethodCallback(9,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::SetEnumParameterRequest, ::kaapi::SetEnumParameterResponse>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::SetEnumParameterRequest* request,
                 ::kaapi::SetEnumParameterResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->SetEnumParameter(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_SetEnumParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumParameter(::grpc::ServerContext* context, const ::kaapi::SetEnumParameterRequest* request, ::kaapi::SetEnumParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetEnumParameter(::grpc::ServerContext* context, const ::kaapi::SetEnumParameterRequest* request, ::kaapi::SetEnumParameterResponse* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SetEnumCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_SetEnumCommand() {
      ::grpc::Service::experimental().MarkMethodCallback(10,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::SetEnumCommandRequest, ::kaapi::SetEnumCommandResponse>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::SetEnumCommandRequest* request,
                 ::kaapi::SetEnumCommandResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->SetEnumCommand(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_SetEnumCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumCommand(::grpc::ServerContext* context, const ::kaapi::SetEnumCommandRequest* request, ::kaapi::SetEnumCommandResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetEnumCommand(::grpc::ServerContext* context, const ::kaapi::SetEnumCommandRequest* request, ::kaapi::SetEnumCommandResponse* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_GetVersion() {
      ::grpc::Service::experimental().MarkMethodCallback(11,
        new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::kaapi::ApiVersion>(
          [this](::grpc::ServerContext* context,
                 const ::google::protobuf::Empty* request,
                 ::kaapi::ApiVersion* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->GetVersion(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_GetVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVersion(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::ApiVersion* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetVersion(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::ApiVersion* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ScreenClick : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_ScreenClick() {
      ::grpc::Service::experimental().MarkMethodCallback(12,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::ClickParameter, ::google::protobuf::Empty>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::ClickParameter* request,
                 ::google::protobuf::Empty* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->ScreenClick(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_ScreenClick() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ScreenClick(::grpc::ServerContext* context, const ::kaapi::ClickParameter* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void ScreenClick(::grpc::ServerContext* context, const ::kaapi::ClickParameter* request, ::google::protobuf::Empty* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CommunicationChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_CommunicationChannel() {
      ::grpc::Service::experimental().MarkMethodCallback(13,
        new ::grpc::internal::CallbackBidiHandler< ::kaapi::CommWrite, ::kaapi::CommRead>(
          [this] { return this->CommunicationChannel(); }));
    }
    ~ExperimentalWithCallbackMethod_CommunicationChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommunicationChannel(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::kaapi::CommRead, ::kaapi::CommWrite>* stream)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::experimental::ServerBidiReactor< ::kaapi::CommWrite, ::kaapi::CommRead>* CommunicationChannel() {
      return new ::grpc::internal::UnimplementedBidiReactor<
        ::kaapi::CommWrite, ::kaapi::CommRead>;}
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SetMotionROI : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_SetMotionROI() {
      ::grpc::Service::experimental().MarkMethodCallback(14,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::MotionROIRequest, ::google::protobuf::Empty>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::MotionROIRequest* request,
                 ::google::protobuf::Empty* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->SetMotionROI(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_SetMotionROI() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMotionROI(::grpc::ServerContext* context, const ::kaapi::MotionROIRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetMotionROI(::grpc::ServerContext* context, const ::kaapi::MotionROIRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SetTrackWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_SetTrackWindow() {
      ::grpc::Service::experimental().MarkMethodCallback(15,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::Rectangle, ::google::protobuf::Empty>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::Rectangle* request,
                 ::google::protobuf::Empty* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->SetTrackWindow(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_SetTrackWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackWindow(::grpc::ServerContext* context, const ::kaapi::Rectangle* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetTrackWindow(::grpc::ServerContext* context, const ::kaapi::Rectangle* request, ::google::protobuf::Empty* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SetCalibration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_SetCalibration() {
      ::grpc::Service::experimental().MarkMethodCallback(16,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::CalibrationRequest, ::google::protobuf::Empty>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::CalibrationRequest* request,
                 ::google::protobuf::Empty* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->SetCalibration(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_SetCalibration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCalibration(::grpc::ServerContext* context, const ::kaapi::CalibrationRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetCalibration(::grpc::ServerContext* context, const ::kaapi::CalibrationRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SetAselChangeLocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_SetAselChangeLocations() {
      ::grpc::Service::experimental().MarkMethodCallback(17,
        new ::grpc::internal::CallbackUnaryHandler< ::kaapi::ListOfLocationInformation, ::google::protobuf::Empty>(
          [this](::grpc::ServerContext* context,
                 const ::kaapi::ListOfLocationInformation* request,
                 ::google::protobuf::Empty* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->SetAselChangeLocations(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithCallbackMethod_SetAselChangeLocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAselChangeLocations(::grpc::ServerContext* context, const ::kaapi::ListOfLocationInformation* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetAselChangeLocations(::grpc::ServerContext* context, const ::kaapi::ListOfLocationInformation* request, ::google::protobuf::Empty* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  typedef ExperimentalWithCallbackMethod_GetPosition<ExperimentalWithCallbackMethod_MoveAbsolute<ExperimentalWithCallbackMethod_MoveRelative<ExperimentalWithCallbackMethod_GetCameraStatus<ExperimentalWithCallbackMethod_UpdateCameraStatus<ExperimentalWithCallbackMethod_SetCamera<ExperimentalWithCallbackMethod_GetNumericParameter<ExperimentalWithCallbackMethod_GetEnumParameter<ExperimentalWithCallbackMethod_SetNumericParameter<ExperimentalWithCallbackMethod_SetEnumParameter<ExperimentalWithCallbackMethod_SetEnumCommand<ExperimentalWithCallbackMethod_GetVersion<ExperimentalWithCallbackMethod_ScreenClick<ExperimentalWithCallbackMethod_CommunicationChannel<ExperimentalWithCallbackMethod_SetMotionROI<ExperimentalWithCallbackMethod_SetTrackWindow<ExperimentalWithCallbackMethod_SetCalibration<ExperimentalWithCallbackMethod_SetAselChangeLocations<Service > > > > > > > > > > > > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetPosition() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPosition(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::PosInfo* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MoveAbsolute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_MoveAbsolute() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_MoveAbsolute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveAbsolute(::grpc::ServerContext* context, const ::kaapi::AbsoluteMoveParameters* request, ::kaapi::AbsoluteMoveResult* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MoveRelative : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_MoveRelative() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_MoveRelative() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveRelative(::grpc::ServerContext* context, const ::kaapi::RelativeMoveParameters* request, ::kaapi::RelativeMoveResult* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCameraStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetCameraStatus() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetCameraStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCameraStatus(::grpc::ServerContext* context, const ::kaapi::GetCameraStatusParameters* request, ::kaapi::CameraStatus* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateCameraStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateCameraStatus() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_UpdateCameraStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCameraStatus(::grpc::ServerContext* context, const ::kaapi::UpdateCameraStatusParameters* request, ::kaapi::CameraStatus* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetCamera : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetCamera() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SetCamera() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCamera(::grpc::ServerContext* context, const ::kaapi::SetCameraRequest* request, ::kaapi::SetCameraResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNumericParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetNumericParameter() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetNumericParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNumericParameter(::grpc::ServerContext* context, const ::kaapi::GetNumericParameterRequest* request, ::kaapi::GetNumericParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEnumParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetEnumParameter() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetEnumParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEnumParameter(::grpc::ServerContext* context, const ::kaapi::GetEnumParameterRequest* request, ::kaapi::GetEnumParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetNumericParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetNumericParameter() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_SetNumericParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNumericParameter(::grpc::ServerContext* context, const ::kaapi::SetNumericParameterRequest* request, ::kaapi::SetNumericParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetEnumParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetEnumParameter() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_SetEnumParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumParameter(::grpc::ServerContext* context, const ::kaapi::SetEnumParameterRequest* request, ::kaapi::SetEnumParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetEnumCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetEnumCommand() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_SetEnumCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumCommand(::grpc::ServerContext* context, const ::kaapi::SetEnumCommandRequest* request, ::kaapi::SetEnumCommandResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetVersion() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVersion(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::ApiVersion* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ScreenClick : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ScreenClick() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_ScreenClick() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ScreenClick(::grpc::ServerContext* context, const ::kaapi::ClickParameter* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CommunicationChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CommunicationChannel() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_CommunicationChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommunicationChannel(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::kaapi::CommRead, ::kaapi::CommWrite>* stream)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetMotionROI : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetMotionROI() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_SetMotionROI() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMotionROI(::grpc::ServerContext* context, const ::kaapi::MotionROIRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetTrackWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetTrackWindow() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_SetTrackWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackWindow(::grpc::ServerContext* context, const ::kaapi::Rectangle* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetCalibration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetCalibration() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_SetCalibration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCalibration(::grpc::ServerContext* context, const ::kaapi::CalibrationRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetAselChangeLocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetAselChangeLocations() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_SetAselChangeLocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAselChangeLocations(::grpc::ServerContext* context, const ::kaapi::ListOfLocationInformation* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetPosition() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPosition(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::PosInfo* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPosition(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MoveAbsolute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_MoveAbsolute() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_MoveAbsolute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveAbsolute(::grpc::ServerContext* context, const ::kaapi::AbsoluteMoveParameters* request, ::kaapi::AbsoluteMoveResult* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveAbsolute(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MoveRelative : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_MoveRelative() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_MoveRelative() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveRelative(::grpc::ServerContext* context, const ::kaapi::RelativeMoveParameters* request, ::kaapi::RelativeMoveResult* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveRelative(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCameraStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetCameraStatus() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetCameraStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCameraStatus(::grpc::ServerContext* context, const ::kaapi::GetCameraStatusParameters* request, ::kaapi::CameraStatus* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCameraStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateCameraStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateCameraStatus() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_UpdateCameraStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCameraStatus(::grpc::ServerContext* context, const ::kaapi::UpdateCameraStatusParameters* request, ::kaapi::CameraStatus* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCameraStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetCamera : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SetCamera() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SetCamera() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCamera(::grpc::ServerContext* context, const ::kaapi::SetCameraRequest* request, ::kaapi::SetCameraResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCamera(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNumericParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetNumericParameter() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetNumericParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNumericParameter(::grpc::ServerContext* context, const ::kaapi::GetNumericParameterRequest* request, ::kaapi::GetNumericParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNumericParameter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEnumParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetEnumParameter() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetEnumParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEnumParameter(::grpc::ServerContext* context, const ::kaapi::GetEnumParameterRequest* request, ::kaapi::GetEnumParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEnumParameter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetNumericParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SetNumericParameter() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_SetNumericParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNumericParameter(::grpc::ServerContext* context, const ::kaapi::SetNumericParameterRequest* request, ::kaapi::SetNumericParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetNumericParameter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetEnumParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SetEnumParameter() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_SetEnumParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumParameter(::grpc::ServerContext* context, const ::kaapi::SetEnumParameterRequest* request, ::kaapi::SetEnumParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetEnumParameter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetEnumCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SetEnumCommand() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_SetEnumCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumCommand(::grpc::ServerContext* context, const ::kaapi::SetEnumCommandRequest* request, ::kaapi::SetEnumCommandResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetEnumCommand(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetVersion() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVersion(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::ApiVersion* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVersion(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ScreenClick : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ScreenClick() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_ScreenClick() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ScreenClick(::grpc::ServerContext* context, const ::kaapi::ClickParameter* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestScreenClick(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CommunicationChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CommunicationChannel() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_CommunicationChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommunicationChannel(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::kaapi::CommRead, ::kaapi::CommWrite>* stream)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCommunicationChannel(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(13, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetMotionROI : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SetMotionROI() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_SetMotionROI() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMotionROI(::grpc::ServerContext* context, const ::kaapi::MotionROIRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetMotionROI(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetTrackWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SetTrackWindow() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_SetTrackWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackWindow(::grpc::ServerContext* context, const ::kaapi::Rectangle* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetTrackWindow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetCalibration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SetCalibration() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_SetCalibration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCalibration(::grpc::ServerContext* context, const ::kaapi::CalibrationRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCalibration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetAselChangeLocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SetAselChangeLocations() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_SetAselChangeLocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAselChangeLocations(::grpc::ServerContext* context, const ::kaapi::ListOfLocationInformation* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetAselChangeLocations(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_GetPosition() {
      ::grpc::Service::experimental().MarkMethodRawCallback(0,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->GetPosition(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_GetPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPosition(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::PosInfo* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetPosition(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_MoveAbsolute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_MoveAbsolute() {
      ::grpc::Service::experimental().MarkMethodRawCallback(1,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->MoveAbsolute(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_MoveAbsolute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveAbsolute(::grpc::ServerContext* context, const ::kaapi::AbsoluteMoveParameters* request, ::kaapi::AbsoluteMoveResult* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void MoveAbsolute(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_MoveRelative : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_MoveRelative() {
      ::grpc::Service::experimental().MarkMethodRawCallback(2,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->MoveRelative(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_MoveRelative() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveRelative(::grpc::ServerContext* context, const ::kaapi::RelativeMoveParameters* request, ::kaapi::RelativeMoveResult* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void MoveRelative(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetCameraStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_GetCameraStatus() {
      ::grpc::Service::experimental().MarkMethodRawCallback(3,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->GetCameraStatus(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_GetCameraStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCameraStatus(::grpc::ServerContext* context, const ::kaapi::GetCameraStatusParameters* request, ::kaapi::CameraStatus* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetCameraStatus(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateCameraStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateCameraStatus() {
      ::grpc::Service::experimental().MarkMethodRawCallback(4,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->UpdateCameraStatus(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateCameraStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCameraStatus(::grpc::ServerContext* context, const ::kaapi::UpdateCameraStatusParameters* request, ::kaapi::CameraStatus* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void UpdateCameraStatus(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SetCamera : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_SetCamera() {
      ::grpc::Service::experimental().MarkMethodRawCallback(5,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->SetCamera(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_SetCamera() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCamera(::grpc::ServerContext* context, const ::kaapi::SetCameraRequest* request, ::kaapi::SetCameraResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetCamera(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetNumericParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_GetNumericParameter() {
      ::grpc::Service::experimental().MarkMethodRawCallback(6,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->GetNumericParameter(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_GetNumericParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNumericParameter(::grpc::ServerContext* context, const ::kaapi::GetNumericParameterRequest* request, ::kaapi::GetNumericParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetNumericParameter(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetEnumParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_GetEnumParameter() {
      ::grpc::Service::experimental().MarkMethodRawCallback(7,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->GetEnumParameter(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_GetEnumParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEnumParameter(::grpc::ServerContext* context, const ::kaapi::GetEnumParameterRequest* request, ::kaapi::GetEnumParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetEnumParameter(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SetNumericParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_SetNumericParameter() {
      ::grpc::Service::experimental().MarkMethodRawCallback(8,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->SetNumericParameter(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_SetNumericParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNumericParameter(::grpc::ServerContext* context, const ::kaapi::SetNumericParameterRequest* request, ::kaapi::SetNumericParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetNumericParameter(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SetEnumParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_SetEnumParameter() {
      ::grpc::Service::experimental().MarkMethodRawCallback(9,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->SetEnumParameter(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_SetEnumParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumParameter(::grpc::ServerContext* context, const ::kaapi::SetEnumParameterRequest* request, ::kaapi::SetEnumParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetEnumParameter(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SetEnumCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_SetEnumCommand() {
      ::grpc::Service::experimental().MarkMethodRawCallback(10,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->SetEnumCommand(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_SetEnumCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumCommand(::grpc::ServerContext* context, const ::kaapi::SetEnumCommandRequest* request, ::kaapi::SetEnumCommandResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetEnumCommand(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_GetVersion() {
      ::grpc::Service::experimental().MarkMethodRawCallback(11,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->GetVersion(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_GetVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVersion(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::ApiVersion* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetVersion(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ScreenClick : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_ScreenClick() {
      ::grpc::Service::experimental().MarkMethodRawCallback(12,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->ScreenClick(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_ScreenClick() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ScreenClick(::grpc::ServerContext* context, const ::kaapi::ClickParameter* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void ScreenClick(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CommunicationChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_CommunicationChannel() {
      ::grpc::Service::experimental().MarkMethodRawCallback(13,
        new ::grpc::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this] { return this->CommunicationChannel(); }));
    }
    ~ExperimentalWithRawCallbackMethod_CommunicationChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommunicationChannel(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::kaapi::CommRead, ::kaapi::CommWrite>* stream)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::experimental::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* CommunicationChannel() {
      return new ::grpc::internal::UnimplementedBidiReactor<
        ::grpc::ByteBuffer, ::grpc::ByteBuffer>;}
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SetMotionROI : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_SetMotionROI() {
      ::grpc::Service::experimental().MarkMethodRawCallback(14,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->SetMotionROI(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_SetMotionROI() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMotionROI(::grpc::ServerContext* context, const ::kaapi::MotionROIRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetMotionROI(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SetTrackWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_SetTrackWindow() {
      ::grpc::Service::experimental().MarkMethodRawCallback(15,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->SetTrackWindow(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_SetTrackWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackWindow(::grpc::ServerContext* context, const ::kaapi::Rectangle* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetTrackWindow(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SetCalibration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_SetCalibration() {
      ::grpc::Service::experimental().MarkMethodRawCallback(16,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->SetCalibration(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_SetCalibration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCalibration(::grpc::ServerContext* context, const ::kaapi::CalibrationRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetCalibration(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SetAselChangeLocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_SetAselChangeLocations() {
      ::grpc::Service::experimental().MarkMethodRawCallback(17,
        new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->SetAselChangeLocations(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_SetAselChangeLocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAselChangeLocations(::grpc::ServerContext* context, const ::kaapi::ListOfLocationInformation* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetAselChangeLocations(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetPosition() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::google::protobuf::Empty, ::kaapi::PosInfo>(std::bind(&WithStreamedUnaryMethod_GetPosition<BaseClass>::StreamedGetPosition, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPosition(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::PosInfo* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPosition(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::kaapi::PosInfo>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MoveAbsolute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_MoveAbsolute() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::AbsoluteMoveParameters, ::kaapi::AbsoluteMoveResult>(std::bind(&WithStreamedUnaryMethod_MoveAbsolute<BaseClass>::StreamedMoveAbsolute, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_MoveAbsolute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MoveAbsolute(::grpc::ServerContext* context, const ::kaapi::AbsoluteMoveParameters* request, ::kaapi::AbsoluteMoveResult* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMoveAbsolute(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::AbsoluteMoveParameters,::kaapi::AbsoluteMoveResult>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MoveRelative : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_MoveRelative() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::RelativeMoveParameters, ::kaapi::RelativeMoveResult>(std::bind(&WithStreamedUnaryMethod_MoveRelative<BaseClass>::StreamedMoveRelative, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_MoveRelative() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MoveRelative(::grpc::ServerContext* context, const ::kaapi::RelativeMoveParameters* request, ::kaapi::RelativeMoveResult* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMoveRelative(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::RelativeMoveParameters,::kaapi::RelativeMoveResult>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCameraStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetCameraStatus() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::GetCameraStatusParameters, ::kaapi::CameraStatus>(std::bind(&WithStreamedUnaryMethod_GetCameraStatus<BaseClass>::StreamedGetCameraStatus, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetCameraStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCameraStatus(::grpc::ServerContext* context, const ::kaapi::GetCameraStatusParameters* request, ::kaapi::CameraStatus* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCameraStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::GetCameraStatusParameters,::kaapi::CameraStatus>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateCameraStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateCameraStatus() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::UpdateCameraStatusParameters, ::kaapi::CameraStatus>(std::bind(&WithStreamedUnaryMethod_UpdateCameraStatus<BaseClass>::StreamedUpdateCameraStatus, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateCameraStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateCameraStatus(::grpc::ServerContext* context, const ::kaapi::UpdateCameraStatusParameters* request, ::kaapi::CameraStatus* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateCameraStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::UpdateCameraStatusParameters,::kaapi::CameraStatus>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetCamera : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetCamera() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::SetCameraRequest, ::kaapi::SetCameraResponse>(std::bind(&WithStreamedUnaryMethod_SetCamera<BaseClass>::StreamedSetCamera, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetCamera() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetCamera(::grpc::ServerContext* context, const ::kaapi::SetCameraRequest* request, ::kaapi::SetCameraResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetCamera(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::SetCameraRequest,::kaapi::SetCameraResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetNumericParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetNumericParameter() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::GetNumericParameterRequest, ::kaapi::GetNumericParameterResponse>(std::bind(&WithStreamedUnaryMethod_GetNumericParameter<BaseClass>::StreamedGetNumericParameter, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetNumericParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNumericParameter(::grpc::ServerContext* context, const ::kaapi::GetNumericParameterRequest* request, ::kaapi::GetNumericParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetNumericParameter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::GetNumericParameterRequest,::kaapi::GetNumericParameterResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEnumParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetEnumParameter() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::GetEnumParameterRequest, ::kaapi::GetEnumParameterResponse>(std::bind(&WithStreamedUnaryMethod_GetEnumParameter<BaseClass>::StreamedGetEnumParameter, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetEnumParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEnumParameter(::grpc::ServerContext* context, const ::kaapi::GetEnumParameterRequest* request, ::kaapi::GetEnumParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEnumParameter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::GetEnumParameterRequest,::kaapi::GetEnumParameterResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetNumericParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetNumericParameter() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::SetNumericParameterRequest, ::kaapi::SetNumericParameterResponse>(std::bind(&WithStreamedUnaryMethod_SetNumericParameter<BaseClass>::StreamedSetNumericParameter, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetNumericParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetNumericParameter(::grpc::ServerContext* context, const ::kaapi::SetNumericParameterRequest* request, ::kaapi::SetNumericParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetNumericParameter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::SetNumericParameterRequest,::kaapi::SetNumericParameterResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetEnumParameter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetEnumParameter() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::SetEnumParameterRequest, ::kaapi::SetEnumParameterResponse>(std::bind(&WithStreamedUnaryMethod_SetEnumParameter<BaseClass>::StreamedSetEnumParameter, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetEnumParameter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetEnumParameter(::grpc::ServerContext* context, const ::kaapi::SetEnumParameterRequest* request, ::kaapi::SetEnumParameterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetEnumParameter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::SetEnumParameterRequest,::kaapi::SetEnumParameterResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetEnumCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetEnumCommand() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::SetEnumCommandRequest, ::kaapi::SetEnumCommandResponse>(std::bind(&WithStreamedUnaryMethod_SetEnumCommand<BaseClass>::StreamedSetEnumCommand, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetEnumCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetEnumCommand(::grpc::ServerContext* context, const ::kaapi::SetEnumCommandRequest* request, ::kaapi::SetEnumCommandResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetEnumCommand(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::SetEnumCommandRequest,::kaapi::SetEnumCommandResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetVersion() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler< ::google::protobuf::Empty, ::kaapi::ApiVersion>(std::bind(&WithStreamedUnaryMethod_GetVersion<BaseClass>::StreamedGetVersion, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetVersion(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::kaapi::ApiVersion* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetVersion(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::kaapi::ApiVersion>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ScreenClick : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ScreenClick() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::ClickParameter, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_ScreenClick<BaseClass>::StreamedScreenClick, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ScreenClick() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ScreenClick(::grpc::ServerContext* context, const ::kaapi::ClickParameter* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedScreenClick(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::ClickParameter,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetMotionROI : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetMotionROI() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::MotionROIRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_SetMotionROI<BaseClass>::StreamedSetMotionROI, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetMotionROI() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetMotionROI(::grpc::ServerContext* context, const ::kaapi::MotionROIRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetMotionROI(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::MotionROIRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetTrackWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetTrackWindow() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::Rectangle, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_SetTrackWindow<BaseClass>::StreamedSetTrackWindow, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetTrackWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetTrackWindow(::grpc::ServerContext* context, const ::kaapi::Rectangle* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetTrackWindow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::Rectangle,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetCalibration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetCalibration() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::CalibrationRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_SetCalibration<BaseClass>::StreamedSetCalibration, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetCalibration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetCalibration(::grpc::ServerContext* context, const ::kaapi::CalibrationRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetCalibration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::CalibrationRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetAselChangeLocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetAselChangeLocations() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler< ::kaapi::ListOfLocationInformation, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_SetAselChangeLocations<BaseClass>::StreamedSetAselChangeLocations, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetAselChangeLocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetAselChangeLocations(::grpc::ServerContext* context, const ::kaapi::ListOfLocationInformation* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetAselChangeLocations(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::kaapi::ListOfLocationInformation,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetPosition<WithStreamedUnaryMethod_MoveAbsolute<WithStreamedUnaryMethod_MoveRelative<WithStreamedUnaryMethod_GetCameraStatus<WithStreamedUnaryMethod_UpdateCameraStatus<WithStreamedUnaryMethod_SetCamera<WithStreamedUnaryMethod_GetNumericParameter<WithStreamedUnaryMethod_GetEnumParameter<WithStreamedUnaryMethod_SetNumericParameter<WithStreamedUnaryMethod_SetEnumParameter<WithStreamedUnaryMethod_SetEnumCommand<WithStreamedUnaryMethod_GetVersion<WithStreamedUnaryMethod_ScreenClick<WithStreamedUnaryMethod_SetMotionROI<WithStreamedUnaryMethod_SetTrackWindow<WithStreamedUnaryMethod_SetCalibration<WithStreamedUnaryMethod_SetAselChangeLocations<Service > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetPosition<WithStreamedUnaryMethod_MoveAbsolute<WithStreamedUnaryMethod_MoveRelative<WithStreamedUnaryMethod_GetCameraStatus<WithStreamedUnaryMethod_UpdateCameraStatus<WithStreamedUnaryMethod_SetCamera<WithStreamedUnaryMethod_GetNumericParameter<WithStreamedUnaryMethod_GetEnumParameter<WithStreamedUnaryMethod_SetNumericParameter<WithStreamedUnaryMethod_SetEnumParameter<WithStreamedUnaryMethod_SetEnumCommand<WithStreamedUnaryMethod_GetVersion<WithStreamedUnaryMethod_ScreenClick<WithStreamedUnaryMethod_SetMotionROI<WithStreamedUnaryMethod_SetTrackWindow<WithStreamedUnaryMethod_SetCalibration<WithStreamedUnaryMethod_SetAselChangeLocations<Service > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace kaapi


#endif  // GRPC_KardelenAPI_2eproto__INCLUDED
