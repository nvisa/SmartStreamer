// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrionCommunication.proto

#include "OrionCommunication.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_OrionCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TPoint_OrionCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OrionCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TrackObjectQ_OrionCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OrionCommunication_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TPolygon_OrionCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OrionCommunication_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TRectangle_OrionCommunication_2eproto;
namespace OrionCommunication {
class PanoramaParsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PanoramaPars> _instance;
} _PanoramaPars_default_instance_;
class TRoiDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TRoi> _instance;
} _TRoi_default_instance_;
class TPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPoint> _instance;
} _TPoint_default_instance_;
class TPolygonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPolygon> _instance;
} _TPolygon_default_instance_;
class TRectangleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TRectangle> _instance;
} _TRectangle_default_instance_;
class ModeQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModeQ> _instance;
} _ModeQ_default_instance_;
class DummyInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DummyInfo> _instance;
} _DummyInfo_default_instance_;
class MotionDetectionParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MotionDetectionParameters> _instance;
} _MotionDetectionParameters_default_instance_;
class AppCommandResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppCommandResult> _instance;
} _AppCommandResult_default_instance_;
class BitrateValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BitrateValue> _instance;
} _BitrateValue_default_instance_;
class ReturnUptimeValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReturnUptimeValue> _instance;
} _ReturnUptimeValue_default_instance_;
class ReturnFOVValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReturnFOVValue> _instance;
} _ReturnFOVValue_default_instance_;
class DevicedBasedInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DevicedBasedInfo> _instance;
} _DevicedBasedInfo_default_instance_;
class ItemPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemProperty> _instance;
} _ItemProperty_default_instance_;
class AryaParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AryaParameters> _instance;
} _AryaParameters_default_instance_;
class FrameModeQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrameModeQ> _instance;
} _FrameModeQ_default_instance_;
class CitMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CitMessage> _instance;
} _CitMessage_default_instance_;
class PanoramaFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PanoramaFrame> _instance;
} _PanoramaFrame_default_instance_;
class ScreenFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScreenFrame> _instance;
} _ScreenFrame_default_instance_;
class SetSensivityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetSensivity> _instance;
} _SetSensivity_default_instance_;
class OverlayQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OverlayQ> _instance;
} _OverlayQ_default_instance_;
class TrackObjectQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrackObjectQ> _instance;
} _TrackObjectQ_default_instance_;
class AutoTrackQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutoTrackQ> _instance;
} _AutoTrackQ_default_instance_;
}  // namespace OrionCommunication
static void InitDefaultsPanoramaPars_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_PanoramaPars_default_instance_;
    new (ptr) ::OrionCommunication::PanoramaPars();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::PanoramaPars::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PanoramaPars_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPanoramaPars_OrionCommunication_2eproto}, {}};

static void InitDefaultsTRoi_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_TRoi_default_instance_;
    new (ptr) ::OrionCommunication::TRoi();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::TRoi::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TRoi_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTRoi_OrionCommunication_2eproto}, {
      &scc_info_TPolygon_OrionCommunication_2eproto.base,
      &scc_info_TRectangle_OrionCommunication_2eproto.base,}};

static void InitDefaultsTPoint_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_TPoint_default_instance_;
    new (ptr) ::OrionCommunication::TPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::TPoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TPoint_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTPoint_OrionCommunication_2eproto}, {}};

static void InitDefaultsTPolygon_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_TPolygon_default_instance_;
    new (ptr) ::OrionCommunication::TPolygon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::TPolygon::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TPolygon_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTPolygon_OrionCommunication_2eproto}, {
      &scc_info_TPoint_OrionCommunication_2eproto.base,}};

static void InitDefaultsTRectangle_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_TRectangle_default_instance_;
    new (ptr) ::OrionCommunication::TRectangle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::TRectangle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TRectangle_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTRectangle_OrionCommunication_2eproto}, {
      &scc_info_TPoint_OrionCommunication_2eproto.base,}};

static void InitDefaultsModeQ_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_ModeQ_default_instance_;
    new (ptr) ::OrionCommunication::ModeQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::ModeQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModeQ_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModeQ_OrionCommunication_2eproto}, {}};

static void InitDefaultsDummyInfo_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_DummyInfo_default_instance_;
    new (ptr) ::OrionCommunication::DummyInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::DummyInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DummyInfo_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDummyInfo_OrionCommunication_2eproto}, {}};

static void InitDefaultsMotionDetectionParameters_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_MotionDetectionParameters_default_instance_;
    new (ptr) ::OrionCommunication::MotionDetectionParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::MotionDetectionParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MotionDetectionParameters_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMotionDetectionParameters_OrionCommunication_2eproto}, {}};

static void InitDefaultsAppCommandResult_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_AppCommandResult_default_instance_;
    new (ptr) ::OrionCommunication::AppCommandResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::AppCommandResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AppCommandResult_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAppCommandResult_OrionCommunication_2eproto}, {}};

static void InitDefaultsBitrateValue_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_BitrateValue_default_instance_;
    new (ptr) ::OrionCommunication::BitrateValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::BitrateValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BitrateValue_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBitrateValue_OrionCommunication_2eproto}, {}};

static void InitDefaultsReturnUptimeValue_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_ReturnUptimeValue_default_instance_;
    new (ptr) ::OrionCommunication::ReturnUptimeValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::ReturnUptimeValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReturnUptimeValue_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReturnUptimeValue_OrionCommunication_2eproto}, {}};

static void InitDefaultsReturnFOVValue_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_ReturnFOVValue_default_instance_;
    new (ptr) ::OrionCommunication::ReturnFOVValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::ReturnFOVValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReturnFOVValue_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReturnFOVValue_OrionCommunication_2eproto}, {}};

static void InitDefaultsDevicedBasedInfo_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_DevicedBasedInfo_default_instance_;
    new (ptr) ::OrionCommunication::DevicedBasedInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::DevicedBasedInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DevicedBasedInfo_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDevicedBasedInfo_OrionCommunication_2eproto}, {}};

static void InitDefaultsItemProperty_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_ItemProperty_default_instance_;
    new (ptr) ::OrionCommunication::ItemProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::ItemProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ItemProperty_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsItemProperty_OrionCommunication_2eproto}, {}};

static void InitDefaultsAryaParameters_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_AryaParameters_default_instance_;
    new (ptr) ::OrionCommunication::AryaParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::AryaParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AryaParameters_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAryaParameters_OrionCommunication_2eproto}, {}};

static void InitDefaultsFrameModeQ_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_FrameModeQ_default_instance_;
    new (ptr) ::OrionCommunication::FrameModeQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::FrameModeQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FrameModeQ_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFrameModeQ_OrionCommunication_2eproto}, {}};

static void InitDefaultsCitMessage_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_CitMessage_default_instance_;
    new (ptr) ::OrionCommunication::CitMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::CitMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CitMessage_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCitMessage_OrionCommunication_2eproto}, {}};

static void InitDefaultsPanoramaFrame_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_PanoramaFrame_default_instance_;
    new (ptr) ::OrionCommunication::PanoramaFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::PanoramaFrame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PanoramaFrame_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPanoramaFrame_OrionCommunication_2eproto}, {}};

static void InitDefaultsScreenFrame_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_ScreenFrame_default_instance_;
    new (ptr) ::OrionCommunication::ScreenFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::ScreenFrame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScreenFrame_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScreenFrame_OrionCommunication_2eproto}, {}};

static void InitDefaultsSetSensivity_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_SetSensivity_default_instance_;
    new (ptr) ::OrionCommunication::SetSensivity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::SetSensivity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetSensivity_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetSensivity_OrionCommunication_2eproto}, {}};

static void InitDefaultsOverlayQ_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_OverlayQ_default_instance_;
    new (ptr) ::OrionCommunication::OverlayQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::OverlayQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OverlayQ_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOverlayQ_OrionCommunication_2eproto}, {}};

static void InitDefaultsTrackObjectQ_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_TrackObjectQ_default_instance_;
    new (ptr) ::OrionCommunication::TrackObjectQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::TrackObjectQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TrackObjectQ_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrackObjectQ_OrionCommunication_2eproto}, {}};

static void InitDefaultsAutoTrackQ_OrionCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OrionCommunication::_AutoTrackQ_default_instance_;
    new (ptr) ::OrionCommunication::AutoTrackQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::AutoTrackQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AutoTrackQ_OrionCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAutoTrackQ_OrionCommunication_2eproto}, {
      &scc_info_TrackObjectQ_OrionCommunication_2eproto.base,}};

void InitDefaults_OrionCommunication_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_PanoramaPars_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TRoi_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TPoint_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TPolygon_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TRectangle_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModeQ_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DummyInfo_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MotionDetectionParameters_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppCommandResult_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BitrateValue_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReturnUptimeValue_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReturnFOVValue_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DevicedBasedInfo_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ItemProperty_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AryaParameters_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FrameModeQ_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CitMessage_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PanoramaFrame_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScreenFrame_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetSensivity_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OverlayQ_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TrackObjectQ_OrionCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutoTrackQ_OrionCommunication_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_OrionCommunication_2eproto[23];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_OrionCommunication_2eproto[8];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_OrionCommunication_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_OrionCommunication_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaPars, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaPars, pos_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaPars, fov_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaPars, update_rate_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaPars, pan_start_angle_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaPars, y_start_pos_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaPars, widthx_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaPars, heighty_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaPars, fix_mode_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaPars, pan_motion_frame_no_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TRoi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TRoi, polygon_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TRoi, rect1_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TRoi, rect2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TPoint, x_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TPoint, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TPolygon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TPolygon, points_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TPolygon, is_active_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TRectangle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TRectangle, upperleft_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TRectangle, bottomright_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::ModeQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::ModeQ, mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::DummyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::DummyInfo, dummy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::MotionDetectionParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::MotionDetectionParameters, dummy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::AppCommandResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::AppCommandResult, err_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::AppCommandResult, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::BitrateValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::BitrateValue, bitratevalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::ReturnUptimeValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::ReturnUptimeValue, uptimevalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::ReturnFOVValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::ReturnFOVValue, fovvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::DevicedBasedInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::DevicedBasedInfo, device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::ItemProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::ItemProperty, itemtype_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::ItemProperty, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::AryaParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::AryaParameters, panspeed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::FrameModeQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::FrameModeQ, mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::CitMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::CitMessage, currentstep_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::CitMessage, stepcount_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::CitMessage, currentstepprogress_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::CitMessage, currentstepprogresstotal_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::CitMessage, msg_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::CitMessage, citresult_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaFrame, valid_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaFrame, progress_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::PanoramaFrame, framedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::ScreenFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::ScreenFrame, frame_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::SetSensivity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::SetSensivity, sensivity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::OverlayQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::OverlayQ, configno_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::OverlayQ, pos_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::OverlayQ, posx_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::OverlayQ, posy_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::OverlayQ, text_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::OverlayQ, display_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::OverlayQ, textsize_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::OverlayQ, datetimeformat_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::OverlayQ, displaydate_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::OverlayQ, displaytime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TrackObjectQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TrackObjectQ, point_x_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TrackObjectQ, point_y_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TrackObjectQ, width_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::TrackObjectQ, height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::AutoTrackQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::AutoTrackQ, mode_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::AutoTrackQ, trackscore_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::AutoTrackQ, trackinterval_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::AutoTrackQ, object_),
  PROTOBUF_FIELD_OFFSET(::OrionCommunication::AutoTrackQ, device_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::OrionCommunication::PanoramaPars)},
  { 14, -1, sizeof(::OrionCommunication::TRoi)},
  { 22, -1, sizeof(::OrionCommunication::TPoint)},
  { 29, -1, sizeof(::OrionCommunication::TPolygon)},
  { 36, -1, sizeof(::OrionCommunication::TRectangle)},
  { 43, -1, sizeof(::OrionCommunication::ModeQ)},
  { 49, -1, sizeof(::OrionCommunication::DummyInfo)},
  { 55, -1, sizeof(::OrionCommunication::MotionDetectionParameters)},
  { 61, -1, sizeof(::OrionCommunication::AppCommandResult)},
  { 68, -1, sizeof(::OrionCommunication::BitrateValue)},
  { 74, -1, sizeof(::OrionCommunication::ReturnUptimeValue)},
  { 80, -1, sizeof(::OrionCommunication::ReturnFOVValue)},
  { 86, -1, sizeof(::OrionCommunication::DevicedBasedInfo)},
  { 92, -1, sizeof(::OrionCommunication::ItemProperty)},
  { 99, -1, sizeof(::OrionCommunication::AryaParameters)},
  { 105, -1, sizeof(::OrionCommunication::FrameModeQ)},
  { 111, -1, sizeof(::OrionCommunication::CitMessage)},
  { 122, -1, sizeof(::OrionCommunication::PanoramaFrame)},
  { 130, -1, sizeof(::OrionCommunication::ScreenFrame)},
  { 136, -1, sizeof(::OrionCommunication::SetSensivity)},
  { 142, -1, sizeof(::OrionCommunication::OverlayQ)},
  { 157, -1, sizeof(::OrionCommunication::TrackObjectQ)},
  { 166, -1, sizeof(::OrionCommunication::AutoTrackQ)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_PanoramaPars_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_TRoi_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_TPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_TPolygon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_TRectangle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_ModeQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_DummyInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_MotionDetectionParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_AppCommandResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_BitrateValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_ReturnUptimeValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_ReturnFOVValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_DevicedBasedInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_ItemProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_AryaParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_FrameModeQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_CitMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_PanoramaFrame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_ScreenFrame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_SetSensivity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_OverlayQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_TrackObjectQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_AutoTrackQ_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_OrionCommunication_2eproto = {
  {}, AddDescriptors_OrionCommunication_2eproto, "OrionCommunication.proto", schemas,
  file_default_instances, TableStruct_OrionCommunication_2eproto::offsets,
  file_level_metadata_OrionCommunication_2eproto, 23, file_level_enum_descriptors_OrionCommunication_2eproto, file_level_service_descriptors_OrionCommunication_2eproto,
};

const char descriptor_table_protodef_OrionCommunication_2eproto[] =
  "\n\030OrionCommunication.proto\022\022OrionCommuni"
  "cation\"\273\001\n\014PanoramaPars\022\013\n\003pos\030\001 \001(\005\022\013\n\003"
  "fov\030\002 \001(\005\022\023\n\013update_rate\030\003 \001(\002\022\027\n\017pan_st"
  "art_angle\030\004 \001(\002\022\023\n\013y_start_pos\030\005 \001(\005\022\016\n\006"
  "widthx\030\006 \001(\005\022\017\n\007heighty\030\007 \001(\005\022\020\n\010fix_mod"
  "e\030\010 \001(\005\022\033\n\023pan_motion_frame_no\030\t \001(\005\"\223\001\n"
  "\004TRoi\022-\n\007polygon\030\001 \003(\0132\034.OrionCommunicat"
  "ion.TPolygon\022-\n\005rect1\030\002 \001(\0132\036.OrionCommu"
  "nication.TRectangle\022-\n\005rect2\030\003 \001(\0132\036.Ori"
  "onCommunication.TRectangle\"\036\n\006TPoint\022\t\n\001"
  "x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\"I\n\010TPolygon\022*\n\006points"
  "\030\001 \003(\0132\032.OrionCommunication.TPoint\022\021\n\tis"
  "_active\030\002 \001(\010\"l\n\nTRectangle\022-\n\tupperLeft"
  "\030\001 \001(\0132\032.OrionCommunication.TPoint\022/\n\013bo"
  "ttomRight\030\002 \001(\0132\032.OrionCommunication.TPo"
  "int\"v\n\005ModeQ\022,\n\004mode\030\001 \001(\0162\036.OrionCommun"
  "ication.ModeQ.Mode\"\?\n\004Mode\022\010\n\004NONE\020\000\022\014\n\010"
  "PANAROMA\020\001\022\024\n\020MOTION_DETECTION\020\002\022\t\n\005TRAC"
  "K\020\003\"\032\n\tDummyInfo\022\r\n\005dummy\030\001 \001(\005\"*\n\031Motio"
  "nDetectionParameters\022\r\n\005dummy\030\001 \001(\005\"\223\001\n\020"
  "AppCommandResult\022\013\n\003err\030\001 \001(\005\022\?\n\010respons"
  "e\030\002 \001(\0162-.OrionCommunication.AppCommandR"
  "esult.Response\"1\n\010Response\022\016\n\nSUCCESSFUL"
  "\020\000\022\010\n\004FAIL\020\001\022\013\n\007MISSING\020\002\"$\n\014BitrateValu"
  "e\022\024\n\014bitrateValue\030\001 \001(\005\"(\n\021ReturnUptimeV"
  "alue\022\023\n\013uptimeValue\030\001 \001(\005\"\"\n\016ReturnFOVVa"
  "lue\022\020\n\010fovValue\030\001 \001(\002\"v\n\020DevicedBasedInf"
  "o\022\?\n\006device\030\001 \001(\0162/.OrionCommunication.D"
  "evicedBasedInfo.DeviceType\"!\n\nDeviceType"
  "\022\006\n\002TV\020\000\022\013\n\007Thermal\020\001\"}\n\014ItemProperty\022;\n"
  "\010itemType\030\001 \001(\0162).OrionCommunication.Ite"
  "mProperty.ItemType\022\r\n\005state\030\002 \001(\010\"!\n\010Ite"
  "mType\022\n\n\006Washer\020\000\022\t\n\005Wiper\020\001\"\"\n\016AryaPara"
  "meters\022\020\n\010panSpeed\030\001 \001(\005\"o\n\nFrameModeQ\0226"
  "\n\004mode\030\001 \001(\0162(.OrionCommunication.FrameM"
  "odeQ.FrameMode\")\n\tFrameMode\022\r\n\tLastFrame"
  "\020\000\022\r\n\tAllFrames\020\001\"\223\001\n\nCitMessage\022\023\n\013curr"
  "entStep\030\001 \001(\005\022\021\n\tstepCount\030\002 \001(\005\022\033\n\023curr"
  "entStepProgress\030\003 \001(\005\022 \n\030currentStepProg"
  "ressTotal\030\004 \001(\005\022\013\n\003msg\030\005 \001(\t\022\021\n\tcitResul"
  "t\030\006 \003(\t\"C\n\rPanoramaFrame\022\r\n\005valid\030\001 \001(\010\022"
  "\020\n\010progress\030\002 \001(\002\022\021\n\tframeData\030\003 \001(\014\"\034\n\013"
  "ScreenFrame\022\r\n\005frame\030\001 \001(\014\"!\n\014SetSensivi"
  "ty\022\021\n\tsensivity\030\001 \001(\005\"\265\002\n\010OverlayQ\022\020\n\010co"
  "nfigNo\030\001 \001(\005\0222\n\003pos\030\002 \001(\0162%.OrionCommuni"
  "cation.OverlayQ.Position\022\014\n\004posx\030\003 \001(\005\022\014"
  "\n\004posy\030\004 \001(\005\022\014\n\004text\030\005 \001(\t\022\017\n\007display\030\006 "
  "\001(\005\022\020\n\010textSize\030\007 \001(\005\022\026\n\016dateTimeFormat\030"
  "\010 \001(\005\022\023\n\013displayDate\030\t \001(\005\022\023\n\013displayTim"
  "e\030\n \001(\005\"T\n\010Position\022\r\n\tUpperLeft\020\000\022\016\n\nUp"
  "perRight\020\001\022\r\n\tLowerLeft\020\002\022\016\n\nLowerRight\020"
  "\003\022\n\n\006Custom\020\004\"O\n\014TrackObjectQ\022\017\n\007point_x"
  "\030\001 \001(\002\022\017\n\007point_y\030\002 \001(\002\022\r\n\005width\030\003 \001(\002\022\016"
  "\n\006height\030\004 \001(\002\"\270\002\n\nAutoTrackQ\0221\n\004mode\030\001 "
  "\001(\0162#.OrionCommunication.AutoTrackQ.Mode"
  "\022\022\n\ntrackScore\030\002 \001(\002\022\025\n\rtrackInterval\030\003 "
  "\001(\005\0220\n\006object\030\004 \001(\0132 .OrionCommunication"
  ".TrackObjectQ\0229\n\006device\030\005 \001(\0162).OrionCom"
  "munication.AutoTrackQ.DeviceType\"<\n\004Mode"
  "\022\024\n\020DistanceToCenter\020\000\022\020\n\014SizeOfObject\020\001"
  "\022\014\n\010UserMode\020\002\"!\n\nDeviceType\022\006\n\002TV\020\000\022\013\n\007"
  "Thermal\020\0012\317\026\n\031OrionCommunicationService\022"
  "a\n\025SetPanaromaParameters\022 .OrionCommunic"
  "ation.PanoramaPars\032$.OrionCommunication."
  "AppCommandResult\"\000\022Z\n\025GetPanaromaParamet"
  "ers\022\035.OrionCommunication.DummyInfo\032 .Ori"
  "onCommunication.PanoramaPars\"\000\022`\n\034SetMot"
  "ionDetectionParameters\022\030.OrionCommunicat"
  "ion.TRoi\032$.OrionCommunication.AppCommand"
  "Result\"\000\022Y\n\034GetMotionDetectionParameters"
  "\022\035.OrionCommunication.DummyInfo\032\030.OrionC"
  "ommunication.TRoi\"\000\022V\n\016SetCurrentMode\022\031."
  "OrionCommunication.ModeQ\032$.OrionCommunic"
  "ation.AppCommandResult\"\003\210\002\001\022O\n\016GetCurren"
  "tMode\022\035.OrionCommunication.DummyInfo\032\031.O"
  "rionCommunication.ModeQ\"\003\210\002\001\022a\n\025SetSensi"
  "vityParameter\022 .OrionCommunication.SetSe"
  "nsivity\032$.OrionCommunication.AppCommandR"
  "esult\"\000\022Z\n\025GetSensivityParameter\022\035.Orion"
  "Communication.DummyInfo\032 .OrionCommunica"
  "tion.SetSensivity\"\000\022]\n\024GetLastPanaromaFr"
  "ame\022\035.OrionCommunication.DummyInfo\032$.Ori"
  "onCommunication.AppCommandResult\"\000\022Z\n\021Ge"
  "tPanaromaFrames\022\036.OrionCommunication.Fra"
  "meModeQ\032!.OrionCommunication.PanoramaFra"
  "me\"\0000\001\022R\n\tRunMotion\022\035.OrionCommunication"
  ".DummyInfo\032$.OrionCommunication.AppComma"
  "ndResult\"\000\022T\n\013RunPanaroma\022\035.OrionCommuni"
  "cation.DummyInfo\032$.OrionCommunication.Ap"
  "pCommandResult\"\000\022S\n\nStopMotion\022\035.OrionCo"
  "mmunication.DummyInfo\032$.OrionCommunicati"
  "on.AppCommandResult\"\000\022U\n\014StopPanaroma\022\035."
  "OrionCommunication.DummyInfo\032$.OrionComm"
  "unication.AppCommandResult\"\000\022W\n\016RunCalib"
  "ration\022\035.OrionCommunication.DummyInfo\032$."
  "OrionCommunication.AppCommandResult\"\000\022X\n"
  "\017StopCalibration\022\035.OrionCommunication.Du"
  "mmyInfo\032$.OrionCommunication.AppCommandR"
  "esult\"\000\022`\n\020RunStabilization\022$.OrionCommu"
  "nication.DevicedBasedInfo\032$.OrionCommuni"
  "cation.AppCommandResult\"\000\022a\n\021StopStabili"
  "zation\022$.OrionCommunication.DevicedBased"
  "Info\032$.OrionCommunication.AppCommandResu"
  "lt\"\000\022Z\n\tGetUptime\022$.OrionCommunication.D"
  "evicedBasedInfo\032%.OrionCommunication.Ret"
  "urnUptimeValue\"\000\022Y\n\013GetFovValue\022$.OrionC"
  "ommunication.DevicedBasedInfo\032\".OrionCom"
  "munication.ReturnFOVValue\"\000\022[\n\017SetItemPr"
  "operty\022 .OrionCommunication.ItemProperty"
  "\032$.OrionCommunication.AppCommandResult\"\000"
  "\022W\n\017GetItemProperty\022 .OrionCommunication"
  ".ItemProperty\032 .OrionCommunication.ItemP"
  "roperty\"\000\022V\n\nSetBitrate\022 .OrionCommunica"
  "tion.BitrateValue\032$.OrionCommunication.A"
  "ppCommandResult\"\000\022O\n\nGetBitrate\022\035.OrionC"
  "ommunication.DummyInfo\032 .OrionCommunicat"
  "ion.BitrateValue\"\000\022K\n\006RunCIT\022\035.OrionComm"
  "unication.DummyInfo\032\036.OrionCommunication"
  ".CitMessage\"\0000\001\022U\n\021GetMainScreenShot\022\035.O"
  "rionCommunication.DummyInfo\032\037.OrionCommu"
  "nication.ScreenFrame\"\000\022T\n\020GetSecScreenSh"
  "ot\022\035.OrionCommunication.DummyInfo\032\037.Orio"
  "nCommunication.ScreenFrame\"\000\022W\n\021GotoPana"
  "romaPixel\022\032.OrionCommunication.TPoint\032$."
  "OrionCommunication.AppCommandResult\"\000\022S\n"
  "\024CurrentPanaromaPixel\022\035.OrionCommunicati"
  "on.DummyInfo\032\032.OrionCommunication.TPoint"
  "\"\000\022V\n\014RunAutoTrack\022\036.OrionCommunication."
  "AutoTrackQ\032$.OrionCommunication.AppComma"
  "ndResult\"\000\022V\n\rStopAutoTrack\022\035.OrionCommu"
  "nication.DummyInfo\032$.OrionCommunication."
  "AppCommandResult\"\000\022W\n\017SetVideoOverlay\022\034."
  "OrionCommunication.OverlayQ\032$.OrionCommu"
  "nication.AppCommandResult\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_OrionCommunication_2eproto = {
  false, InitDefaults_OrionCommunication_2eproto, 
  descriptor_table_protodef_OrionCommunication_2eproto,
  "OrionCommunication.proto", &assign_descriptors_table_OrionCommunication_2eproto, 5355,
};

void AddDescriptors_OrionCommunication_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_OrionCommunication_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_OrionCommunication_2eproto = []() { AddDescriptors_OrionCommunication_2eproto(); return true; }();
namespace OrionCommunication {
const ::google::protobuf::EnumDescriptor* ModeQ_Mode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_OrionCommunication_2eproto);
  return file_level_enum_descriptors_OrionCommunication_2eproto[0];
}
bool ModeQ_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ModeQ_Mode ModeQ::NONE;
const ModeQ_Mode ModeQ::PANAROMA;
const ModeQ_Mode ModeQ::MOTION_DETECTION;
const ModeQ_Mode ModeQ::TRACK;
const ModeQ_Mode ModeQ::Mode_MIN;
const ModeQ_Mode ModeQ::Mode_MAX;
const int ModeQ::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AppCommandResult_Response_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_OrionCommunication_2eproto);
  return file_level_enum_descriptors_OrionCommunication_2eproto[1];
}
bool AppCommandResult_Response_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AppCommandResult_Response AppCommandResult::SUCCESSFUL;
const AppCommandResult_Response AppCommandResult::FAIL;
const AppCommandResult_Response AppCommandResult::MISSING;
const AppCommandResult_Response AppCommandResult::Response_MIN;
const AppCommandResult_Response AppCommandResult::Response_MAX;
const int AppCommandResult::Response_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DevicedBasedInfo_DeviceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_OrionCommunication_2eproto);
  return file_level_enum_descriptors_OrionCommunication_2eproto[2];
}
bool DevicedBasedInfo_DeviceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DevicedBasedInfo_DeviceType DevicedBasedInfo::TV;
const DevicedBasedInfo_DeviceType DevicedBasedInfo::Thermal;
const DevicedBasedInfo_DeviceType DevicedBasedInfo::DeviceType_MIN;
const DevicedBasedInfo_DeviceType DevicedBasedInfo::DeviceType_MAX;
const int DevicedBasedInfo::DeviceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ItemProperty_ItemType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_OrionCommunication_2eproto);
  return file_level_enum_descriptors_OrionCommunication_2eproto[3];
}
bool ItemProperty_ItemType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ItemProperty_ItemType ItemProperty::Washer;
const ItemProperty_ItemType ItemProperty::Wiper;
const ItemProperty_ItemType ItemProperty::ItemType_MIN;
const ItemProperty_ItemType ItemProperty::ItemType_MAX;
const int ItemProperty::ItemType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FrameModeQ_FrameMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_OrionCommunication_2eproto);
  return file_level_enum_descriptors_OrionCommunication_2eproto[4];
}
bool FrameModeQ_FrameMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FrameModeQ_FrameMode FrameModeQ::LastFrame;
const FrameModeQ_FrameMode FrameModeQ::AllFrames;
const FrameModeQ_FrameMode FrameModeQ::FrameMode_MIN;
const FrameModeQ_FrameMode FrameModeQ::FrameMode_MAX;
const int FrameModeQ::FrameMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OverlayQ_Position_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_OrionCommunication_2eproto);
  return file_level_enum_descriptors_OrionCommunication_2eproto[5];
}
bool OverlayQ_Position_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OverlayQ_Position OverlayQ::UpperLeft;
const OverlayQ_Position OverlayQ::UpperRight;
const OverlayQ_Position OverlayQ::LowerLeft;
const OverlayQ_Position OverlayQ::LowerRight;
const OverlayQ_Position OverlayQ::Custom;
const OverlayQ_Position OverlayQ::Position_MIN;
const OverlayQ_Position OverlayQ::Position_MAX;
const int OverlayQ::Position_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AutoTrackQ_Mode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_OrionCommunication_2eproto);
  return file_level_enum_descriptors_OrionCommunication_2eproto[6];
}
bool AutoTrackQ_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AutoTrackQ_Mode AutoTrackQ::DistanceToCenter;
const AutoTrackQ_Mode AutoTrackQ::SizeOfObject;
const AutoTrackQ_Mode AutoTrackQ::UserMode;
const AutoTrackQ_Mode AutoTrackQ::Mode_MIN;
const AutoTrackQ_Mode AutoTrackQ::Mode_MAX;
const int AutoTrackQ::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AutoTrackQ_DeviceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_OrionCommunication_2eproto);
  return file_level_enum_descriptors_OrionCommunication_2eproto[7];
}
bool AutoTrackQ_DeviceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AutoTrackQ_DeviceType AutoTrackQ::TV;
const AutoTrackQ_DeviceType AutoTrackQ::Thermal;
const AutoTrackQ_DeviceType AutoTrackQ::DeviceType_MIN;
const AutoTrackQ_DeviceType AutoTrackQ::DeviceType_MAX;
const int AutoTrackQ::DeviceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void PanoramaPars::InitAsDefaultInstance() {
}
class PanoramaPars::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PanoramaPars::kPosFieldNumber;
const int PanoramaPars::kFovFieldNumber;
const int PanoramaPars::kUpdateRateFieldNumber;
const int PanoramaPars::kPanStartAngleFieldNumber;
const int PanoramaPars::kYStartPosFieldNumber;
const int PanoramaPars::kWidthxFieldNumber;
const int PanoramaPars::kHeightyFieldNumber;
const int PanoramaPars::kFixModeFieldNumber;
const int PanoramaPars::kPanMotionFrameNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PanoramaPars::PanoramaPars()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.PanoramaPars)
}
PanoramaPars::PanoramaPars(const PanoramaPars& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pos_, &from.pos_,
    static_cast<size_t>(reinterpret_cast<char*>(&pan_motion_frame_no_) -
    reinterpret_cast<char*>(&pos_)) + sizeof(pan_motion_frame_no_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.PanoramaPars)
}

void PanoramaPars::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pan_motion_frame_no_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(pan_motion_frame_no_));
}

PanoramaPars::~PanoramaPars() {
  // @@protoc_insertion_point(destructor:OrionCommunication.PanoramaPars)
  SharedDtor();
}

void PanoramaPars::SharedDtor() {
}

void PanoramaPars::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PanoramaPars& PanoramaPars::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PanoramaPars_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void PanoramaPars::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.PanoramaPars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pan_motion_frame_no_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(pan_motion_frame_no_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PanoramaPars::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PanoramaPars*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 pos = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_pos(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 fov = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_fov(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float update_rate = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_update_rate(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float pan_start_angle = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        msg->set_pan_start_angle(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // int32 y_start_pos = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_y_start_pos(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 widthx = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_widthx(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 heighty = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_heighty(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 fix_mode = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_fix_mode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 pan_motion_frame_no = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_pan_motion_frame_no(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PanoramaPars::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.PanoramaPars)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fov = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fov_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float update_rate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &update_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pan_start_angle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pan_start_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y_start_pos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_start_pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 widthx = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &widthx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 heighty = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heighty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fix_mode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fix_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pan_motion_frame_no = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pan_motion_frame_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.PanoramaPars)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.PanoramaPars)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PanoramaPars::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.PanoramaPars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 pos = 1;
  if (this->pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  // int32 fov = 2;
  if (this->fov() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fov(), output);
  }

  // float update_rate = 3;
  if (this->update_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->update_rate(), output);
  }

  // float pan_start_angle = 4;
  if (this->pan_start_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->pan_start_angle(), output);
  }

  // int32 y_start_pos = 5;
  if (this->y_start_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->y_start_pos(), output);
  }

  // int32 widthx = 6;
  if (this->widthx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->widthx(), output);
  }

  // int32 heighty = 7;
  if (this->heighty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->heighty(), output);
  }

  // int32 fix_mode = 8;
  if (this->fix_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->fix_mode(), output);
  }

  // int32 pan_motion_frame_no = 9;
  if (this->pan_motion_frame_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pan_motion_frame_no(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.PanoramaPars)
}

::google::protobuf::uint8* PanoramaPars::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.PanoramaPars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 pos = 1;
  if (this->pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  // int32 fov = 2;
  if (this->fov() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fov(), target);
  }

  // float update_rate = 3;
  if (this->update_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->update_rate(), target);
  }

  // float pan_start_angle = 4;
  if (this->pan_start_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->pan_start_angle(), target);
  }

  // int32 y_start_pos = 5;
  if (this->y_start_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->y_start_pos(), target);
  }

  // int32 widthx = 6;
  if (this->widthx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->widthx(), target);
  }

  // int32 heighty = 7;
  if (this->heighty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->heighty(), target);
  }

  // int32 fix_mode = 8;
  if (this->fix_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->fix_mode(), target);
  }

  // int32 pan_motion_frame_no = 9;
  if (this->pan_motion_frame_no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pan_motion_frame_no(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.PanoramaPars)
  return target;
}

size_t PanoramaPars::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.PanoramaPars)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 pos = 1;
  if (this->pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos());
  }

  // int32 fov = 2;
  if (this->fov() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fov());
  }

  // float update_rate = 3;
  if (this->update_rate() != 0) {
    total_size += 1 + 4;
  }

  // float pan_start_angle = 4;
  if (this->pan_start_angle() != 0) {
    total_size += 1 + 4;
  }

  // int32 y_start_pos = 5;
  if (this->y_start_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y_start_pos());
  }

  // int32 widthx = 6;
  if (this->widthx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->widthx());
  }

  // int32 heighty = 7;
  if (this->heighty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->heighty());
  }

  // int32 fix_mode = 8;
  if (this->fix_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fix_mode());
  }

  // int32 pan_motion_frame_no = 9;
  if (this->pan_motion_frame_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pan_motion_frame_no());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PanoramaPars::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.PanoramaPars)
  GOOGLE_DCHECK_NE(&from, this);
  const PanoramaPars* source =
      ::google::protobuf::DynamicCastToGenerated<PanoramaPars>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.PanoramaPars)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.PanoramaPars)
    MergeFrom(*source);
  }
}

void PanoramaPars::MergeFrom(const PanoramaPars& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.PanoramaPars)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pos() != 0) {
    set_pos(from.pos());
  }
  if (from.fov() != 0) {
    set_fov(from.fov());
  }
  if (from.update_rate() != 0) {
    set_update_rate(from.update_rate());
  }
  if (from.pan_start_angle() != 0) {
    set_pan_start_angle(from.pan_start_angle());
  }
  if (from.y_start_pos() != 0) {
    set_y_start_pos(from.y_start_pos());
  }
  if (from.widthx() != 0) {
    set_widthx(from.widthx());
  }
  if (from.heighty() != 0) {
    set_heighty(from.heighty());
  }
  if (from.fix_mode() != 0) {
    set_fix_mode(from.fix_mode());
  }
  if (from.pan_motion_frame_no() != 0) {
    set_pan_motion_frame_no(from.pan_motion_frame_no());
  }
}

void PanoramaPars::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.PanoramaPars)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PanoramaPars::CopyFrom(const PanoramaPars& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.PanoramaPars)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PanoramaPars::IsInitialized() const {
  return true;
}

void PanoramaPars::Swap(PanoramaPars* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PanoramaPars::InternalSwap(PanoramaPars* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pos_, other->pos_);
  swap(fov_, other->fov_);
  swap(update_rate_, other->update_rate_);
  swap(pan_start_angle_, other->pan_start_angle_);
  swap(y_start_pos_, other->y_start_pos_);
  swap(widthx_, other->widthx_);
  swap(heighty_, other->heighty_);
  swap(fix_mode_, other->fix_mode_);
  swap(pan_motion_frame_no_, other->pan_motion_frame_no_);
}

::google::protobuf::Metadata PanoramaPars::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TRoi::InitAsDefaultInstance() {
  ::OrionCommunication::_TRoi_default_instance_._instance.get_mutable()->rect1_ = const_cast< ::OrionCommunication::TRectangle*>(
      ::OrionCommunication::TRectangle::internal_default_instance());
  ::OrionCommunication::_TRoi_default_instance_._instance.get_mutable()->rect2_ = const_cast< ::OrionCommunication::TRectangle*>(
      ::OrionCommunication::TRectangle::internal_default_instance());
}
class TRoi::HasBitSetters {
 public:
  static const ::OrionCommunication::TRectangle& rect1(const TRoi* msg);
  static const ::OrionCommunication::TRectangle& rect2(const TRoi* msg);
};

const ::OrionCommunication::TRectangle&
TRoi::HasBitSetters::rect1(const TRoi* msg) {
  return *msg->rect1_;
}
const ::OrionCommunication::TRectangle&
TRoi::HasBitSetters::rect2(const TRoi* msg) {
  return *msg->rect2_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TRoi::kPolygonFieldNumber;
const int TRoi::kRect1FieldNumber;
const int TRoi::kRect2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TRoi::TRoi()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.TRoi)
}
TRoi::TRoi(const TRoi& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      polygon_(from.polygon_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rect1()) {
    rect1_ = new ::OrionCommunication::TRectangle(*from.rect1_);
  } else {
    rect1_ = nullptr;
  }
  if (from.has_rect2()) {
    rect2_ = new ::OrionCommunication::TRectangle(*from.rect2_);
  } else {
    rect2_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.TRoi)
}

void TRoi::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TRoi_OrionCommunication_2eproto.base);
  ::memset(&rect1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rect2_) -
      reinterpret_cast<char*>(&rect1_)) + sizeof(rect2_));
}

TRoi::~TRoi() {
  // @@protoc_insertion_point(destructor:OrionCommunication.TRoi)
  SharedDtor();
}

void TRoi::SharedDtor() {
  if (this != internal_default_instance()) delete rect1_;
  if (this != internal_default_instance()) delete rect2_;
}

void TRoi::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TRoi& TRoi::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TRoi_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void TRoi::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.TRoi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polygon_.Clear();
  if (GetArenaNoVirtual() == nullptr && rect1_ != nullptr) {
    delete rect1_;
  }
  rect1_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && rect2_ != nullptr) {
    delete rect2_;
  }
  rect2_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TRoi::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TRoi*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .OrionCommunication.TPolygon polygon = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::OrionCommunication::TPolygon::_InternalParse;
          object = msg->add_polygon();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // .OrionCommunication.TRectangle rect1 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::OrionCommunication::TRectangle::_InternalParse;
        object = msg->mutable_rect1();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .OrionCommunication.TRectangle rect2 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::OrionCommunication::TRectangle::_InternalParse;
        object = msg->mutable_rect2();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TRoi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.TRoi)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .OrionCommunication.TPolygon polygon = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OrionCommunication.TRectangle rect1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rect1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OrionCommunication.TRectangle rect2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rect2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.TRoi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.TRoi)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TRoi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.TRoi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OrionCommunication.TPolygon polygon = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->polygon(static_cast<int>(i)),
      output);
  }

  // .OrionCommunication.TRectangle rect1 = 2;
  if (this->has_rect1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::rect1(this), output);
  }

  // .OrionCommunication.TRectangle rect2 = 3;
  if (this->has_rect2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::rect2(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.TRoi)
}

::google::protobuf::uint8* TRoi::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.TRoi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OrionCommunication.TPolygon polygon = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->polygon(static_cast<int>(i)), target);
  }

  // .OrionCommunication.TRectangle rect1 = 2;
  if (this->has_rect1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::rect1(this), target);
  }

  // .OrionCommunication.TRectangle rect2 = 3;
  if (this->has_rect2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::rect2(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.TRoi)
  return target;
}

size_t TRoi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.TRoi)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .OrionCommunication.TPolygon polygon = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->polygon_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->polygon(static_cast<int>(i)));
    }
  }

  // .OrionCommunication.TRectangle rect1 = 2;
  if (this->has_rect1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rect1_);
  }

  // .OrionCommunication.TRectangle rect2 = 3;
  if (this->has_rect2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rect2_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TRoi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.TRoi)
  GOOGLE_DCHECK_NE(&from, this);
  const TRoi* source =
      ::google::protobuf::DynamicCastToGenerated<TRoi>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.TRoi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.TRoi)
    MergeFrom(*source);
  }
}

void TRoi::MergeFrom(const TRoi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.TRoi)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polygon_.MergeFrom(from.polygon_);
  if (from.has_rect1()) {
    mutable_rect1()->::OrionCommunication::TRectangle::MergeFrom(from.rect1());
  }
  if (from.has_rect2()) {
    mutable_rect2()->::OrionCommunication::TRectangle::MergeFrom(from.rect2());
  }
}

void TRoi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.TRoi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TRoi::CopyFrom(const TRoi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.TRoi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TRoi::IsInitialized() const {
  return true;
}

void TRoi::Swap(TRoi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TRoi::InternalSwap(TRoi* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&polygon_)->InternalSwap(CastToBase(&other->polygon_));
  swap(rect1_, other->rect1_);
  swap(rect2_, other->rect2_);
}

::google::protobuf::Metadata TRoi::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TPoint::InitAsDefaultInstance() {
}
class TPoint::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPoint::kXFieldNumber;
const int TPoint::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPoint::TPoint()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.TPoint)
}
TPoint::TPoint(const TPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.TPoint)
}

void TPoint::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

TPoint::~TPoint() {
  // @@protoc_insertion_point(destructor:OrionCommunication.TPoint)
  SharedDtor();
}

void TPoint::SharedDtor() {
}

void TPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPoint& TPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TPoint_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void TPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.TPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TPoint::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TPoint*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_x(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float y = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_y(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.TPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.TPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.TPoint)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.TPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.TPoint)
}

::google::protobuf::uint8* TPoint::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.TPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.TPoint)
  return target;
}

size_t TPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.TPoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.TPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const TPoint* source =
      ::google::protobuf::DynamicCastToGenerated<TPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.TPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.TPoint)
    MergeFrom(*source);
  }
}

void TPoint::MergeFrom(const TPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.TPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void TPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.TPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPoint::CopyFrom(const TPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.TPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPoint::IsInitialized() const {
  return true;
}

void TPoint::Swap(TPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPoint::InternalSwap(TPoint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(x_, other->x_);
  swap(y_, other->y_);
}

::google::protobuf::Metadata TPoint::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TPolygon::InitAsDefaultInstance() {
}
class TPolygon::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPolygon::kPointsFieldNumber;
const int TPolygon::kIsActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPolygon::TPolygon()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.TPolygon)
}
TPolygon::TPolygon(const TPolygon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_active_ = from.is_active_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.TPolygon)
}

void TPolygon::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TPolygon_OrionCommunication_2eproto.base);
  is_active_ = false;
}

TPolygon::~TPolygon() {
  // @@protoc_insertion_point(destructor:OrionCommunication.TPolygon)
  SharedDtor();
}

void TPolygon::SharedDtor() {
}

void TPolygon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPolygon& TPolygon::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TPolygon_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void TPolygon::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.TPolygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  is_active_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TPolygon::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TPolygon*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .OrionCommunication.TPoint points = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::OrionCommunication::TPoint::_InternalParse;
          object = msg->add_points();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // bool is_active = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_is_active(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TPolygon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.TPolygon)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .OrionCommunication.TPoint points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_active = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.TPolygon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.TPolygon)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TPolygon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.TPolygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OrionCommunication.TPoint points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->points(static_cast<int>(i)),
      output);
  }

  // bool is_active = 2;
  if (this->is_active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_active(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.TPolygon)
}

::google::protobuf::uint8* TPolygon::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.TPolygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OrionCommunication.TPoint points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->points(static_cast<int>(i)), target);
  }

  // bool is_active = 2;
  if (this->is_active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_active(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.TPolygon)
  return target;
}

size_t TPolygon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.TPolygon)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .OrionCommunication.TPoint points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  // bool is_active = 2;
  if (this->is_active() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPolygon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.TPolygon)
  GOOGLE_DCHECK_NE(&from, this);
  const TPolygon* source =
      ::google::protobuf::DynamicCastToGenerated<TPolygon>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.TPolygon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.TPolygon)
    MergeFrom(*source);
  }
}

void TPolygon::MergeFrom(const TPolygon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.TPolygon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  if (from.is_active() != 0) {
    set_is_active(from.is_active());
  }
}

void TPolygon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.TPolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPolygon::CopyFrom(const TPolygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.TPolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPolygon::IsInitialized() const {
  return true;
}

void TPolygon::Swap(TPolygon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPolygon::InternalSwap(TPolygon* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&points_)->InternalSwap(CastToBase(&other->points_));
  swap(is_active_, other->is_active_);
}

::google::protobuf::Metadata TPolygon::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TRectangle::InitAsDefaultInstance() {
  ::OrionCommunication::_TRectangle_default_instance_._instance.get_mutable()->upperleft_ = const_cast< ::OrionCommunication::TPoint*>(
      ::OrionCommunication::TPoint::internal_default_instance());
  ::OrionCommunication::_TRectangle_default_instance_._instance.get_mutable()->bottomright_ = const_cast< ::OrionCommunication::TPoint*>(
      ::OrionCommunication::TPoint::internal_default_instance());
}
class TRectangle::HasBitSetters {
 public:
  static const ::OrionCommunication::TPoint& upperleft(const TRectangle* msg);
  static const ::OrionCommunication::TPoint& bottomright(const TRectangle* msg);
};

const ::OrionCommunication::TPoint&
TRectangle::HasBitSetters::upperleft(const TRectangle* msg) {
  return *msg->upperleft_;
}
const ::OrionCommunication::TPoint&
TRectangle::HasBitSetters::bottomright(const TRectangle* msg) {
  return *msg->bottomright_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TRectangle::kUpperLeftFieldNumber;
const int TRectangle::kBottomRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TRectangle::TRectangle()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.TRectangle)
}
TRectangle::TRectangle(const TRectangle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_upperleft()) {
    upperleft_ = new ::OrionCommunication::TPoint(*from.upperleft_);
  } else {
    upperleft_ = nullptr;
  }
  if (from.has_bottomright()) {
    bottomright_ = new ::OrionCommunication::TPoint(*from.bottomright_);
  } else {
    bottomright_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.TRectangle)
}

void TRectangle::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TRectangle_OrionCommunication_2eproto.base);
  ::memset(&upperleft_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottomright_) -
      reinterpret_cast<char*>(&upperleft_)) + sizeof(bottomright_));
}

TRectangle::~TRectangle() {
  // @@protoc_insertion_point(destructor:OrionCommunication.TRectangle)
  SharedDtor();
}

void TRectangle::SharedDtor() {
  if (this != internal_default_instance()) delete upperleft_;
  if (this != internal_default_instance()) delete bottomright_;
}

void TRectangle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TRectangle& TRectangle::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TRectangle_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void TRectangle::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.TRectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && upperleft_ != nullptr) {
    delete upperleft_;
  }
  upperleft_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && bottomright_ != nullptr) {
    delete bottomright_;
  }
  bottomright_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TRectangle::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TRectangle*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .OrionCommunication.TPoint upperLeft = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::OrionCommunication::TPoint::_InternalParse;
        object = msg->mutable_upperleft();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .OrionCommunication.TPoint bottomRight = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::OrionCommunication::TPoint::_InternalParse;
        object = msg->mutable_bottomright();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TRectangle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.TRectangle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .OrionCommunication.TPoint upperLeft = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upperleft()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OrionCommunication.TPoint bottomRight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bottomright()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.TRectangle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.TRectangle)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TRectangle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.TRectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.TPoint upperLeft = 1;
  if (this->has_upperleft()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::upperleft(this), output);
  }

  // .OrionCommunication.TPoint bottomRight = 2;
  if (this->has_bottomright()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::bottomright(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.TRectangle)
}

::google::protobuf::uint8* TRectangle::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.TRectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.TPoint upperLeft = 1;
  if (this->has_upperleft()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::upperleft(this), target);
  }

  // .OrionCommunication.TPoint bottomRight = 2;
  if (this->has_bottomright()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::bottomright(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.TRectangle)
  return target;
}

size_t TRectangle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.TRectangle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OrionCommunication.TPoint upperLeft = 1;
  if (this->has_upperleft()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upperleft_);
  }

  // .OrionCommunication.TPoint bottomRight = 2;
  if (this->has_bottomright()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bottomright_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TRectangle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.TRectangle)
  GOOGLE_DCHECK_NE(&from, this);
  const TRectangle* source =
      ::google::protobuf::DynamicCastToGenerated<TRectangle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.TRectangle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.TRectangle)
    MergeFrom(*source);
  }
}

void TRectangle::MergeFrom(const TRectangle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.TRectangle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_upperleft()) {
    mutable_upperleft()->::OrionCommunication::TPoint::MergeFrom(from.upperleft());
  }
  if (from.has_bottomright()) {
    mutable_bottomright()->::OrionCommunication::TPoint::MergeFrom(from.bottomright());
  }
}

void TRectangle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.TRectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TRectangle::CopyFrom(const TRectangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.TRectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TRectangle::IsInitialized() const {
  return true;
}

void TRectangle::Swap(TRectangle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TRectangle::InternalSwap(TRectangle* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(upperleft_, other->upperleft_);
  swap(bottomright_, other->bottomright_);
}

::google::protobuf::Metadata TRectangle::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ModeQ::InitAsDefaultInstance() {
}
class ModeQ::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModeQ::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModeQ::ModeQ()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.ModeQ)
}
ModeQ::ModeQ(const ModeQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.ModeQ)
}

void ModeQ::SharedCtor() {
  mode_ = 0;
}

ModeQ::~ModeQ() {
  // @@protoc_insertion_point(destructor:OrionCommunication.ModeQ)
  SharedDtor();
}

void ModeQ::SharedDtor() {
}

void ModeQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModeQ& ModeQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ModeQ_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void ModeQ::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.ModeQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mode_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ModeQ::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ModeQ*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .OrionCommunication.ModeQ.Mode mode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_mode(static_cast<::OrionCommunication::ModeQ_Mode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ModeQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.ModeQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .OrionCommunication.ModeQ.Mode mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::OrionCommunication::ModeQ_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.ModeQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.ModeQ)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ModeQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.ModeQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.ModeQ.Mode mode = 1;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.ModeQ)
}

::google::protobuf::uint8* ModeQ::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.ModeQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.ModeQ.Mode mode = 1;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.ModeQ)
  return target;
}

size_t ModeQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.ModeQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OrionCommunication.ModeQ.Mode mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModeQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.ModeQ)
  GOOGLE_DCHECK_NE(&from, this);
  const ModeQ* source =
      ::google::protobuf::DynamicCastToGenerated<ModeQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.ModeQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.ModeQ)
    MergeFrom(*source);
  }
}

void ModeQ::MergeFrom(const ModeQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.ModeQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void ModeQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.ModeQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModeQ::CopyFrom(const ModeQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.ModeQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModeQ::IsInitialized() const {
  return true;
}

void ModeQ::Swap(ModeQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModeQ::InternalSwap(ModeQ* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mode_, other->mode_);
}

::google::protobuf::Metadata ModeQ::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DummyInfo::InitAsDefaultInstance() {
}
class DummyInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DummyInfo::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DummyInfo::DummyInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.DummyInfo)
}
DummyInfo::DummyInfo(const DummyInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.DummyInfo)
}

void DummyInfo::SharedCtor() {
  dummy_ = 0;
}

DummyInfo::~DummyInfo() {
  // @@protoc_insertion_point(destructor:OrionCommunication.DummyInfo)
  SharedDtor();
}

void DummyInfo::SharedDtor() {
}

void DummyInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DummyInfo& DummyInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DummyInfo_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void DummyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.DummyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DummyInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DummyInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 dummy = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_dummy(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DummyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.DummyInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.DummyInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.DummyInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DummyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.DummyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.DummyInfo)
}

::google::protobuf::uint8* DummyInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.DummyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.DummyInfo)
  return target;
}

size_t DummyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.DummyInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DummyInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.DummyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DummyInfo* source =
      ::google::protobuf::DynamicCastToGenerated<DummyInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.DummyInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.DummyInfo)
    MergeFrom(*source);
  }
}

void DummyInfo::MergeFrom(const DummyInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.DummyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dummy() != 0) {
    set_dummy(from.dummy());
  }
}

void DummyInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.DummyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DummyInfo::CopyFrom(const DummyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.DummyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DummyInfo::IsInitialized() const {
  return true;
}

void DummyInfo::Swap(DummyInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DummyInfo::InternalSwap(DummyInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(dummy_, other->dummy_);
}

::google::protobuf::Metadata DummyInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MotionDetectionParameters::InitAsDefaultInstance() {
}
class MotionDetectionParameters::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MotionDetectionParameters::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MotionDetectionParameters::MotionDetectionParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.MotionDetectionParameters)
}
MotionDetectionParameters::MotionDetectionParameters(const MotionDetectionParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.MotionDetectionParameters)
}

void MotionDetectionParameters::SharedCtor() {
  dummy_ = 0;
}

MotionDetectionParameters::~MotionDetectionParameters() {
  // @@protoc_insertion_point(destructor:OrionCommunication.MotionDetectionParameters)
  SharedDtor();
}

void MotionDetectionParameters::SharedDtor() {
}

void MotionDetectionParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MotionDetectionParameters& MotionDetectionParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MotionDetectionParameters_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void MotionDetectionParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.MotionDetectionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MotionDetectionParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MotionDetectionParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 dummy = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_dummy(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MotionDetectionParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.MotionDetectionParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.MotionDetectionParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.MotionDetectionParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MotionDetectionParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.MotionDetectionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.MotionDetectionParameters)
}

::google::protobuf::uint8* MotionDetectionParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.MotionDetectionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.MotionDetectionParameters)
  return target;
}

size_t MotionDetectionParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.MotionDetectionParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MotionDetectionParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.MotionDetectionParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const MotionDetectionParameters* source =
      ::google::protobuf::DynamicCastToGenerated<MotionDetectionParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.MotionDetectionParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.MotionDetectionParameters)
    MergeFrom(*source);
  }
}

void MotionDetectionParameters::MergeFrom(const MotionDetectionParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.MotionDetectionParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dummy() != 0) {
    set_dummy(from.dummy());
  }
}

void MotionDetectionParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.MotionDetectionParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MotionDetectionParameters::CopyFrom(const MotionDetectionParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.MotionDetectionParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotionDetectionParameters::IsInitialized() const {
  return true;
}

void MotionDetectionParameters::Swap(MotionDetectionParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MotionDetectionParameters::InternalSwap(MotionDetectionParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(dummy_, other->dummy_);
}

::google::protobuf::Metadata MotionDetectionParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AppCommandResult::InitAsDefaultInstance() {
}
class AppCommandResult::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppCommandResult::kErrFieldNumber;
const int AppCommandResult::kResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppCommandResult::AppCommandResult()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.AppCommandResult)
}
AppCommandResult::AppCommandResult(const AppCommandResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&err_, &from.err_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&err_)) + sizeof(response_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.AppCommandResult)
}

void AppCommandResult::SharedCtor() {
  ::memset(&err_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&err_)) + sizeof(response_));
}

AppCommandResult::~AppCommandResult() {
  // @@protoc_insertion_point(destructor:OrionCommunication.AppCommandResult)
  SharedDtor();
}

void AppCommandResult::SharedDtor() {
}

void AppCommandResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppCommandResult& AppCommandResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AppCommandResult_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void AppCommandResult::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.AppCommandResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&err_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&err_)) + sizeof(response_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AppCommandResult::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AppCommandResult*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 err = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_err(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .OrionCommunication.AppCommandResult.Response response = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_response(static_cast<::OrionCommunication::AppCommandResult_Response>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AppCommandResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.AppCommandResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OrionCommunication.AppCommandResult.Response response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response(static_cast< ::OrionCommunication::AppCommandResult_Response >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.AppCommandResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.AppCommandResult)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AppCommandResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.AppCommandResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err(), output);
  }

  // .OrionCommunication.AppCommandResult.Response response = 2;
  if (this->response() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.AppCommandResult)
}

::google::protobuf::uint8* AppCommandResult::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.AppCommandResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err(), target);
  }

  // .OrionCommunication.AppCommandResult.Response response = 2;
  if (this->response() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.AppCommandResult)
  return target;
}

size_t AppCommandResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.AppCommandResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  // .OrionCommunication.AppCommandResult.Response response = 2;
  if (this->response() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppCommandResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.AppCommandResult)
  GOOGLE_DCHECK_NE(&from, this);
  const AppCommandResult* source =
      ::google::protobuf::DynamicCastToGenerated<AppCommandResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.AppCommandResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.AppCommandResult)
    MergeFrom(*source);
  }
}

void AppCommandResult::MergeFrom(const AppCommandResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.AppCommandResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err() != 0) {
    set_err(from.err());
  }
  if (from.response() != 0) {
    set_response(from.response());
  }
}

void AppCommandResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.AppCommandResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppCommandResult::CopyFrom(const AppCommandResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.AppCommandResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppCommandResult::IsInitialized() const {
  return true;
}

void AppCommandResult::Swap(AppCommandResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppCommandResult::InternalSwap(AppCommandResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(err_, other->err_);
  swap(response_, other->response_);
}

::google::protobuf::Metadata AppCommandResult::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BitrateValue::InitAsDefaultInstance() {
}
class BitrateValue::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BitrateValue::kBitrateValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BitrateValue::BitrateValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.BitrateValue)
}
BitrateValue::BitrateValue(const BitrateValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bitratevalue_ = from.bitratevalue_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.BitrateValue)
}

void BitrateValue::SharedCtor() {
  bitratevalue_ = 0;
}

BitrateValue::~BitrateValue() {
  // @@protoc_insertion_point(destructor:OrionCommunication.BitrateValue)
  SharedDtor();
}

void BitrateValue::SharedDtor() {
}

void BitrateValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BitrateValue& BitrateValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BitrateValue_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void BitrateValue::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.BitrateValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bitratevalue_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BitrateValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BitrateValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 bitrateValue = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_bitratevalue(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BitrateValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.BitrateValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 bitrateValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bitratevalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.BitrateValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.BitrateValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BitrateValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.BitrateValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bitrateValue = 1;
  if (this->bitratevalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bitratevalue(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.BitrateValue)
}

::google::protobuf::uint8* BitrateValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.BitrateValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bitrateValue = 1;
  if (this->bitratevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bitratevalue(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.BitrateValue)
  return target;
}

size_t BitrateValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.BitrateValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 bitrateValue = 1;
  if (this->bitratevalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bitratevalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BitrateValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.BitrateValue)
  GOOGLE_DCHECK_NE(&from, this);
  const BitrateValue* source =
      ::google::protobuf::DynamicCastToGenerated<BitrateValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.BitrateValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.BitrateValue)
    MergeFrom(*source);
  }
}

void BitrateValue::MergeFrom(const BitrateValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.BitrateValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bitratevalue() != 0) {
    set_bitratevalue(from.bitratevalue());
  }
}

void BitrateValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.BitrateValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BitrateValue::CopyFrom(const BitrateValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.BitrateValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BitrateValue::IsInitialized() const {
  return true;
}

void BitrateValue::Swap(BitrateValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BitrateValue::InternalSwap(BitrateValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(bitratevalue_, other->bitratevalue_);
}

::google::protobuf::Metadata BitrateValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReturnUptimeValue::InitAsDefaultInstance() {
}
class ReturnUptimeValue::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReturnUptimeValue::kUptimeValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReturnUptimeValue::ReturnUptimeValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.ReturnUptimeValue)
}
ReturnUptimeValue::ReturnUptimeValue(const ReturnUptimeValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uptimevalue_ = from.uptimevalue_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.ReturnUptimeValue)
}

void ReturnUptimeValue::SharedCtor() {
  uptimevalue_ = 0;
}

ReturnUptimeValue::~ReturnUptimeValue() {
  // @@protoc_insertion_point(destructor:OrionCommunication.ReturnUptimeValue)
  SharedDtor();
}

void ReturnUptimeValue::SharedDtor() {
}

void ReturnUptimeValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReturnUptimeValue& ReturnUptimeValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReturnUptimeValue_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void ReturnUptimeValue::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.ReturnUptimeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uptimevalue_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReturnUptimeValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReturnUptimeValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 uptimeValue = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_uptimevalue(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReturnUptimeValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.ReturnUptimeValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 uptimeValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uptimevalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.ReturnUptimeValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.ReturnUptimeValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReturnUptimeValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.ReturnUptimeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uptimeValue = 1;
  if (this->uptimevalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uptimevalue(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.ReturnUptimeValue)
}

::google::protobuf::uint8* ReturnUptimeValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.ReturnUptimeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uptimeValue = 1;
  if (this->uptimevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uptimevalue(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.ReturnUptimeValue)
  return target;
}

size_t ReturnUptimeValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.ReturnUptimeValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uptimeValue = 1;
  if (this->uptimevalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uptimevalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReturnUptimeValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.ReturnUptimeValue)
  GOOGLE_DCHECK_NE(&from, this);
  const ReturnUptimeValue* source =
      ::google::protobuf::DynamicCastToGenerated<ReturnUptimeValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.ReturnUptimeValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.ReturnUptimeValue)
    MergeFrom(*source);
  }
}

void ReturnUptimeValue::MergeFrom(const ReturnUptimeValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.ReturnUptimeValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uptimevalue() != 0) {
    set_uptimevalue(from.uptimevalue());
  }
}

void ReturnUptimeValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.ReturnUptimeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnUptimeValue::CopyFrom(const ReturnUptimeValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.ReturnUptimeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnUptimeValue::IsInitialized() const {
  return true;
}

void ReturnUptimeValue::Swap(ReturnUptimeValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReturnUptimeValue::InternalSwap(ReturnUptimeValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uptimevalue_, other->uptimevalue_);
}

::google::protobuf::Metadata ReturnUptimeValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReturnFOVValue::InitAsDefaultInstance() {
}
class ReturnFOVValue::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReturnFOVValue::kFovValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReturnFOVValue::ReturnFOVValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.ReturnFOVValue)
}
ReturnFOVValue::ReturnFOVValue(const ReturnFOVValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fovvalue_ = from.fovvalue_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.ReturnFOVValue)
}

void ReturnFOVValue::SharedCtor() {
  fovvalue_ = 0;
}

ReturnFOVValue::~ReturnFOVValue() {
  // @@protoc_insertion_point(destructor:OrionCommunication.ReturnFOVValue)
  SharedDtor();
}

void ReturnFOVValue::SharedDtor() {
}

void ReturnFOVValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReturnFOVValue& ReturnFOVValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReturnFOVValue_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void ReturnFOVValue::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.ReturnFOVValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fovvalue_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReturnFOVValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReturnFOVValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float fovValue = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_fovvalue(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReturnFOVValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.ReturnFOVValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float fovValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fovvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.ReturnFOVValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.ReturnFOVValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReturnFOVValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.ReturnFOVValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float fovValue = 1;
  if (this->fovvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->fovvalue(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.ReturnFOVValue)
}

::google::protobuf::uint8* ReturnFOVValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.ReturnFOVValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float fovValue = 1;
  if (this->fovvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->fovvalue(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.ReturnFOVValue)
  return target;
}

size_t ReturnFOVValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.ReturnFOVValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float fovValue = 1;
  if (this->fovvalue() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReturnFOVValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.ReturnFOVValue)
  GOOGLE_DCHECK_NE(&from, this);
  const ReturnFOVValue* source =
      ::google::protobuf::DynamicCastToGenerated<ReturnFOVValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.ReturnFOVValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.ReturnFOVValue)
    MergeFrom(*source);
  }
}

void ReturnFOVValue::MergeFrom(const ReturnFOVValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.ReturnFOVValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fovvalue() != 0) {
    set_fovvalue(from.fovvalue());
  }
}

void ReturnFOVValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.ReturnFOVValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnFOVValue::CopyFrom(const ReturnFOVValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.ReturnFOVValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnFOVValue::IsInitialized() const {
  return true;
}

void ReturnFOVValue::Swap(ReturnFOVValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReturnFOVValue::InternalSwap(ReturnFOVValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(fovvalue_, other->fovvalue_);
}

::google::protobuf::Metadata ReturnFOVValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DevicedBasedInfo::InitAsDefaultInstance() {
}
class DevicedBasedInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DevicedBasedInfo::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DevicedBasedInfo::DevicedBasedInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.DevicedBasedInfo)
}
DevicedBasedInfo::DevicedBasedInfo(const DevicedBasedInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_ = from.device_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.DevicedBasedInfo)
}

void DevicedBasedInfo::SharedCtor() {
  device_ = 0;
}

DevicedBasedInfo::~DevicedBasedInfo() {
  // @@protoc_insertion_point(destructor:OrionCommunication.DevicedBasedInfo)
  SharedDtor();
}

void DevicedBasedInfo::SharedDtor() {
}

void DevicedBasedInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DevicedBasedInfo& DevicedBasedInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DevicedBasedInfo_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void DevicedBasedInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.DevicedBasedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DevicedBasedInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DevicedBasedInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .OrionCommunication.DevicedBasedInfo.DeviceType device = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_device(static_cast<::OrionCommunication::DevicedBasedInfo_DeviceType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DevicedBasedInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.DevicedBasedInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .OrionCommunication.DevicedBasedInfo.DeviceType device = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_device(static_cast< ::OrionCommunication::DevicedBasedInfo_DeviceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.DevicedBasedInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.DevicedBasedInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DevicedBasedInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.DevicedBasedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.DevicedBasedInfo.DeviceType device = 1;
  if (this->device() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->device(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.DevicedBasedInfo)
}

::google::protobuf::uint8* DevicedBasedInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.DevicedBasedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.DevicedBasedInfo.DeviceType device = 1;
  if (this->device() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->device(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.DevicedBasedInfo)
  return target;
}

size_t DevicedBasedInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.DevicedBasedInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OrionCommunication.DevicedBasedInfo.DeviceType device = 1;
  if (this->device() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->device());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DevicedBasedInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.DevicedBasedInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DevicedBasedInfo* source =
      ::google::protobuf::DynamicCastToGenerated<DevicedBasedInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.DevicedBasedInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.DevicedBasedInfo)
    MergeFrom(*source);
  }
}

void DevicedBasedInfo::MergeFrom(const DevicedBasedInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.DevicedBasedInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device() != 0) {
    set_device(from.device());
  }
}

void DevicedBasedInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.DevicedBasedInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevicedBasedInfo::CopyFrom(const DevicedBasedInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.DevicedBasedInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevicedBasedInfo::IsInitialized() const {
  return true;
}

void DevicedBasedInfo::Swap(DevicedBasedInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DevicedBasedInfo::InternalSwap(DevicedBasedInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(device_, other->device_);
}

::google::protobuf::Metadata DevicedBasedInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ItemProperty::InitAsDefaultInstance() {
}
class ItemProperty::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemProperty::kItemTypeFieldNumber;
const int ItemProperty::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemProperty::ItemProperty()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.ItemProperty)
}
ItemProperty::ItemProperty(const ItemProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemtype_, &from.itemtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&itemtype_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.ItemProperty)
}

void ItemProperty::SharedCtor() {
  ::memset(&itemtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&itemtype_)) + sizeof(state_));
}

ItemProperty::~ItemProperty() {
  // @@protoc_insertion_point(destructor:OrionCommunication.ItemProperty)
  SharedDtor();
}

void ItemProperty::SharedDtor() {
}

void ItemProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ItemProperty& ItemProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ItemProperty_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void ItemProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.ItemProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&itemtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&itemtype_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ItemProperty::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ItemProperty*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .OrionCommunication.ItemProperty.ItemType itemType = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_itemtype(static_cast<::OrionCommunication::ItemProperty_ItemType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool state = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_state(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ItemProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.ItemProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .OrionCommunication.ItemProperty.ItemType itemType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_itemtype(static_cast< ::OrionCommunication::ItemProperty_ItemType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.ItemProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.ItemProperty)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ItemProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.ItemProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.ItemProperty.ItemType itemType = 1;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itemtype(), output);
  }

  // bool state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.ItemProperty)
}

::google::protobuf::uint8* ItemProperty::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.ItemProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.ItemProperty.ItemType itemType = 1;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itemtype(), target);
  }

  // bool state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.ItemProperty)
  return target;
}

size_t ItemProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.ItemProperty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OrionCommunication.ItemProperty.ItemType itemType = 1;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->itemtype());
  }

  // bool state = 2;
  if (this->state() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItemProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.ItemProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemProperty* source =
      ::google::protobuf::DynamicCastToGenerated<ItemProperty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.ItemProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.ItemProperty)
    MergeFrom(*source);
  }
}

void ItemProperty::MergeFrom(const ItemProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.ItemProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void ItemProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.ItemProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemProperty::CopyFrom(const ItemProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.ItemProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemProperty::IsInitialized() const {
  return true;
}

void ItemProperty::Swap(ItemProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemProperty::InternalSwap(ItemProperty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(itemtype_, other->itemtype_);
  swap(state_, other->state_);
}

::google::protobuf::Metadata ItemProperty::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AryaParameters::InitAsDefaultInstance() {
}
class AryaParameters::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AryaParameters::kPanSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AryaParameters::AryaParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.AryaParameters)
}
AryaParameters::AryaParameters(const AryaParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  panspeed_ = from.panspeed_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.AryaParameters)
}

void AryaParameters::SharedCtor() {
  panspeed_ = 0;
}

AryaParameters::~AryaParameters() {
  // @@protoc_insertion_point(destructor:OrionCommunication.AryaParameters)
  SharedDtor();
}

void AryaParameters::SharedDtor() {
}

void AryaParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AryaParameters& AryaParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AryaParameters_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void AryaParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.AryaParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  panspeed_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AryaParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AryaParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 panSpeed = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_panspeed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AryaParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.AryaParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 panSpeed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &panspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.AryaParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.AryaParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AryaParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.AryaParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 panSpeed = 1;
  if (this->panspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->panspeed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.AryaParameters)
}

::google::protobuf::uint8* AryaParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.AryaParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 panSpeed = 1;
  if (this->panspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->panspeed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.AryaParameters)
  return target;
}

size_t AryaParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.AryaParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 panSpeed = 1;
  if (this->panspeed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->panspeed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AryaParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.AryaParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AryaParameters* source =
      ::google::protobuf::DynamicCastToGenerated<AryaParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.AryaParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.AryaParameters)
    MergeFrom(*source);
  }
}

void AryaParameters::MergeFrom(const AryaParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.AryaParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.panspeed() != 0) {
    set_panspeed(from.panspeed());
  }
}

void AryaParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.AryaParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AryaParameters::CopyFrom(const AryaParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.AryaParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AryaParameters::IsInitialized() const {
  return true;
}

void AryaParameters::Swap(AryaParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AryaParameters::InternalSwap(AryaParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(panspeed_, other->panspeed_);
}

::google::protobuf::Metadata AryaParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FrameModeQ::InitAsDefaultInstance() {
}
class FrameModeQ::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameModeQ::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameModeQ::FrameModeQ()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.FrameModeQ)
}
FrameModeQ::FrameModeQ(const FrameModeQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.FrameModeQ)
}

void FrameModeQ::SharedCtor() {
  mode_ = 0;
}

FrameModeQ::~FrameModeQ() {
  // @@protoc_insertion_point(destructor:OrionCommunication.FrameModeQ)
  SharedDtor();
}

void FrameModeQ::SharedDtor() {
}

void FrameModeQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FrameModeQ& FrameModeQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FrameModeQ_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void FrameModeQ::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.FrameModeQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mode_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FrameModeQ::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FrameModeQ*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .OrionCommunication.FrameModeQ.FrameMode mode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_mode(static_cast<::OrionCommunication::FrameModeQ_FrameMode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FrameModeQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.FrameModeQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .OrionCommunication.FrameModeQ.FrameMode mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::OrionCommunication::FrameModeQ_FrameMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.FrameModeQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.FrameModeQ)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FrameModeQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.FrameModeQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.FrameModeQ.FrameMode mode = 1;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.FrameModeQ)
}

::google::protobuf::uint8* FrameModeQ::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.FrameModeQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.FrameModeQ.FrameMode mode = 1;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.FrameModeQ)
  return target;
}

size_t FrameModeQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.FrameModeQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OrionCommunication.FrameModeQ.FrameMode mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrameModeQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.FrameModeQ)
  GOOGLE_DCHECK_NE(&from, this);
  const FrameModeQ* source =
      ::google::protobuf::DynamicCastToGenerated<FrameModeQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.FrameModeQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.FrameModeQ)
    MergeFrom(*source);
  }
}

void FrameModeQ::MergeFrom(const FrameModeQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.FrameModeQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void FrameModeQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.FrameModeQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameModeQ::CopyFrom(const FrameModeQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.FrameModeQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameModeQ::IsInitialized() const {
  return true;
}

void FrameModeQ::Swap(FrameModeQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameModeQ::InternalSwap(FrameModeQ* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mode_, other->mode_);
}

::google::protobuf::Metadata FrameModeQ::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CitMessage::InitAsDefaultInstance() {
}
class CitMessage::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CitMessage::kCurrentStepFieldNumber;
const int CitMessage::kStepCountFieldNumber;
const int CitMessage::kCurrentStepProgressFieldNumber;
const int CitMessage::kCurrentStepProgressTotalFieldNumber;
const int CitMessage::kMsgFieldNumber;
const int CitMessage::kCitResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CitMessage::CitMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.CitMessage)
}
CitMessage::CitMessage(const CitMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      citresult_(from.citresult_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&currentstep_, &from.currentstep_,
    static_cast<size_t>(reinterpret_cast<char*>(&currentstepprogresstotal_) -
    reinterpret_cast<char*>(&currentstep_)) + sizeof(currentstepprogresstotal_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.CitMessage)
}

void CitMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CitMessage_OrionCommunication_2eproto.base);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&currentstep_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&currentstepprogresstotal_) -
      reinterpret_cast<char*>(&currentstep_)) + sizeof(currentstepprogresstotal_));
}

CitMessage::~CitMessage() {
  // @@protoc_insertion_point(destructor:OrionCommunication.CitMessage)
  SharedDtor();
}

void CitMessage::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CitMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CitMessage& CitMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CitMessage_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void CitMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.CitMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  citresult_.Clear();
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&currentstep_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&currentstepprogresstotal_) -
      reinterpret_cast<char*>(&currentstep_)) + sizeof(currentstepprogresstotal_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CitMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CitMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 currentStep = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_currentstep(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 stepCount = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_stepcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 currentStepProgress = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_currentstepprogress(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 currentStepProgressTotal = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_currentstepprogresstotal(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string msg = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("OrionCommunication.CitMessage.msg");
        object = msg->mutable_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string citResult = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("OrionCommunication.CitMessage.citResult");
          object = msg->add_citresult();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CitMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.CitMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 currentStep = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currentstep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stepCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stepcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 currentStepProgress = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currentstepprogress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 currentStepProgressTotal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currentstepprogresstotal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "OrionCommunication.CitMessage.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string citResult = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_citresult()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->citresult(this->citresult_size() - 1).data(),
            static_cast<int>(this->citresult(this->citresult_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "OrionCommunication.CitMessage.citResult"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.CitMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.CitMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CitMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.CitMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 currentStep = 1;
  if (this->currentstep() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->currentstep(), output);
  }

  // int32 stepCount = 2;
  if (this->stepcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stepcount(), output);
  }

  // int32 currentStepProgress = 3;
  if (this->currentstepprogress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->currentstepprogress(), output);
  }

  // int32 currentStepProgressTotal = 4;
  if (this->currentstepprogresstotal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->currentstepprogresstotal(), output);
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "OrionCommunication.CitMessage.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg(), output);
  }

  // repeated string citResult = 6;
  for (int i = 0, n = this->citresult_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->citresult(i).data(), static_cast<int>(this->citresult(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "OrionCommunication.CitMessage.citResult");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->citresult(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.CitMessage)
}

::google::protobuf::uint8* CitMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.CitMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 currentStep = 1;
  if (this->currentstep() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->currentstep(), target);
  }

  // int32 stepCount = 2;
  if (this->stepcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stepcount(), target);
  }

  // int32 currentStepProgress = 3;
  if (this->currentstepprogress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->currentstepprogress(), target);
  }

  // int32 currentStepProgressTotal = 4;
  if (this->currentstepprogresstotal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->currentstepprogresstotal(), target);
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "OrionCommunication.CitMessage.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg(), target);
  }

  // repeated string citResult = 6;
  for (int i = 0, n = this->citresult_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->citresult(i).data(), static_cast<int>(this->citresult(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "OrionCommunication.CitMessage.citResult");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->citresult(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.CitMessage)
  return target;
}

size_t CitMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.CitMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string citResult = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->citresult_size());
  for (int i = 0, n = this->citresult_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->citresult(i));
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 currentStep = 1;
  if (this->currentstep() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->currentstep());
  }

  // int32 stepCount = 2;
  if (this->stepcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stepcount());
  }

  // int32 currentStepProgress = 3;
  if (this->currentstepprogress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->currentstepprogress());
  }

  // int32 currentStepProgressTotal = 4;
  if (this->currentstepprogresstotal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->currentstepprogresstotal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CitMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.CitMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CitMessage* source =
      ::google::protobuf::DynamicCastToGenerated<CitMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.CitMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.CitMessage)
    MergeFrom(*source);
  }
}

void CitMessage::MergeFrom(const CitMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.CitMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  citresult_.MergeFrom(from.citresult_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.currentstep() != 0) {
    set_currentstep(from.currentstep());
  }
  if (from.stepcount() != 0) {
    set_stepcount(from.stepcount());
  }
  if (from.currentstepprogress() != 0) {
    set_currentstepprogress(from.currentstepprogress());
  }
  if (from.currentstepprogresstotal() != 0) {
    set_currentstepprogresstotal(from.currentstepprogresstotal());
  }
}

void CitMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.CitMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CitMessage::CopyFrom(const CitMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.CitMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CitMessage::IsInitialized() const {
  return true;
}

void CitMessage::Swap(CitMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CitMessage::InternalSwap(CitMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  citresult_.InternalSwap(CastToBase(&other->citresult_));
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(currentstep_, other->currentstep_);
  swap(stepcount_, other->stepcount_);
  swap(currentstepprogress_, other->currentstepprogress_);
  swap(currentstepprogresstotal_, other->currentstepprogresstotal_);
}

::google::protobuf::Metadata CitMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PanoramaFrame::InitAsDefaultInstance() {
}
class PanoramaFrame::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PanoramaFrame::kValidFieldNumber;
const int PanoramaFrame::kProgressFieldNumber;
const int PanoramaFrame::kFrameDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PanoramaFrame::PanoramaFrame()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.PanoramaFrame)
}
PanoramaFrame::PanoramaFrame(const PanoramaFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  framedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.framedata().size() > 0) {
    framedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.framedata_);
  }
  ::memcpy(&valid_, &from.valid_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&valid_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.PanoramaFrame)
}

void PanoramaFrame::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PanoramaFrame_OrionCommunication_2eproto.base);
  framedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&valid_)) + sizeof(progress_));
}

PanoramaFrame::~PanoramaFrame() {
  // @@protoc_insertion_point(destructor:OrionCommunication.PanoramaFrame)
  SharedDtor();
}

void PanoramaFrame::SharedDtor() {
  framedata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PanoramaFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PanoramaFrame& PanoramaFrame::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PanoramaFrame_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void PanoramaFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.PanoramaFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  framedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&valid_)) + sizeof(progress_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PanoramaFrame::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PanoramaFrame*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool valid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_valid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float progress = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_progress(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // bytes frameData = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_framedata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PanoramaFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.PanoramaFrame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool valid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float progress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes frameData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_framedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.PanoramaFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.PanoramaFrame)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PanoramaFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.PanoramaFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->valid(), output);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->progress(), output);
  }

  // bytes frameData = 3;
  if (this->framedata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->framedata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.PanoramaFrame)
}

::google::protobuf::uint8* PanoramaFrame::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.PanoramaFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->valid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->valid(), target);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->progress(), target);
  }

  // bytes frameData = 3;
  if (this->framedata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->framedata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.PanoramaFrame)
  return target;
}

size_t PanoramaFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.PanoramaFrame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes frameData = 3;
  if (this->framedata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->framedata());
  }

  // bool valid = 1;
  if (this->valid() != 0) {
    total_size += 1 + 1;
  }

  // float progress = 2;
  if (this->progress() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PanoramaFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.PanoramaFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const PanoramaFrame* source =
      ::google::protobuf::DynamicCastToGenerated<PanoramaFrame>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.PanoramaFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.PanoramaFrame)
    MergeFrom(*source);
  }
}

void PanoramaFrame::MergeFrom(const PanoramaFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.PanoramaFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.framedata().size() > 0) {

    framedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.framedata_);
  }
  if (from.valid() != 0) {
    set_valid(from.valid());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void PanoramaFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.PanoramaFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PanoramaFrame::CopyFrom(const PanoramaFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.PanoramaFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PanoramaFrame::IsInitialized() const {
  return true;
}

void PanoramaFrame::Swap(PanoramaFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PanoramaFrame::InternalSwap(PanoramaFrame* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  framedata_.Swap(&other->framedata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(valid_, other->valid_);
  swap(progress_, other->progress_);
}

::google::protobuf::Metadata PanoramaFrame::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ScreenFrame::InitAsDefaultInstance() {
}
class ScreenFrame::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScreenFrame::kFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScreenFrame::ScreenFrame()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.ScreenFrame)
}
ScreenFrame::ScreenFrame(const ScreenFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.frame().size() > 0) {
    frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_);
  }
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.ScreenFrame)
}

void ScreenFrame::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ScreenFrame_OrionCommunication_2eproto.base);
  frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ScreenFrame::~ScreenFrame() {
  // @@protoc_insertion_point(destructor:OrionCommunication.ScreenFrame)
  SharedDtor();
}

void ScreenFrame::SharedDtor() {
  frame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScreenFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScreenFrame& ScreenFrame::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ScreenFrame_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void ScreenFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.ScreenFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ScreenFrame::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ScreenFrame*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes frame = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_frame();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ScreenFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.ScreenFrame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes frame = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.ScreenFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.ScreenFrame)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ScreenFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.ScreenFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes frame = 1;
  if (this->frame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->frame(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.ScreenFrame)
}

::google::protobuf::uint8* ScreenFrame::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.ScreenFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes frame = 1;
  if (this->frame().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->frame(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.ScreenFrame)
  return target;
}

size_t ScreenFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.ScreenFrame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes frame = 1;
  if (this->frame().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->frame());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScreenFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.ScreenFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const ScreenFrame* source =
      ::google::protobuf::DynamicCastToGenerated<ScreenFrame>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.ScreenFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.ScreenFrame)
    MergeFrom(*source);
  }
}

void ScreenFrame::MergeFrom(const ScreenFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.ScreenFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.frame().size() > 0) {

    frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_);
  }
}

void ScreenFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.ScreenFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScreenFrame::CopyFrom(const ScreenFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.ScreenFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScreenFrame::IsInitialized() const {
  return true;
}

void ScreenFrame::Swap(ScreenFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScreenFrame::InternalSwap(ScreenFrame* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  frame_.Swap(&other->frame_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ScreenFrame::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetSensivity::InitAsDefaultInstance() {
}
class SetSensivity::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSensivity::kSensivityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSensivity::SetSensivity()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.SetSensivity)
}
SetSensivity::SetSensivity(const SetSensivity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sensivity_ = from.sensivity_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.SetSensivity)
}

void SetSensivity::SharedCtor() {
  sensivity_ = 0;
}

SetSensivity::~SetSensivity() {
  // @@protoc_insertion_point(destructor:OrionCommunication.SetSensivity)
  SharedDtor();
}

void SetSensivity::SharedDtor() {
}

void SetSensivity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetSensivity& SetSensivity::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetSensivity_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void SetSensivity::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.SetSensivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sensivity_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetSensivity::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetSensivity*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 sensivity = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_sensivity(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetSensivity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.SetSensivity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 sensivity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sensivity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.SetSensivity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.SetSensivity)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetSensivity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.SetSensivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sensivity = 1;
  if (this->sensivity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sensivity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.SetSensivity)
}

::google::protobuf::uint8* SetSensivity::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.SetSensivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sensivity = 1;
  if (this->sensivity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sensivity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.SetSensivity)
  return target;
}

size_t SetSensivity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.SetSensivity)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 sensivity = 1;
  if (this->sensivity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sensivity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetSensivity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.SetSensivity)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSensivity* source =
      ::google::protobuf::DynamicCastToGenerated<SetSensivity>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.SetSensivity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.SetSensivity)
    MergeFrom(*source);
  }
}

void SetSensivity::MergeFrom(const SetSensivity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.SetSensivity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sensivity() != 0) {
    set_sensivity(from.sensivity());
  }
}

void SetSensivity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.SetSensivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSensivity::CopyFrom(const SetSensivity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.SetSensivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSensivity::IsInitialized() const {
  return true;
}

void SetSensivity::Swap(SetSensivity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSensivity::InternalSwap(SetSensivity* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(sensivity_, other->sensivity_);
}

::google::protobuf::Metadata SetSensivity::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OverlayQ::InitAsDefaultInstance() {
}
class OverlayQ::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OverlayQ::kConfigNoFieldNumber;
const int OverlayQ::kPosFieldNumber;
const int OverlayQ::kPosxFieldNumber;
const int OverlayQ::kPosyFieldNumber;
const int OverlayQ::kTextFieldNumber;
const int OverlayQ::kDisplayFieldNumber;
const int OverlayQ::kTextSizeFieldNumber;
const int OverlayQ::kDateTimeFormatFieldNumber;
const int OverlayQ::kDisplayDateFieldNumber;
const int OverlayQ::kDisplayTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OverlayQ::OverlayQ()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.OverlayQ)
}
OverlayQ::OverlayQ(const OverlayQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&configno_, &from.configno_,
    static_cast<size_t>(reinterpret_cast<char*>(&displaytime_) -
    reinterpret_cast<char*>(&configno_)) + sizeof(displaytime_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.OverlayQ)
}

void OverlayQ::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OverlayQ_OrionCommunication_2eproto.base);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&configno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&displaytime_) -
      reinterpret_cast<char*>(&configno_)) + sizeof(displaytime_));
}

OverlayQ::~OverlayQ() {
  // @@protoc_insertion_point(destructor:OrionCommunication.OverlayQ)
  SharedDtor();
}

void OverlayQ::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OverlayQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OverlayQ& OverlayQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OverlayQ_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void OverlayQ::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.OverlayQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&configno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&displaytime_) -
      reinterpret_cast<char*>(&configno_)) + sizeof(displaytime_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OverlayQ::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OverlayQ*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 configNo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_configno(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .OrionCommunication.OverlayQ.Position pos = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_pos(static_cast<::OrionCommunication::OverlayQ_Position>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 posx = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_posx(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 posy = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_posy(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string text = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("OrionCommunication.OverlayQ.text");
        object = msg->mutable_text();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 display = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_display(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 textSize = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_textsize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 dateTimeFormat = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_datetimeformat(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 displayDate = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_displaydate(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 displayTime = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_displaytime(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OverlayQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.OverlayQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 configNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &configno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OrionCommunication.OverlayQ.Position pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pos(static_cast< ::OrionCommunication::OverlayQ_Position >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 posx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 posy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "OrionCommunication.OverlayQ.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 display = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 textSize = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &textsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dateTimeFormat = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &datetimeformat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 displayDate = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &displaydate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 displayTime = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &displaytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.OverlayQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.OverlayQ)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OverlayQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.OverlayQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 configNo = 1;
  if (this->configno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->configno(), output);
  }

  // .OrionCommunication.OverlayQ.Position pos = 2;
  if (this->pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->pos(), output);
  }

  // int32 posx = 3;
  if (this->posx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->posx(), output);
  }

  // int32 posy = 4;
  if (this->posy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->posy(), output);
  }

  // string text = 5;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "OrionCommunication.OverlayQ.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->text(), output);
  }

  // int32 display = 6;
  if (this->display() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->display(), output);
  }

  // int32 textSize = 7;
  if (this->textsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->textsize(), output);
  }

  // int32 dateTimeFormat = 8;
  if (this->datetimeformat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->datetimeformat(), output);
  }

  // int32 displayDate = 9;
  if (this->displaydate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->displaydate(), output);
  }

  // int32 displayTime = 10;
  if (this->displaytime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->displaytime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.OverlayQ)
}

::google::protobuf::uint8* OverlayQ::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.OverlayQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 configNo = 1;
  if (this->configno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->configno(), target);
  }

  // .OrionCommunication.OverlayQ.Position pos = 2;
  if (this->pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->pos(), target);
  }

  // int32 posx = 3;
  if (this->posx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->posx(), target);
  }

  // int32 posy = 4;
  if (this->posy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->posy(), target);
  }

  // string text = 5;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "OrionCommunication.OverlayQ.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->text(), target);
  }

  // int32 display = 6;
  if (this->display() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->display(), target);
  }

  // int32 textSize = 7;
  if (this->textsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->textsize(), target);
  }

  // int32 dateTimeFormat = 8;
  if (this->datetimeformat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->datetimeformat(), target);
  }

  // int32 displayDate = 9;
  if (this->displaydate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->displaydate(), target);
  }

  // int32 displayTime = 10;
  if (this->displaytime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->displaytime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.OverlayQ)
  return target;
}

size_t OverlayQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.OverlayQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 5;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // int32 configNo = 1;
  if (this->configno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->configno());
  }

  // .OrionCommunication.OverlayQ.Position pos = 2;
  if (this->pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pos());
  }

  // int32 posx = 3;
  if (this->posx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->posx());
  }

  // int32 posy = 4;
  if (this->posy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->posy());
  }

  // int32 display = 6;
  if (this->display() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->display());
  }

  // int32 textSize = 7;
  if (this->textsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->textsize());
  }

  // int32 dateTimeFormat = 8;
  if (this->datetimeformat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->datetimeformat());
  }

  // int32 displayDate = 9;
  if (this->displaydate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->displaydate());
  }

  // int32 displayTime = 10;
  if (this->displaytime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->displaytime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OverlayQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.OverlayQ)
  GOOGLE_DCHECK_NE(&from, this);
  const OverlayQ* source =
      ::google::protobuf::DynamicCastToGenerated<OverlayQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.OverlayQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.OverlayQ)
    MergeFrom(*source);
  }
}

void OverlayQ::MergeFrom(const OverlayQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.OverlayQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.configno() != 0) {
    set_configno(from.configno());
  }
  if (from.pos() != 0) {
    set_pos(from.pos());
  }
  if (from.posx() != 0) {
    set_posx(from.posx());
  }
  if (from.posy() != 0) {
    set_posy(from.posy());
  }
  if (from.display() != 0) {
    set_display(from.display());
  }
  if (from.textsize() != 0) {
    set_textsize(from.textsize());
  }
  if (from.datetimeformat() != 0) {
    set_datetimeformat(from.datetimeformat());
  }
  if (from.displaydate() != 0) {
    set_displaydate(from.displaydate());
  }
  if (from.displaytime() != 0) {
    set_displaytime(from.displaytime());
  }
}

void OverlayQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.OverlayQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OverlayQ::CopyFrom(const OverlayQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.OverlayQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OverlayQ::IsInitialized() const {
  return true;
}

void OverlayQ::Swap(OverlayQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OverlayQ::InternalSwap(OverlayQ* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(configno_, other->configno_);
  swap(pos_, other->pos_);
  swap(posx_, other->posx_);
  swap(posy_, other->posy_);
  swap(display_, other->display_);
  swap(textsize_, other->textsize_);
  swap(datetimeformat_, other->datetimeformat_);
  swap(displaydate_, other->displaydate_);
  swap(displaytime_, other->displaytime_);
}

::google::protobuf::Metadata OverlayQ::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TrackObjectQ::InitAsDefaultInstance() {
}
class TrackObjectQ::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackObjectQ::kPointXFieldNumber;
const int TrackObjectQ::kPointYFieldNumber;
const int TrackObjectQ::kWidthFieldNumber;
const int TrackObjectQ::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackObjectQ::TrackObjectQ()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.TrackObjectQ)
}
TrackObjectQ::TrackObjectQ(const TrackObjectQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&point_x_, &from.point_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&point_x_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.TrackObjectQ)
}

void TrackObjectQ::SharedCtor() {
  ::memset(&point_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&point_x_)) + sizeof(height_));
}

TrackObjectQ::~TrackObjectQ() {
  // @@protoc_insertion_point(destructor:OrionCommunication.TrackObjectQ)
  SharedDtor();
}

void TrackObjectQ::SharedDtor() {
}

void TrackObjectQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrackObjectQ& TrackObjectQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TrackObjectQ_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void TrackObjectQ::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.TrackObjectQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&point_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&point_x_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TrackObjectQ::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TrackObjectQ*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float point_x = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_point_x(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float point_y = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_point_y(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float width = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_width(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float height = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        msg->set_height(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TrackObjectQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.TrackObjectQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float point_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &point_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float point_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &point_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.TrackObjectQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.TrackObjectQ)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TrackObjectQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.TrackObjectQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float point_x = 1;
  if (this->point_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->point_x(), output);
  }

  // float point_y = 2;
  if (this->point_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->point_y(), output);
  }

  // float width = 3;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->width(), output);
  }

  // float height = 4;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.TrackObjectQ)
}

::google::protobuf::uint8* TrackObjectQ::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.TrackObjectQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float point_x = 1;
  if (this->point_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->point_x(), target);
  }

  // float point_y = 2;
  if (this->point_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->point_y(), target);
  }

  // float width = 3;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->width(), target);
  }

  // float height = 4;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.TrackObjectQ)
  return target;
}

size_t TrackObjectQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.TrackObjectQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float point_x = 1;
  if (this->point_x() != 0) {
    total_size += 1 + 4;
  }

  // float point_y = 2;
  if (this->point_y() != 0) {
    total_size += 1 + 4;
  }

  // float width = 3;
  if (this->width() != 0) {
    total_size += 1 + 4;
  }

  // float height = 4;
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrackObjectQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.TrackObjectQ)
  GOOGLE_DCHECK_NE(&from, this);
  const TrackObjectQ* source =
      ::google::protobuf::DynamicCastToGenerated<TrackObjectQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.TrackObjectQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.TrackObjectQ)
    MergeFrom(*source);
  }
}

void TrackObjectQ::MergeFrom(const TrackObjectQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.TrackObjectQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.point_x() != 0) {
    set_point_x(from.point_x());
  }
  if (from.point_y() != 0) {
    set_point_y(from.point_y());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void TrackObjectQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.TrackObjectQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackObjectQ::CopyFrom(const TrackObjectQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.TrackObjectQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackObjectQ::IsInitialized() const {
  return true;
}

void TrackObjectQ::Swap(TrackObjectQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackObjectQ::InternalSwap(TrackObjectQ* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(point_x_, other->point_x_);
  swap(point_y_, other->point_y_);
  swap(width_, other->width_);
  swap(height_, other->height_);
}

::google::protobuf::Metadata TrackObjectQ::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AutoTrackQ::InitAsDefaultInstance() {
  ::OrionCommunication::_AutoTrackQ_default_instance_._instance.get_mutable()->object_ = const_cast< ::OrionCommunication::TrackObjectQ*>(
      ::OrionCommunication::TrackObjectQ::internal_default_instance());
}
class AutoTrackQ::HasBitSetters {
 public:
  static const ::OrionCommunication::TrackObjectQ& object(const AutoTrackQ* msg);
};

const ::OrionCommunication::TrackObjectQ&
AutoTrackQ::HasBitSetters::object(const AutoTrackQ* msg) {
  return *msg->object_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutoTrackQ::kModeFieldNumber;
const int AutoTrackQ::kTrackScoreFieldNumber;
const int AutoTrackQ::kTrackIntervalFieldNumber;
const int AutoTrackQ::kObjectFieldNumber;
const int AutoTrackQ::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutoTrackQ::AutoTrackQ()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.AutoTrackQ)
}
AutoTrackQ::AutoTrackQ(const AutoTrackQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_object()) {
    object_ = new ::OrionCommunication::TrackObjectQ(*from.object_);
  } else {
    object_ = nullptr;
  }
  ::memcpy(&mode_, &from.mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&device_) -
    reinterpret_cast<char*>(&mode_)) + sizeof(device_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.AutoTrackQ)
}

void AutoTrackQ::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AutoTrackQ_OrionCommunication_2eproto.base);
  ::memset(&object_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_) -
      reinterpret_cast<char*>(&object_)) + sizeof(device_));
}

AutoTrackQ::~AutoTrackQ() {
  // @@protoc_insertion_point(destructor:OrionCommunication.AutoTrackQ)
  SharedDtor();
}

void AutoTrackQ::SharedDtor() {
  if (this != internal_default_instance()) delete object_;
}

void AutoTrackQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AutoTrackQ& AutoTrackQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AutoTrackQ_OrionCommunication_2eproto.base);
  return *internal_default_instance();
}


void AutoTrackQ::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.AutoTrackQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_ != nullptr) {
    delete object_;
  }
  object_ = nullptr;
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(device_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AutoTrackQ::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AutoTrackQ*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .OrionCommunication.AutoTrackQ.Mode mode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_mode(static_cast<::OrionCommunication::AutoTrackQ_Mode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float trackScore = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_trackscore(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // int32 trackInterval = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_trackinterval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .OrionCommunication.TrackObjectQ object = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::OrionCommunication::TrackObjectQ::_InternalParse;
        object = msg->mutable_object();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .OrionCommunication.AutoTrackQ.DeviceType device = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_device(static_cast<::OrionCommunication::AutoTrackQ_DeviceType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AutoTrackQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.AutoTrackQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .OrionCommunication.AutoTrackQ.Mode mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::OrionCommunication::AutoTrackQ_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float trackScore = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &trackscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 trackInterval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trackinterval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OrionCommunication.TrackObjectQ object = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OrionCommunication.AutoTrackQ.DeviceType device = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_device(static_cast< ::OrionCommunication::AutoTrackQ_DeviceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.AutoTrackQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.AutoTrackQ)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AutoTrackQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.AutoTrackQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.AutoTrackQ.Mode mode = 1;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mode(), output);
  }

  // float trackScore = 2;
  if (this->trackscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->trackscore(), output);
  }

  // int32 trackInterval = 3;
  if (this->trackinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->trackinterval(), output);
  }

  // .OrionCommunication.TrackObjectQ object = 4;
  if (this->has_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::object(this), output);
  }

  // .OrionCommunication.AutoTrackQ.DeviceType device = 5;
  if (this->device() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->device(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.AutoTrackQ)
}

::google::protobuf::uint8* AutoTrackQ::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.AutoTrackQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.AutoTrackQ.Mode mode = 1;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mode(), target);
  }

  // float trackScore = 2;
  if (this->trackscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->trackscore(), target);
  }

  // int32 trackInterval = 3;
  if (this->trackinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->trackinterval(), target);
  }

  // .OrionCommunication.TrackObjectQ object = 4;
  if (this->has_object()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::object(this), target);
  }

  // .OrionCommunication.AutoTrackQ.DeviceType device = 5;
  if (this->device() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->device(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.AutoTrackQ)
  return target;
}

size_t AutoTrackQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.AutoTrackQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OrionCommunication.TrackObjectQ object = 4;
  if (this->has_object()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *object_);
  }

  // .OrionCommunication.AutoTrackQ.Mode mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // float trackScore = 2;
  if (this->trackscore() != 0) {
    total_size += 1 + 4;
  }

  // int32 trackInterval = 3;
  if (this->trackinterval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->trackinterval());
  }

  // .OrionCommunication.AutoTrackQ.DeviceType device = 5;
  if (this->device() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->device());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutoTrackQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.AutoTrackQ)
  GOOGLE_DCHECK_NE(&from, this);
  const AutoTrackQ* source =
      ::google::protobuf::DynamicCastToGenerated<AutoTrackQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.AutoTrackQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.AutoTrackQ)
    MergeFrom(*source);
  }
}

void AutoTrackQ::MergeFrom(const AutoTrackQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.AutoTrackQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object()) {
    mutable_object()->::OrionCommunication::TrackObjectQ::MergeFrom(from.object());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.trackscore() != 0) {
    set_trackscore(from.trackscore());
  }
  if (from.trackinterval() != 0) {
    set_trackinterval(from.trackinterval());
  }
  if (from.device() != 0) {
    set_device(from.device());
  }
}

void AutoTrackQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.AutoTrackQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoTrackQ::CopyFrom(const AutoTrackQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.AutoTrackQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoTrackQ::IsInitialized() const {
  return true;
}

void AutoTrackQ::Swap(AutoTrackQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutoTrackQ::InternalSwap(AutoTrackQ* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_, other->object_);
  swap(mode_, other->mode_);
  swap(trackscore_, other->trackscore_);
  swap(trackinterval_, other->trackinterval_);
  swap(device_, other->device_);
}

::google::protobuf::Metadata AutoTrackQ::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_OrionCommunication_2eproto);
  return ::file_level_metadata_OrionCommunication_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace OrionCommunication
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::OrionCommunication::PanoramaPars* Arena::CreateMaybeMessage< ::OrionCommunication::PanoramaPars >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::PanoramaPars >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::TRoi* Arena::CreateMaybeMessage< ::OrionCommunication::TRoi >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::TRoi >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::TPoint* Arena::CreateMaybeMessage< ::OrionCommunication::TPoint >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::TPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::TPolygon* Arena::CreateMaybeMessage< ::OrionCommunication::TPolygon >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::TPolygon >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::TRectangle* Arena::CreateMaybeMessage< ::OrionCommunication::TRectangle >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::TRectangle >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::ModeQ* Arena::CreateMaybeMessage< ::OrionCommunication::ModeQ >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::ModeQ >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::DummyInfo* Arena::CreateMaybeMessage< ::OrionCommunication::DummyInfo >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::DummyInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::MotionDetectionParameters* Arena::CreateMaybeMessage< ::OrionCommunication::MotionDetectionParameters >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::MotionDetectionParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::AppCommandResult* Arena::CreateMaybeMessage< ::OrionCommunication::AppCommandResult >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::AppCommandResult >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::BitrateValue* Arena::CreateMaybeMessage< ::OrionCommunication::BitrateValue >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::BitrateValue >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::ReturnUptimeValue* Arena::CreateMaybeMessage< ::OrionCommunication::ReturnUptimeValue >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::ReturnUptimeValue >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::ReturnFOVValue* Arena::CreateMaybeMessage< ::OrionCommunication::ReturnFOVValue >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::ReturnFOVValue >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::DevicedBasedInfo* Arena::CreateMaybeMessage< ::OrionCommunication::DevicedBasedInfo >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::DevicedBasedInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::ItemProperty* Arena::CreateMaybeMessage< ::OrionCommunication::ItemProperty >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::ItemProperty >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::AryaParameters* Arena::CreateMaybeMessage< ::OrionCommunication::AryaParameters >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::AryaParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::FrameModeQ* Arena::CreateMaybeMessage< ::OrionCommunication::FrameModeQ >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::FrameModeQ >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::CitMessage* Arena::CreateMaybeMessage< ::OrionCommunication::CitMessage >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::CitMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::PanoramaFrame* Arena::CreateMaybeMessage< ::OrionCommunication::PanoramaFrame >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::PanoramaFrame >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::ScreenFrame* Arena::CreateMaybeMessage< ::OrionCommunication::ScreenFrame >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::ScreenFrame >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::SetSensivity* Arena::CreateMaybeMessage< ::OrionCommunication::SetSensivity >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::SetSensivity >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::OverlayQ* Arena::CreateMaybeMessage< ::OrionCommunication::OverlayQ >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::OverlayQ >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::TrackObjectQ* Arena::CreateMaybeMessage< ::OrionCommunication::TrackObjectQ >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::TrackObjectQ >(arena);
}
template<> PROTOBUF_NOINLINE ::OrionCommunication::AutoTrackQ* Arena::CreateMaybeMessage< ::OrionCommunication::AutoTrackQ >(Arena* arena) {
  return Arena::CreateInternal< ::OrionCommunication::AutoTrackQ >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
