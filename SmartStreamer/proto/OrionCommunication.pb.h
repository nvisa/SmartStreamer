// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrionCommunication.proto

#ifndef PROTOBUF_INCLUDED_OrionCommunication_2eproto
#define PROTOBUF_INCLUDED_OrionCommunication_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_OrionCommunication_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_OrionCommunication_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[23]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_OrionCommunication_2eproto();
namespace OrionCommunication {
class AppCommandResult;
class AppCommandResultDefaultTypeInternal;
extern AppCommandResultDefaultTypeInternal _AppCommandResult_default_instance_;
class AryaParameters;
class AryaParametersDefaultTypeInternal;
extern AryaParametersDefaultTypeInternal _AryaParameters_default_instance_;
class AutoTrackQ;
class AutoTrackQDefaultTypeInternal;
extern AutoTrackQDefaultTypeInternal _AutoTrackQ_default_instance_;
class BitrateValue;
class BitrateValueDefaultTypeInternal;
extern BitrateValueDefaultTypeInternal _BitrateValue_default_instance_;
class CitMessage;
class CitMessageDefaultTypeInternal;
extern CitMessageDefaultTypeInternal _CitMessage_default_instance_;
class DevicedBasedInfo;
class DevicedBasedInfoDefaultTypeInternal;
extern DevicedBasedInfoDefaultTypeInternal _DevicedBasedInfo_default_instance_;
class DummyInfo;
class DummyInfoDefaultTypeInternal;
extern DummyInfoDefaultTypeInternal _DummyInfo_default_instance_;
class FrameModeQ;
class FrameModeQDefaultTypeInternal;
extern FrameModeQDefaultTypeInternal _FrameModeQ_default_instance_;
class ItemProperty;
class ItemPropertyDefaultTypeInternal;
extern ItemPropertyDefaultTypeInternal _ItemProperty_default_instance_;
class ModeQ;
class ModeQDefaultTypeInternal;
extern ModeQDefaultTypeInternal _ModeQ_default_instance_;
class MotionDetectionParameters;
class MotionDetectionParametersDefaultTypeInternal;
extern MotionDetectionParametersDefaultTypeInternal _MotionDetectionParameters_default_instance_;
class OverlayQ;
class OverlayQDefaultTypeInternal;
extern OverlayQDefaultTypeInternal _OverlayQ_default_instance_;
class PanoramaFrame;
class PanoramaFrameDefaultTypeInternal;
extern PanoramaFrameDefaultTypeInternal _PanoramaFrame_default_instance_;
class PanoramaPars;
class PanoramaParsDefaultTypeInternal;
extern PanoramaParsDefaultTypeInternal _PanoramaPars_default_instance_;
class ReturnFOVValue;
class ReturnFOVValueDefaultTypeInternal;
extern ReturnFOVValueDefaultTypeInternal _ReturnFOVValue_default_instance_;
class ReturnUptimeValue;
class ReturnUptimeValueDefaultTypeInternal;
extern ReturnUptimeValueDefaultTypeInternal _ReturnUptimeValue_default_instance_;
class ScreenFrame;
class ScreenFrameDefaultTypeInternal;
extern ScreenFrameDefaultTypeInternal _ScreenFrame_default_instance_;
class SetSensivity;
class SetSensivityDefaultTypeInternal;
extern SetSensivityDefaultTypeInternal _SetSensivity_default_instance_;
class TPoint;
class TPointDefaultTypeInternal;
extern TPointDefaultTypeInternal _TPoint_default_instance_;
class TPolygon;
class TPolygonDefaultTypeInternal;
extern TPolygonDefaultTypeInternal _TPolygon_default_instance_;
class TRectangle;
class TRectangleDefaultTypeInternal;
extern TRectangleDefaultTypeInternal _TRectangle_default_instance_;
class TRoi;
class TRoiDefaultTypeInternal;
extern TRoiDefaultTypeInternal _TRoi_default_instance_;
class TrackObjectQ;
class TrackObjectQDefaultTypeInternal;
extern TrackObjectQDefaultTypeInternal _TrackObjectQ_default_instance_;
}  // namespace OrionCommunication
namespace google {
namespace protobuf {
template<> ::OrionCommunication::AppCommandResult* Arena::CreateMaybeMessage<::OrionCommunication::AppCommandResult>(Arena*);
template<> ::OrionCommunication::AryaParameters* Arena::CreateMaybeMessage<::OrionCommunication::AryaParameters>(Arena*);
template<> ::OrionCommunication::AutoTrackQ* Arena::CreateMaybeMessage<::OrionCommunication::AutoTrackQ>(Arena*);
template<> ::OrionCommunication::BitrateValue* Arena::CreateMaybeMessage<::OrionCommunication::BitrateValue>(Arena*);
template<> ::OrionCommunication::CitMessage* Arena::CreateMaybeMessage<::OrionCommunication::CitMessage>(Arena*);
template<> ::OrionCommunication::DevicedBasedInfo* Arena::CreateMaybeMessage<::OrionCommunication::DevicedBasedInfo>(Arena*);
template<> ::OrionCommunication::DummyInfo* Arena::CreateMaybeMessage<::OrionCommunication::DummyInfo>(Arena*);
template<> ::OrionCommunication::FrameModeQ* Arena::CreateMaybeMessage<::OrionCommunication::FrameModeQ>(Arena*);
template<> ::OrionCommunication::ItemProperty* Arena::CreateMaybeMessage<::OrionCommunication::ItemProperty>(Arena*);
template<> ::OrionCommunication::ModeQ* Arena::CreateMaybeMessage<::OrionCommunication::ModeQ>(Arena*);
template<> ::OrionCommunication::MotionDetectionParameters* Arena::CreateMaybeMessage<::OrionCommunication::MotionDetectionParameters>(Arena*);
template<> ::OrionCommunication::OverlayQ* Arena::CreateMaybeMessage<::OrionCommunication::OverlayQ>(Arena*);
template<> ::OrionCommunication::PanoramaFrame* Arena::CreateMaybeMessage<::OrionCommunication::PanoramaFrame>(Arena*);
template<> ::OrionCommunication::PanoramaPars* Arena::CreateMaybeMessage<::OrionCommunication::PanoramaPars>(Arena*);
template<> ::OrionCommunication::ReturnFOVValue* Arena::CreateMaybeMessage<::OrionCommunication::ReturnFOVValue>(Arena*);
template<> ::OrionCommunication::ReturnUptimeValue* Arena::CreateMaybeMessage<::OrionCommunication::ReturnUptimeValue>(Arena*);
template<> ::OrionCommunication::ScreenFrame* Arena::CreateMaybeMessage<::OrionCommunication::ScreenFrame>(Arena*);
template<> ::OrionCommunication::SetSensivity* Arena::CreateMaybeMessage<::OrionCommunication::SetSensivity>(Arena*);
template<> ::OrionCommunication::TPoint* Arena::CreateMaybeMessage<::OrionCommunication::TPoint>(Arena*);
template<> ::OrionCommunication::TPolygon* Arena::CreateMaybeMessage<::OrionCommunication::TPolygon>(Arena*);
template<> ::OrionCommunication::TRectangle* Arena::CreateMaybeMessage<::OrionCommunication::TRectangle>(Arena*);
template<> ::OrionCommunication::TRoi* Arena::CreateMaybeMessage<::OrionCommunication::TRoi>(Arena*);
template<> ::OrionCommunication::TrackObjectQ* Arena::CreateMaybeMessage<::OrionCommunication::TrackObjectQ>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace OrionCommunication {

enum ModeQ_Mode {
  ModeQ_Mode_NONE = 0,
  ModeQ_Mode_PANAROMA = 1,
  ModeQ_Mode_MOTION_DETECTION = 2,
  ModeQ_Mode_TRACK = 3,
  ModeQ_Mode_ModeQ_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  ModeQ_Mode_ModeQ_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool ModeQ_Mode_IsValid(int value);
const ModeQ_Mode ModeQ_Mode_Mode_MIN = ModeQ_Mode_NONE;
const ModeQ_Mode ModeQ_Mode_Mode_MAX = ModeQ_Mode_TRACK;
const int ModeQ_Mode_Mode_ARRAYSIZE = ModeQ_Mode_Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ModeQ_Mode_descriptor();
inline const ::std::string& ModeQ_Mode_Name(ModeQ_Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ModeQ_Mode_descriptor(), value);
}
inline bool ModeQ_Mode_Parse(
    const ::std::string& name, ModeQ_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModeQ_Mode>(
    ModeQ_Mode_descriptor(), name, value);
}
enum AppCommandResult_Response {
  AppCommandResult_Response_SUCCESSFUL = 0,
  AppCommandResult_Response_FAIL = 1,
  AppCommandResult_Response_MISSING = 2,
  AppCommandResult_Response_AppCommandResult_Response_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  AppCommandResult_Response_AppCommandResult_Response_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool AppCommandResult_Response_IsValid(int value);
const AppCommandResult_Response AppCommandResult_Response_Response_MIN = AppCommandResult_Response_SUCCESSFUL;
const AppCommandResult_Response AppCommandResult_Response_Response_MAX = AppCommandResult_Response_MISSING;
const int AppCommandResult_Response_Response_ARRAYSIZE = AppCommandResult_Response_Response_MAX + 1;

const ::google::protobuf::EnumDescriptor* AppCommandResult_Response_descriptor();
inline const ::std::string& AppCommandResult_Response_Name(AppCommandResult_Response value) {
  return ::google::protobuf::internal::NameOfEnum(
    AppCommandResult_Response_descriptor(), value);
}
inline bool AppCommandResult_Response_Parse(
    const ::std::string& name, AppCommandResult_Response* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AppCommandResult_Response>(
    AppCommandResult_Response_descriptor(), name, value);
}
enum DevicedBasedInfo_DeviceType {
  DevicedBasedInfo_DeviceType_TV = 0,
  DevicedBasedInfo_DeviceType_Thermal = 1,
  DevicedBasedInfo_DeviceType_DevicedBasedInfo_DeviceType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  DevicedBasedInfo_DeviceType_DevicedBasedInfo_DeviceType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool DevicedBasedInfo_DeviceType_IsValid(int value);
const DevicedBasedInfo_DeviceType DevicedBasedInfo_DeviceType_DeviceType_MIN = DevicedBasedInfo_DeviceType_TV;
const DevicedBasedInfo_DeviceType DevicedBasedInfo_DeviceType_DeviceType_MAX = DevicedBasedInfo_DeviceType_Thermal;
const int DevicedBasedInfo_DeviceType_DeviceType_ARRAYSIZE = DevicedBasedInfo_DeviceType_DeviceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DevicedBasedInfo_DeviceType_descriptor();
inline const ::std::string& DevicedBasedInfo_DeviceType_Name(DevicedBasedInfo_DeviceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DevicedBasedInfo_DeviceType_descriptor(), value);
}
inline bool DevicedBasedInfo_DeviceType_Parse(
    const ::std::string& name, DevicedBasedInfo_DeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DevicedBasedInfo_DeviceType>(
    DevicedBasedInfo_DeviceType_descriptor(), name, value);
}
enum ItemProperty_ItemType {
  ItemProperty_ItemType_Washer = 0,
  ItemProperty_ItemType_Wiper = 1,
  ItemProperty_ItemType_ItemProperty_ItemType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  ItemProperty_ItemType_ItemProperty_ItemType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool ItemProperty_ItemType_IsValid(int value);
const ItemProperty_ItemType ItemProperty_ItemType_ItemType_MIN = ItemProperty_ItemType_Washer;
const ItemProperty_ItemType ItemProperty_ItemType_ItemType_MAX = ItemProperty_ItemType_Wiper;
const int ItemProperty_ItemType_ItemType_ARRAYSIZE = ItemProperty_ItemType_ItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ItemProperty_ItemType_descriptor();
inline const ::std::string& ItemProperty_ItemType_Name(ItemProperty_ItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ItemProperty_ItemType_descriptor(), value);
}
inline bool ItemProperty_ItemType_Parse(
    const ::std::string& name, ItemProperty_ItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ItemProperty_ItemType>(
    ItemProperty_ItemType_descriptor(), name, value);
}
enum FrameModeQ_FrameMode {
  FrameModeQ_FrameMode_LastFrame = 0,
  FrameModeQ_FrameMode_AllFrames = 1,
  FrameModeQ_FrameMode_FrameModeQ_FrameMode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  FrameModeQ_FrameMode_FrameModeQ_FrameMode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool FrameModeQ_FrameMode_IsValid(int value);
const FrameModeQ_FrameMode FrameModeQ_FrameMode_FrameMode_MIN = FrameModeQ_FrameMode_LastFrame;
const FrameModeQ_FrameMode FrameModeQ_FrameMode_FrameMode_MAX = FrameModeQ_FrameMode_AllFrames;
const int FrameModeQ_FrameMode_FrameMode_ARRAYSIZE = FrameModeQ_FrameMode_FrameMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* FrameModeQ_FrameMode_descriptor();
inline const ::std::string& FrameModeQ_FrameMode_Name(FrameModeQ_FrameMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    FrameModeQ_FrameMode_descriptor(), value);
}
inline bool FrameModeQ_FrameMode_Parse(
    const ::std::string& name, FrameModeQ_FrameMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FrameModeQ_FrameMode>(
    FrameModeQ_FrameMode_descriptor(), name, value);
}
enum OverlayQ_Position {
  OverlayQ_Position_UpperLeft = 0,
  OverlayQ_Position_UpperRight = 1,
  OverlayQ_Position_LowerLeft = 2,
  OverlayQ_Position_LowerRight = 3,
  OverlayQ_Position_Custom = 4,
  OverlayQ_Position_OverlayQ_Position_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  OverlayQ_Position_OverlayQ_Position_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool OverlayQ_Position_IsValid(int value);
const OverlayQ_Position OverlayQ_Position_Position_MIN = OverlayQ_Position_UpperLeft;
const OverlayQ_Position OverlayQ_Position_Position_MAX = OverlayQ_Position_Custom;
const int OverlayQ_Position_Position_ARRAYSIZE = OverlayQ_Position_Position_MAX + 1;

const ::google::protobuf::EnumDescriptor* OverlayQ_Position_descriptor();
inline const ::std::string& OverlayQ_Position_Name(OverlayQ_Position value) {
  return ::google::protobuf::internal::NameOfEnum(
    OverlayQ_Position_descriptor(), value);
}
inline bool OverlayQ_Position_Parse(
    const ::std::string& name, OverlayQ_Position* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OverlayQ_Position>(
    OverlayQ_Position_descriptor(), name, value);
}
enum AutoTrackQ_Mode {
  AutoTrackQ_Mode_DistanceToCenter = 0,
  AutoTrackQ_Mode_SizeOfObject = 1,
  AutoTrackQ_Mode_UserMode = 2,
  AutoTrackQ_Mode_AutoTrackQ_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  AutoTrackQ_Mode_AutoTrackQ_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool AutoTrackQ_Mode_IsValid(int value);
const AutoTrackQ_Mode AutoTrackQ_Mode_Mode_MIN = AutoTrackQ_Mode_DistanceToCenter;
const AutoTrackQ_Mode AutoTrackQ_Mode_Mode_MAX = AutoTrackQ_Mode_UserMode;
const int AutoTrackQ_Mode_Mode_ARRAYSIZE = AutoTrackQ_Mode_Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* AutoTrackQ_Mode_descriptor();
inline const ::std::string& AutoTrackQ_Mode_Name(AutoTrackQ_Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    AutoTrackQ_Mode_descriptor(), value);
}
inline bool AutoTrackQ_Mode_Parse(
    const ::std::string& name, AutoTrackQ_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AutoTrackQ_Mode>(
    AutoTrackQ_Mode_descriptor(), name, value);
}
enum AutoTrackQ_DeviceType {
  AutoTrackQ_DeviceType_TV = 0,
  AutoTrackQ_DeviceType_Thermal = 1,
  AutoTrackQ_DeviceType_AutoTrackQ_DeviceType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  AutoTrackQ_DeviceType_AutoTrackQ_DeviceType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool AutoTrackQ_DeviceType_IsValid(int value);
const AutoTrackQ_DeviceType AutoTrackQ_DeviceType_DeviceType_MIN = AutoTrackQ_DeviceType_TV;
const AutoTrackQ_DeviceType AutoTrackQ_DeviceType_DeviceType_MAX = AutoTrackQ_DeviceType_Thermal;
const int AutoTrackQ_DeviceType_DeviceType_ARRAYSIZE = AutoTrackQ_DeviceType_DeviceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AutoTrackQ_DeviceType_descriptor();
inline const ::std::string& AutoTrackQ_DeviceType_Name(AutoTrackQ_DeviceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AutoTrackQ_DeviceType_descriptor(), value);
}
inline bool AutoTrackQ_DeviceType_Parse(
    const ::std::string& name, AutoTrackQ_DeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AutoTrackQ_DeviceType>(
    AutoTrackQ_DeviceType_descriptor(), name, value);
}
// ===================================================================

class PanoramaPars final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.PanoramaPars) */ {
 public:
  PanoramaPars();
  virtual ~PanoramaPars();

  PanoramaPars(const PanoramaPars& from);

  inline PanoramaPars& operator=(const PanoramaPars& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PanoramaPars(PanoramaPars&& from) noexcept
    : PanoramaPars() {
    *this = ::std::move(from);
  }

  inline PanoramaPars& operator=(PanoramaPars&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PanoramaPars& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PanoramaPars* internal_default_instance() {
    return reinterpret_cast<const PanoramaPars*>(
               &_PanoramaPars_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PanoramaPars* other);
  friend void swap(PanoramaPars& a, PanoramaPars& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PanoramaPars* New() const final {
    return CreateMaybeMessage<PanoramaPars>(nullptr);
  }

  PanoramaPars* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PanoramaPars>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PanoramaPars& from);
  void MergeFrom(const PanoramaPars& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PanoramaPars* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 pos = 1;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // int32 fov = 2;
  void clear_fov();
  static const int kFovFieldNumber = 2;
  ::google::protobuf::int32 fov() const;
  void set_fov(::google::protobuf::int32 value);

  // float update_rate = 3;
  void clear_update_rate();
  static const int kUpdateRateFieldNumber = 3;
  float update_rate() const;
  void set_update_rate(float value);

  // float pan_start_angle = 4;
  void clear_pan_start_angle();
  static const int kPanStartAngleFieldNumber = 4;
  float pan_start_angle() const;
  void set_pan_start_angle(float value);

  // int32 y_start_pos = 5;
  void clear_y_start_pos();
  static const int kYStartPosFieldNumber = 5;
  ::google::protobuf::int32 y_start_pos() const;
  void set_y_start_pos(::google::protobuf::int32 value);

  // int32 widthx = 6;
  void clear_widthx();
  static const int kWidthxFieldNumber = 6;
  ::google::protobuf::int32 widthx() const;
  void set_widthx(::google::protobuf::int32 value);

  // int32 heighty = 7;
  void clear_heighty();
  static const int kHeightyFieldNumber = 7;
  ::google::protobuf::int32 heighty() const;
  void set_heighty(::google::protobuf::int32 value);

  // int32 fix_mode = 8;
  void clear_fix_mode();
  static const int kFixModeFieldNumber = 8;
  ::google::protobuf::int32 fix_mode() const;
  void set_fix_mode(::google::protobuf::int32 value);

  // int32 pan_motion_frame_no = 9;
  void clear_pan_motion_frame_no();
  static const int kPanMotionFrameNoFieldNumber = 9;
  ::google::protobuf::int32 pan_motion_frame_no() const;
  void set_pan_motion_frame_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.PanoramaPars)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 fov_;
  float update_rate_;
  float pan_start_angle_;
  ::google::protobuf::int32 y_start_pos_;
  ::google::protobuf::int32 widthx_;
  ::google::protobuf::int32 heighty_;
  ::google::protobuf::int32 fix_mode_;
  ::google::protobuf::int32 pan_motion_frame_no_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class TRoi final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.TRoi) */ {
 public:
  TRoi();
  virtual ~TRoi();

  TRoi(const TRoi& from);

  inline TRoi& operator=(const TRoi& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TRoi(TRoi&& from) noexcept
    : TRoi() {
    *this = ::std::move(from);
  }

  inline TRoi& operator=(TRoi&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TRoi& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TRoi* internal_default_instance() {
    return reinterpret_cast<const TRoi*>(
               &_TRoi_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(TRoi* other);
  friend void swap(TRoi& a, TRoi& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TRoi* New() const final {
    return CreateMaybeMessage<TRoi>(nullptr);
  }

  TRoi* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TRoi>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TRoi& from);
  void MergeFrom(const TRoi& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TRoi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OrionCommunication.TPolygon polygon = 1;
  int polygon_size() const;
  void clear_polygon();
  static const int kPolygonFieldNumber = 1;
  ::OrionCommunication::TPolygon* mutable_polygon(int index);
  ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPolygon >*
      mutable_polygon();
  const ::OrionCommunication::TPolygon& polygon(int index) const;
  ::OrionCommunication::TPolygon* add_polygon();
  const ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPolygon >&
      polygon() const;

  // .OrionCommunication.TRectangle rect1 = 2;
  bool has_rect1() const;
  void clear_rect1();
  static const int kRect1FieldNumber = 2;
  const ::OrionCommunication::TRectangle& rect1() const;
  ::OrionCommunication::TRectangle* release_rect1();
  ::OrionCommunication::TRectangle* mutable_rect1();
  void set_allocated_rect1(::OrionCommunication::TRectangle* rect1);

  // .OrionCommunication.TRectangle rect2 = 3;
  bool has_rect2() const;
  void clear_rect2();
  static const int kRect2FieldNumber = 3;
  const ::OrionCommunication::TRectangle& rect2() const;
  ::OrionCommunication::TRectangle* release_rect2();
  ::OrionCommunication::TRectangle* mutable_rect2();
  void set_allocated_rect2(::OrionCommunication::TRectangle* rect2);

  // @@protoc_insertion_point(class_scope:OrionCommunication.TRoi)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPolygon > polygon_;
  ::OrionCommunication::TRectangle* rect1_;
  ::OrionCommunication::TRectangle* rect2_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class TPoint final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.TPoint) */ {
 public:
  TPoint();
  virtual ~TPoint();

  TPoint(const TPoint& from);

  inline TPoint& operator=(const TPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TPoint(TPoint&& from) noexcept
    : TPoint() {
    *this = ::std::move(from);
  }

  inline TPoint& operator=(TPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TPoint* internal_default_instance() {
    return reinterpret_cast<const TPoint*>(
               &_TPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(TPoint* other);
  friend void swap(TPoint& a, TPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TPoint* New() const final {
    return CreateMaybeMessage<TPoint>(nullptr);
  }

  TPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TPoint& from);
  void MergeFrom(const TPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.TPoint)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class TPolygon final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.TPolygon) */ {
 public:
  TPolygon();
  virtual ~TPolygon();

  TPolygon(const TPolygon& from);

  inline TPolygon& operator=(const TPolygon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TPolygon(TPolygon&& from) noexcept
    : TPolygon() {
    *this = ::std::move(from);
  }

  inline TPolygon& operator=(TPolygon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TPolygon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TPolygon* internal_default_instance() {
    return reinterpret_cast<const TPolygon*>(
               &_TPolygon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(TPolygon* other);
  friend void swap(TPolygon& a, TPolygon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TPolygon* New() const final {
    return CreateMaybeMessage<TPolygon>(nullptr);
  }

  TPolygon* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TPolygon>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TPolygon& from);
  void MergeFrom(const TPolygon& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TPolygon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OrionCommunication.TPoint points = 1;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 1;
  ::OrionCommunication::TPoint* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPoint >*
      mutable_points();
  const ::OrionCommunication::TPoint& points(int index) const;
  ::OrionCommunication::TPoint* add_points();
  const ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPoint >&
      points() const;

  // bool is_active = 2;
  void clear_is_active();
  static const int kIsActiveFieldNumber = 2;
  bool is_active() const;
  void set_is_active(bool value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.TPolygon)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPoint > points_;
  bool is_active_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class TRectangle final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.TRectangle) */ {
 public:
  TRectangle();
  virtual ~TRectangle();

  TRectangle(const TRectangle& from);

  inline TRectangle& operator=(const TRectangle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TRectangle(TRectangle&& from) noexcept
    : TRectangle() {
    *this = ::std::move(from);
  }

  inline TRectangle& operator=(TRectangle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TRectangle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TRectangle* internal_default_instance() {
    return reinterpret_cast<const TRectangle*>(
               &_TRectangle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(TRectangle* other);
  friend void swap(TRectangle& a, TRectangle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TRectangle* New() const final {
    return CreateMaybeMessage<TRectangle>(nullptr);
  }

  TRectangle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TRectangle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TRectangle& from);
  void MergeFrom(const TRectangle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TRectangle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .OrionCommunication.TPoint upperLeft = 1;
  bool has_upperleft() const;
  void clear_upperleft();
  static const int kUpperLeftFieldNumber = 1;
  const ::OrionCommunication::TPoint& upperleft() const;
  ::OrionCommunication::TPoint* release_upperleft();
  ::OrionCommunication::TPoint* mutable_upperleft();
  void set_allocated_upperleft(::OrionCommunication::TPoint* upperleft);

  // .OrionCommunication.TPoint bottomRight = 2;
  bool has_bottomright() const;
  void clear_bottomright();
  static const int kBottomRightFieldNumber = 2;
  const ::OrionCommunication::TPoint& bottomright() const;
  ::OrionCommunication::TPoint* release_bottomright();
  ::OrionCommunication::TPoint* mutable_bottomright();
  void set_allocated_bottomright(::OrionCommunication::TPoint* bottomright);

  // @@protoc_insertion_point(class_scope:OrionCommunication.TRectangle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::OrionCommunication::TPoint* upperleft_;
  ::OrionCommunication::TPoint* bottomright_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class ModeQ final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.ModeQ) */ {
 public:
  ModeQ();
  virtual ~ModeQ();

  ModeQ(const ModeQ& from);

  inline ModeQ& operator=(const ModeQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModeQ(ModeQ&& from) noexcept
    : ModeQ() {
    *this = ::std::move(from);
  }

  inline ModeQ& operator=(ModeQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ModeQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModeQ* internal_default_instance() {
    return reinterpret_cast<const ModeQ*>(
               &_ModeQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ModeQ* other);
  friend void swap(ModeQ& a, ModeQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModeQ* New() const final {
    return CreateMaybeMessage<ModeQ>(nullptr);
  }

  ModeQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ModeQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ModeQ& from);
  void MergeFrom(const ModeQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModeQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ModeQ_Mode Mode;
  static const Mode NONE =
    ModeQ_Mode_NONE;
  static const Mode PANAROMA =
    ModeQ_Mode_PANAROMA;
  static const Mode MOTION_DETECTION =
    ModeQ_Mode_MOTION_DETECTION;
  static const Mode TRACK =
    ModeQ_Mode_TRACK;
  static inline bool Mode_IsValid(int value) {
    return ModeQ_Mode_IsValid(value);
  }
  static const Mode Mode_MIN =
    ModeQ_Mode_Mode_MIN;
  static const Mode Mode_MAX =
    ModeQ_Mode_Mode_MAX;
  static const int Mode_ARRAYSIZE =
    ModeQ_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mode_descriptor() {
    return ModeQ_Mode_descriptor();
  }
  static inline const ::std::string& Mode_Name(Mode value) {
    return ModeQ_Mode_Name(value);
  }
  static inline bool Mode_Parse(const ::std::string& name,
      Mode* value) {
    return ModeQ_Mode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .OrionCommunication.ModeQ.Mode mode = 1;
  void clear_mode();
  static const int kModeFieldNumber = 1;
  ::OrionCommunication::ModeQ_Mode mode() const;
  void set_mode(::OrionCommunication::ModeQ_Mode value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.ModeQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int mode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class DummyInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.DummyInfo) */ {
 public:
  DummyInfo();
  virtual ~DummyInfo();

  DummyInfo(const DummyInfo& from);

  inline DummyInfo& operator=(const DummyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DummyInfo(DummyInfo&& from) noexcept
    : DummyInfo() {
    *this = ::std::move(from);
  }

  inline DummyInfo& operator=(DummyInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DummyInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DummyInfo* internal_default_instance() {
    return reinterpret_cast<const DummyInfo*>(
               &_DummyInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(DummyInfo* other);
  friend void swap(DummyInfo& a, DummyInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DummyInfo* New() const final {
    return CreateMaybeMessage<DummyInfo>(nullptr);
  }

  DummyInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DummyInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DummyInfo& from);
  void MergeFrom(const DummyInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DummyInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 dummy = 1;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::int32 dummy() const;
  void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.DummyInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 dummy_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class MotionDetectionParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.MotionDetectionParameters) */ {
 public:
  MotionDetectionParameters();
  virtual ~MotionDetectionParameters();

  MotionDetectionParameters(const MotionDetectionParameters& from);

  inline MotionDetectionParameters& operator=(const MotionDetectionParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MotionDetectionParameters(MotionDetectionParameters&& from) noexcept
    : MotionDetectionParameters() {
    *this = ::std::move(from);
  }

  inline MotionDetectionParameters& operator=(MotionDetectionParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MotionDetectionParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MotionDetectionParameters* internal_default_instance() {
    return reinterpret_cast<const MotionDetectionParameters*>(
               &_MotionDetectionParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(MotionDetectionParameters* other);
  friend void swap(MotionDetectionParameters& a, MotionDetectionParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotionDetectionParameters* New() const final {
    return CreateMaybeMessage<MotionDetectionParameters>(nullptr);
  }

  MotionDetectionParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MotionDetectionParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MotionDetectionParameters& from);
  void MergeFrom(const MotionDetectionParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotionDetectionParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 dummy = 1;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::int32 dummy() const;
  void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.MotionDetectionParameters)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 dummy_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class AppCommandResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.AppCommandResult) */ {
 public:
  AppCommandResult();
  virtual ~AppCommandResult();

  AppCommandResult(const AppCommandResult& from);

  inline AppCommandResult& operator=(const AppCommandResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppCommandResult(AppCommandResult&& from) noexcept
    : AppCommandResult() {
    *this = ::std::move(from);
  }

  inline AppCommandResult& operator=(AppCommandResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AppCommandResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppCommandResult* internal_default_instance() {
    return reinterpret_cast<const AppCommandResult*>(
               &_AppCommandResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(AppCommandResult* other);
  friend void swap(AppCommandResult& a, AppCommandResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppCommandResult* New() const final {
    return CreateMaybeMessage<AppCommandResult>(nullptr);
  }

  AppCommandResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppCommandResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppCommandResult& from);
  void MergeFrom(const AppCommandResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppCommandResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AppCommandResult_Response Response;
  static const Response SUCCESSFUL =
    AppCommandResult_Response_SUCCESSFUL;
  static const Response FAIL =
    AppCommandResult_Response_FAIL;
  static const Response MISSING =
    AppCommandResult_Response_MISSING;
  static inline bool Response_IsValid(int value) {
    return AppCommandResult_Response_IsValid(value);
  }
  static const Response Response_MIN =
    AppCommandResult_Response_Response_MIN;
  static const Response Response_MAX =
    AppCommandResult_Response_Response_MAX;
  static const int Response_ARRAYSIZE =
    AppCommandResult_Response_Response_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Response_descriptor() {
    return AppCommandResult_Response_descriptor();
  }
  static inline const ::std::string& Response_Name(Response value) {
    return AppCommandResult_Response_Name(value);
  }
  static inline bool Response_Parse(const ::std::string& name,
      Response* value) {
    return AppCommandResult_Response_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // .OrionCommunication.AppCommandResult.Response response = 2;
  void clear_response();
  static const int kResponseFieldNumber = 2;
  ::OrionCommunication::AppCommandResult_Response response() const;
  void set_response(::OrionCommunication::AppCommandResult_Response value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.AppCommandResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 err_;
  int response_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class BitrateValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.BitrateValue) */ {
 public:
  BitrateValue();
  virtual ~BitrateValue();

  BitrateValue(const BitrateValue& from);

  inline BitrateValue& operator=(const BitrateValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BitrateValue(BitrateValue&& from) noexcept
    : BitrateValue() {
    *this = ::std::move(from);
  }

  inline BitrateValue& operator=(BitrateValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BitrateValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BitrateValue* internal_default_instance() {
    return reinterpret_cast<const BitrateValue*>(
               &_BitrateValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(BitrateValue* other);
  friend void swap(BitrateValue& a, BitrateValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BitrateValue* New() const final {
    return CreateMaybeMessage<BitrateValue>(nullptr);
  }

  BitrateValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BitrateValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BitrateValue& from);
  void MergeFrom(const BitrateValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BitrateValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 bitrateValue = 1;
  void clear_bitratevalue();
  static const int kBitrateValueFieldNumber = 1;
  ::google::protobuf::int32 bitratevalue() const;
  void set_bitratevalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.BitrateValue)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 bitratevalue_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class ReturnUptimeValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.ReturnUptimeValue) */ {
 public:
  ReturnUptimeValue();
  virtual ~ReturnUptimeValue();

  ReturnUptimeValue(const ReturnUptimeValue& from);

  inline ReturnUptimeValue& operator=(const ReturnUptimeValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReturnUptimeValue(ReturnUptimeValue&& from) noexcept
    : ReturnUptimeValue() {
    *this = ::std::move(from);
  }

  inline ReturnUptimeValue& operator=(ReturnUptimeValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReturnUptimeValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReturnUptimeValue* internal_default_instance() {
    return reinterpret_cast<const ReturnUptimeValue*>(
               &_ReturnUptimeValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ReturnUptimeValue* other);
  friend void swap(ReturnUptimeValue& a, ReturnUptimeValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReturnUptimeValue* New() const final {
    return CreateMaybeMessage<ReturnUptimeValue>(nullptr);
  }

  ReturnUptimeValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReturnUptimeValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReturnUptimeValue& from);
  void MergeFrom(const ReturnUptimeValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReturnUptimeValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 uptimeValue = 1;
  void clear_uptimevalue();
  static const int kUptimeValueFieldNumber = 1;
  ::google::protobuf::int32 uptimevalue() const;
  void set_uptimevalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.ReturnUptimeValue)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 uptimevalue_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class ReturnFOVValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.ReturnFOVValue) */ {
 public:
  ReturnFOVValue();
  virtual ~ReturnFOVValue();

  ReturnFOVValue(const ReturnFOVValue& from);

  inline ReturnFOVValue& operator=(const ReturnFOVValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReturnFOVValue(ReturnFOVValue&& from) noexcept
    : ReturnFOVValue() {
    *this = ::std::move(from);
  }

  inline ReturnFOVValue& operator=(ReturnFOVValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReturnFOVValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReturnFOVValue* internal_default_instance() {
    return reinterpret_cast<const ReturnFOVValue*>(
               &_ReturnFOVValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ReturnFOVValue* other);
  friend void swap(ReturnFOVValue& a, ReturnFOVValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReturnFOVValue* New() const final {
    return CreateMaybeMessage<ReturnFOVValue>(nullptr);
  }

  ReturnFOVValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReturnFOVValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReturnFOVValue& from);
  void MergeFrom(const ReturnFOVValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReturnFOVValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float fovValue = 1;
  void clear_fovvalue();
  static const int kFovValueFieldNumber = 1;
  float fovvalue() const;
  void set_fovvalue(float value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.ReturnFOVValue)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float fovvalue_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class DevicedBasedInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.DevicedBasedInfo) */ {
 public:
  DevicedBasedInfo();
  virtual ~DevicedBasedInfo();

  DevicedBasedInfo(const DevicedBasedInfo& from);

  inline DevicedBasedInfo& operator=(const DevicedBasedInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DevicedBasedInfo(DevicedBasedInfo&& from) noexcept
    : DevicedBasedInfo() {
    *this = ::std::move(from);
  }

  inline DevicedBasedInfo& operator=(DevicedBasedInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DevicedBasedInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DevicedBasedInfo* internal_default_instance() {
    return reinterpret_cast<const DevicedBasedInfo*>(
               &_DevicedBasedInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(DevicedBasedInfo* other);
  friend void swap(DevicedBasedInfo& a, DevicedBasedInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DevicedBasedInfo* New() const final {
    return CreateMaybeMessage<DevicedBasedInfo>(nullptr);
  }

  DevicedBasedInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DevicedBasedInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DevicedBasedInfo& from);
  void MergeFrom(const DevicedBasedInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DevicedBasedInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DevicedBasedInfo_DeviceType DeviceType;
  static const DeviceType TV =
    DevicedBasedInfo_DeviceType_TV;
  static const DeviceType Thermal =
    DevicedBasedInfo_DeviceType_Thermal;
  static inline bool DeviceType_IsValid(int value) {
    return DevicedBasedInfo_DeviceType_IsValid(value);
  }
  static const DeviceType DeviceType_MIN =
    DevicedBasedInfo_DeviceType_DeviceType_MIN;
  static const DeviceType DeviceType_MAX =
    DevicedBasedInfo_DeviceType_DeviceType_MAX;
  static const int DeviceType_ARRAYSIZE =
    DevicedBasedInfo_DeviceType_DeviceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DeviceType_descriptor() {
    return DevicedBasedInfo_DeviceType_descriptor();
  }
  static inline const ::std::string& DeviceType_Name(DeviceType value) {
    return DevicedBasedInfo_DeviceType_Name(value);
  }
  static inline bool DeviceType_Parse(const ::std::string& name,
      DeviceType* value) {
    return DevicedBasedInfo_DeviceType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .OrionCommunication.DevicedBasedInfo.DeviceType device = 1;
  void clear_device();
  static const int kDeviceFieldNumber = 1;
  ::OrionCommunication::DevicedBasedInfo_DeviceType device() const;
  void set_device(::OrionCommunication::DevicedBasedInfo_DeviceType value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.DevicedBasedInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int device_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class ItemProperty final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.ItemProperty) */ {
 public:
  ItemProperty();
  virtual ~ItemProperty();

  ItemProperty(const ItemProperty& from);

  inline ItemProperty& operator=(const ItemProperty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ItemProperty(ItemProperty&& from) noexcept
    : ItemProperty() {
    *this = ::std::move(from);
  }

  inline ItemProperty& operator=(ItemProperty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ItemProperty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ItemProperty* internal_default_instance() {
    return reinterpret_cast<const ItemProperty*>(
               &_ItemProperty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ItemProperty* other);
  friend void swap(ItemProperty& a, ItemProperty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ItemProperty* New() const final {
    return CreateMaybeMessage<ItemProperty>(nullptr);
  }

  ItemProperty* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ItemProperty>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ItemProperty& from);
  void MergeFrom(const ItemProperty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ItemProperty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ItemProperty_ItemType ItemType;
  static const ItemType Washer =
    ItemProperty_ItemType_Washer;
  static const ItemType Wiper =
    ItemProperty_ItemType_Wiper;
  static inline bool ItemType_IsValid(int value) {
    return ItemProperty_ItemType_IsValid(value);
  }
  static const ItemType ItemType_MIN =
    ItemProperty_ItemType_ItemType_MIN;
  static const ItemType ItemType_MAX =
    ItemProperty_ItemType_ItemType_MAX;
  static const int ItemType_ARRAYSIZE =
    ItemProperty_ItemType_ItemType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ItemType_descriptor() {
    return ItemProperty_ItemType_descriptor();
  }
  static inline const ::std::string& ItemType_Name(ItemType value) {
    return ItemProperty_ItemType_Name(value);
  }
  static inline bool ItemType_Parse(const ::std::string& name,
      ItemType* value) {
    return ItemProperty_ItemType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .OrionCommunication.ItemProperty.ItemType itemType = 1;
  void clear_itemtype();
  static const int kItemTypeFieldNumber = 1;
  ::OrionCommunication::ItemProperty_ItemType itemtype() const;
  void set_itemtype(::OrionCommunication::ItemProperty_ItemType value);

  // bool state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  bool state() const;
  void set_state(bool value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.ItemProperty)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int itemtype_;
  bool state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class AryaParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.AryaParameters) */ {
 public:
  AryaParameters();
  virtual ~AryaParameters();

  AryaParameters(const AryaParameters& from);

  inline AryaParameters& operator=(const AryaParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AryaParameters(AryaParameters&& from) noexcept
    : AryaParameters() {
    *this = ::std::move(from);
  }

  inline AryaParameters& operator=(AryaParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AryaParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AryaParameters* internal_default_instance() {
    return reinterpret_cast<const AryaParameters*>(
               &_AryaParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(AryaParameters* other);
  friend void swap(AryaParameters& a, AryaParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AryaParameters* New() const final {
    return CreateMaybeMessage<AryaParameters>(nullptr);
  }

  AryaParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AryaParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AryaParameters& from);
  void MergeFrom(const AryaParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AryaParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 panSpeed = 1;
  void clear_panspeed();
  static const int kPanSpeedFieldNumber = 1;
  ::google::protobuf::int32 panspeed() const;
  void set_panspeed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.AryaParameters)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 panspeed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class FrameModeQ final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.FrameModeQ) */ {
 public:
  FrameModeQ();
  virtual ~FrameModeQ();

  FrameModeQ(const FrameModeQ& from);

  inline FrameModeQ& operator=(const FrameModeQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FrameModeQ(FrameModeQ&& from) noexcept
    : FrameModeQ() {
    *this = ::std::move(from);
  }

  inline FrameModeQ& operator=(FrameModeQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FrameModeQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FrameModeQ* internal_default_instance() {
    return reinterpret_cast<const FrameModeQ*>(
               &_FrameModeQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(FrameModeQ* other);
  friend void swap(FrameModeQ& a, FrameModeQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FrameModeQ* New() const final {
    return CreateMaybeMessage<FrameModeQ>(nullptr);
  }

  FrameModeQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FrameModeQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FrameModeQ& from);
  void MergeFrom(const FrameModeQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrameModeQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FrameModeQ_FrameMode FrameMode;
  static const FrameMode LastFrame =
    FrameModeQ_FrameMode_LastFrame;
  static const FrameMode AllFrames =
    FrameModeQ_FrameMode_AllFrames;
  static inline bool FrameMode_IsValid(int value) {
    return FrameModeQ_FrameMode_IsValid(value);
  }
  static const FrameMode FrameMode_MIN =
    FrameModeQ_FrameMode_FrameMode_MIN;
  static const FrameMode FrameMode_MAX =
    FrameModeQ_FrameMode_FrameMode_MAX;
  static const int FrameMode_ARRAYSIZE =
    FrameModeQ_FrameMode_FrameMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FrameMode_descriptor() {
    return FrameModeQ_FrameMode_descriptor();
  }
  static inline const ::std::string& FrameMode_Name(FrameMode value) {
    return FrameModeQ_FrameMode_Name(value);
  }
  static inline bool FrameMode_Parse(const ::std::string& name,
      FrameMode* value) {
    return FrameModeQ_FrameMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .OrionCommunication.FrameModeQ.FrameMode mode = 1;
  void clear_mode();
  static const int kModeFieldNumber = 1;
  ::OrionCommunication::FrameModeQ_FrameMode mode() const;
  void set_mode(::OrionCommunication::FrameModeQ_FrameMode value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.FrameModeQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int mode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class CitMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.CitMessage) */ {
 public:
  CitMessage();
  virtual ~CitMessage();

  CitMessage(const CitMessage& from);

  inline CitMessage& operator=(const CitMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CitMessage(CitMessage&& from) noexcept
    : CitMessage() {
    *this = ::std::move(from);
  }

  inline CitMessage& operator=(CitMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CitMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CitMessage* internal_default_instance() {
    return reinterpret_cast<const CitMessage*>(
               &_CitMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CitMessage* other);
  friend void swap(CitMessage& a, CitMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CitMessage* New() const final {
    return CreateMaybeMessage<CitMessage>(nullptr);
  }

  CitMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CitMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CitMessage& from);
  void MergeFrom(const CitMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CitMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string citResult = 6;
  int citresult_size() const;
  void clear_citresult();
  static const int kCitResultFieldNumber = 6;
  const ::std::string& citresult(int index) const;
  ::std::string* mutable_citresult(int index);
  void set_citresult(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_citresult(int index, ::std::string&& value);
  #endif
  void set_citresult(int index, const char* value);
  void set_citresult(int index, const char* value, size_t size);
  ::std::string* add_citresult();
  void add_citresult(const ::std::string& value);
  #if LANG_CXX11
  void add_citresult(::std::string&& value);
  #endif
  void add_citresult(const char* value);
  void add_citresult(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& citresult() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_citresult();

  // string msg = 5;
  void clear_msg();
  static const int kMsgFieldNumber = 5;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int32 currentStep = 1;
  void clear_currentstep();
  static const int kCurrentStepFieldNumber = 1;
  ::google::protobuf::int32 currentstep() const;
  void set_currentstep(::google::protobuf::int32 value);

  // int32 stepCount = 2;
  void clear_stepcount();
  static const int kStepCountFieldNumber = 2;
  ::google::protobuf::int32 stepcount() const;
  void set_stepcount(::google::protobuf::int32 value);

  // int32 currentStepProgress = 3;
  void clear_currentstepprogress();
  static const int kCurrentStepProgressFieldNumber = 3;
  ::google::protobuf::int32 currentstepprogress() const;
  void set_currentstepprogress(::google::protobuf::int32 value);

  // int32 currentStepProgressTotal = 4;
  void clear_currentstepprogresstotal();
  static const int kCurrentStepProgressTotalFieldNumber = 4;
  ::google::protobuf::int32 currentstepprogresstotal() const;
  void set_currentstepprogresstotal(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.CitMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> citresult_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 currentstep_;
  ::google::protobuf::int32 stepcount_;
  ::google::protobuf::int32 currentstepprogress_;
  ::google::protobuf::int32 currentstepprogresstotal_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class PanoramaFrame final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.PanoramaFrame) */ {
 public:
  PanoramaFrame();
  virtual ~PanoramaFrame();

  PanoramaFrame(const PanoramaFrame& from);

  inline PanoramaFrame& operator=(const PanoramaFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PanoramaFrame(PanoramaFrame&& from) noexcept
    : PanoramaFrame() {
    *this = ::std::move(from);
  }

  inline PanoramaFrame& operator=(PanoramaFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PanoramaFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PanoramaFrame* internal_default_instance() {
    return reinterpret_cast<const PanoramaFrame*>(
               &_PanoramaFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(PanoramaFrame* other);
  friend void swap(PanoramaFrame& a, PanoramaFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PanoramaFrame* New() const final {
    return CreateMaybeMessage<PanoramaFrame>(nullptr);
  }

  PanoramaFrame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PanoramaFrame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PanoramaFrame& from);
  void MergeFrom(const PanoramaFrame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PanoramaFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes frameData = 3;
  void clear_framedata();
  static const int kFrameDataFieldNumber = 3;
  const ::std::string& framedata() const;
  void set_framedata(const ::std::string& value);
  #if LANG_CXX11
  void set_framedata(::std::string&& value);
  #endif
  void set_framedata(const char* value);
  void set_framedata(const void* value, size_t size);
  ::std::string* mutable_framedata();
  ::std::string* release_framedata();
  void set_allocated_framedata(::std::string* framedata);

  // bool valid = 1;
  void clear_valid();
  static const int kValidFieldNumber = 1;
  bool valid() const;
  void set_valid(bool value);

  // float progress = 2;
  void clear_progress();
  static const int kProgressFieldNumber = 2;
  float progress() const;
  void set_progress(float value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.PanoramaFrame)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr framedata_;
  bool valid_;
  float progress_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class ScreenFrame final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.ScreenFrame) */ {
 public:
  ScreenFrame();
  virtual ~ScreenFrame();

  ScreenFrame(const ScreenFrame& from);

  inline ScreenFrame& operator=(const ScreenFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScreenFrame(ScreenFrame&& from) noexcept
    : ScreenFrame() {
    *this = ::std::move(from);
  }

  inline ScreenFrame& operator=(ScreenFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ScreenFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScreenFrame* internal_default_instance() {
    return reinterpret_cast<const ScreenFrame*>(
               &_ScreenFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(ScreenFrame* other);
  friend void swap(ScreenFrame& a, ScreenFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScreenFrame* New() const final {
    return CreateMaybeMessage<ScreenFrame>(nullptr);
  }

  ScreenFrame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScreenFrame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScreenFrame& from);
  void MergeFrom(const ScreenFrame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScreenFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes frame = 1;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  const ::std::string& frame() const;
  void set_frame(const ::std::string& value);
  #if LANG_CXX11
  void set_frame(::std::string&& value);
  #endif
  void set_frame(const char* value);
  void set_frame(const void* value, size_t size);
  ::std::string* mutable_frame();
  ::std::string* release_frame();
  void set_allocated_frame(::std::string* frame);

  // @@protoc_insertion_point(class_scope:OrionCommunication.ScreenFrame)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr frame_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class SetSensivity final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.SetSensivity) */ {
 public:
  SetSensivity();
  virtual ~SetSensivity();

  SetSensivity(const SetSensivity& from);

  inline SetSensivity& operator=(const SetSensivity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetSensivity(SetSensivity&& from) noexcept
    : SetSensivity() {
    *this = ::std::move(from);
  }

  inline SetSensivity& operator=(SetSensivity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetSensivity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetSensivity* internal_default_instance() {
    return reinterpret_cast<const SetSensivity*>(
               &_SetSensivity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(SetSensivity* other);
  friend void swap(SetSensivity& a, SetSensivity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetSensivity* New() const final {
    return CreateMaybeMessage<SetSensivity>(nullptr);
  }

  SetSensivity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetSensivity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetSensivity& from);
  void MergeFrom(const SetSensivity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSensivity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 sensivity = 1;
  void clear_sensivity();
  static const int kSensivityFieldNumber = 1;
  ::google::protobuf::int32 sensivity() const;
  void set_sensivity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.SetSensivity)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 sensivity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class OverlayQ final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.OverlayQ) */ {
 public:
  OverlayQ();
  virtual ~OverlayQ();

  OverlayQ(const OverlayQ& from);

  inline OverlayQ& operator=(const OverlayQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OverlayQ(OverlayQ&& from) noexcept
    : OverlayQ() {
    *this = ::std::move(from);
  }

  inline OverlayQ& operator=(OverlayQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OverlayQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OverlayQ* internal_default_instance() {
    return reinterpret_cast<const OverlayQ*>(
               &_OverlayQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(OverlayQ* other);
  friend void swap(OverlayQ& a, OverlayQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OverlayQ* New() const final {
    return CreateMaybeMessage<OverlayQ>(nullptr);
  }

  OverlayQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OverlayQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OverlayQ& from);
  void MergeFrom(const OverlayQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OverlayQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OverlayQ_Position Position;
  static const Position UpperLeft =
    OverlayQ_Position_UpperLeft;
  static const Position UpperRight =
    OverlayQ_Position_UpperRight;
  static const Position LowerLeft =
    OverlayQ_Position_LowerLeft;
  static const Position LowerRight =
    OverlayQ_Position_LowerRight;
  static const Position Custom =
    OverlayQ_Position_Custom;
  static inline bool Position_IsValid(int value) {
    return OverlayQ_Position_IsValid(value);
  }
  static const Position Position_MIN =
    OverlayQ_Position_Position_MIN;
  static const Position Position_MAX =
    OverlayQ_Position_Position_MAX;
  static const int Position_ARRAYSIZE =
    OverlayQ_Position_Position_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Position_descriptor() {
    return OverlayQ_Position_descriptor();
  }
  static inline const ::std::string& Position_Name(Position value) {
    return OverlayQ_Position_Name(value);
  }
  static inline bool Position_Parse(const ::std::string& name,
      Position* value) {
    return OverlayQ_Position_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string text = 5;
  void clear_text();
  static const int kTextFieldNumber = 5;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 configNo = 1;
  void clear_configno();
  static const int kConfigNoFieldNumber = 1;
  ::google::protobuf::int32 configno() const;
  void set_configno(::google::protobuf::int32 value);

  // .OrionCommunication.OverlayQ.Position pos = 2;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::OrionCommunication::OverlayQ_Position pos() const;
  void set_pos(::OrionCommunication::OverlayQ_Position value);

  // int32 posx = 3;
  void clear_posx();
  static const int kPosxFieldNumber = 3;
  ::google::protobuf::int32 posx() const;
  void set_posx(::google::protobuf::int32 value);

  // int32 posy = 4;
  void clear_posy();
  static const int kPosyFieldNumber = 4;
  ::google::protobuf::int32 posy() const;
  void set_posy(::google::protobuf::int32 value);

  // int32 display = 6;
  void clear_display();
  static const int kDisplayFieldNumber = 6;
  ::google::protobuf::int32 display() const;
  void set_display(::google::protobuf::int32 value);

  // int32 textSize = 7;
  void clear_textsize();
  static const int kTextSizeFieldNumber = 7;
  ::google::protobuf::int32 textsize() const;
  void set_textsize(::google::protobuf::int32 value);

  // int32 dateTimeFormat = 8;
  void clear_datetimeformat();
  static const int kDateTimeFormatFieldNumber = 8;
  ::google::protobuf::int32 datetimeformat() const;
  void set_datetimeformat(::google::protobuf::int32 value);

  // int32 displayDate = 9;
  void clear_displaydate();
  static const int kDisplayDateFieldNumber = 9;
  ::google::protobuf::int32 displaydate() const;
  void set_displaydate(::google::protobuf::int32 value);

  // int32 displayTime = 10;
  void clear_displaytime();
  static const int kDisplayTimeFieldNumber = 10;
  ::google::protobuf::int32 displaytime() const;
  void set_displaytime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.OverlayQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 configno_;
  int pos_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posy_;
  ::google::protobuf::int32 display_;
  ::google::protobuf::int32 textsize_;
  ::google::protobuf::int32 datetimeformat_;
  ::google::protobuf::int32 displaydate_;
  ::google::protobuf::int32 displaytime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class TrackObjectQ final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.TrackObjectQ) */ {
 public:
  TrackObjectQ();
  virtual ~TrackObjectQ();

  TrackObjectQ(const TrackObjectQ& from);

  inline TrackObjectQ& operator=(const TrackObjectQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrackObjectQ(TrackObjectQ&& from) noexcept
    : TrackObjectQ() {
    *this = ::std::move(from);
  }

  inline TrackObjectQ& operator=(TrackObjectQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TrackObjectQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrackObjectQ* internal_default_instance() {
    return reinterpret_cast<const TrackObjectQ*>(
               &_TrackObjectQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(TrackObjectQ* other);
  friend void swap(TrackObjectQ& a, TrackObjectQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrackObjectQ* New() const final {
    return CreateMaybeMessage<TrackObjectQ>(nullptr);
  }

  TrackObjectQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrackObjectQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrackObjectQ& from);
  void MergeFrom(const TrackObjectQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrackObjectQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float point_x = 1;
  void clear_point_x();
  static const int kPointXFieldNumber = 1;
  float point_x() const;
  void set_point_x(float value);

  // float point_y = 2;
  void clear_point_y();
  static const int kPointYFieldNumber = 2;
  float point_y() const;
  void set_point_y(float value);

  // float width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  float width() const;
  void set_width(float value);

  // float height = 4;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  float height() const;
  void set_height(float value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.TrackObjectQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float point_x_;
  float point_y_;
  float width_;
  float height_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// -------------------------------------------------------------------

class AutoTrackQ final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.AutoTrackQ) */ {
 public:
  AutoTrackQ();
  virtual ~AutoTrackQ();

  AutoTrackQ(const AutoTrackQ& from);

  inline AutoTrackQ& operator=(const AutoTrackQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AutoTrackQ(AutoTrackQ&& from) noexcept
    : AutoTrackQ() {
    *this = ::std::move(from);
  }

  inline AutoTrackQ& operator=(AutoTrackQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AutoTrackQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutoTrackQ* internal_default_instance() {
    return reinterpret_cast<const AutoTrackQ*>(
               &_AutoTrackQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(AutoTrackQ* other);
  friend void swap(AutoTrackQ& a, AutoTrackQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AutoTrackQ* New() const final {
    return CreateMaybeMessage<AutoTrackQ>(nullptr);
  }

  AutoTrackQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AutoTrackQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AutoTrackQ& from);
  void MergeFrom(const AutoTrackQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AutoTrackQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AutoTrackQ_Mode Mode;
  static const Mode DistanceToCenter =
    AutoTrackQ_Mode_DistanceToCenter;
  static const Mode SizeOfObject =
    AutoTrackQ_Mode_SizeOfObject;
  static const Mode UserMode =
    AutoTrackQ_Mode_UserMode;
  static inline bool Mode_IsValid(int value) {
    return AutoTrackQ_Mode_IsValid(value);
  }
  static const Mode Mode_MIN =
    AutoTrackQ_Mode_Mode_MIN;
  static const Mode Mode_MAX =
    AutoTrackQ_Mode_Mode_MAX;
  static const int Mode_ARRAYSIZE =
    AutoTrackQ_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mode_descriptor() {
    return AutoTrackQ_Mode_descriptor();
  }
  static inline const ::std::string& Mode_Name(Mode value) {
    return AutoTrackQ_Mode_Name(value);
  }
  static inline bool Mode_Parse(const ::std::string& name,
      Mode* value) {
    return AutoTrackQ_Mode_Parse(name, value);
  }

  typedef AutoTrackQ_DeviceType DeviceType;
  static const DeviceType TV =
    AutoTrackQ_DeviceType_TV;
  static const DeviceType Thermal =
    AutoTrackQ_DeviceType_Thermal;
  static inline bool DeviceType_IsValid(int value) {
    return AutoTrackQ_DeviceType_IsValid(value);
  }
  static const DeviceType DeviceType_MIN =
    AutoTrackQ_DeviceType_DeviceType_MIN;
  static const DeviceType DeviceType_MAX =
    AutoTrackQ_DeviceType_DeviceType_MAX;
  static const int DeviceType_ARRAYSIZE =
    AutoTrackQ_DeviceType_DeviceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DeviceType_descriptor() {
    return AutoTrackQ_DeviceType_descriptor();
  }
  static inline const ::std::string& DeviceType_Name(DeviceType value) {
    return AutoTrackQ_DeviceType_Name(value);
  }
  static inline bool DeviceType_Parse(const ::std::string& name,
      DeviceType* value) {
    return AutoTrackQ_DeviceType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .OrionCommunication.TrackObjectQ object = 4;
  bool has_object() const;
  void clear_object();
  static const int kObjectFieldNumber = 4;
  const ::OrionCommunication::TrackObjectQ& object() const;
  ::OrionCommunication::TrackObjectQ* release_object();
  ::OrionCommunication::TrackObjectQ* mutable_object();
  void set_allocated_object(::OrionCommunication::TrackObjectQ* object);

  // .OrionCommunication.AutoTrackQ.Mode mode = 1;
  void clear_mode();
  static const int kModeFieldNumber = 1;
  ::OrionCommunication::AutoTrackQ_Mode mode() const;
  void set_mode(::OrionCommunication::AutoTrackQ_Mode value);

  // float trackScore = 2;
  void clear_trackscore();
  static const int kTrackScoreFieldNumber = 2;
  float trackscore() const;
  void set_trackscore(float value);

  // int32 trackInterval = 3;
  void clear_trackinterval();
  static const int kTrackIntervalFieldNumber = 3;
  ::google::protobuf::int32 trackinterval() const;
  void set_trackinterval(::google::protobuf::int32 value);

  // .OrionCommunication.AutoTrackQ.DeviceType device = 5;
  void clear_device();
  static const int kDeviceFieldNumber = 5;
  ::OrionCommunication::AutoTrackQ_DeviceType device() const;
  void set_device(::OrionCommunication::AutoTrackQ_DeviceType value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.AutoTrackQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::OrionCommunication::TrackObjectQ* object_;
  int mode_;
  float trackscore_;
  ::google::protobuf::int32 trackinterval_;
  int device_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OrionCommunication_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PanoramaPars

// int32 pos = 1;
inline void PanoramaPars::clear_pos() {
  pos_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::pos() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.pos)
  return pos_;
}
inline void PanoramaPars::set_pos(::google::protobuf::int32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.pos)
}

// int32 fov = 2;
inline void PanoramaPars::clear_fov() {
  fov_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::fov() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.fov)
  return fov_;
}
inline void PanoramaPars::set_fov(::google::protobuf::int32 value) {
  
  fov_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.fov)
}

// float update_rate = 3;
inline void PanoramaPars::clear_update_rate() {
  update_rate_ = 0;
}
inline float PanoramaPars::update_rate() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.update_rate)
  return update_rate_;
}
inline void PanoramaPars::set_update_rate(float value) {
  
  update_rate_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.update_rate)
}

// float pan_start_angle = 4;
inline void PanoramaPars::clear_pan_start_angle() {
  pan_start_angle_ = 0;
}
inline float PanoramaPars::pan_start_angle() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.pan_start_angle)
  return pan_start_angle_;
}
inline void PanoramaPars::set_pan_start_angle(float value) {
  
  pan_start_angle_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.pan_start_angle)
}

// int32 y_start_pos = 5;
inline void PanoramaPars::clear_y_start_pos() {
  y_start_pos_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::y_start_pos() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.y_start_pos)
  return y_start_pos_;
}
inline void PanoramaPars::set_y_start_pos(::google::protobuf::int32 value) {
  
  y_start_pos_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.y_start_pos)
}

// int32 widthx = 6;
inline void PanoramaPars::clear_widthx() {
  widthx_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::widthx() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.widthx)
  return widthx_;
}
inline void PanoramaPars::set_widthx(::google::protobuf::int32 value) {
  
  widthx_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.widthx)
}

// int32 heighty = 7;
inline void PanoramaPars::clear_heighty() {
  heighty_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::heighty() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.heighty)
  return heighty_;
}
inline void PanoramaPars::set_heighty(::google::protobuf::int32 value) {
  
  heighty_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.heighty)
}

// int32 fix_mode = 8;
inline void PanoramaPars::clear_fix_mode() {
  fix_mode_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::fix_mode() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.fix_mode)
  return fix_mode_;
}
inline void PanoramaPars::set_fix_mode(::google::protobuf::int32 value) {
  
  fix_mode_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.fix_mode)
}

// int32 pan_motion_frame_no = 9;
inline void PanoramaPars::clear_pan_motion_frame_no() {
  pan_motion_frame_no_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::pan_motion_frame_no() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.pan_motion_frame_no)
  return pan_motion_frame_no_;
}
inline void PanoramaPars::set_pan_motion_frame_no(::google::protobuf::int32 value) {
  
  pan_motion_frame_no_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.pan_motion_frame_no)
}

// -------------------------------------------------------------------

// TRoi

// repeated .OrionCommunication.TPolygon polygon = 1;
inline int TRoi::polygon_size() const {
  return polygon_.size();
}
inline void TRoi::clear_polygon() {
  polygon_.Clear();
}
inline ::OrionCommunication::TPolygon* TRoi::mutable_polygon(int index) {
  // @@protoc_insertion_point(field_mutable:OrionCommunication.TRoi.polygon)
  return polygon_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPolygon >*
TRoi::mutable_polygon() {
  // @@protoc_insertion_point(field_mutable_list:OrionCommunication.TRoi.polygon)
  return &polygon_;
}
inline const ::OrionCommunication::TPolygon& TRoi::polygon(int index) const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TRoi.polygon)
  return polygon_.Get(index);
}
inline ::OrionCommunication::TPolygon* TRoi::add_polygon() {
  // @@protoc_insertion_point(field_add:OrionCommunication.TRoi.polygon)
  return polygon_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPolygon >&
TRoi::polygon() const {
  // @@protoc_insertion_point(field_list:OrionCommunication.TRoi.polygon)
  return polygon_;
}

// .OrionCommunication.TRectangle rect1 = 2;
inline bool TRoi::has_rect1() const {
  return this != internal_default_instance() && rect1_ != nullptr;
}
inline void TRoi::clear_rect1() {
  if (GetArenaNoVirtual() == nullptr && rect1_ != nullptr) {
    delete rect1_;
  }
  rect1_ = nullptr;
}
inline const ::OrionCommunication::TRectangle& TRoi::rect1() const {
  const ::OrionCommunication::TRectangle* p = rect1_;
  // @@protoc_insertion_point(field_get:OrionCommunication.TRoi.rect1)
  return p != nullptr ? *p : *reinterpret_cast<const ::OrionCommunication::TRectangle*>(
      &::OrionCommunication::_TRectangle_default_instance_);
}
inline ::OrionCommunication::TRectangle* TRoi::release_rect1() {
  // @@protoc_insertion_point(field_release:OrionCommunication.TRoi.rect1)
  
  ::OrionCommunication::TRectangle* temp = rect1_;
  rect1_ = nullptr;
  return temp;
}
inline ::OrionCommunication::TRectangle* TRoi::mutable_rect1() {
  
  if (rect1_ == nullptr) {
    auto* p = CreateMaybeMessage<::OrionCommunication::TRectangle>(GetArenaNoVirtual());
    rect1_ = p;
  }
  // @@protoc_insertion_point(field_mutable:OrionCommunication.TRoi.rect1)
  return rect1_;
}
inline void TRoi::set_allocated_rect1(::OrionCommunication::TRectangle* rect1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete rect1_;
  }
  if (rect1) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rect1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rect1, submessage_arena);
    }
    
  } else {
    
  }
  rect1_ = rect1;
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.TRoi.rect1)
}

// .OrionCommunication.TRectangle rect2 = 3;
inline bool TRoi::has_rect2() const {
  return this != internal_default_instance() && rect2_ != nullptr;
}
inline void TRoi::clear_rect2() {
  if (GetArenaNoVirtual() == nullptr && rect2_ != nullptr) {
    delete rect2_;
  }
  rect2_ = nullptr;
}
inline const ::OrionCommunication::TRectangle& TRoi::rect2() const {
  const ::OrionCommunication::TRectangle* p = rect2_;
  // @@protoc_insertion_point(field_get:OrionCommunication.TRoi.rect2)
  return p != nullptr ? *p : *reinterpret_cast<const ::OrionCommunication::TRectangle*>(
      &::OrionCommunication::_TRectangle_default_instance_);
}
inline ::OrionCommunication::TRectangle* TRoi::release_rect2() {
  // @@protoc_insertion_point(field_release:OrionCommunication.TRoi.rect2)
  
  ::OrionCommunication::TRectangle* temp = rect2_;
  rect2_ = nullptr;
  return temp;
}
inline ::OrionCommunication::TRectangle* TRoi::mutable_rect2() {
  
  if (rect2_ == nullptr) {
    auto* p = CreateMaybeMessage<::OrionCommunication::TRectangle>(GetArenaNoVirtual());
    rect2_ = p;
  }
  // @@protoc_insertion_point(field_mutable:OrionCommunication.TRoi.rect2)
  return rect2_;
}
inline void TRoi::set_allocated_rect2(::OrionCommunication::TRectangle* rect2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete rect2_;
  }
  if (rect2) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rect2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rect2, submessage_arena);
    }
    
  } else {
    
  }
  rect2_ = rect2;
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.TRoi.rect2)
}

// -------------------------------------------------------------------

// TPoint

// float x = 1;
inline void TPoint::clear_x() {
  x_ = 0;
}
inline float TPoint::x() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TPoint.x)
  return x_;
}
inline void TPoint::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.TPoint.x)
}

// float y = 2;
inline void TPoint::clear_y() {
  y_ = 0;
}
inline float TPoint::y() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TPoint.y)
  return y_;
}
inline void TPoint::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.TPoint.y)
}

// -------------------------------------------------------------------

// TPolygon

// repeated .OrionCommunication.TPoint points = 1;
inline int TPolygon::points_size() const {
  return points_.size();
}
inline void TPolygon::clear_points() {
  points_.Clear();
}
inline ::OrionCommunication::TPoint* TPolygon::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:OrionCommunication.TPolygon.points)
  return points_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPoint >*
TPolygon::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:OrionCommunication.TPolygon.points)
  return &points_;
}
inline const ::OrionCommunication::TPoint& TPolygon::points(int index) const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TPolygon.points)
  return points_.Get(index);
}
inline ::OrionCommunication::TPoint* TPolygon::add_points() {
  // @@protoc_insertion_point(field_add:OrionCommunication.TPolygon.points)
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPoint >&
TPolygon::points() const {
  // @@protoc_insertion_point(field_list:OrionCommunication.TPolygon.points)
  return points_;
}

// bool is_active = 2;
inline void TPolygon::clear_is_active() {
  is_active_ = false;
}
inline bool TPolygon::is_active() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TPolygon.is_active)
  return is_active_;
}
inline void TPolygon::set_is_active(bool value) {
  
  is_active_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.TPolygon.is_active)
}

// -------------------------------------------------------------------

// TRectangle

// .OrionCommunication.TPoint upperLeft = 1;
inline bool TRectangle::has_upperleft() const {
  return this != internal_default_instance() && upperleft_ != nullptr;
}
inline void TRectangle::clear_upperleft() {
  if (GetArenaNoVirtual() == nullptr && upperleft_ != nullptr) {
    delete upperleft_;
  }
  upperleft_ = nullptr;
}
inline const ::OrionCommunication::TPoint& TRectangle::upperleft() const {
  const ::OrionCommunication::TPoint* p = upperleft_;
  // @@protoc_insertion_point(field_get:OrionCommunication.TRectangle.upperLeft)
  return p != nullptr ? *p : *reinterpret_cast<const ::OrionCommunication::TPoint*>(
      &::OrionCommunication::_TPoint_default_instance_);
}
inline ::OrionCommunication::TPoint* TRectangle::release_upperleft() {
  // @@protoc_insertion_point(field_release:OrionCommunication.TRectangle.upperLeft)
  
  ::OrionCommunication::TPoint* temp = upperleft_;
  upperleft_ = nullptr;
  return temp;
}
inline ::OrionCommunication::TPoint* TRectangle::mutable_upperleft() {
  
  if (upperleft_ == nullptr) {
    auto* p = CreateMaybeMessage<::OrionCommunication::TPoint>(GetArenaNoVirtual());
    upperleft_ = p;
  }
  // @@protoc_insertion_point(field_mutable:OrionCommunication.TRectangle.upperLeft)
  return upperleft_;
}
inline void TRectangle::set_allocated_upperleft(::OrionCommunication::TPoint* upperleft) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete upperleft_;
  }
  if (upperleft) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      upperleft = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, upperleft, submessage_arena);
    }
    
  } else {
    
  }
  upperleft_ = upperleft;
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.TRectangle.upperLeft)
}

// .OrionCommunication.TPoint bottomRight = 2;
inline bool TRectangle::has_bottomright() const {
  return this != internal_default_instance() && bottomright_ != nullptr;
}
inline void TRectangle::clear_bottomright() {
  if (GetArenaNoVirtual() == nullptr && bottomright_ != nullptr) {
    delete bottomright_;
  }
  bottomright_ = nullptr;
}
inline const ::OrionCommunication::TPoint& TRectangle::bottomright() const {
  const ::OrionCommunication::TPoint* p = bottomright_;
  // @@protoc_insertion_point(field_get:OrionCommunication.TRectangle.bottomRight)
  return p != nullptr ? *p : *reinterpret_cast<const ::OrionCommunication::TPoint*>(
      &::OrionCommunication::_TPoint_default_instance_);
}
inline ::OrionCommunication::TPoint* TRectangle::release_bottomright() {
  // @@protoc_insertion_point(field_release:OrionCommunication.TRectangle.bottomRight)
  
  ::OrionCommunication::TPoint* temp = bottomright_;
  bottomright_ = nullptr;
  return temp;
}
inline ::OrionCommunication::TPoint* TRectangle::mutable_bottomright() {
  
  if (bottomright_ == nullptr) {
    auto* p = CreateMaybeMessage<::OrionCommunication::TPoint>(GetArenaNoVirtual());
    bottomright_ = p;
  }
  // @@protoc_insertion_point(field_mutable:OrionCommunication.TRectangle.bottomRight)
  return bottomright_;
}
inline void TRectangle::set_allocated_bottomright(::OrionCommunication::TPoint* bottomright) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bottomright_;
  }
  if (bottomright) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bottomright = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bottomright, submessage_arena);
    }
    
  } else {
    
  }
  bottomright_ = bottomright;
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.TRectangle.bottomRight)
}

// -------------------------------------------------------------------

// ModeQ

// .OrionCommunication.ModeQ.Mode mode = 1;
inline void ModeQ::clear_mode() {
  mode_ = 0;
}
inline ::OrionCommunication::ModeQ_Mode ModeQ::mode() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.ModeQ.mode)
  return static_cast< ::OrionCommunication::ModeQ_Mode >(mode_);
}
inline void ModeQ::set_mode(::OrionCommunication::ModeQ_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.ModeQ.mode)
}

// -------------------------------------------------------------------

// DummyInfo

// int32 dummy = 1;
inline void DummyInfo::clear_dummy() {
  dummy_ = 0;
}
inline ::google::protobuf::int32 DummyInfo::dummy() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.DummyInfo.dummy)
  return dummy_;
}
inline void DummyInfo::set_dummy(::google::protobuf::int32 value) {
  
  dummy_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.DummyInfo.dummy)
}

// -------------------------------------------------------------------

// MotionDetectionParameters

// int32 dummy = 1;
inline void MotionDetectionParameters::clear_dummy() {
  dummy_ = 0;
}
inline ::google::protobuf::int32 MotionDetectionParameters::dummy() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.MotionDetectionParameters.dummy)
  return dummy_;
}
inline void MotionDetectionParameters::set_dummy(::google::protobuf::int32 value) {
  
  dummy_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.MotionDetectionParameters.dummy)
}

// -------------------------------------------------------------------

// AppCommandResult

// int32 err = 1;
inline void AppCommandResult::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 AppCommandResult::err() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.AppCommandResult.err)
  return err_;
}
inline void AppCommandResult::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.AppCommandResult.err)
}

// .OrionCommunication.AppCommandResult.Response response = 2;
inline void AppCommandResult::clear_response() {
  response_ = 0;
}
inline ::OrionCommunication::AppCommandResult_Response AppCommandResult::response() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.AppCommandResult.response)
  return static_cast< ::OrionCommunication::AppCommandResult_Response >(response_);
}
inline void AppCommandResult::set_response(::OrionCommunication::AppCommandResult_Response value) {
  
  response_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.AppCommandResult.response)
}

// -------------------------------------------------------------------

// BitrateValue

// int32 bitrateValue = 1;
inline void BitrateValue::clear_bitratevalue() {
  bitratevalue_ = 0;
}
inline ::google::protobuf::int32 BitrateValue::bitratevalue() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.BitrateValue.bitrateValue)
  return bitratevalue_;
}
inline void BitrateValue::set_bitratevalue(::google::protobuf::int32 value) {
  
  bitratevalue_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.BitrateValue.bitrateValue)
}

// -------------------------------------------------------------------

// ReturnUptimeValue

// int32 uptimeValue = 1;
inline void ReturnUptimeValue::clear_uptimevalue() {
  uptimevalue_ = 0;
}
inline ::google::protobuf::int32 ReturnUptimeValue::uptimevalue() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.ReturnUptimeValue.uptimeValue)
  return uptimevalue_;
}
inline void ReturnUptimeValue::set_uptimevalue(::google::protobuf::int32 value) {
  
  uptimevalue_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.ReturnUptimeValue.uptimeValue)
}

// -------------------------------------------------------------------

// ReturnFOVValue

// float fovValue = 1;
inline void ReturnFOVValue::clear_fovvalue() {
  fovvalue_ = 0;
}
inline float ReturnFOVValue::fovvalue() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.ReturnFOVValue.fovValue)
  return fovvalue_;
}
inline void ReturnFOVValue::set_fovvalue(float value) {
  
  fovvalue_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.ReturnFOVValue.fovValue)
}

// -------------------------------------------------------------------

// DevicedBasedInfo

// .OrionCommunication.DevicedBasedInfo.DeviceType device = 1;
inline void DevicedBasedInfo::clear_device() {
  device_ = 0;
}
inline ::OrionCommunication::DevicedBasedInfo_DeviceType DevicedBasedInfo::device() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.DevicedBasedInfo.device)
  return static_cast< ::OrionCommunication::DevicedBasedInfo_DeviceType >(device_);
}
inline void DevicedBasedInfo::set_device(::OrionCommunication::DevicedBasedInfo_DeviceType value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.DevicedBasedInfo.device)
}

// -------------------------------------------------------------------

// ItemProperty

// .OrionCommunication.ItemProperty.ItemType itemType = 1;
inline void ItemProperty::clear_itemtype() {
  itemtype_ = 0;
}
inline ::OrionCommunication::ItemProperty_ItemType ItemProperty::itemtype() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.ItemProperty.itemType)
  return static_cast< ::OrionCommunication::ItemProperty_ItemType >(itemtype_);
}
inline void ItemProperty::set_itemtype(::OrionCommunication::ItemProperty_ItemType value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.ItemProperty.itemType)
}

// bool state = 2;
inline void ItemProperty::clear_state() {
  state_ = false;
}
inline bool ItemProperty::state() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.ItemProperty.state)
  return state_;
}
inline void ItemProperty::set_state(bool value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.ItemProperty.state)
}

// -------------------------------------------------------------------

// AryaParameters

// int32 panSpeed = 1;
inline void AryaParameters::clear_panspeed() {
  panspeed_ = 0;
}
inline ::google::protobuf::int32 AryaParameters::panspeed() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.AryaParameters.panSpeed)
  return panspeed_;
}
inline void AryaParameters::set_panspeed(::google::protobuf::int32 value) {
  
  panspeed_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.AryaParameters.panSpeed)
}

// -------------------------------------------------------------------

// FrameModeQ

// .OrionCommunication.FrameModeQ.FrameMode mode = 1;
inline void FrameModeQ::clear_mode() {
  mode_ = 0;
}
inline ::OrionCommunication::FrameModeQ_FrameMode FrameModeQ::mode() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.FrameModeQ.mode)
  return static_cast< ::OrionCommunication::FrameModeQ_FrameMode >(mode_);
}
inline void FrameModeQ::set_mode(::OrionCommunication::FrameModeQ_FrameMode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.FrameModeQ.mode)
}

// -------------------------------------------------------------------

// CitMessage

// int32 currentStep = 1;
inline void CitMessage::clear_currentstep() {
  currentstep_ = 0;
}
inline ::google::protobuf::int32 CitMessage::currentstep() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.CitMessage.currentStep)
  return currentstep_;
}
inline void CitMessage::set_currentstep(::google::protobuf::int32 value) {
  
  currentstep_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.CitMessage.currentStep)
}

// int32 stepCount = 2;
inline void CitMessage::clear_stepcount() {
  stepcount_ = 0;
}
inline ::google::protobuf::int32 CitMessage::stepcount() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.CitMessage.stepCount)
  return stepcount_;
}
inline void CitMessage::set_stepcount(::google::protobuf::int32 value) {
  
  stepcount_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.CitMessage.stepCount)
}

// int32 currentStepProgress = 3;
inline void CitMessage::clear_currentstepprogress() {
  currentstepprogress_ = 0;
}
inline ::google::protobuf::int32 CitMessage::currentstepprogress() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.CitMessage.currentStepProgress)
  return currentstepprogress_;
}
inline void CitMessage::set_currentstepprogress(::google::protobuf::int32 value) {
  
  currentstepprogress_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.CitMessage.currentStepProgress)
}

// int32 currentStepProgressTotal = 4;
inline void CitMessage::clear_currentstepprogresstotal() {
  currentstepprogresstotal_ = 0;
}
inline ::google::protobuf::int32 CitMessage::currentstepprogresstotal() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.CitMessage.currentStepProgressTotal)
  return currentstepprogresstotal_;
}
inline void CitMessage::set_currentstepprogresstotal(::google::protobuf::int32 value) {
  
  currentstepprogresstotal_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.CitMessage.currentStepProgressTotal)
}

// string msg = 5;
inline void CitMessage::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CitMessage::msg() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.CitMessage.msg)
  return msg_.GetNoArena();
}
inline void CitMessage::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OrionCommunication.CitMessage.msg)
}
#if LANG_CXX11
inline void CitMessage::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OrionCommunication.CitMessage.msg)
}
#endif
inline void CitMessage::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OrionCommunication.CitMessage.msg)
}
inline void CitMessage::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OrionCommunication.CitMessage.msg)
}
inline ::std::string* CitMessage::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:OrionCommunication.CitMessage.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CitMessage::release_msg() {
  // @@protoc_insertion_point(field_release:OrionCommunication.CitMessage.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CitMessage::set_allocated_msg(::std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.CitMessage.msg)
}

// repeated string citResult = 6;
inline int CitMessage::citresult_size() const {
  return citresult_.size();
}
inline void CitMessage::clear_citresult() {
  citresult_.Clear();
}
inline const ::std::string& CitMessage::citresult(int index) const {
  // @@protoc_insertion_point(field_get:OrionCommunication.CitMessage.citResult)
  return citresult_.Get(index);
}
inline ::std::string* CitMessage::mutable_citresult(int index) {
  // @@protoc_insertion_point(field_mutable:OrionCommunication.CitMessage.citResult)
  return citresult_.Mutable(index);
}
inline void CitMessage::set_citresult(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:OrionCommunication.CitMessage.citResult)
  citresult_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CitMessage::set_citresult(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:OrionCommunication.CitMessage.citResult)
  citresult_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CitMessage::set_citresult(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  citresult_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:OrionCommunication.CitMessage.citResult)
}
inline void CitMessage::set_citresult(int index, const char* value, size_t size) {
  citresult_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OrionCommunication.CitMessage.citResult)
}
inline ::std::string* CitMessage::add_citresult() {
  // @@protoc_insertion_point(field_add_mutable:OrionCommunication.CitMessage.citResult)
  return citresult_.Add();
}
inline void CitMessage::add_citresult(const ::std::string& value) {
  citresult_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:OrionCommunication.CitMessage.citResult)
}
#if LANG_CXX11
inline void CitMessage::add_citresult(::std::string&& value) {
  citresult_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:OrionCommunication.CitMessage.citResult)
}
#endif
inline void CitMessage::add_citresult(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  citresult_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:OrionCommunication.CitMessage.citResult)
}
inline void CitMessage::add_citresult(const char* value, size_t size) {
  citresult_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:OrionCommunication.CitMessage.citResult)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CitMessage::citresult() const {
  // @@protoc_insertion_point(field_list:OrionCommunication.CitMessage.citResult)
  return citresult_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CitMessage::mutable_citresult() {
  // @@protoc_insertion_point(field_mutable_list:OrionCommunication.CitMessage.citResult)
  return &citresult_;
}

// -------------------------------------------------------------------

// PanoramaFrame

// bool valid = 1;
inline void PanoramaFrame::clear_valid() {
  valid_ = false;
}
inline bool PanoramaFrame::valid() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaFrame.valid)
  return valid_;
}
inline void PanoramaFrame::set_valid(bool value) {
  
  valid_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaFrame.valid)
}

// float progress = 2;
inline void PanoramaFrame::clear_progress() {
  progress_ = 0;
}
inline float PanoramaFrame::progress() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaFrame.progress)
  return progress_;
}
inline void PanoramaFrame::set_progress(float value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaFrame.progress)
}

// bytes frameData = 3;
inline void PanoramaFrame::clear_framedata() {
  framedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PanoramaFrame::framedata() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaFrame.frameData)
  return framedata_.GetNoArena();
}
inline void PanoramaFrame::set_framedata(const ::std::string& value) {
  
  framedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaFrame.frameData)
}
#if LANG_CXX11
inline void PanoramaFrame::set_framedata(::std::string&& value) {
  
  framedata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OrionCommunication.PanoramaFrame.frameData)
}
#endif
inline void PanoramaFrame::set_framedata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  framedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OrionCommunication.PanoramaFrame.frameData)
}
inline void PanoramaFrame::set_framedata(const void* value, size_t size) {
  
  framedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OrionCommunication.PanoramaFrame.frameData)
}
inline ::std::string* PanoramaFrame::mutable_framedata() {
  
  // @@protoc_insertion_point(field_mutable:OrionCommunication.PanoramaFrame.frameData)
  return framedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PanoramaFrame::release_framedata() {
  // @@protoc_insertion_point(field_release:OrionCommunication.PanoramaFrame.frameData)
  
  return framedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PanoramaFrame::set_allocated_framedata(::std::string* framedata) {
  if (framedata != nullptr) {
    
  } else {
    
  }
  framedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), framedata);
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.PanoramaFrame.frameData)
}

// -------------------------------------------------------------------

// ScreenFrame

// bytes frame = 1;
inline void ScreenFrame::clear_frame() {
  frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScreenFrame::frame() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.ScreenFrame.frame)
  return frame_.GetNoArena();
}
inline void ScreenFrame::set_frame(const ::std::string& value) {
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OrionCommunication.ScreenFrame.frame)
}
#if LANG_CXX11
inline void ScreenFrame::set_frame(::std::string&& value) {
  
  frame_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OrionCommunication.ScreenFrame.frame)
}
#endif
inline void ScreenFrame::set_frame(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OrionCommunication.ScreenFrame.frame)
}
inline void ScreenFrame::set_frame(const void* value, size_t size) {
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OrionCommunication.ScreenFrame.frame)
}
inline ::std::string* ScreenFrame::mutable_frame() {
  
  // @@protoc_insertion_point(field_mutable:OrionCommunication.ScreenFrame.frame)
  return frame_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScreenFrame::release_frame() {
  // @@protoc_insertion_point(field_release:OrionCommunication.ScreenFrame.frame)
  
  return frame_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScreenFrame::set_allocated_frame(::std::string* frame) {
  if (frame != nullptr) {
    
  } else {
    
  }
  frame_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frame);
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.ScreenFrame.frame)
}

// -------------------------------------------------------------------

// SetSensivity

// int32 sensivity = 1;
inline void SetSensivity::clear_sensivity() {
  sensivity_ = 0;
}
inline ::google::protobuf::int32 SetSensivity::sensivity() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.SetSensivity.sensivity)
  return sensivity_;
}
inline void SetSensivity::set_sensivity(::google::protobuf::int32 value) {
  
  sensivity_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.SetSensivity.sensivity)
}

// -------------------------------------------------------------------

// OverlayQ

// int32 configNo = 1;
inline void OverlayQ::clear_configno() {
  configno_ = 0;
}
inline ::google::protobuf::int32 OverlayQ::configno() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.OverlayQ.configNo)
  return configno_;
}
inline void OverlayQ::set_configno(::google::protobuf::int32 value) {
  
  configno_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.OverlayQ.configNo)
}

// .OrionCommunication.OverlayQ.Position pos = 2;
inline void OverlayQ::clear_pos() {
  pos_ = 0;
}
inline ::OrionCommunication::OverlayQ_Position OverlayQ::pos() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.OverlayQ.pos)
  return static_cast< ::OrionCommunication::OverlayQ_Position >(pos_);
}
inline void OverlayQ::set_pos(::OrionCommunication::OverlayQ_Position value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.OverlayQ.pos)
}

// int32 posx = 3;
inline void OverlayQ::clear_posx() {
  posx_ = 0;
}
inline ::google::protobuf::int32 OverlayQ::posx() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.OverlayQ.posx)
  return posx_;
}
inline void OverlayQ::set_posx(::google::protobuf::int32 value) {
  
  posx_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.OverlayQ.posx)
}

// int32 posy = 4;
inline void OverlayQ::clear_posy() {
  posy_ = 0;
}
inline ::google::protobuf::int32 OverlayQ::posy() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.OverlayQ.posy)
  return posy_;
}
inline void OverlayQ::set_posy(::google::protobuf::int32 value) {
  
  posy_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.OverlayQ.posy)
}

// string text = 5;
inline void OverlayQ::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OverlayQ::text() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.OverlayQ.text)
  return text_.GetNoArena();
}
inline void OverlayQ::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OrionCommunication.OverlayQ.text)
}
#if LANG_CXX11
inline void OverlayQ::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OrionCommunication.OverlayQ.text)
}
#endif
inline void OverlayQ::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OrionCommunication.OverlayQ.text)
}
inline void OverlayQ::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OrionCommunication.OverlayQ.text)
}
inline ::std::string* OverlayQ::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:OrionCommunication.OverlayQ.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OverlayQ::release_text() {
  // @@protoc_insertion_point(field_release:OrionCommunication.OverlayQ.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OverlayQ::set_allocated_text(::std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.OverlayQ.text)
}

// int32 display = 6;
inline void OverlayQ::clear_display() {
  display_ = 0;
}
inline ::google::protobuf::int32 OverlayQ::display() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.OverlayQ.display)
  return display_;
}
inline void OverlayQ::set_display(::google::protobuf::int32 value) {
  
  display_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.OverlayQ.display)
}

// int32 textSize = 7;
inline void OverlayQ::clear_textsize() {
  textsize_ = 0;
}
inline ::google::protobuf::int32 OverlayQ::textsize() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.OverlayQ.textSize)
  return textsize_;
}
inline void OverlayQ::set_textsize(::google::protobuf::int32 value) {
  
  textsize_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.OverlayQ.textSize)
}

// int32 dateTimeFormat = 8;
inline void OverlayQ::clear_datetimeformat() {
  datetimeformat_ = 0;
}
inline ::google::protobuf::int32 OverlayQ::datetimeformat() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.OverlayQ.dateTimeFormat)
  return datetimeformat_;
}
inline void OverlayQ::set_datetimeformat(::google::protobuf::int32 value) {
  
  datetimeformat_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.OverlayQ.dateTimeFormat)
}

// int32 displayDate = 9;
inline void OverlayQ::clear_displaydate() {
  displaydate_ = 0;
}
inline ::google::protobuf::int32 OverlayQ::displaydate() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.OverlayQ.displayDate)
  return displaydate_;
}
inline void OverlayQ::set_displaydate(::google::protobuf::int32 value) {
  
  displaydate_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.OverlayQ.displayDate)
}

// int32 displayTime = 10;
inline void OverlayQ::clear_displaytime() {
  displaytime_ = 0;
}
inline ::google::protobuf::int32 OverlayQ::displaytime() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.OverlayQ.displayTime)
  return displaytime_;
}
inline void OverlayQ::set_displaytime(::google::protobuf::int32 value) {
  
  displaytime_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.OverlayQ.displayTime)
}

// -------------------------------------------------------------------

// TrackObjectQ

// float point_x = 1;
inline void TrackObjectQ::clear_point_x() {
  point_x_ = 0;
}
inline float TrackObjectQ::point_x() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TrackObjectQ.point_x)
  return point_x_;
}
inline void TrackObjectQ::set_point_x(float value) {
  
  point_x_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.TrackObjectQ.point_x)
}

// float point_y = 2;
inline void TrackObjectQ::clear_point_y() {
  point_y_ = 0;
}
inline float TrackObjectQ::point_y() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TrackObjectQ.point_y)
  return point_y_;
}
inline void TrackObjectQ::set_point_y(float value) {
  
  point_y_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.TrackObjectQ.point_y)
}

// float width = 3;
inline void TrackObjectQ::clear_width() {
  width_ = 0;
}
inline float TrackObjectQ::width() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TrackObjectQ.width)
  return width_;
}
inline void TrackObjectQ::set_width(float value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.TrackObjectQ.width)
}

// float height = 4;
inline void TrackObjectQ::clear_height() {
  height_ = 0;
}
inline float TrackObjectQ::height() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TrackObjectQ.height)
  return height_;
}
inline void TrackObjectQ::set_height(float value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.TrackObjectQ.height)
}

// -------------------------------------------------------------------

// AutoTrackQ

// .OrionCommunication.AutoTrackQ.Mode mode = 1;
inline void AutoTrackQ::clear_mode() {
  mode_ = 0;
}
inline ::OrionCommunication::AutoTrackQ_Mode AutoTrackQ::mode() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.AutoTrackQ.mode)
  return static_cast< ::OrionCommunication::AutoTrackQ_Mode >(mode_);
}
inline void AutoTrackQ::set_mode(::OrionCommunication::AutoTrackQ_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.AutoTrackQ.mode)
}

// float trackScore = 2;
inline void AutoTrackQ::clear_trackscore() {
  trackscore_ = 0;
}
inline float AutoTrackQ::trackscore() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.AutoTrackQ.trackScore)
  return trackscore_;
}
inline void AutoTrackQ::set_trackscore(float value) {
  
  trackscore_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.AutoTrackQ.trackScore)
}

// int32 trackInterval = 3;
inline void AutoTrackQ::clear_trackinterval() {
  trackinterval_ = 0;
}
inline ::google::protobuf::int32 AutoTrackQ::trackinterval() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.AutoTrackQ.trackInterval)
  return trackinterval_;
}
inline void AutoTrackQ::set_trackinterval(::google::protobuf::int32 value) {
  
  trackinterval_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.AutoTrackQ.trackInterval)
}

// .OrionCommunication.TrackObjectQ object = 4;
inline bool AutoTrackQ::has_object() const {
  return this != internal_default_instance() && object_ != nullptr;
}
inline void AutoTrackQ::clear_object() {
  if (GetArenaNoVirtual() == nullptr && object_ != nullptr) {
    delete object_;
  }
  object_ = nullptr;
}
inline const ::OrionCommunication::TrackObjectQ& AutoTrackQ::object() const {
  const ::OrionCommunication::TrackObjectQ* p = object_;
  // @@protoc_insertion_point(field_get:OrionCommunication.AutoTrackQ.object)
  return p != nullptr ? *p : *reinterpret_cast<const ::OrionCommunication::TrackObjectQ*>(
      &::OrionCommunication::_TrackObjectQ_default_instance_);
}
inline ::OrionCommunication::TrackObjectQ* AutoTrackQ::release_object() {
  // @@protoc_insertion_point(field_release:OrionCommunication.AutoTrackQ.object)
  
  ::OrionCommunication::TrackObjectQ* temp = object_;
  object_ = nullptr;
  return temp;
}
inline ::OrionCommunication::TrackObjectQ* AutoTrackQ::mutable_object() {
  
  if (object_ == nullptr) {
    auto* p = CreateMaybeMessage<::OrionCommunication::TrackObjectQ>(GetArenaNoVirtual());
    object_ = p;
  }
  // @@protoc_insertion_point(field_mutable:OrionCommunication.AutoTrackQ.object)
  return object_;
}
inline void AutoTrackQ::set_allocated_object(::OrionCommunication::TrackObjectQ* object) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete object_;
  }
  if (object) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      object = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, object, submessage_arena);
    }
    
  } else {
    
  }
  object_ = object;
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.AutoTrackQ.object)
}

// .OrionCommunication.AutoTrackQ.DeviceType device = 5;
inline void AutoTrackQ::clear_device() {
  device_ = 0;
}
inline ::OrionCommunication::AutoTrackQ_DeviceType AutoTrackQ::device() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.AutoTrackQ.device)
  return static_cast< ::OrionCommunication::AutoTrackQ_DeviceType >(device_);
}
inline void AutoTrackQ::set_device(::OrionCommunication::AutoTrackQ_DeviceType value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.AutoTrackQ.device)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace OrionCommunication

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::OrionCommunication::ModeQ_Mode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OrionCommunication::ModeQ_Mode>() {
  return ::OrionCommunication::ModeQ_Mode_descriptor();
}
template <> struct is_proto_enum< ::OrionCommunication::AppCommandResult_Response> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OrionCommunication::AppCommandResult_Response>() {
  return ::OrionCommunication::AppCommandResult_Response_descriptor();
}
template <> struct is_proto_enum< ::OrionCommunication::DevicedBasedInfo_DeviceType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OrionCommunication::DevicedBasedInfo_DeviceType>() {
  return ::OrionCommunication::DevicedBasedInfo_DeviceType_descriptor();
}
template <> struct is_proto_enum< ::OrionCommunication::ItemProperty_ItemType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OrionCommunication::ItemProperty_ItemType>() {
  return ::OrionCommunication::ItemProperty_ItemType_descriptor();
}
template <> struct is_proto_enum< ::OrionCommunication::FrameModeQ_FrameMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OrionCommunication::FrameModeQ_FrameMode>() {
  return ::OrionCommunication::FrameModeQ_FrameMode_descriptor();
}
template <> struct is_proto_enum< ::OrionCommunication::OverlayQ_Position> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OrionCommunication::OverlayQ_Position>() {
  return ::OrionCommunication::OverlayQ_Position_descriptor();
}
template <> struct is_proto_enum< ::OrionCommunication::AutoTrackQ_Mode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OrionCommunication::AutoTrackQ_Mode>() {
  return ::OrionCommunication::AutoTrackQ_Mode_descriptor();
}
template <> struct is_proto_enum< ::OrionCommunication::AutoTrackQ_DeviceType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OrionCommunication::AutoTrackQ_DeviceType>() {
  return ::OrionCommunication::AutoTrackQ_DeviceType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_OrionCommunication_2eproto
