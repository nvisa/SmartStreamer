// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AlgorithmCommunication.proto

#ifndef PROTOBUF_INCLUDED_AlgorithmCommunication_2eproto
#define PROTOBUF_INCLUDED_AlgorithmCommunication_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_AlgorithmCommunication_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[33]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_AlgorithmCommunication_2eproto();
namespace AlgorithmCommunication {
class Alarm;
class AlarmDefaultTypeInternal;
extern AlarmDefaultTypeInternal _Alarm_default_instance_;
class AlarmInfo;
class AlarmInfoDefaultTypeInternal;
extern AlarmInfoDefaultTypeInternal _AlarmInfo_default_instance_;
class AlarmReqAdvancedParameters;
class AlarmReqAdvancedParametersDefaultTypeInternal;
extern AlarmReqAdvancedParametersDefaultTypeInternal _AlarmReqAdvancedParameters_default_instance_;
class AlarmReqInfo;
class AlarmReqInfoDefaultTypeInternal;
extern AlarmReqInfoDefaultTypeInternal _AlarmReqInfo_default_instance_;
class Alarms;
class AlarmsDefaultTypeInternal;
extern AlarmsDefaultTypeInternal _Alarms_default_instance_;
class CITInfo;
class CITInfoDefaultTypeInternal;
extern CITInfoDefaultTypeInternal _CITInfo_default_instance_;
class DiagnosticInfo;
class DiagnosticInfoDefaultTypeInternal;
extern DiagnosticInfoDefaultTypeInternal _DiagnosticInfo_default_instance_;
class DiagnosticQ;
class DiagnosticQDefaultTypeInternal;
extern DiagnosticQDefaultTypeInternal _DiagnosticQ_default_instance_;
class Element;
class ElementDefaultTypeInternal;
extern ElementDefaultTypeInternal _Element_default_instance_;
class ElementQueue;
class ElementQueueDefaultTypeInternal;
extern ElementQueueDefaultTypeInternal _ElementQueue_default_instance_;
class FaceDetectionParameters;
class FaceDetectionParametersDefaultTypeInternal;
extern FaceDetectionParametersDefaultTypeInternal _FaceDetectionParameters_default_instance_;
class GeneralInfo;
class GeneralInfoDefaultTypeInternal;
extern GeneralInfoDefaultTypeInternal _GeneralInfo_default_instance_;
class ListOfLocationInformation;
class ListOfLocationInformationDefaultTypeInternal;
extern ListOfLocationInformationDefaultTypeInternal _ListOfLocationInformation_default_instance_;
class LocationInformation;
class LocationInformationDefaultTypeInternal;
extern LocationInformationDefaultTypeInternal _LocationInformation_default_instance_;
class MotionParameters;
class MotionParametersDefaultTypeInternal;
extern MotionParametersDefaultTypeInternal _MotionParameters_default_instance_;
class Node;
class NodeDefaultTypeInternal;
extern NodeDefaultTypeInternal _Node_default_instance_;
class PanChangeParameters;
class PanChangeParametersDefaultTypeInternal;
extern PanChangeParametersDefaultTypeInternal _PanChangeParameters_default_instance_;
class PanaromaParameters;
class PanaromaParametersDefaultTypeInternal;
extern PanaromaParametersDefaultTypeInternal _PanaromaParameters_default_instance_;
class RequestForAlgorithm;
class RequestForAlgorithmDefaultTypeInternal;
extern RequestForAlgorithmDefaultTypeInternal _RequestForAlgorithm_default_instance_;
class ResponseOfParameterRequests;
class ResponseOfParameterRequestsDefaultTypeInternal;
extern ResponseOfParameterRequestsDefaultTypeInternal _ResponseOfParameterRequests_default_instance_;
class ResponseOfRequests;
class ResponseOfRequestsDefaultTypeInternal;
extern ResponseOfRequestsDefaultTypeInternal _ResponseOfRequests_default_instance_;
class ScreenFrame;
class ScreenFrameDefaultTypeInternal;
extern ScreenFrameDefaultTypeInternal _ScreenFrame_default_instance_;
class ScreenshotInfo;
class ScreenshotInfoDefaultTypeInternal;
extern ScreenshotInfoDefaultTypeInternal _ScreenshotInfo_default_instance_;
class StabilizationParameters;
class StabilizationParametersDefaultTypeInternal;
extern StabilizationParametersDefaultTypeInternal _StabilizationParameters_default_instance_;
class SystemFeature;
class SystemFeatureDefaultTypeInternal;
extern SystemFeatureDefaultTypeInternal _SystemFeature_default_instance_;
class SystemFeatures;
class SystemFeaturesDefaultTypeInternal;
extern SystemFeaturesDefaultTypeInternal _SystemFeatures_default_instance_;
class TPoint;
class TPointDefaultTypeInternal;
extern TPointDefaultTypeInternal _TPoint_default_instance_;
class TPolygon;
class TPolygonDefaultTypeInternal;
extern TPolygonDefaultTypeInternal _TPolygon_default_instance_;
class TRectangle;
class TRectangleDefaultTypeInternal;
extern TRectangleDefaultTypeInternal _TRectangle_default_instance_;
class TRoi;
class TRoiDefaultTypeInternal;
extern TRoiDefaultTypeInternal _TRoi_default_instance_;
class TargetStruct;
class TargetStructDefaultTypeInternal;
extern TargetStructDefaultTypeInternal _TargetStruct_default_instance_;
class TrackObject;
class TrackObjectDefaultTypeInternal;
extern TrackObjectDefaultTypeInternal _TrackObject_default_instance_;
class TrackParameters;
class TrackParametersDefaultTypeInternal;
extern TrackParametersDefaultTypeInternal _TrackParameters_default_instance_;
}  // namespace AlgorithmCommunication
namespace google {
namespace protobuf {
template<> ::AlgorithmCommunication::Alarm* Arena::CreateMaybeMessage<::AlgorithmCommunication::Alarm>(Arena*);
template<> ::AlgorithmCommunication::AlarmInfo* Arena::CreateMaybeMessage<::AlgorithmCommunication::AlarmInfo>(Arena*);
template<> ::AlgorithmCommunication::AlarmReqAdvancedParameters* Arena::CreateMaybeMessage<::AlgorithmCommunication::AlarmReqAdvancedParameters>(Arena*);
template<> ::AlgorithmCommunication::AlarmReqInfo* Arena::CreateMaybeMessage<::AlgorithmCommunication::AlarmReqInfo>(Arena*);
template<> ::AlgorithmCommunication::Alarms* Arena::CreateMaybeMessage<::AlgorithmCommunication::Alarms>(Arena*);
template<> ::AlgorithmCommunication::CITInfo* Arena::CreateMaybeMessage<::AlgorithmCommunication::CITInfo>(Arena*);
template<> ::AlgorithmCommunication::DiagnosticInfo* Arena::CreateMaybeMessage<::AlgorithmCommunication::DiagnosticInfo>(Arena*);
template<> ::AlgorithmCommunication::DiagnosticQ* Arena::CreateMaybeMessage<::AlgorithmCommunication::DiagnosticQ>(Arena*);
template<> ::AlgorithmCommunication::Element* Arena::CreateMaybeMessage<::AlgorithmCommunication::Element>(Arena*);
template<> ::AlgorithmCommunication::ElementQueue* Arena::CreateMaybeMessage<::AlgorithmCommunication::ElementQueue>(Arena*);
template<> ::AlgorithmCommunication::FaceDetectionParameters* Arena::CreateMaybeMessage<::AlgorithmCommunication::FaceDetectionParameters>(Arena*);
template<> ::AlgorithmCommunication::GeneralInfo* Arena::CreateMaybeMessage<::AlgorithmCommunication::GeneralInfo>(Arena*);
template<> ::AlgorithmCommunication::ListOfLocationInformation* Arena::CreateMaybeMessage<::AlgorithmCommunication::ListOfLocationInformation>(Arena*);
template<> ::AlgorithmCommunication::LocationInformation* Arena::CreateMaybeMessage<::AlgorithmCommunication::LocationInformation>(Arena*);
template<> ::AlgorithmCommunication::MotionParameters* Arena::CreateMaybeMessage<::AlgorithmCommunication::MotionParameters>(Arena*);
template<> ::AlgorithmCommunication::Node* Arena::CreateMaybeMessage<::AlgorithmCommunication::Node>(Arena*);
template<> ::AlgorithmCommunication::PanChangeParameters* Arena::CreateMaybeMessage<::AlgorithmCommunication::PanChangeParameters>(Arena*);
template<> ::AlgorithmCommunication::PanaromaParameters* Arena::CreateMaybeMessage<::AlgorithmCommunication::PanaromaParameters>(Arena*);
template<> ::AlgorithmCommunication::RequestForAlgorithm* Arena::CreateMaybeMessage<::AlgorithmCommunication::RequestForAlgorithm>(Arena*);
template<> ::AlgorithmCommunication::ResponseOfParameterRequests* Arena::CreateMaybeMessage<::AlgorithmCommunication::ResponseOfParameterRequests>(Arena*);
template<> ::AlgorithmCommunication::ResponseOfRequests* Arena::CreateMaybeMessage<::AlgorithmCommunication::ResponseOfRequests>(Arena*);
template<> ::AlgorithmCommunication::ScreenFrame* Arena::CreateMaybeMessage<::AlgorithmCommunication::ScreenFrame>(Arena*);
template<> ::AlgorithmCommunication::ScreenshotInfo* Arena::CreateMaybeMessage<::AlgorithmCommunication::ScreenshotInfo>(Arena*);
template<> ::AlgorithmCommunication::StabilizationParameters* Arena::CreateMaybeMessage<::AlgorithmCommunication::StabilizationParameters>(Arena*);
template<> ::AlgorithmCommunication::SystemFeature* Arena::CreateMaybeMessage<::AlgorithmCommunication::SystemFeature>(Arena*);
template<> ::AlgorithmCommunication::SystemFeatures* Arena::CreateMaybeMessage<::AlgorithmCommunication::SystemFeatures>(Arena*);
template<> ::AlgorithmCommunication::TPoint* Arena::CreateMaybeMessage<::AlgorithmCommunication::TPoint>(Arena*);
template<> ::AlgorithmCommunication::TPolygon* Arena::CreateMaybeMessage<::AlgorithmCommunication::TPolygon>(Arena*);
template<> ::AlgorithmCommunication::TRectangle* Arena::CreateMaybeMessage<::AlgorithmCommunication::TRectangle>(Arena*);
template<> ::AlgorithmCommunication::TRoi* Arena::CreateMaybeMessage<::AlgorithmCommunication::TRoi>(Arena*);
template<> ::AlgorithmCommunication::TargetStruct* Arena::CreateMaybeMessage<::AlgorithmCommunication::TargetStruct>(Arena*);
template<> ::AlgorithmCommunication::TrackObject* Arena::CreateMaybeMessage<::AlgorithmCommunication::TrackObject>(Arena*);
template<> ::AlgorithmCommunication::TrackParameters* Arena::CreateMaybeMessage<::AlgorithmCommunication::TrackParameters>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace AlgorithmCommunication {

enum Node_NodeType {
  Node_NodeType_ELEMENT = 0,
  Node_NodeType_QUEUE = 1,
  Node_NodeType_Node_NodeType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Node_NodeType_Node_NodeType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Node_NodeType_IsValid(int value);
const Node_NodeType Node_NodeType_NodeType_MIN = Node_NodeType_ELEMENT;
const Node_NodeType Node_NodeType_NodeType_MAX = Node_NodeType_QUEUE;
const int Node_NodeType_NodeType_ARRAYSIZE = Node_NodeType_NodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Node_NodeType_descriptor();
inline const ::std::string& Node_NodeType_Name(Node_NodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Node_NodeType_descriptor(), value);
}
inline bool Node_NodeType_Parse(
    const ::std::string& name, Node_NodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Node_NodeType>(
    Node_NodeType_descriptor(), name, value);
}
enum TargetStruct_TargetClass {
  TargetStruct_TargetClass_HUMAN = 0,
  TargetStruct_TargetClass_CAR = 1,
  TargetStruct_TargetClass_OTHER = 2,
  TargetStruct_TargetClass_TargetStruct_TargetClass_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  TargetStruct_TargetClass_TargetStruct_TargetClass_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool TargetStruct_TargetClass_IsValid(int value);
const TargetStruct_TargetClass TargetStruct_TargetClass_TargetClass_MIN = TargetStruct_TargetClass_HUMAN;
const TargetStruct_TargetClass TargetStruct_TargetClass_TargetClass_MAX = TargetStruct_TargetClass_OTHER;
const int TargetStruct_TargetClass_TargetClass_ARRAYSIZE = TargetStruct_TargetClass_TargetClass_MAX + 1;

const ::google::protobuf::EnumDescriptor* TargetStruct_TargetClass_descriptor();
inline const ::std::string& TargetStruct_TargetClass_Name(TargetStruct_TargetClass value) {
  return ::google::protobuf::internal::NameOfEnum(
    TargetStruct_TargetClass_descriptor(), value);
}
inline bool TargetStruct_TargetClass_Parse(
    const ::std::string& name, TargetStruct_TargetClass* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TargetStruct_TargetClass>(
    TargetStruct_TargetClass_descriptor(), name, value);
}
enum CITInfo_Info {
  CITInfo_Info_OK = 0,
  CITInfo_Info_NOK = 1,
  CITInfo_Info_CITInfo_Info_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  CITInfo_Info_CITInfo_Info_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool CITInfo_Info_IsValid(int value);
const CITInfo_Info CITInfo_Info_Info_MIN = CITInfo_Info_OK;
const CITInfo_Info CITInfo_Info_Info_MAX = CITInfo_Info_NOK;
const int CITInfo_Info_Info_ARRAYSIZE = CITInfo_Info_Info_MAX + 1;

const ::google::protobuf::EnumDescriptor* CITInfo_Info_descriptor();
inline const ::std::string& CITInfo_Info_Name(CITInfo_Info value) {
  return ::google::protobuf::internal::NameOfEnum(
    CITInfo_Info_descriptor(), value);
}
inline bool CITInfo_Info_Parse(
    const ::std::string& name, CITInfo_Info* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CITInfo_Info>(
    CITInfo_Info_descriptor(), name, value);
}
enum ResponseOfRequests_Response {
  ResponseOfRequests_Response_SUCCESSFUL = 0,
  ResponseOfRequests_Response_FAIL = 1,
  ResponseOfRequests_Response_MISSING_PARAMETER = 2,
  ResponseOfRequests_Response_NOT_APPLICABLE = 3,
  ResponseOfRequests_Response_ResponseOfRequests_Response_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  ResponseOfRequests_Response_ResponseOfRequests_Response_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool ResponseOfRequests_Response_IsValid(int value);
const ResponseOfRequests_Response ResponseOfRequests_Response_Response_MIN = ResponseOfRequests_Response_SUCCESSFUL;
const ResponseOfRequests_Response ResponseOfRequests_Response_Response_MAX = ResponseOfRequests_Response_NOT_APPLICABLE;
const int ResponseOfRequests_Response_Response_ARRAYSIZE = ResponseOfRequests_Response_Response_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResponseOfRequests_Response_descriptor();
inline const ::std::string& ResponseOfRequests_Response_Name(ResponseOfRequests_Response value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResponseOfRequests_Response_descriptor(), value);
}
inline bool ResponseOfRequests_Response_Parse(
    const ::std::string& name, ResponseOfRequests_Response* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResponseOfRequests_Response>(
    ResponseOfRequests_Response_descriptor(), name, value);
}
enum ResponseOfParameterRequests_Response {
  ResponseOfParameterRequests_Response_SUCCESSFUL = 0,
  ResponseOfParameterRequests_Response_FAIL = 1,
  ResponseOfParameterRequests_Response_MISSING_PARAMETER = 2,
  ResponseOfParameterRequests_Response_NOT_APPLICABLE = 3,
  ResponseOfParameterRequests_Response_ResponseOfParameterRequests_Response_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  ResponseOfParameterRequests_Response_ResponseOfParameterRequests_Response_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool ResponseOfParameterRequests_Response_IsValid(int value);
const ResponseOfParameterRequests_Response ResponseOfParameterRequests_Response_Response_MIN = ResponseOfParameterRequests_Response_SUCCESSFUL;
const ResponseOfParameterRequests_Response ResponseOfParameterRequests_Response_Response_MAX = ResponseOfParameterRequests_Response_NOT_APPLICABLE;
const int ResponseOfParameterRequests_Response_Response_ARRAYSIZE = ResponseOfParameterRequests_Response_Response_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResponseOfParameterRequests_Response_descriptor();
inline const ::std::string& ResponseOfParameterRequests_Response_Name(ResponseOfParameterRequests_Response value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResponseOfParameterRequests_Response_descriptor(), value);
}
inline bool ResponseOfParameterRequests_Response_Parse(
    const ::std::string& name, ResponseOfParameterRequests_Response* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResponseOfParameterRequests_Response>(
    ResponseOfParameterRequests_Response_descriptor(), name, value);
}
enum ResponseOfParameterRequests_Algorithm {
  ResponseOfParameterRequests_Algorithm_MOTION = 0,
  ResponseOfParameterRequests_Algorithm_STABILIZATION = 1,
  ResponseOfParameterRequests_Algorithm_TRACKING = 2,
  ResponseOfParameterRequests_Algorithm_PANAROMA = 3,
  ResponseOfParameterRequests_Algorithm_FACE_DETECTION = 4,
  ResponseOfParameterRequests_Algorithm_NONE = 5,
  ResponseOfParameterRequests_Algorithm_PAN_CHANGE = 6,
  ResponseOfParameterRequests_Algorithm_ResponseOfParameterRequests_Algorithm_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  ResponseOfParameterRequests_Algorithm_ResponseOfParameterRequests_Algorithm_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool ResponseOfParameterRequests_Algorithm_IsValid(int value);
const ResponseOfParameterRequests_Algorithm ResponseOfParameterRequests_Algorithm_Algorithm_MIN = ResponseOfParameterRequests_Algorithm_MOTION;
const ResponseOfParameterRequests_Algorithm ResponseOfParameterRequests_Algorithm_Algorithm_MAX = ResponseOfParameterRequests_Algorithm_PAN_CHANGE;
const int ResponseOfParameterRequests_Algorithm_Algorithm_ARRAYSIZE = ResponseOfParameterRequests_Algorithm_Algorithm_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResponseOfParameterRequests_Algorithm_descriptor();
inline const ::std::string& ResponseOfParameterRequests_Algorithm_Name(ResponseOfParameterRequests_Algorithm value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResponseOfParameterRequests_Algorithm_descriptor(), value);
}
inline bool ResponseOfParameterRequests_Algorithm_Parse(
    const ::std::string& name, ResponseOfParameterRequests_Algorithm* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResponseOfParameterRequests_Algorithm>(
    ResponseOfParameterRequests_Algorithm_descriptor(), name, value);
}
enum RequestForAlgorithm_Algorithm {
  RequestForAlgorithm_Algorithm_MOTION = 0,
  RequestForAlgorithm_Algorithm_STABILIZATION = 1,
  RequestForAlgorithm_Algorithm_TRACKING = 2,
  RequestForAlgorithm_Algorithm_PANAROMA = 3,
  RequestForAlgorithm_Algorithm_FACE_DETECTION = 4,
  RequestForAlgorithm_Algorithm_NONE = 5,
  RequestForAlgorithm_Algorithm_PAN_CHANGE = 6,
  RequestForAlgorithm_Algorithm_RequestForAlgorithm_Algorithm_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  RequestForAlgorithm_Algorithm_RequestForAlgorithm_Algorithm_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool RequestForAlgorithm_Algorithm_IsValid(int value);
const RequestForAlgorithm_Algorithm RequestForAlgorithm_Algorithm_Algorithm_MIN = RequestForAlgorithm_Algorithm_MOTION;
const RequestForAlgorithm_Algorithm RequestForAlgorithm_Algorithm_Algorithm_MAX = RequestForAlgorithm_Algorithm_PAN_CHANGE;
const int RequestForAlgorithm_Algorithm_Algorithm_ARRAYSIZE = RequestForAlgorithm_Algorithm_Algorithm_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestForAlgorithm_Algorithm_descriptor();
inline const ::std::string& RequestForAlgorithm_Algorithm_Name(RequestForAlgorithm_Algorithm value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestForAlgorithm_Algorithm_descriptor(), value);
}
inline bool RequestForAlgorithm_Algorithm_Parse(
    const ::std::string& name, RequestForAlgorithm_Algorithm* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestForAlgorithm_Algorithm>(
    RequestForAlgorithm_Algorithm_descriptor(), name, value);
}
enum MotionParameters_Settings {
  MotionParameters_Settings_SENSITIVITY = 0,
  MotionParameters_Settings_ROI = 1,
  MotionParameters_Settings_BOTH = 2,
  MotionParameters_Settings_MotionParameters_Settings_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  MotionParameters_Settings_MotionParameters_Settings_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool MotionParameters_Settings_IsValid(int value);
const MotionParameters_Settings MotionParameters_Settings_Settings_MIN = MotionParameters_Settings_SENSITIVITY;
const MotionParameters_Settings MotionParameters_Settings_Settings_MAX = MotionParameters_Settings_BOTH;
const int MotionParameters_Settings_Settings_ARRAYSIZE = MotionParameters_Settings_Settings_MAX + 1;

const ::google::protobuf::EnumDescriptor* MotionParameters_Settings_descriptor();
inline const ::std::string& MotionParameters_Settings_Name(MotionParameters_Settings value) {
  return ::google::protobuf::internal::NameOfEnum(
    MotionParameters_Settings_descriptor(), value);
}
inline bool MotionParameters_Settings_Parse(
    const ::std::string& name, MotionParameters_Settings* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MotionParameters_Settings>(
    MotionParameters_Settings_descriptor(), name, value);
}
enum TrackParameters_TrackType {
  TrackParameters_TrackType_AUTO = 0,
  TrackParameters_TrackType_SEMI_AUTO = 1,
  TrackParameters_TrackType_MANUAL = 2,
  TrackParameters_TrackType_TrackParameters_TrackType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  TrackParameters_TrackType_TrackParameters_TrackType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool TrackParameters_TrackType_IsValid(int value);
const TrackParameters_TrackType TrackParameters_TrackType_TrackType_MIN = TrackParameters_TrackType_AUTO;
const TrackParameters_TrackType TrackParameters_TrackType_TrackType_MAX = TrackParameters_TrackType_MANUAL;
const int TrackParameters_TrackType_TrackType_ARRAYSIZE = TrackParameters_TrackType_TrackType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TrackParameters_TrackType_descriptor();
inline const ::std::string& TrackParameters_TrackType_Name(TrackParameters_TrackType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TrackParameters_TrackType_descriptor(), value);
}
inline bool TrackParameters_TrackType_Parse(
    const ::std::string& name, TrackParameters_TrackType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TrackParameters_TrackType>(
    TrackParameters_TrackType_descriptor(), name, value);
}
enum TrackParameters_Mode {
  TrackParameters_Mode_DistanceToCenter = 0,
  TrackParameters_Mode_SizeOfObject = 1,
  TrackParameters_Mode_UserMode = 2,
  TrackParameters_Mode_TrackParameters_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  TrackParameters_Mode_TrackParameters_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool TrackParameters_Mode_IsValid(int value);
const TrackParameters_Mode TrackParameters_Mode_Mode_MIN = TrackParameters_Mode_DistanceToCenter;
const TrackParameters_Mode TrackParameters_Mode_Mode_MAX = TrackParameters_Mode_UserMode;
const int TrackParameters_Mode_Mode_ARRAYSIZE = TrackParameters_Mode_Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* TrackParameters_Mode_descriptor();
inline const ::std::string& TrackParameters_Mode_Name(TrackParameters_Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    TrackParameters_Mode_descriptor(), value);
}
inline bool TrackParameters_Mode_Parse(
    const ::std::string& name, TrackParameters_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TrackParameters_Mode>(
    TrackParameters_Mode_descriptor(), name, value);
}
// ===================================================================

class LocationInformation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.LocationInformation) */ {
 public:
  LocationInformation();
  virtual ~LocationInformation();

  LocationInformation(const LocationInformation& from);

  inline LocationInformation& operator=(const LocationInformation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocationInformation(LocationInformation&& from) noexcept
    : LocationInformation() {
    *this = ::std::move(from);
  }

  inline LocationInformation& operator=(LocationInformation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LocationInformation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocationInformation* internal_default_instance() {
    return reinterpret_cast<const LocationInformation*>(
               &_LocationInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LocationInformation* other);
  friend void swap(LocationInformation& a, LocationInformation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocationInformation* New() const final {
    return CreateMaybeMessage<LocationInformation>(nullptr);
  }

  LocationInformation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocationInformation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocationInformation& from);
  void MergeFrom(const LocationInformation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocationInformation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float pan = 1;
  void clear_pan();
  static const int kPanFieldNumber = 1;
  float pan() const;
  void set_pan(float value);

  // float tilt = 2;
  void clear_tilt();
  static const int kTiltFieldNumber = 2;
  float tilt() const;
  void set_tilt(float value);

  // float zoom = 3;
  void clear_zoom();
  static const int kZoomFieldNumber = 3;
  float zoom() const;
  void set_zoom(float value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.LocationInformation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float pan_;
  float tilt_;
  float zoom_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class ListOfLocationInformation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.ListOfLocationInformation) */ {
 public:
  ListOfLocationInformation();
  virtual ~ListOfLocationInformation();

  ListOfLocationInformation(const ListOfLocationInformation& from);

  inline ListOfLocationInformation& operator=(const ListOfLocationInformation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListOfLocationInformation(ListOfLocationInformation&& from) noexcept
    : ListOfLocationInformation() {
    *this = ::std::move(from);
  }

  inline ListOfLocationInformation& operator=(ListOfLocationInformation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListOfLocationInformation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListOfLocationInformation* internal_default_instance() {
    return reinterpret_cast<const ListOfLocationInformation*>(
               &_ListOfLocationInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ListOfLocationInformation* other);
  friend void swap(ListOfLocationInformation& a, ListOfLocationInformation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListOfLocationInformation* New() const final {
    return CreateMaybeMessage<ListOfLocationInformation>(nullptr);
  }

  ListOfLocationInformation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListOfLocationInformation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListOfLocationInformation& from);
  void MergeFrom(const ListOfLocationInformation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListOfLocationInformation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AlgorithmCommunication.LocationInformation locationInformation = 1;
  int locationinformation_size() const;
  void clear_locationinformation();
  static const int kLocationInformationFieldNumber = 1;
  ::AlgorithmCommunication::LocationInformation* mutable_locationinformation(int index);
  ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::LocationInformation >*
      mutable_locationinformation();
  const ::AlgorithmCommunication::LocationInformation& locationinformation(int index) const;
  ::AlgorithmCommunication::LocationInformation* add_locationinformation();
  const ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::LocationInformation >&
      locationinformation() const;

  // int64 intervalForCirculation = 2;
  void clear_intervalforcirculation();
  static const int kIntervalForCirculationFieldNumber = 2;
  ::google::protobuf::int64 intervalforcirculation() const;
  void set_intervalforcirculation(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.ListOfLocationInformation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::LocationInformation > locationinformation_;
  ::google::protobuf::int64 intervalforcirculation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class DiagnosticQ final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.DiagnosticQ) */ {
 public:
  DiagnosticQ();
  virtual ~DiagnosticQ();

  DiagnosticQ(const DiagnosticQ& from);

  inline DiagnosticQ& operator=(const DiagnosticQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DiagnosticQ(DiagnosticQ&& from) noexcept
    : DiagnosticQ() {
    *this = ::std::move(from);
  }

  inline DiagnosticQ& operator=(DiagnosticQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DiagnosticQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DiagnosticQ* internal_default_instance() {
    return reinterpret_cast<const DiagnosticQ*>(
               &_DiagnosticQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DiagnosticQ* other);
  friend void swap(DiagnosticQ& a, DiagnosticQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DiagnosticQ* New() const final {
    return CreateMaybeMessage<DiagnosticQ>(nullptr);
  }

  DiagnosticQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DiagnosticQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DiagnosticQ& from);
  void MergeFrom(const DiagnosticQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DiagnosticQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.DiagnosticQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class DiagnosticInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.DiagnosticInfo) */ {
 public:
  DiagnosticInfo();
  virtual ~DiagnosticInfo();

  DiagnosticInfo(const DiagnosticInfo& from);

  inline DiagnosticInfo& operator=(const DiagnosticInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DiagnosticInfo(DiagnosticInfo&& from) noexcept
    : DiagnosticInfo() {
    *this = ::std::move(from);
  }

  inline DiagnosticInfo& operator=(DiagnosticInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DiagnosticInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DiagnosticInfo* internal_default_instance() {
    return reinterpret_cast<const DiagnosticInfo*>(
               &_DiagnosticInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(DiagnosticInfo* other);
  friend void swap(DiagnosticInfo& a, DiagnosticInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DiagnosticInfo* New() const final {
    return CreateMaybeMessage<DiagnosticInfo>(nullptr);
  }

  DiagnosticInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DiagnosticInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DiagnosticInfo& from);
  void MergeFrom(const DiagnosticInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DiagnosticInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AlgorithmCommunication.Node nodes = 1;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 1;
  ::AlgorithmCommunication::Node* mutable_nodes(int index);
  ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::Node >*
      mutable_nodes();
  const ::AlgorithmCommunication::Node& nodes(int index) const;
  ::AlgorithmCommunication::Node* add_nodes();
  const ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::Node >&
      nodes() const;

  // int64 latency = 2;
  void clear_latency();
  static const int kLatencyFieldNumber = 2;
  ::google::protobuf::int64 latency() const;
  void set_latency(::google::protobuf::int64 value);

  // int64 totalUseMemory = 3;
  void clear_totalusememory();
  static const int kTotalUseMemoryFieldNumber = 3;
  ::google::protobuf::int64 totalusememory() const;
  void set_totalusememory(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.DiagnosticInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::Node > nodes_;
  ::google::protobuf::int64 latency_;
  ::google::protobuf::int64 totalusememory_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class Node final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.Node) */ {
 public:
  Node();
  virtual ~Node();

  Node(const Node& from);

  inline Node& operator=(const Node& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Node(Node&& from) noexcept
    : Node() {
    *this = ::std::move(from);
  }

  inline Node& operator=(Node&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Node& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Node* internal_default_instance() {
    return reinterpret_cast<const Node*>(
               &_Node_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Node* other);
  friend void swap(Node& a, Node& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Node* New() const final {
    return CreateMaybeMessage<Node>(nullptr);
  }

  Node* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Node>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Node& from);
  void MergeFrom(const Node& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Node* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Node_NodeType NodeType;
  static const NodeType ELEMENT =
    Node_NodeType_ELEMENT;
  static const NodeType QUEUE =
    Node_NodeType_QUEUE;
  static inline bool NodeType_IsValid(int value) {
    return Node_NodeType_IsValid(value);
  }
  static const NodeType NodeType_MIN =
    Node_NodeType_NodeType_MIN;
  static const NodeType NodeType_MAX =
    Node_NodeType_NodeType_MAX;
  static const int NodeType_ARRAYSIZE =
    Node_NodeType_NodeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  NodeType_descriptor() {
    return Node_NodeType_descriptor();
  }
  static inline const ::std::string& NodeType_Name(NodeType value) {
    return Node_NodeType_Name(value);
  }
  static inline bool NodeType_Parse(const ::std::string& name,
      NodeType* value) {
    return Node_NodeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .AlgorithmCommunication.Element element = 2;
  bool has_element() const;
  void clear_element();
  static const int kElementFieldNumber = 2;
  const ::AlgorithmCommunication::Element& element() const;
  ::AlgorithmCommunication::Element* release_element();
  ::AlgorithmCommunication::Element* mutable_element();
  void set_allocated_element(::AlgorithmCommunication::Element* element);

  // .AlgorithmCommunication.ElementQueue queue = 3;
  bool has_queue() const;
  void clear_queue();
  static const int kQueueFieldNumber = 3;
  const ::AlgorithmCommunication::ElementQueue& queue() const;
  ::AlgorithmCommunication::ElementQueue* release_queue();
  ::AlgorithmCommunication::ElementQueue* mutable_queue();
  void set_allocated_queue(::AlgorithmCommunication::ElementQueue* queue);

  // .AlgorithmCommunication.Node.NodeType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::AlgorithmCommunication::Node_NodeType type() const;
  void set_type(::AlgorithmCommunication::Node_NodeType value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.Node)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AlgorithmCommunication::Element* element_;
  ::AlgorithmCommunication::ElementQueue* queue_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class Element final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.Element) */ {
 public:
  Element();
  virtual ~Element();

  Element(const Element& from);

  inline Element& operator=(const Element& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Element(Element&& from) noexcept
    : Element() {
    *this = ::std::move(from);
  }

  inline Element& operator=(Element&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Element& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Element* internal_default_instance() {
    return reinterpret_cast<const Element*>(
               &_Element_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Element* other);
  friend void swap(Element& a, Element& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Element* New() const final {
    return CreateMaybeMessage<Element>(nullptr);
  }

  Element* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Element>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Element& from);
  void MergeFrom(const Element& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Element* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 inputQueueCount = 1;
  void clear_inputqueuecount();
  static const int kInputQueueCountFieldNumber = 1;
  ::google::protobuf::int32 inputqueuecount() const;
  void set_inputqueuecount(::google::protobuf::int32 value);

  // int32 outputQueueCount = 2;
  void clear_outputqueuecount();
  static const int kOutputQueueCountFieldNumber = 2;
  ::google::protobuf::int32 outputqueuecount() const;
  void set_outputqueuecount(::google::protobuf::int32 value);

  // int64 latency = 4;
  void clear_latency();
  static const int kLatencyFieldNumber = 4;
  ::google::protobuf::int64 latency() const;
  void set_latency(::google::protobuf::int64 value);

  // int64 totalUseMemory = 5;
  void clear_totalusememory();
  static const int kTotalUseMemoryFieldNumber = 5;
  ::google::protobuf::int64 totalusememory() const;
  void set_totalusememory(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.Element)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 inputqueuecount_;
  ::google::protobuf::int32 outputqueuecount_;
  ::google::protobuf::int64 latency_;
  ::google::protobuf::int64 totalusememory_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class ElementQueue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.ElementQueue) */ {
 public:
  ElementQueue();
  virtual ~ElementQueue();

  ElementQueue(const ElementQueue& from);

  inline ElementQueue& operator=(const ElementQueue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementQueue(ElementQueue&& from) noexcept
    : ElementQueue() {
    *this = ::std::move(from);
  }

  inline ElementQueue& operator=(ElementQueue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ElementQueue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementQueue* internal_default_instance() {
    return reinterpret_cast<const ElementQueue*>(
               &_ElementQueue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ElementQueue* other);
  friend void swap(ElementQueue& a, ElementQueue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementQueue* New() const final {
    return CreateMaybeMessage<ElementQueue>(nullptr);
  }

  ElementQueue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementQueue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementQueue& from);
  void MergeFrom(const ElementQueue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementQueue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 bitrate = 2;
  void clear_bitrate();
  static const int kBitrateFieldNumber = 2;
  ::google::protobuf::int64 bitrate() const;
  void set_bitrate(::google::protobuf::int64 value);

  // float fps = 1;
  void clear_fps();
  static const int kFpsFieldNumber = 1;
  float fps() const;
  void set_fps(float value);

  // int32 sendCount = 3;
  void clear_sendcount();
  static const int kSendCountFieldNumber = 3;
  ::google::protobuf::int32 sendcount() const;
  void set_sendcount(::google::protobuf::int32 value);

  // int64 elapsedTime = 4;
  void clear_elapsedtime();
  static const int kElapsedTimeFieldNumber = 4;
  ::google::protobuf::int64 elapsedtime() const;
  void set_elapsedtime(::google::protobuf::int64 value);

  // int32 bufferCount = 5;
  void clear_buffercount();
  static const int kBufferCountFieldNumber = 5;
  ::google::protobuf::int32 buffercount() const;
  void set_buffercount(::google::protobuf::int32 value);

  // int32 receivedCount = 6;
  void clear_receivedcount();
  static const int kReceivedCountFieldNumber = 6;
  ::google::protobuf::int32 receivedcount() const;
  void set_receivedcount(::google::protobuf::int32 value);

  // int64 totalSize = 7;
  void clear_totalsize();
  static const int kTotalSizeFieldNumber = 7;
  ::google::protobuf::int64 totalsize() const;
  void set_totalsize(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.ElementQueue)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 bitrate_;
  float fps_;
  ::google::protobuf::int32 sendcount_;
  ::google::protobuf::int64 elapsedtime_;
  ::google::protobuf::int32 buffercount_;
  ::google::protobuf::int32 receivedcount_;
  ::google::protobuf::int64 totalsize_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class ScreenshotInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.ScreenshotInfo) */ {
 public:
  ScreenshotInfo();
  virtual ~ScreenshotInfo();

  ScreenshotInfo(const ScreenshotInfo& from);

  inline ScreenshotInfo& operator=(const ScreenshotInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScreenshotInfo(ScreenshotInfo&& from) noexcept
    : ScreenshotInfo() {
    *this = ::std::move(from);
  }

  inline ScreenshotInfo& operator=(ScreenshotInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ScreenshotInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScreenshotInfo* internal_default_instance() {
    return reinterpret_cast<const ScreenshotInfo*>(
               &_ScreenshotInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ScreenshotInfo* other);
  friend void swap(ScreenshotInfo& a, ScreenshotInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScreenshotInfo* New() const final {
    return CreateMaybeMessage<ScreenshotInfo>(nullptr);
  }

  ScreenshotInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScreenshotInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScreenshotInfo& from);
  void MergeFrom(const ScreenshotInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScreenshotInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 channelId = 1;
  void clear_channelid();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::int32 channelid() const;
  void set_channelid(::google::protobuf::int32 value);

  // int32 quality = 2;
  void clear_quality();
  static const int kQualityFieldNumber = 2;
  ::google::protobuf::int32 quality() const;
  void set_quality(::google::protobuf::int32 value);

  // float fps = 3;
  void clear_fps();
  static const int kFpsFieldNumber = 3;
  float fps() const;
  void set_fps(float value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.ScreenshotInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 channelid_;
  ::google::protobuf::int32 quality_;
  float fps_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class ScreenFrame final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.ScreenFrame) */ {
 public:
  ScreenFrame();
  virtual ~ScreenFrame();

  ScreenFrame(const ScreenFrame& from);

  inline ScreenFrame& operator=(const ScreenFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScreenFrame(ScreenFrame&& from) noexcept
    : ScreenFrame() {
    *this = ::std::move(from);
  }

  inline ScreenFrame& operator=(ScreenFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ScreenFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScreenFrame* internal_default_instance() {
    return reinterpret_cast<const ScreenFrame*>(
               &_ScreenFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ScreenFrame* other);
  friend void swap(ScreenFrame& a, ScreenFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScreenFrame* New() const final {
    return CreateMaybeMessage<ScreenFrame>(nullptr);
  }

  ScreenFrame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScreenFrame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScreenFrame& from);
  void MergeFrom(const ScreenFrame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScreenFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes frame = 1;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  const ::std::string& frame() const;
  void set_frame(const ::std::string& value);
  #if LANG_CXX11
  void set_frame(::std::string&& value);
  #endif
  void set_frame(const char* value);
  void set_frame(const void* value, size_t size);
  ::std::string* mutable_frame();
  ::std::string* release_frame();
  void set_allocated_frame(::std::string* frame);

  // string metadata = 4;
  void clear_metadata();
  static const int kMetadataFieldNumber = 4;
  const ::std::string& metadata() const;
  void set_metadata(const ::std::string& value);
  #if LANG_CXX11
  void set_metadata(::std::string&& value);
  #endif
  void set_metadata(const char* value);
  void set_metadata(const char* value, size_t size);
  ::std::string* mutable_metadata();
  ::std::string* release_metadata();
  void set_allocated_metadata(::std::string* metadata);

  // int64 ts = 3;
  void clear_ts();
  static const int kTsFieldNumber = 3;
  ::google::protobuf::int64 ts() const;
  void set_ts(::google::protobuf::int64 value);

  // int32 quality = 2;
  void clear_quality();
  static const int kQualityFieldNumber = 2;
  ::google::protobuf::int32 quality() const;
  void set_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.ScreenFrame)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr frame_;
  ::google::protobuf::internal::ArenaStringPtr metadata_;
  ::google::protobuf::int64 ts_;
  ::google::protobuf::int32 quality_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class TargetStruct final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.TargetStruct) */ {
 public:
  TargetStruct();
  virtual ~TargetStruct();

  TargetStruct(const TargetStruct& from);

  inline TargetStruct& operator=(const TargetStruct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetStruct(TargetStruct&& from) noexcept
    : TargetStruct() {
    *this = ::std::move(from);
  }

  inline TargetStruct& operator=(TargetStruct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TargetStruct& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetStruct* internal_default_instance() {
    return reinterpret_cast<const TargetStruct*>(
               &_TargetStruct_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(TargetStruct* other);
  friend void swap(TargetStruct& a, TargetStruct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetStruct* New() const final {
    return CreateMaybeMessage<TargetStruct>(nullptr);
  }

  TargetStruct* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TargetStruct>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TargetStruct& from);
  void MergeFrom(const TargetStruct& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TargetStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TargetStruct_TargetClass TargetClass;
  static const TargetClass HUMAN =
    TargetStruct_TargetClass_HUMAN;
  static const TargetClass CAR =
    TargetStruct_TargetClass_CAR;
  static const TargetClass OTHER =
    TargetStruct_TargetClass_OTHER;
  static inline bool TargetClass_IsValid(int value) {
    return TargetStruct_TargetClass_IsValid(value);
  }
  static const TargetClass TargetClass_MIN =
    TargetStruct_TargetClass_TargetClass_MIN;
  static const TargetClass TargetClass_MAX =
    TargetStruct_TargetClass_TargetClass_MAX;
  static const int TargetClass_ARRAYSIZE =
    TargetStruct_TargetClass_TargetClass_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TargetClass_descriptor() {
    return TargetStruct_TargetClass_descriptor();
  }
  static inline const ::std::string& TargetClass_Name(TargetClass value) {
    return TargetStruct_TargetClass_Name(value);
  }
  static inline bool TargetClass_Parse(const ::std::string& name,
      TargetClass* value) {
    return TargetStruct_TargetClass_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 topLeftX = 1;
  void clear_topleftx();
  static const int kTopLeftXFieldNumber = 1;
  ::google::protobuf::int32 topleftx() const;
  void set_topleftx(::google::protobuf::int32 value);

  // int32 topLeftY = 2;
  void clear_toplefty();
  static const int kTopLeftYFieldNumber = 2;
  ::google::protobuf::int32 toplefty() const;
  void set_toplefty(::google::protobuf::int32 value);

  // int32 widthOfTarget = 3;
  void clear_widthoftarget();
  static const int kWidthOfTargetFieldNumber = 3;
  ::google::protobuf::int32 widthoftarget() const;
  void set_widthoftarget(::google::protobuf::int32 value);

  // int32 heightOfTarget = 4;
  void clear_heightoftarget();
  static const int kHeightOfTargetFieldNumber = 4;
  ::google::protobuf::int32 heightoftarget() const;
  void set_heightoftarget(::google::protobuf::int32 value);

  // .AlgorithmCommunication.TargetStruct.TargetClass targetClass = 5;
  void clear_targetclass();
  static const int kTargetClassFieldNumber = 5;
  ::AlgorithmCommunication::TargetStruct_TargetClass targetclass() const;
  void set_targetclass(::AlgorithmCommunication::TargetStruct_TargetClass value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.TargetStruct)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 topleftx_;
  ::google::protobuf::int32 toplefty_;
  ::google::protobuf::int32 widthoftarget_;
  ::google::protobuf::int32 heightoftarget_;
  int targetclass_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class AlarmInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.AlarmInfo) */ {
 public:
  AlarmInfo();
  virtual ~AlarmInfo();

  AlarmInfo(const AlarmInfo& from);

  inline AlarmInfo& operator=(const AlarmInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlarmInfo(AlarmInfo&& from) noexcept
    : AlarmInfo() {
    *this = ::std::move(from);
  }

  inline AlarmInfo& operator=(AlarmInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AlarmInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlarmInfo* internal_default_instance() {
    return reinterpret_cast<const AlarmInfo*>(
               &_AlarmInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(AlarmInfo* other);
  friend void swap(AlarmInfo& a, AlarmInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlarmInfo* New() const final {
    return CreateMaybeMessage<AlarmInfo>(nullptr);
  }

  AlarmInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlarmInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlarmInfo& from);
  void MergeFrom(const AlarmInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlarmInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string date = 5;
  void clear_date();
  static const int kDateFieldNumber = 5;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  #if LANG_CXX11
  void set_date(::std::string&& value);
  #endif
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // bytes frameOfAlarm = 8;
  void clear_frameofalarm();
  static const int kFrameOfAlarmFieldNumber = 8;
  const ::std::string& frameofalarm() const;
  void set_frameofalarm(const ::std::string& value);
  #if LANG_CXX11
  void set_frameofalarm(::std::string&& value);
  #endif
  void set_frameofalarm(const char* value);
  void set_frameofalarm(const void* value, size_t size);
  ::std::string* mutable_frameofalarm();
  ::std::string* release_frameofalarm();
  void set_allocated_frameofalarm(::std::string* frameofalarm);

  // .AlgorithmCommunication.TargetStruct target = 7;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 7;
  const ::AlgorithmCommunication::TargetStruct& target() const;
  ::AlgorithmCommunication::TargetStruct* release_target();
  ::AlgorithmCommunication::TargetStruct* mutable_target();
  void set_allocated_target(::AlgorithmCommunication::TargetStruct* target);

  // int32 baseId = 1;
  void clear_baseid();
  static const int kBaseIdFieldNumber = 1;
  ::google::protobuf::int32 baseid() const;
  void set_baseid(::google::protobuf::int32 value);

  // int32 stationId = 2;
  void clear_stationid();
  static const int kStationIdFieldNumber = 2;
  ::google::protobuf::int32 stationid() const;
  void set_stationid(::google::protobuf::int32 value);

  // int32 deviceId = 3;
  void clear_deviceid();
  static const int kDeviceIdFieldNumber = 3;
  ::google::protobuf::int32 deviceid() const;
  void set_deviceid(::google::protobuf::int32 value);

  // int32 unitType = 4;
  void clear_unittype();
  static const int kUnitTypeFieldNumber = 4;
  ::google::protobuf::int32 unittype() const;
  void set_unittype(::google::protobuf::int32 value);

  // bool alarmFlag = 6;
  void clear_alarmflag();
  static const int kAlarmFlagFieldNumber = 6;
  bool alarmflag() const;
  void set_alarmflag(bool value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.AlarmInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::internal::ArenaStringPtr frameofalarm_;
  ::AlgorithmCommunication::TargetStruct* target_;
  ::google::protobuf::int32 baseid_;
  ::google::protobuf::int32 stationid_;
  ::google::protobuf::int32 deviceid_;
  ::google::protobuf::int32 unittype_;
  bool alarmflag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class CITInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.CITInfo) */ {
 public:
  CITInfo();
  virtual ~CITInfo();

  CITInfo(const CITInfo& from);

  inline CITInfo& operator=(const CITInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CITInfo(CITInfo&& from) noexcept
    : CITInfo() {
    *this = ::std::move(from);
  }

  inline CITInfo& operator=(CITInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CITInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CITInfo* internal_default_instance() {
    return reinterpret_cast<const CITInfo*>(
               &_CITInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CITInfo* other);
  friend void swap(CITInfo& a, CITInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CITInfo* New() const final {
    return CreateMaybeMessage<CITInfo>(nullptr);
  }

  CITInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CITInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CITInfo& from);
  void MergeFrom(const CITInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CITInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CITInfo_Info Info;
  static const Info OK =
    CITInfo_Info_OK;
  static const Info NOK =
    CITInfo_Info_NOK;
  static inline bool Info_IsValid(int value) {
    return CITInfo_Info_IsValid(value);
  }
  static const Info Info_MIN =
    CITInfo_Info_Info_MIN;
  static const Info Info_MAX =
    CITInfo_Info_Info_MAX;
  static const int Info_ARRAYSIZE =
    CITInfo_Info_Info_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Info_descriptor() {
    return CITInfo_Info_descriptor();
  }
  static inline const ::std::string& Info_Name(Info value) {
    return CITInfo_Info_Name(value);
  }
  static inline bool Info_Parse(const ::std::string& name,
      Info* value) {
    return CITInfo_Info_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .AlgorithmCommunication.CITInfo.Info moduleInfo = 1;
  void clear_moduleinfo();
  static const int kModuleInfoFieldNumber = 1;
  ::AlgorithmCommunication::CITInfo_Info moduleinfo() const;
  void set_moduleinfo(::AlgorithmCommunication::CITInfo_Info value);

  // .AlgorithmCommunication.CITInfo.Info motorInfo = 2;
  void clear_motorinfo();
  static const int kMotorInfoFieldNumber = 2;
  ::AlgorithmCommunication::CITInfo_Info motorinfo() const;
  void set_motorinfo(::AlgorithmCommunication::CITInfo_Info value);

  // .AlgorithmCommunication.CITInfo.Info usbInfo = 3;
  void clear_usbinfo();
  static const int kUsbInfoFieldNumber = 3;
  ::AlgorithmCommunication::CITInfo_Info usbinfo() const;
  void set_usbinfo(::AlgorithmCommunication::CITInfo_Info value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.CITInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int moduleinfo_;
  int motorinfo_;
  int usbinfo_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class GeneralInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.GeneralInfo) */ {
 public:
  GeneralInfo();
  virtual ~GeneralInfo();

  GeneralInfo(const GeneralInfo& from);

  inline GeneralInfo& operator=(const GeneralInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GeneralInfo(GeneralInfo&& from) noexcept
    : GeneralInfo() {
    *this = ::std::move(from);
  }

  inline GeneralInfo& operator=(GeneralInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GeneralInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeneralInfo* internal_default_instance() {
    return reinterpret_cast<const GeneralInfo*>(
               &_GeneralInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(GeneralInfo* other);
  friend void swap(GeneralInfo& a, GeneralInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GeneralInfo* New() const final {
    return CreateMaybeMessage<GeneralInfo>(nullptr);
  }

  GeneralInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GeneralInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GeneralInfo& from);
  void MergeFrom(const GeneralInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeneralInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .AlgorithmCommunication.AlarmInfo alarmInfo = 1;
  bool has_alarminfo() const;
  void clear_alarminfo();
  static const int kAlarmInfoFieldNumber = 1;
  const ::AlgorithmCommunication::AlarmInfo& alarminfo() const;
  ::AlgorithmCommunication::AlarmInfo* release_alarminfo();
  ::AlgorithmCommunication::AlarmInfo* mutable_alarminfo();
  void set_allocated_alarminfo(::AlgorithmCommunication::AlarmInfo* alarminfo);

  // .AlgorithmCommunication.CITInfo citInfo = 2;
  bool has_citinfo() const;
  void clear_citinfo();
  static const int kCitInfoFieldNumber = 2;
  const ::AlgorithmCommunication::CITInfo& citinfo() const;
  ::AlgorithmCommunication::CITInfo* release_citinfo();
  ::AlgorithmCommunication::CITInfo* mutable_citinfo();
  void set_allocated_citinfo(::AlgorithmCommunication::CITInfo* citinfo);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.GeneralInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AlgorithmCommunication::AlarmInfo* alarminfo_;
  ::AlgorithmCommunication::CITInfo* citinfo_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class AlarmReqAdvancedParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.AlarmReqAdvancedParameters) */ {
 public:
  AlarmReqAdvancedParameters();
  virtual ~AlarmReqAdvancedParameters();

  AlarmReqAdvancedParameters(const AlarmReqAdvancedParameters& from);

  inline AlarmReqAdvancedParameters& operator=(const AlarmReqAdvancedParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlarmReqAdvancedParameters(AlarmReqAdvancedParameters&& from) noexcept
    : AlarmReqAdvancedParameters() {
    *this = ::std::move(from);
  }

  inline AlarmReqAdvancedParameters& operator=(AlarmReqAdvancedParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AlarmReqAdvancedParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlarmReqAdvancedParameters* internal_default_instance() {
    return reinterpret_cast<const AlarmReqAdvancedParameters*>(
               &_AlarmReqAdvancedParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(AlarmReqAdvancedParameters* other);
  friend void swap(AlarmReqAdvancedParameters& a, AlarmReqAdvancedParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlarmReqAdvancedParameters* New() const final {
    return CreateMaybeMessage<AlarmReqAdvancedParameters>(nullptr);
  }

  AlarmReqAdvancedParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlarmReqAdvancedParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlarmReqAdvancedParameters& from);
  void MergeFrom(const AlarmReqAdvancedParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlarmReqAdvancedParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 suppressInterval = 2;
  void clear_suppressinterval();
  static const int kSuppressIntervalFieldNumber = 2;
  ::google::protobuf::int32 suppressinterval() const;
  void set_suppressinterval(::google::protobuf::int32 value);

  // bool enabled = 1;
  void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  bool enabled() const;
  void set_enabled(bool value);

  // bool smartSnapshot = 4;
  void clear_smartsnapshot();
  static const int kSmartSnapshotFieldNumber = 4;
  bool smartsnapshot() const;
  void set_smartsnapshot(bool value);

  // int32 alarmQueueLength = 3;
  void clear_alarmqueuelength();
  static const int kAlarmQueueLengthFieldNumber = 3;
  ::google::protobuf::int32 alarmqueuelength() const;
  void set_alarmqueuelength(::google::protobuf::int32 value);

  // int32 smartSnapshotInterval = 5;
  void clear_smartsnapshotinterval();
  static const int kSmartSnapshotIntervalFieldNumber = 5;
  ::google::protobuf::int32 smartsnapshotinterval() const;
  void set_smartsnapshotinterval(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.AlarmReqAdvancedParameters)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 suppressinterval_;
  bool enabled_;
  bool smartsnapshot_;
  ::google::protobuf::int32 alarmqueuelength_;
  ::google::protobuf::int32 smartsnapshotinterval_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class AlarmReqInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.AlarmReqInfo) */ {
 public:
  AlarmReqInfo();
  virtual ~AlarmReqInfo();

  AlarmReqInfo(const AlarmReqInfo& from);

  inline AlarmReqInfo& operator=(const AlarmReqInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlarmReqInfo(AlarmReqInfo&& from) noexcept
    : AlarmReqInfo() {
    *this = ::std::move(from);
  }

  inline AlarmReqInfo& operator=(AlarmReqInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AlarmReqInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlarmReqInfo* internal_default_instance() {
    return reinterpret_cast<const AlarmReqInfo*>(
               &_AlarmReqInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(AlarmReqInfo* other);
  friend void swap(AlarmReqInfo& a, AlarmReqInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlarmReqInfo* New() const final {
    return CreateMaybeMessage<AlarmReqInfo>(nullptr);
  }

  AlarmReqInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlarmReqInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlarmReqInfo& from);
  void MergeFrom(const AlarmReqInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlarmReqInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string filter = 1;
  void clear_filter();
  static const int kFilterFieldNumber = 1;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // .AlgorithmCommunication.AlarmReqAdvancedParameters advancedParams = 4;
  bool has_advancedparams() const;
  void clear_advancedparams();
  static const int kAdvancedParamsFieldNumber = 4;
  const ::AlgorithmCommunication::AlarmReqAdvancedParameters& advancedparams() const;
  ::AlgorithmCommunication::AlarmReqAdvancedParameters* release_advancedparams();
  ::AlgorithmCommunication::AlarmReqAdvancedParameters* mutable_advancedparams();
  void set_allocated_advancedparams(::AlgorithmCommunication::AlarmReqAdvancedParameters* advancedparams);

  // int32 channel = 2;
  void clear_channel();
  static const int kChannelFieldNumber = 2;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // int32 intervalMsecs = 3;
  void clear_intervalmsecs();
  static const int kIntervalMsecsFieldNumber = 3;
  ::google::protobuf::int32 intervalmsecs() const;
  void set_intervalmsecs(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.AlarmReqInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::AlgorithmCommunication::AlarmReqAdvancedParameters* advancedparams_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 intervalmsecs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class Alarm final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.Alarm) */ {
 public:
  Alarm();
  virtual ~Alarm();

  Alarm(const Alarm& from);

  inline Alarm& operator=(const Alarm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Alarm(Alarm&& from) noexcept
    : Alarm() {
    *this = ::std::move(from);
  }

  inline Alarm& operator=(Alarm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Alarm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Alarm* internal_default_instance() {
    return reinterpret_cast<const Alarm*>(
               &_Alarm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(Alarm* other);
  friend void swap(Alarm& a, Alarm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Alarm* New() const final {
    return CreateMaybeMessage<Alarm>(nullptr);
  }

  Alarm* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Alarm>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Alarm& from);
  void MergeFrom(const Alarm& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Alarm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string key = 1;
  int key_size() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key(int index) const;
  ::std::string* mutable_key(int index);
  void set_key(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_key(int index, ::std::string&& value);
  #endif
  void set_key(int index, const char* value);
  void set_key(int index, const char* value, size_t size);
  ::std::string* add_key();
  void add_key(const ::std::string& value);
  #if LANG_CXX11
  void add_key(::std::string&& value);
  #endif
  void add_key(const char* value);
  void add_key(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& key() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_key();

  // repeated string value = 2;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value(int index) const;
  ::std::string* mutable_value(int index);
  void set_value(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_value(int index, ::std::string&& value);
  #endif
  void set_value(int index, const char* value);
  void set_value(int index, const char* value, size_t size);
  ::std::string* add_value();
  void add_value(const ::std::string& value);
  #if LANG_CXX11
  void add_value(::std::string&& value);
  #endif
  void add_value(const char* value);
  void add_value(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& value() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_value();

  // string type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // .AlgorithmCommunication.CITInfo cit = 4;
  bool has_cit() const;
  void clear_cit();
  static const int kCitFieldNumber = 4;
  const ::AlgorithmCommunication::CITInfo& cit() const;
  ::AlgorithmCommunication::CITInfo* release_cit();
  ::AlgorithmCommunication::CITInfo* mutable_cit();
  void set_allocated_cit(::AlgorithmCommunication::CITInfo* cit);

  // .AlgorithmCommunication.AlarmInfo alarm = 5;
  bool has_alarm() const;
  void clear_alarm();
  static const int kAlarmFieldNumber = 5;
  const ::AlgorithmCommunication::AlarmInfo& alarm() const;
  ::AlgorithmCommunication::AlarmInfo* release_alarm();
  ::AlgorithmCommunication::AlarmInfo* mutable_alarm();
  void set_allocated_alarm(::AlgorithmCommunication::AlarmInfo* alarm);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.Alarm)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> key_;
  ::google::protobuf::RepeatedPtrField<::std::string> value_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::AlgorithmCommunication::CITInfo* cit_;
  ::AlgorithmCommunication::AlarmInfo* alarm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class Alarms final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.Alarms) */ {
 public:
  Alarms();
  virtual ~Alarms();

  Alarms(const Alarms& from);

  inline Alarms& operator=(const Alarms& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Alarms(Alarms&& from) noexcept
    : Alarms() {
    *this = ::std::move(from);
  }

  inline Alarms& operator=(Alarms&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Alarms& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Alarms* internal_default_instance() {
    return reinterpret_cast<const Alarms*>(
               &_Alarms_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(Alarms* other);
  friend void swap(Alarms& a, Alarms& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Alarms* New() const final {
    return CreateMaybeMessage<Alarms>(nullptr);
  }

  Alarms* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Alarms>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Alarms& from);
  void MergeFrom(const Alarms& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Alarms* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AlgorithmCommunication.Alarm alarms = 1;
  int alarms_size() const;
  void clear_alarms();
  static const int kAlarmsFieldNumber = 1;
  ::AlgorithmCommunication::Alarm* mutable_alarms(int index);
  ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::Alarm >*
      mutable_alarms();
  const ::AlgorithmCommunication::Alarm& alarms(int index) const;
  ::AlgorithmCommunication::Alarm* add_alarms();
  const ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::Alarm >&
      alarms() const;

  // int64 ts = 2;
  void clear_ts();
  static const int kTsFieldNumber = 2;
  ::google::protobuf::int64 ts() const;
  void set_ts(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.Alarms)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::Alarm > alarms_;
  ::google::protobuf::int64 ts_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class ResponseOfRequests final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.ResponseOfRequests) */ {
 public:
  ResponseOfRequests();
  virtual ~ResponseOfRequests();

  ResponseOfRequests(const ResponseOfRequests& from);

  inline ResponseOfRequests& operator=(const ResponseOfRequests& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseOfRequests(ResponseOfRequests&& from) noexcept
    : ResponseOfRequests() {
    *this = ::std::move(from);
  }

  inline ResponseOfRequests& operator=(ResponseOfRequests&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ResponseOfRequests& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseOfRequests* internal_default_instance() {
    return reinterpret_cast<const ResponseOfRequests*>(
               &_ResponseOfRequests_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(ResponseOfRequests* other);
  friend void swap(ResponseOfRequests& a, ResponseOfRequests& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseOfRequests* New() const final {
    return CreateMaybeMessage<ResponseOfRequests>(nullptr);
  }

  ResponseOfRequests* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResponseOfRequests>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResponseOfRequests& from);
  void MergeFrom(const ResponseOfRequests& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseOfRequests* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ResponseOfRequests_Response Response;
  static const Response SUCCESSFUL =
    ResponseOfRequests_Response_SUCCESSFUL;
  static const Response FAIL =
    ResponseOfRequests_Response_FAIL;
  static const Response MISSING_PARAMETER =
    ResponseOfRequests_Response_MISSING_PARAMETER;
  static const Response NOT_APPLICABLE =
    ResponseOfRequests_Response_NOT_APPLICABLE;
  static inline bool Response_IsValid(int value) {
    return ResponseOfRequests_Response_IsValid(value);
  }
  static const Response Response_MIN =
    ResponseOfRequests_Response_Response_MIN;
  static const Response Response_MAX =
    ResponseOfRequests_Response_Response_MAX;
  static const int Response_ARRAYSIZE =
    ResponseOfRequests_Response_Response_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Response_descriptor() {
    return ResponseOfRequests_Response_descriptor();
  }
  static inline const ::std::string& Response_Name(Response value) {
    return ResponseOfRequests_Response_Name(value);
  }
  static inline bool Response_Parse(const ::std::string& name,
      Response* value) {
    return ResponseOfRequests_Response_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // .AlgorithmCommunication.ResponseOfRequests.Response response = 2;
  void clear_response();
  static const int kResponseFieldNumber = 2;
  ::AlgorithmCommunication::ResponseOfRequests_Response response() const;
  void set_response(::AlgorithmCommunication::ResponseOfRequests_Response value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.ResponseOfRequests)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 err_;
  int response_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class ResponseOfParameterRequests final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.ResponseOfParameterRequests) */ {
 public:
  ResponseOfParameterRequests();
  virtual ~ResponseOfParameterRequests();

  ResponseOfParameterRequests(const ResponseOfParameterRequests& from);

  inline ResponseOfParameterRequests& operator=(const ResponseOfParameterRequests& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseOfParameterRequests(ResponseOfParameterRequests&& from) noexcept
    : ResponseOfParameterRequests() {
    *this = ::std::move(from);
  }

  inline ResponseOfParameterRequests& operator=(ResponseOfParameterRequests&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ResponseOfParameterRequests& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseOfParameterRequests* internal_default_instance() {
    return reinterpret_cast<const ResponseOfParameterRequests*>(
               &_ResponseOfParameterRequests_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(ResponseOfParameterRequests* other);
  friend void swap(ResponseOfParameterRequests& a, ResponseOfParameterRequests& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseOfParameterRequests* New() const final {
    return CreateMaybeMessage<ResponseOfParameterRequests>(nullptr);
  }

  ResponseOfParameterRequests* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResponseOfParameterRequests>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResponseOfParameterRequests& from);
  void MergeFrom(const ResponseOfParameterRequests& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseOfParameterRequests* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ResponseOfParameterRequests_Response Response;
  static const Response SUCCESSFUL =
    ResponseOfParameterRequests_Response_SUCCESSFUL;
  static const Response FAIL =
    ResponseOfParameterRequests_Response_FAIL;
  static const Response MISSING_PARAMETER =
    ResponseOfParameterRequests_Response_MISSING_PARAMETER;
  static const Response NOT_APPLICABLE =
    ResponseOfParameterRequests_Response_NOT_APPLICABLE;
  static inline bool Response_IsValid(int value) {
    return ResponseOfParameterRequests_Response_IsValid(value);
  }
  static const Response Response_MIN =
    ResponseOfParameterRequests_Response_Response_MIN;
  static const Response Response_MAX =
    ResponseOfParameterRequests_Response_Response_MAX;
  static const int Response_ARRAYSIZE =
    ResponseOfParameterRequests_Response_Response_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Response_descriptor() {
    return ResponseOfParameterRequests_Response_descriptor();
  }
  static inline const ::std::string& Response_Name(Response value) {
    return ResponseOfParameterRequests_Response_Name(value);
  }
  static inline bool Response_Parse(const ::std::string& name,
      Response* value) {
    return ResponseOfParameterRequests_Response_Parse(name, value);
  }

  typedef ResponseOfParameterRequests_Algorithm Algorithm;
  static const Algorithm MOTION =
    ResponseOfParameterRequests_Algorithm_MOTION;
  static const Algorithm STABILIZATION =
    ResponseOfParameterRequests_Algorithm_STABILIZATION;
  static const Algorithm TRACKING =
    ResponseOfParameterRequests_Algorithm_TRACKING;
  static const Algorithm PANAROMA =
    ResponseOfParameterRequests_Algorithm_PANAROMA;
  static const Algorithm FACE_DETECTION =
    ResponseOfParameterRequests_Algorithm_FACE_DETECTION;
  static const Algorithm NONE =
    ResponseOfParameterRequests_Algorithm_NONE;
  static const Algorithm PAN_CHANGE =
    ResponseOfParameterRequests_Algorithm_PAN_CHANGE;
  static inline bool Algorithm_IsValid(int value) {
    return ResponseOfParameterRequests_Algorithm_IsValid(value);
  }
  static const Algorithm Algorithm_MIN =
    ResponseOfParameterRequests_Algorithm_Algorithm_MIN;
  static const Algorithm Algorithm_MAX =
    ResponseOfParameterRequests_Algorithm_Algorithm_MAX;
  static const int Algorithm_ARRAYSIZE =
    ResponseOfParameterRequests_Algorithm_Algorithm_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Algorithm_descriptor() {
    return ResponseOfParameterRequests_Algorithm_descriptor();
  }
  static inline const ::std::string& Algorithm_Name(Algorithm value) {
    return ResponseOfParameterRequests_Algorithm_Name(value);
  }
  static inline bool Algorithm_Parse(const ::std::string& name,
      Algorithm* value) {
    return ResponseOfParameterRequests_Algorithm_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .AlgorithmCommunication.MotionParameters motionParam = 4;
  bool has_motionparam() const;
  void clear_motionparam();
  static const int kMotionParamFieldNumber = 4;
  const ::AlgorithmCommunication::MotionParameters& motionparam() const;
  ::AlgorithmCommunication::MotionParameters* release_motionparam();
  ::AlgorithmCommunication::MotionParameters* mutable_motionparam();
  void set_allocated_motionparam(::AlgorithmCommunication::MotionParameters* motionparam);

  // .AlgorithmCommunication.TrackParameters trackParam = 5;
  bool has_trackparam() const;
  void clear_trackparam();
  static const int kTrackParamFieldNumber = 5;
  const ::AlgorithmCommunication::TrackParameters& trackparam() const;
  ::AlgorithmCommunication::TrackParameters* release_trackparam();
  ::AlgorithmCommunication::TrackParameters* mutable_trackparam();
  void set_allocated_trackparam(::AlgorithmCommunication::TrackParameters* trackparam);

  // .AlgorithmCommunication.StabilizationParameters stabilizationParam = 6;
  bool has_stabilizationparam() const;
  void clear_stabilizationparam();
  static const int kStabilizationParamFieldNumber = 6;
  const ::AlgorithmCommunication::StabilizationParameters& stabilizationparam() const;
  ::AlgorithmCommunication::StabilizationParameters* release_stabilizationparam();
  ::AlgorithmCommunication::StabilizationParameters* mutable_stabilizationparam();
  void set_allocated_stabilizationparam(::AlgorithmCommunication::StabilizationParameters* stabilizationparam);

  // .AlgorithmCommunication.PanaromaParameters panaromaParam = 7;
  bool has_panaromaparam() const;
  void clear_panaromaparam();
  static const int kPanaromaParamFieldNumber = 7;
  const ::AlgorithmCommunication::PanaromaParameters& panaromaparam() const;
  ::AlgorithmCommunication::PanaromaParameters* release_panaromaparam();
  ::AlgorithmCommunication::PanaromaParameters* mutable_panaromaparam();
  void set_allocated_panaromaparam(::AlgorithmCommunication::PanaromaParameters* panaromaparam);

  // .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 8;
  bool has_facedetectionparam() const;
  void clear_facedetectionparam();
  static const int kFaceDetectionParamFieldNumber = 8;
  const ::AlgorithmCommunication::FaceDetectionParameters& facedetectionparam() const;
  ::AlgorithmCommunication::FaceDetectionParameters* release_facedetectionparam();
  ::AlgorithmCommunication::FaceDetectionParameters* mutable_facedetectionparam();
  void set_allocated_facedetectionparam(::AlgorithmCommunication::FaceDetectionParameters* facedetectionparam);

  // .AlgorithmCommunication.PanChangeParameters panChangeParam = 9;
  bool has_panchangeparam() const;
  void clear_panchangeparam();
  static const int kPanChangeParamFieldNumber = 9;
  const ::AlgorithmCommunication::PanChangeParameters& panchangeparam() const;
  ::AlgorithmCommunication::PanChangeParameters* release_panchangeparam();
  ::AlgorithmCommunication::PanChangeParameters* mutable_panchangeparam();
  void set_allocated_panchangeparam(::AlgorithmCommunication::PanChangeParameters* panchangeparam);

  // .AlgorithmCommunication.ResponseOfParameterRequests.Algorithm algorithmType = 1;
  void clear_algorithmtype();
  static const int kAlgorithmTypeFieldNumber = 1;
  ::AlgorithmCommunication::ResponseOfParameterRequests_Algorithm algorithmtype() const;
  void set_algorithmtype(::AlgorithmCommunication::ResponseOfParameterRequests_Algorithm value);

  // int32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // .AlgorithmCommunication.ResponseOfParameterRequests.Response response = 3;
  void clear_response();
  static const int kResponseFieldNumber = 3;
  ::AlgorithmCommunication::ResponseOfParameterRequests_Response response() const;
  void set_response(::AlgorithmCommunication::ResponseOfParameterRequests_Response value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.ResponseOfParameterRequests)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AlgorithmCommunication::MotionParameters* motionparam_;
  ::AlgorithmCommunication::TrackParameters* trackparam_;
  ::AlgorithmCommunication::StabilizationParameters* stabilizationparam_;
  ::AlgorithmCommunication::PanaromaParameters* panaromaparam_;
  ::AlgorithmCommunication::FaceDetectionParameters* facedetectionparam_;
  ::AlgorithmCommunication::PanChangeParameters* panchangeparam_;
  int algorithmtype_;
  ::google::protobuf::int32 error_;
  int response_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class RequestForAlgorithm final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.RequestForAlgorithm) */ {
 public:
  RequestForAlgorithm();
  virtual ~RequestForAlgorithm();

  RequestForAlgorithm(const RequestForAlgorithm& from);

  inline RequestForAlgorithm& operator=(const RequestForAlgorithm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestForAlgorithm(RequestForAlgorithm&& from) noexcept
    : RequestForAlgorithm() {
    *this = ::std::move(from);
  }

  inline RequestForAlgorithm& operator=(RequestForAlgorithm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RequestForAlgorithm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestForAlgorithm* internal_default_instance() {
    return reinterpret_cast<const RequestForAlgorithm*>(
               &_RequestForAlgorithm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(RequestForAlgorithm* other);
  friend void swap(RequestForAlgorithm& a, RequestForAlgorithm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestForAlgorithm* New() const final {
    return CreateMaybeMessage<RequestForAlgorithm>(nullptr);
  }

  RequestForAlgorithm* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestForAlgorithm>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RequestForAlgorithm& from);
  void MergeFrom(const RequestForAlgorithm& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestForAlgorithm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RequestForAlgorithm_Algorithm Algorithm;
  static const Algorithm MOTION =
    RequestForAlgorithm_Algorithm_MOTION;
  static const Algorithm STABILIZATION =
    RequestForAlgorithm_Algorithm_STABILIZATION;
  static const Algorithm TRACKING =
    RequestForAlgorithm_Algorithm_TRACKING;
  static const Algorithm PANAROMA =
    RequestForAlgorithm_Algorithm_PANAROMA;
  static const Algorithm FACE_DETECTION =
    RequestForAlgorithm_Algorithm_FACE_DETECTION;
  static const Algorithm NONE =
    RequestForAlgorithm_Algorithm_NONE;
  static const Algorithm PAN_CHANGE =
    RequestForAlgorithm_Algorithm_PAN_CHANGE;
  static inline bool Algorithm_IsValid(int value) {
    return RequestForAlgorithm_Algorithm_IsValid(value);
  }
  static const Algorithm Algorithm_MIN =
    RequestForAlgorithm_Algorithm_Algorithm_MIN;
  static const Algorithm Algorithm_MAX =
    RequestForAlgorithm_Algorithm_Algorithm_MAX;
  static const int Algorithm_ARRAYSIZE =
    RequestForAlgorithm_Algorithm_Algorithm_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Algorithm_descriptor() {
    return RequestForAlgorithm_Algorithm_descriptor();
  }
  static inline const ::std::string& Algorithm_Name(Algorithm value) {
    return RequestForAlgorithm_Algorithm_Name(value);
  }
  static inline bool Algorithm_Parse(const ::std::string& name,
      Algorithm* value) {
    return RequestForAlgorithm_Algorithm_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .AlgorithmCommunication.MotionParameters motionParam = 2;
  bool has_motionparam() const;
  void clear_motionparam();
  static const int kMotionParamFieldNumber = 2;
  const ::AlgorithmCommunication::MotionParameters& motionparam() const;
  ::AlgorithmCommunication::MotionParameters* release_motionparam();
  ::AlgorithmCommunication::MotionParameters* mutable_motionparam();
  void set_allocated_motionparam(::AlgorithmCommunication::MotionParameters* motionparam);

  // .AlgorithmCommunication.TrackParameters trackParam = 3;
  bool has_trackparam() const;
  void clear_trackparam();
  static const int kTrackParamFieldNumber = 3;
  const ::AlgorithmCommunication::TrackParameters& trackparam() const;
  ::AlgorithmCommunication::TrackParameters* release_trackparam();
  ::AlgorithmCommunication::TrackParameters* mutable_trackparam();
  void set_allocated_trackparam(::AlgorithmCommunication::TrackParameters* trackparam);

  // .AlgorithmCommunication.StabilizationParameters stabilizationParam = 4;
  bool has_stabilizationparam() const;
  void clear_stabilizationparam();
  static const int kStabilizationParamFieldNumber = 4;
  const ::AlgorithmCommunication::StabilizationParameters& stabilizationparam() const;
  ::AlgorithmCommunication::StabilizationParameters* release_stabilizationparam();
  ::AlgorithmCommunication::StabilizationParameters* mutable_stabilizationparam();
  void set_allocated_stabilizationparam(::AlgorithmCommunication::StabilizationParameters* stabilizationparam);

  // .AlgorithmCommunication.PanaromaParameters panaromaParam = 5;
  bool has_panaromaparam() const;
  void clear_panaromaparam();
  static const int kPanaromaParamFieldNumber = 5;
  const ::AlgorithmCommunication::PanaromaParameters& panaromaparam() const;
  ::AlgorithmCommunication::PanaromaParameters* release_panaromaparam();
  ::AlgorithmCommunication::PanaromaParameters* mutable_panaromaparam();
  void set_allocated_panaromaparam(::AlgorithmCommunication::PanaromaParameters* panaromaparam);

  // .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 6;
  bool has_facedetectionparam() const;
  void clear_facedetectionparam();
  static const int kFaceDetectionParamFieldNumber = 6;
  const ::AlgorithmCommunication::FaceDetectionParameters& facedetectionparam() const;
  ::AlgorithmCommunication::FaceDetectionParameters* release_facedetectionparam();
  ::AlgorithmCommunication::FaceDetectionParameters* mutable_facedetectionparam();
  void set_allocated_facedetectionparam(::AlgorithmCommunication::FaceDetectionParameters* facedetectionparam);

  // .AlgorithmCommunication.PanChangeParameters panChangeParam = 8;
  bool has_panchangeparam() const;
  void clear_panchangeparam();
  static const int kPanChangeParamFieldNumber = 8;
  const ::AlgorithmCommunication::PanChangeParameters& panchangeparam() const;
  ::AlgorithmCommunication::PanChangeParameters* release_panchangeparam();
  ::AlgorithmCommunication::PanChangeParameters* mutable_panchangeparam();
  void set_allocated_panchangeparam(::AlgorithmCommunication::PanChangeParameters* panchangeparam);

  // .AlgorithmCommunication.RequestForAlgorithm.Algorithm algorithmType = 1;
  void clear_algorithmtype();
  static const int kAlgorithmTypeFieldNumber = 1;
  ::AlgorithmCommunication::RequestForAlgorithm_Algorithm algorithmtype() const;
  void set_algorithmtype(::AlgorithmCommunication::RequestForAlgorithm_Algorithm value);

  // int32 channel = 7;
  void clear_channel();
  static const int kChannelFieldNumber = 7;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.RequestForAlgorithm)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AlgorithmCommunication::MotionParameters* motionparam_;
  ::AlgorithmCommunication::TrackParameters* trackparam_;
  ::AlgorithmCommunication::StabilizationParameters* stabilizationparam_;
  ::AlgorithmCommunication::PanaromaParameters* panaromaparam_;
  ::AlgorithmCommunication::FaceDetectionParameters* facedetectionparam_;
  ::AlgorithmCommunication::PanChangeParameters* panchangeparam_;
  int algorithmtype_;
  ::google::protobuf::int32 channel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class PanChangeParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.PanChangeParameters) */ {
 public:
  PanChangeParameters();
  virtual ~PanChangeParameters();

  PanChangeParameters(const PanChangeParameters& from);

  inline PanChangeParameters& operator=(const PanChangeParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PanChangeParameters(PanChangeParameters&& from) noexcept
    : PanChangeParameters() {
    *this = ::std::move(from);
  }

  inline PanChangeParameters& operator=(PanChangeParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PanChangeParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PanChangeParameters* internal_default_instance() {
    return reinterpret_cast<const PanChangeParameters*>(
               &_PanChangeParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(PanChangeParameters* other);
  friend void swap(PanChangeParameters& a, PanChangeParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PanChangeParameters* New() const final {
    return CreateMaybeMessage<PanChangeParameters>(nullptr);
  }

  PanChangeParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PanChangeParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PanChangeParameters& from);
  void MergeFrom(const PanChangeParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PanChangeParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .AlgorithmCommunication.ListOfLocationInformation locationInformation = 1;
  bool has_locationinformation() const;
  void clear_locationinformation();
  static const int kLocationInformationFieldNumber = 1;
  const ::AlgorithmCommunication::ListOfLocationInformation& locationinformation() const;
  ::AlgorithmCommunication::ListOfLocationInformation* release_locationinformation();
  ::AlgorithmCommunication::ListOfLocationInformation* mutable_locationinformation();
  void set_allocated_locationinformation(::AlgorithmCommunication::ListOfLocationInformation* locationinformation);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.PanChangeParameters)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AlgorithmCommunication::ListOfLocationInformation* locationinformation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class SystemFeature final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.SystemFeature) */ {
 public:
  SystemFeature();
  virtual ~SystemFeature();

  SystemFeature(const SystemFeature& from);

  inline SystemFeature& operator=(const SystemFeature& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SystemFeature(SystemFeature&& from) noexcept
    : SystemFeature() {
    *this = ::std::move(from);
  }

  inline SystemFeature& operator=(SystemFeature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SystemFeature& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemFeature* internal_default_instance() {
    return reinterpret_cast<const SystemFeature*>(
               &_SystemFeature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(SystemFeature* other);
  friend void swap(SystemFeature& a, SystemFeature& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemFeature* New() const final {
    return CreateMaybeMessage<SystemFeature>(nullptr);
  }

  SystemFeature* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SystemFeature>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SystemFeature& from);
  void MergeFrom(const SystemFeature& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemFeature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // int32 device = 3;
  void clear_device();
  static const int kDeviceFieldNumber = 3;
  ::google::protobuf::int32 device() const;
  void set_device(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.SystemFeature)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 device_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class SystemFeatures final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.SystemFeatures) */ {
 public:
  SystemFeatures();
  virtual ~SystemFeatures();

  SystemFeatures(const SystemFeatures& from);

  inline SystemFeatures& operator=(const SystemFeatures& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SystemFeatures(SystemFeatures&& from) noexcept
    : SystemFeatures() {
    *this = ::std::move(from);
  }

  inline SystemFeatures& operator=(SystemFeatures&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SystemFeatures& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemFeatures* internal_default_instance() {
    return reinterpret_cast<const SystemFeatures*>(
               &_SystemFeatures_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(SystemFeatures* other);
  friend void swap(SystemFeatures& a, SystemFeatures& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemFeatures* New() const final {
    return CreateMaybeMessage<SystemFeatures>(nullptr);
  }

  SystemFeatures* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SystemFeatures>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SystemFeatures& from);
  void MergeFrom(const SystemFeatures& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemFeatures* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AlgorithmCommunication.SystemFeature features = 1;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 1;
  ::AlgorithmCommunication::SystemFeature* mutable_features(int index);
  ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::SystemFeature >*
      mutable_features();
  const ::AlgorithmCommunication::SystemFeature& features(int index) const;
  ::AlgorithmCommunication::SystemFeature* add_features();
  const ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::SystemFeature >&
      features() const;

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.SystemFeatures)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::SystemFeature > features_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class MotionParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.MotionParameters) */ {
 public:
  MotionParameters();
  virtual ~MotionParameters();

  MotionParameters(const MotionParameters& from);

  inline MotionParameters& operator=(const MotionParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MotionParameters(MotionParameters&& from) noexcept
    : MotionParameters() {
    *this = ::std::move(from);
  }

  inline MotionParameters& operator=(MotionParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MotionParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MotionParameters* internal_default_instance() {
    return reinterpret_cast<const MotionParameters*>(
               &_MotionParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(MotionParameters* other);
  friend void swap(MotionParameters& a, MotionParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotionParameters* New() const final {
    return CreateMaybeMessage<MotionParameters>(nullptr);
  }

  MotionParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MotionParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MotionParameters& from);
  void MergeFrom(const MotionParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotionParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MotionParameters_Settings Settings;
  static const Settings SENSITIVITY =
    MotionParameters_Settings_SENSITIVITY;
  static const Settings ROI =
    MotionParameters_Settings_ROI;
  static const Settings BOTH =
    MotionParameters_Settings_BOTH;
  static inline bool Settings_IsValid(int value) {
    return MotionParameters_Settings_IsValid(value);
  }
  static const Settings Settings_MIN =
    MotionParameters_Settings_Settings_MIN;
  static const Settings Settings_MAX =
    MotionParameters_Settings_Settings_MAX;
  static const int Settings_ARRAYSIZE =
    MotionParameters_Settings_Settings_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Settings_descriptor() {
    return MotionParameters_Settings_descriptor();
  }
  static inline const ::std::string& Settings_Name(Settings value) {
    return MotionParameters_Settings_Name(value);
  }
  static inline bool Settings_Parse(const ::std::string& name,
      Settings* value) {
    return MotionParameters_Settings_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .AlgorithmCommunication.TRoi ROIlist = 3;
  bool has_roilist() const;
  void clear_roilist();
  static const int kROIlistFieldNumber = 3;
  const ::AlgorithmCommunication::TRoi& roilist() const;
  ::AlgorithmCommunication::TRoi* release_roilist();
  ::AlgorithmCommunication::TRoi* mutable_roilist();
  void set_allocated_roilist(::AlgorithmCommunication::TRoi* roilist);

  // .AlgorithmCommunication.MotionParameters.Settings settingChoice = 1;
  void clear_settingchoice();
  static const int kSettingChoiceFieldNumber = 1;
  ::AlgorithmCommunication::MotionParameters_Settings settingchoice() const;
  void set_settingchoice(::AlgorithmCommunication::MotionParameters_Settings value);

  // int32 sensitivity = 2;
  void clear_sensitivity();
  static const int kSensitivityFieldNumber = 2;
  ::google::protobuf::int32 sensitivity() const;
  void set_sensitivity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.MotionParameters)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AlgorithmCommunication::TRoi* roilist_;
  int settingchoice_;
  ::google::protobuf::int32 sensitivity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class TRoi final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.TRoi) */ {
 public:
  TRoi();
  virtual ~TRoi();

  TRoi(const TRoi& from);

  inline TRoi& operator=(const TRoi& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TRoi(TRoi&& from) noexcept
    : TRoi() {
    *this = ::std::move(from);
  }

  inline TRoi& operator=(TRoi&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TRoi& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TRoi* internal_default_instance() {
    return reinterpret_cast<const TRoi*>(
               &_TRoi_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(TRoi* other);
  friend void swap(TRoi& a, TRoi& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TRoi* New() const final {
    return CreateMaybeMessage<TRoi>(nullptr);
  }

  TRoi* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TRoi>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TRoi& from);
  void MergeFrom(const TRoi& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TRoi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AlgorithmCommunication.TPolygon polygon = 1;
  int polygon_size() const;
  void clear_polygon();
  static const int kPolygonFieldNumber = 1;
  ::AlgorithmCommunication::TPolygon* mutable_polygon(int index);
  ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::TPolygon >*
      mutable_polygon();
  const ::AlgorithmCommunication::TPolygon& polygon(int index) const;
  ::AlgorithmCommunication::TPolygon* add_polygon();
  const ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::TPolygon >&
      polygon() const;

  // .AlgorithmCommunication.TRectangle rect1 = 2;
  bool has_rect1() const;
  void clear_rect1();
  static const int kRect1FieldNumber = 2;
  const ::AlgorithmCommunication::TRectangle& rect1() const;
  ::AlgorithmCommunication::TRectangle* release_rect1();
  ::AlgorithmCommunication::TRectangle* mutable_rect1();
  void set_allocated_rect1(::AlgorithmCommunication::TRectangle* rect1);

  // .AlgorithmCommunication.TRectangle rect2 = 3;
  bool has_rect2() const;
  void clear_rect2();
  static const int kRect2FieldNumber = 3;
  const ::AlgorithmCommunication::TRectangle& rect2() const;
  ::AlgorithmCommunication::TRectangle* release_rect2();
  ::AlgorithmCommunication::TRectangle* mutable_rect2();
  void set_allocated_rect2(::AlgorithmCommunication::TRectangle* rect2);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.TRoi)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::TPolygon > polygon_;
  ::AlgorithmCommunication::TRectangle* rect1_;
  ::AlgorithmCommunication::TRectangle* rect2_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class TPoint final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.TPoint) */ {
 public:
  TPoint();
  virtual ~TPoint();

  TPoint(const TPoint& from);

  inline TPoint& operator=(const TPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TPoint(TPoint&& from) noexcept
    : TPoint() {
    *this = ::std::move(from);
  }

  inline TPoint& operator=(TPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TPoint* internal_default_instance() {
    return reinterpret_cast<const TPoint*>(
               &_TPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(TPoint* other);
  friend void swap(TPoint& a, TPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TPoint* New() const final {
    return CreateMaybeMessage<TPoint>(nullptr);
  }

  TPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TPoint& from);
  void MergeFrom(const TPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.TPoint)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class TPolygon final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.TPolygon) */ {
 public:
  TPolygon();
  virtual ~TPolygon();

  TPolygon(const TPolygon& from);

  inline TPolygon& operator=(const TPolygon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TPolygon(TPolygon&& from) noexcept
    : TPolygon() {
    *this = ::std::move(from);
  }

  inline TPolygon& operator=(TPolygon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TPolygon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TPolygon* internal_default_instance() {
    return reinterpret_cast<const TPolygon*>(
               &_TPolygon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(TPolygon* other);
  friend void swap(TPolygon& a, TPolygon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TPolygon* New() const final {
    return CreateMaybeMessage<TPolygon>(nullptr);
  }

  TPolygon* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TPolygon>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TPolygon& from);
  void MergeFrom(const TPolygon& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TPolygon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AlgorithmCommunication.TPoint points = 1;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 1;
  ::AlgorithmCommunication::TPoint* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::TPoint >*
      mutable_points();
  const ::AlgorithmCommunication::TPoint& points(int index) const;
  ::AlgorithmCommunication::TPoint* add_points();
  const ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::TPoint >&
      points() const;

  // bool is_active = 2;
  void clear_is_active();
  static const int kIsActiveFieldNumber = 2;
  bool is_active() const;
  void set_is_active(bool value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.TPolygon)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::TPoint > points_;
  bool is_active_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class TRectangle final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.TRectangle) */ {
 public:
  TRectangle();
  virtual ~TRectangle();

  TRectangle(const TRectangle& from);

  inline TRectangle& operator=(const TRectangle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TRectangle(TRectangle&& from) noexcept
    : TRectangle() {
    *this = ::std::move(from);
  }

  inline TRectangle& operator=(TRectangle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TRectangle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TRectangle* internal_default_instance() {
    return reinterpret_cast<const TRectangle*>(
               &_TRectangle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(TRectangle* other);
  friend void swap(TRectangle& a, TRectangle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TRectangle* New() const final {
    return CreateMaybeMessage<TRectangle>(nullptr);
  }

  TRectangle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TRectangle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TRectangle& from);
  void MergeFrom(const TRectangle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TRectangle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .AlgorithmCommunication.TPoint upperLeft = 1;
  bool has_upperleft() const;
  void clear_upperleft();
  static const int kUpperLeftFieldNumber = 1;
  const ::AlgorithmCommunication::TPoint& upperleft() const;
  ::AlgorithmCommunication::TPoint* release_upperleft();
  ::AlgorithmCommunication::TPoint* mutable_upperleft();
  void set_allocated_upperleft(::AlgorithmCommunication::TPoint* upperleft);

  // .AlgorithmCommunication.TPoint bottomRight = 2;
  bool has_bottomright() const;
  void clear_bottomright();
  static const int kBottomRightFieldNumber = 2;
  const ::AlgorithmCommunication::TPoint& bottomright() const;
  ::AlgorithmCommunication::TPoint* release_bottomright();
  ::AlgorithmCommunication::TPoint* mutable_bottomright();
  void set_allocated_bottomright(::AlgorithmCommunication::TPoint* bottomright);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.TRectangle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AlgorithmCommunication::TPoint* upperleft_;
  ::AlgorithmCommunication::TPoint* bottomright_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class TrackParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.TrackParameters) */ {
 public:
  TrackParameters();
  virtual ~TrackParameters();

  TrackParameters(const TrackParameters& from);

  inline TrackParameters& operator=(const TrackParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrackParameters(TrackParameters&& from) noexcept
    : TrackParameters() {
    *this = ::std::move(from);
  }

  inline TrackParameters& operator=(TrackParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TrackParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrackParameters* internal_default_instance() {
    return reinterpret_cast<const TrackParameters*>(
               &_TrackParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(TrackParameters* other);
  friend void swap(TrackParameters& a, TrackParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrackParameters* New() const final {
    return CreateMaybeMessage<TrackParameters>(nullptr);
  }

  TrackParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrackParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrackParameters& from);
  void MergeFrom(const TrackParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrackParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TrackParameters_TrackType TrackType;
  static const TrackType AUTO =
    TrackParameters_TrackType_AUTO;
  static const TrackType SEMI_AUTO =
    TrackParameters_TrackType_SEMI_AUTO;
  static const TrackType MANUAL =
    TrackParameters_TrackType_MANUAL;
  static inline bool TrackType_IsValid(int value) {
    return TrackParameters_TrackType_IsValid(value);
  }
  static const TrackType TrackType_MIN =
    TrackParameters_TrackType_TrackType_MIN;
  static const TrackType TrackType_MAX =
    TrackParameters_TrackType_TrackType_MAX;
  static const int TrackType_ARRAYSIZE =
    TrackParameters_TrackType_TrackType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TrackType_descriptor() {
    return TrackParameters_TrackType_descriptor();
  }
  static inline const ::std::string& TrackType_Name(TrackType value) {
    return TrackParameters_TrackType_Name(value);
  }
  static inline bool TrackType_Parse(const ::std::string& name,
      TrackType* value) {
    return TrackParameters_TrackType_Parse(name, value);
  }

  typedef TrackParameters_Mode Mode;
  static const Mode DistanceToCenter =
    TrackParameters_Mode_DistanceToCenter;
  static const Mode SizeOfObject =
    TrackParameters_Mode_SizeOfObject;
  static const Mode UserMode =
    TrackParameters_Mode_UserMode;
  static inline bool Mode_IsValid(int value) {
    return TrackParameters_Mode_IsValid(value);
  }
  static const Mode Mode_MIN =
    TrackParameters_Mode_Mode_MIN;
  static const Mode Mode_MAX =
    TrackParameters_Mode_Mode_MAX;
  static const int Mode_ARRAYSIZE =
    TrackParameters_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mode_descriptor() {
    return TrackParameters_Mode_descriptor();
  }
  static inline const ::std::string& Mode_Name(Mode value) {
    return TrackParameters_Mode_Name(value);
  }
  static inline bool Mode_Parse(const ::std::string& name,
      Mode* value) {
    return TrackParameters_Mode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .AlgorithmCommunication.TrackObject target = 5;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 5;
  const ::AlgorithmCommunication::TrackObject& target() const;
  ::AlgorithmCommunication::TrackObject* release_target();
  ::AlgorithmCommunication::TrackObject* mutable_target();
  void set_allocated_target(::AlgorithmCommunication::TrackObject* target);

  // .AlgorithmCommunication.TrackParameters.TrackType trackType = 1;
  void clear_tracktype();
  static const int kTrackTypeFieldNumber = 1;
  ::AlgorithmCommunication::TrackParameters_TrackType tracktype() const;
  void set_tracktype(::AlgorithmCommunication::TrackParameters_TrackType value);

  // .AlgorithmCommunication.TrackParameters.Mode mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::AlgorithmCommunication::TrackParameters_Mode mode() const;
  void set_mode(::AlgorithmCommunication::TrackParameters_Mode value);

  // float trackScore = 3;
  void clear_trackscore();
  static const int kTrackScoreFieldNumber = 3;
  float trackscore() const;
  void set_trackscore(float value);

  // int32 trackInterval = 4;
  void clear_trackinterval();
  static const int kTrackIntervalFieldNumber = 4;
  ::google::protobuf::int32 trackinterval() const;
  void set_trackinterval(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.TrackParameters)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AlgorithmCommunication::TrackObject* target_;
  int tracktype_;
  int mode_;
  float trackscore_;
  ::google::protobuf::int32 trackinterval_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class TrackObject final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.TrackObject) */ {
 public:
  TrackObject();
  virtual ~TrackObject();

  TrackObject(const TrackObject& from);

  inline TrackObject& operator=(const TrackObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrackObject(TrackObject&& from) noexcept
    : TrackObject() {
    *this = ::std::move(from);
  }

  inline TrackObject& operator=(TrackObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TrackObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrackObject* internal_default_instance() {
    return reinterpret_cast<const TrackObject*>(
               &_TrackObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(TrackObject* other);
  friend void swap(TrackObject& a, TrackObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrackObject* New() const final {
    return CreateMaybeMessage<TrackObject>(nullptr);
  }

  TrackObject* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrackObject>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrackObject& from);
  void MergeFrom(const TrackObject& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrackObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float point_x = 1;
  void clear_point_x();
  static const int kPointXFieldNumber = 1;
  float point_x() const;
  void set_point_x(float value);

  // float point_y = 2;
  void clear_point_y();
  static const int kPointYFieldNumber = 2;
  float point_y() const;
  void set_point_y(float value);

  // float width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  float width() const;
  void set_width(float value);

  // float height = 4;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  float height() const;
  void set_height(float value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.TrackObject)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float point_x_;
  float point_y_;
  float width_;
  float height_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class StabilizationParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.StabilizationParameters) */ {
 public:
  StabilizationParameters();
  virtual ~StabilizationParameters();

  StabilizationParameters(const StabilizationParameters& from);

  inline StabilizationParameters& operator=(const StabilizationParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StabilizationParameters(StabilizationParameters&& from) noexcept
    : StabilizationParameters() {
    *this = ::std::move(from);
  }

  inline StabilizationParameters& operator=(StabilizationParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StabilizationParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StabilizationParameters* internal_default_instance() {
    return reinterpret_cast<const StabilizationParameters*>(
               &_StabilizationParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(StabilizationParameters* other);
  friend void swap(StabilizationParameters& a, StabilizationParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StabilizationParameters* New() const final {
    return CreateMaybeMessage<StabilizationParameters>(nullptr);
  }

  StabilizationParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StabilizationParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StabilizationParameters& from);
  void MergeFrom(const StabilizationParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StabilizationParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 privacy = 1;
  void clear_privacy();
  static const int kPrivacyFieldNumber = 1;
  ::google::protobuf::int32 privacy() const;
  void set_privacy(::google::protobuf::int32 value);

  // int32 sensitivity = 2;
  void clear_sensitivity();
  static const int kSensitivityFieldNumber = 2;
  ::google::protobuf::int32 sensitivity() const;
  void set_sensitivity(::google::protobuf::int32 value);

  // int32 stabilization = 3;
  void clear_stabilization();
  static const int kStabilizationFieldNumber = 3;
  ::google::protobuf::int32 stabilization() const;
  void set_stabilization(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.StabilizationParameters)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 privacy_;
  ::google::protobuf::int32 sensitivity_;
  ::google::protobuf::int32 stabilization_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class PanaromaParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.PanaromaParameters) */ {
 public:
  PanaromaParameters();
  virtual ~PanaromaParameters();

  PanaromaParameters(const PanaromaParameters& from);

  inline PanaromaParameters& operator=(const PanaromaParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PanaromaParameters(PanaromaParameters&& from) noexcept
    : PanaromaParameters() {
    *this = ::std::move(from);
  }

  inline PanaromaParameters& operator=(PanaromaParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PanaromaParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PanaromaParameters* internal_default_instance() {
    return reinterpret_cast<const PanaromaParameters*>(
               &_PanaromaParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(PanaromaParameters* other);
  friend void swap(PanaromaParameters& a, PanaromaParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PanaromaParameters* New() const final {
    return CreateMaybeMessage<PanaromaParameters>(nullptr);
  }

  PanaromaParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PanaromaParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PanaromaParameters& from);
  void MergeFrom(const PanaromaParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PanaromaParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 dummy = 1;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::int32 dummy() const;
  void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.PanaromaParameters)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 dummy_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// -------------------------------------------------------------------

class FaceDetectionParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AlgorithmCommunication.FaceDetectionParameters) */ {
 public:
  FaceDetectionParameters();
  virtual ~FaceDetectionParameters();

  FaceDetectionParameters(const FaceDetectionParameters& from);

  inline FaceDetectionParameters& operator=(const FaceDetectionParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaceDetectionParameters(FaceDetectionParameters&& from) noexcept
    : FaceDetectionParameters() {
    *this = ::std::move(from);
  }

  inline FaceDetectionParameters& operator=(FaceDetectionParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FaceDetectionParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaceDetectionParameters* internal_default_instance() {
    return reinterpret_cast<const FaceDetectionParameters*>(
               &_FaceDetectionParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(FaceDetectionParameters* other);
  friend void swap(FaceDetectionParameters& a, FaceDetectionParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaceDetectionParameters* New() const final {
    return CreateMaybeMessage<FaceDetectionParameters>(nullptr);
  }

  FaceDetectionParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FaceDetectionParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FaceDetectionParameters& from);
  void MergeFrom(const FaceDetectionParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FaceDetectionParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 dummy = 1;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::int32 dummy() const;
  void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AlgorithmCommunication.FaceDetectionParameters)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 dummy_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AlgorithmCommunication_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LocationInformation

// float pan = 1;
inline void LocationInformation::clear_pan() {
  pan_ = 0;
}
inline float LocationInformation::pan() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.LocationInformation.pan)
  return pan_;
}
inline void LocationInformation::set_pan(float value) {
  
  pan_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.LocationInformation.pan)
}

// float tilt = 2;
inline void LocationInformation::clear_tilt() {
  tilt_ = 0;
}
inline float LocationInformation::tilt() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.LocationInformation.tilt)
  return tilt_;
}
inline void LocationInformation::set_tilt(float value) {
  
  tilt_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.LocationInformation.tilt)
}

// float zoom = 3;
inline void LocationInformation::clear_zoom() {
  zoom_ = 0;
}
inline float LocationInformation::zoom() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.LocationInformation.zoom)
  return zoom_;
}
inline void LocationInformation::set_zoom(float value) {
  
  zoom_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.LocationInformation.zoom)
}

// -------------------------------------------------------------------

// ListOfLocationInformation

// repeated .AlgorithmCommunication.LocationInformation locationInformation = 1;
inline int ListOfLocationInformation::locationinformation_size() const {
  return locationinformation_.size();
}
inline void ListOfLocationInformation::clear_locationinformation() {
  locationinformation_.Clear();
}
inline ::AlgorithmCommunication::LocationInformation* ListOfLocationInformation::mutable_locationinformation(int index) {
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.ListOfLocationInformation.locationInformation)
  return locationinformation_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::LocationInformation >*
ListOfLocationInformation::mutable_locationinformation() {
  // @@protoc_insertion_point(field_mutable_list:AlgorithmCommunication.ListOfLocationInformation.locationInformation)
  return &locationinformation_;
}
inline const ::AlgorithmCommunication::LocationInformation& ListOfLocationInformation::locationinformation(int index) const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ListOfLocationInformation.locationInformation)
  return locationinformation_.Get(index);
}
inline ::AlgorithmCommunication::LocationInformation* ListOfLocationInformation::add_locationinformation() {
  // @@protoc_insertion_point(field_add:AlgorithmCommunication.ListOfLocationInformation.locationInformation)
  return locationinformation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::LocationInformation >&
ListOfLocationInformation::locationinformation() const {
  // @@protoc_insertion_point(field_list:AlgorithmCommunication.ListOfLocationInformation.locationInformation)
  return locationinformation_;
}

// int64 intervalForCirculation = 2;
inline void ListOfLocationInformation::clear_intervalforcirculation() {
  intervalforcirculation_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ListOfLocationInformation::intervalforcirculation() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ListOfLocationInformation.intervalForCirculation)
  return intervalforcirculation_;
}
inline void ListOfLocationInformation::set_intervalforcirculation(::google::protobuf::int64 value) {
  
  intervalforcirculation_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ListOfLocationInformation.intervalForCirculation)
}

// -------------------------------------------------------------------

// DiagnosticQ

// int32 value = 1;
inline void DiagnosticQ::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 DiagnosticQ::value() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.DiagnosticQ.value)
  return value_;
}
inline void DiagnosticQ::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.DiagnosticQ.value)
}

// -------------------------------------------------------------------

// DiagnosticInfo

// repeated .AlgorithmCommunication.Node nodes = 1;
inline int DiagnosticInfo::nodes_size() const {
  return nodes_.size();
}
inline void DiagnosticInfo::clear_nodes() {
  nodes_.Clear();
}
inline ::AlgorithmCommunication::Node* DiagnosticInfo::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.DiagnosticInfo.nodes)
  return nodes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::Node >*
DiagnosticInfo::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:AlgorithmCommunication.DiagnosticInfo.nodes)
  return &nodes_;
}
inline const ::AlgorithmCommunication::Node& DiagnosticInfo::nodes(int index) const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.DiagnosticInfo.nodes)
  return nodes_.Get(index);
}
inline ::AlgorithmCommunication::Node* DiagnosticInfo::add_nodes() {
  // @@protoc_insertion_point(field_add:AlgorithmCommunication.DiagnosticInfo.nodes)
  return nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::Node >&
DiagnosticInfo::nodes() const {
  // @@protoc_insertion_point(field_list:AlgorithmCommunication.DiagnosticInfo.nodes)
  return nodes_;
}

// int64 latency = 2;
inline void DiagnosticInfo::clear_latency() {
  latency_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 DiagnosticInfo::latency() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.DiagnosticInfo.latency)
  return latency_;
}
inline void DiagnosticInfo::set_latency(::google::protobuf::int64 value) {
  
  latency_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.DiagnosticInfo.latency)
}

// int64 totalUseMemory = 3;
inline void DiagnosticInfo::clear_totalusememory() {
  totalusememory_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 DiagnosticInfo::totalusememory() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.DiagnosticInfo.totalUseMemory)
  return totalusememory_;
}
inline void DiagnosticInfo::set_totalusememory(::google::protobuf::int64 value) {
  
  totalusememory_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.DiagnosticInfo.totalUseMemory)
}

// -------------------------------------------------------------------

// Node

// .AlgorithmCommunication.Node.NodeType type = 1;
inline void Node::clear_type() {
  type_ = 0;
}
inline ::AlgorithmCommunication::Node_NodeType Node::type() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Node.type)
  return static_cast< ::AlgorithmCommunication::Node_NodeType >(type_);
}
inline void Node::set_type(::AlgorithmCommunication::Node_NodeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.Node.type)
}

// .AlgorithmCommunication.Element element = 2;
inline bool Node::has_element() const {
  return this != internal_default_instance() && element_ != nullptr;
}
inline void Node::clear_element() {
  if (GetArenaNoVirtual() == nullptr && element_ != nullptr) {
    delete element_;
  }
  element_ = nullptr;
}
inline const ::AlgorithmCommunication::Element& Node::element() const {
  const ::AlgorithmCommunication::Element* p = element_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Node.element)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::Element*>(
      &::AlgorithmCommunication::_Element_default_instance_);
}
inline ::AlgorithmCommunication::Element* Node::release_element() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.Node.element)
  
  ::AlgorithmCommunication::Element* temp = element_;
  element_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::Element* Node::mutable_element() {
  
  if (element_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::Element>(GetArenaNoVirtual());
    element_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.Node.element)
  return element_;
}
inline void Node::set_allocated_element(::AlgorithmCommunication::Element* element) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete element_;
  }
  if (element) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      element = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, element, submessage_arena);
    }
    
  } else {
    
  }
  element_ = element;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.Node.element)
}

// .AlgorithmCommunication.ElementQueue queue = 3;
inline bool Node::has_queue() const {
  return this != internal_default_instance() && queue_ != nullptr;
}
inline void Node::clear_queue() {
  if (GetArenaNoVirtual() == nullptr && queue_ != nullptr) {
    delete queue_;
  }
  queue_ = nullptr;
}
inline const ::AlgorithmCommunication::ElementQueue& Node::queue() const {
  const ::AlgorithmCommunication::ElementQueue* p = queue_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Node.queue)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::ElementQueue*>(
      &::AlgorithmCommunication::_ElementQueue_default_instance_);
}
inline ::AlgorithmCommunication::ElementQueue* Node::release_queue() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.Node.queue)
  
  ::AlgorithmCommunication::ElementQueue* temp = queue_;
  queue_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::ElementQueue* Node::mutable_queue() {
  
  if (queue_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::ElementQueue>(GetArenaNoVirtual());
    queue_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.Node.queue)
  return queue_;
}
inline void Node::set_allocated_queue(::AlgorithmCommunication::ElementQueue* queue) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete queue_;
  }
  if (queue) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      queue = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, queue, submessage_arena);
    }
    
  } else {
    
  }
  queue_ = queue;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.Node.queue)
}

// -------------------------------------------------------------------

// Element

// int32 inputQueueCount = 1;
inline void Element::clear_inputqueuecount() {
  inputqueuecount_ = 0;
}
inline ::google::protobuf::int32 Element::inputqueuecount() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Element.inputQueueCount)
  return inputqueuecount_;
}
inline void Element::set_inputqueuecount(::google::protobuf::int32 value) {
  
  inputqueuecount_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.Element.inputQueueCount)
}

// int32 outputQueueCount = 2;
inline void Element::clear_outputqueuecount() {
  outputqueuecount_ = 0;
}
inline ::google::protobuf::int32 Element::outputqueuecount() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Element.outputQueueCount)
  return outputqueuecount_;
}
inline void Element::set_outputqueuecount(::google::protobuf::int32 value) {
  
  outputqueuecount_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.Element.outputQueueCount)
}

// string name = 3;
inline void Element::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Element::name() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Element.name)
  return name_.GetNoArena();
}
inline void Element::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.Element.name)
}
#if LANG_CXX11
inline void Element::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AlgorithmCommunication.Element.name)
}
#endif
inline void Element::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AlgorithmCommunication.Element.name)
}
inline void Element::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AlgorithmCommunication.Element.name)
}
inline ::std::string* Element::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.Element.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Element::release_name() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.Element.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Element::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.Element.name)
}

// int64 latency = 4;
inline void Element::clear_latency() {
  latency_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Element::latency() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Element.latency)
  return latency_;
}
inline void Element::set_latency(::google::protobuf::int64 value) {
  
  latency_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.Element.latency)
}

// int64 totalUseMemory = 5;
inline void Element::clear_totalusememory() {
  totalusememory_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Element::totalusememory() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Element.totalUseMemory)
  return totalusememory_;
}
inline void Element::set_totalusememory(::google::protobuf::int64 value) {
  
  totalusememory_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.Element.totalUseMemory)
}

// -------------------------------------------------------------------

// ElementQueue

// float fps = 1;
inline void ElementQueue::clear_fps() {
  fps_ = 0;
}
inline float ElementQueue::fps() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ElementQueue.fps)
  return fps_;
}
inline void ElementQueue::set_fps(float value) {
  
  fps_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ElementQueue.fps)
}

// int64 bitrate = 2;
inline void ElementQueue::clear_bitrate() {
  bitrate_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ElementQueue::bitrate() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ElementQueue.bitrate)
  return bitrate_;
}
inline void ElementQueue::set_bitrate(::google::protobuf::int64 value) {
  
  bitrate_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ElementQueue.bitrate)
}

// int32 sendCount = 3;
inline void ElementQueue::clear_sendcount() {
  sendcount_ = 0;
}
inline ::google::protobuf::int32 ElementQueue::sendcount() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ElementQueue.sendCount)
  return sendcount_;
}
inline void ElementQueue::set_sendcount(::google::protobuf::int32 value) {
  
  sendcount_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ElementQueue.sendCount)
}

// int64 elapsedTime = 4;
inline void ElementQueue::clear_elapsedtime() {
  elapsedtime_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ElementQueue::elapsedtime() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ElementQueue.elapsedTime)
  return elapsedtime_;
}
inline void ElementQueue::set_elapsedtime(::google::protobuf::int64 value) {
  
  elapsedtime_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ElementQueue.elapsedTime)
}

// int32 bufferCount = 5;
inline void ElementQueue::clear_buffercount() {
  buffercount_ = 0;
}
inline ::google::protobuf::int32 ElementQueue::buffercount() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ElementQueue.bufferCount)
  return buffercount_;
}
inline void ElementQueue::set_buffercount(::google::protobuf::int32 value) {
  
  buffercount_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ElementQueue.bufferCount)
}

// int32 receivedCount = 6;
inline void ElementQueue::clear_receivedcount() {
  receivedcount_ = 0;
}
inline ::google::protobuf::int32 ElementQueue::receivedcount() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ElementQueue.receivedCount)
  return receivedcount_;
}
inline void ElementQueue::set_receivedcount(::google::protobuf::int32 value) {
  
  receivedcount_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ElementQueue.receivedCount)
}

// int64 totalSize = 7;
inline void ElementQueue::clear_totalsize() {
  totalsize_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ElementQueue::totalsize() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ElementQueue.totalSize)
  return totalsize_;
}
inline void ElementQueue::set_totalsize(::google::protobuf::int64 value) {
  
  totalsize_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ElementQueue.totalSize)
}

// -------------------------------------------------------------------

// ScreenshotInfo

// int32 channelId = 1;
inline void ScreenshotInfo::clear_channelid() {
  channelid_ = 0;
}
inline ::google::protobuf::int32 ScreenshotInfo::channelid() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ScreenshotInfo.channelId)
  return channelid_;
}
inline void ScreenshotInfo::set_channelid(::google::protobuf::int32 value) {
  
  channelid_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ScreenshotInfo.channelId)
}

// int32 quality = 2;
inline void ScreenshotInfo::clear_quality() {
  quality_ = 0;
}
inline ::google::protobuf::int32 ScreenshotInfo::quality() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ScreenshotInfo.quality)
  return quality_;
}
inline void ScreenshotInfo::set_quality(::google::protobuf::int32 value) {
  
  quality_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ScreenshotInfo.quality)
}

// float fps = 3;
inline void ScreenshotInfo::clear_fps() {
  fps_ = 0;
}
inline float ScreenshotInfo::fps() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ScreenshotInfo.fps)
  return fps_;
}
inline void ScreenshotInfo::set_fps(float value) {
  
  fps_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ScreenshotInfo.fps)
}

// -------------------------------------------------------------------

// ScreenFrame

// bytes frame = 1;
inline void ScreenFrame::clear_frame() {
  frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScreenFrame::frame() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ScreenFrame.frame)
  return frame_.GetNoArena();
}
inline void ScreenFrame::set_frame(const ::std::string& value) {
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ScreenFrame.frame)
}
#if LANG_CXX11
inline void ScreenFrame::set_frame(::std::string&& value) {
  
  frame_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AlgorithmCommunication.ScreenFrame.frame)
}
#endif
inline void ScreenFrame::set_frame(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AlgorithmCommunication.ScreenFrame.frame)
}
inline void ScreenFrame::set_frame(const void* value, size_t size) {
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AlgorithmCommunication.ScreenFrame.frame)
}
inline ::std::string* ScreenFrame::mutable_frame() {
  
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.ScreenFrame.frame)
  return frame_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScreenFrame::release_frame() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.ScreenFrame.frame)
  
  return frame_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScreenFrame::set_allocated_frame(::std::string* frame) {
  if (frame != nullptr) {
    
  } else {
    
  }
  frame_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frame);
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.ScreenFrame.frame)
}

// int32 quality = 2;
inline void ScreenFrame::clear_quality() {
  quality_ = 0;
}
inline ::google::protobuf::int32 ScreenFrame::quality() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ScreenFrame.quality)
  return quality_;
}
inline void ScreenFrame::set_quality(::google::protobuf::int32 value) {
  
  quality_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ScreenFrame.quality)
}

// int64 ts = 3;
inline void ScreenFrame::clear_ts() {
  ts_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ScreenFrame::ts() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ScreenFrame.ts)
  return ts_;
}
inline void ScreenFrame::set_ts(::google::protobuf::int64 value) {
  
  ts_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ScreenFrame.ts)
}

// string metadata = 4;
inline void ScreenFrame::clear_metadata() {
  metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScreenFrame::metadata() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ScreenFrame.metadata)
  return metadata_.GetNoArena();
}
inline void ScreenFrame::set_metadata(const ::std::string& value) {
  
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ScreenFrame.metadata)
}
#if LANG_CXX11
inline void ScreenFrame::set_metadata(::std::string&& value) {
  
  metadata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AlgorithmCommunication.ScreenFrame.metadata)
}
#endif
inline void ScreenFrame::set_metadata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AlgorithmCommunication.ScreenFrame.metadata)
}
inline void ScreenFrame::set_metadata(const char* value, size_t size) {
  
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AlgorithmCommunication.ScreenFrame.metadata)
}
inline ::std::string* ScreenFrame::mutable_metadata() {
  
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.ScreenFrame.metadata)
  return metadata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScreenFrame::release_metadata() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.ScreenFrame.metadata)
  
  return metadata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScreenFrame::set_allocated_metadata(::std::string* metadata) {
  if (metadata != nullptr) {
    
  } else {
    
  }
  metadata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metadata);
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.ScreenFrame.metadata)
}

// -------------------------------------------------------------------

// TargetStruct

// int32 topLeftX = 1;
inline void TargetStruct::clear_topleftx() {
  topleftx_ = 0;
}
inline ::google::protobuf::int32 TargetStruct::topleftx() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TargetStruct.topLeftX)
  return topleftx_;
}
inline void TargetStruct::set_topleftx(::google::protobuf::int32 value) {
  
  topleftx_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TargetStruct.topLeftX)
}

// int32 topLeftY = 2;
inline void TargetStruct::clear_toplefty() {
  toplefty_ = 0;
}
inline ::google::protobuf::int32 TargetStruct::toplefty() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TargetStruct.topLeftY)
  return toplefty_;
}
inline void TargetStruct::set_toplefty(::google::protobuf::int32 value) {
  
  toplefty_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TargetStruct.topLeftY)
}

// int32 widthOfTarget = 3;
inline void TargetStruct::clear_widthoftarget() {
  widthoftarget_ = 0;
}
inline ::google::protobuf::int32 TargetStruct::widthoftarget() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TargetStruct.widthOfTarget)
  return widthoftarget_;
}
inline void TargetStruct::set_widthoftarget(::google::protobuf::int32 value) {
  
  widthoftarget_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TargetStruct.widthOfTarget)
}

// int32 heightOfTarget = 4;
inline void TargetStruct::clear_heightoftarget() {
  heightoftarget_ = 0;
}
inline ::google::protobuf::int32 TargetStruct::heightoftarget() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TargetStruct.heightOfTarget)
  return heightoftarget_;
}
inline void TargetStruct::set_heightoftarget(::google::protobuf::int32 value) {
  
  heightoftarget_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TargetStruct.heightOfTarget)
}

// .AlgorithmCommunication.TargetStruct.TargetClass targetClass = 5;
inline void TargetStruct::clear_targetclass() {
  targetclass_ = 0;
}
inline ::AlgorithmCommunication::TargetStruct_TargetClass TargetStruct::targetclass() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TargetStruct.targetClass)
  return static_cast< ::AlgorithmCommunication::TargetStruct_TargetClass >(targetclass_);
}
inline void TargetStruct::set_targetclass(::AlgorithmCommunication::TargetStruct_TargetClass value) {
  
  targetclass_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TargetStruct.targetClass)
}

// -------------------------------------------------------------------

// AlarmInfo

// int32 baseId = 1;
inline void AlarmInfo::clear_baseid() {
  baseid_ = 0;
}
inline ::google::protobuf::int32 AlarmInfo::baseid() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmInfo.baseId)
  return baseid_;
}
inline void AlarmInfo::set_baseid(::google::protobuf::int32 value) {
  
  baseid_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmInfo.baseId)
}

// int32 stationId = 2;
inline void AlarmInfo::clear_stationid() {
  stationid_ = 0;
}
inline ::google::protobuf::int32 AlarmInfo::stationid() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmInfo.stationId)
  return stationid_;
}
inline void AlarmInfo::set_stationid(::google::protobuf::int32 value) {
  
  stationid_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmInfo.stationId)
}

// int32 deviceId = 3;
inline void AlarmInfo::clear_deviceid() {
  deviceid_ = 0;
}
inline ::google::protobuf::int32 AlarmInfo::deviceid() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmInfo.deviceId)
  return deviceid_;
}
inline void AlarmInfo::set_deviceid(::google::protobuf::int32 value) {
  
  deviceid_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmInfo.deviceId)
}

// int32 unitType = 4;
inline void AlarmInfo::clear_unittype() {
  unittype_ = 0;
}
inline ::google::protobuf::int32 AlarmInfo::unittype() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmInfo.unitType)
  return unittype_;
}
inline void AlarmInfo::set_unittype(::google::protobuf::int32 value) {
  
  unittype_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmInfo.unitType)
}

// string date = 5;
inline void AlarmInfo::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmInfo::date() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmInfo.date)
  return date_.GetNoArena();
}
inline void AlarmInfo::set_date(const ::std::string& value) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmInfo.date)
}
#if LANG_CXX11
inline void AlarmInfo::set_date(::std::string&& value) {
  
  date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AlgorithmCommunication.AlarmInfo.date)
}
#endif
inline void AlarmInfo::set_date(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AlgorithmCommunication.AlarmInfo.date)
}
inline void AlarmInfo::set_date(const char* value, size_t size) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AlgorithmCommunication.AlarmInfo.date)
}
inline ::std::string* AlarmInfo::mutable_date() {
  
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.AlarmInfo.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmInfo::release_date() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.AlarmInfo.date)
  
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmInfo::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    
  } else {
    
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.AlarmInfo.date)
}

// bool alarmFlag = 6;
inline void AlarmInfo::clear_alarmflag() {
  alarmflag_ = false;
}
inline bool AlarmInfo::alarmflag() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmInfo.alarmFlag)
  return alarmflag_;
}
inline void AlarmInfo::set_alarmflag(bool value) {
  
  alarmflag_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmInfo.alarmFlag)
}

// .AlgorithmCommunication.TargetStruct target = 7;
inline bool AlarmInfo::has_target() const {
  return this != internal_default_instance() && target_ != nullptr;
}
inline void AlarmInfo::clear_target() {
  if (GetArenaNoVirtual() == nullptr && target_ != nullptr) {
    delete target_;
  }
  target_ = nullptr;
}
inline const ::AlgorithmCommunication::TargetStruct& AlarmInfo::target() const {
  const ::AlgorithmCommunication::TargetStruct* p = target_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmInfo.target)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::TargetStruct*>(
      &::AlgorithmCommunication::_TargetStruct_default_instance_);
}
inline ::AlgorithmCommunication::TargetStruct* AlarmInfo::release_target() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.AlarmInfo.target)
  
  ::AlgorithmCommunication::TargetStruct* temp = target_;
  target_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::TargetStruct* AlarmInfo::mutable_target() {
  
  if (target_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::TargetStruct>(GetArenaNoVirtual());
    target_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.AlarmInfo.target)
  return target_;
}
inline void AlarmInfo::set_allocated_target(::AlgorithmCommunication::TargetStruct* target) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete target_;
  }
  if (target) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    
  } else {
    
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.AlarmInfo.target)
}

// bytes frameOfAlarm = 8;
inline void AlarmInfo::clear_frameofalarm() {
  frameofalarm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmInfo::frameofalarm() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmInfo.frameOfAlarm)
  return frameofalarm_.GetNoArena();
}
inline void AlarmInfo::set_frameofalarm(const ::std::string& value) {
  
  frameofalarm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmInfo.frameOfAlarm)
}
#if LANG_CXX11
inline void AlarmInfo::set_frameofalarm(::std::string&& value) {
  
  frameofalarm_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AlgorithmCommunication.AlarmInfo.frameOfAlarm)
}
#endif
inline void AlarmInfo::set_frameofalarm(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  frameofalarm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AlgorithmCommunication.AlarmInfo.frameOfAlarm)
}
inline void AlarmInfo::set_frameofalarm(const void* value, size_t size) {
  
  frameofalarm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AlgorithmCommunication.AlarmInfo.frameOfAlarm)
}
inline ::std::string* AlarmInfo::mutable_frameofalarm() {
  
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.AlarmInfo.frameOfAlarm)
  return frameofalarm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmInfo::release_frameofalarm() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.AlarmInfo.frameOfAlarm)
  
  return frameofalarm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmInfo::set_allocated_frameofalarm(::std::string* frameofalarm) {
  if (frameofalarm != nullptr) {
    
  } else {
    
  }
  frameofalarm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frameofalarm);
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.AlarmInfo.frameOfAlarm)
}

// -------------------------------------------------------------------

// CITInfo

// .AlgorithmCommunication.CITInfo.Info moduleInfo = 1;
inline void CITInfo::clear_moduleinfo() {
  moduleinfo_ = 0;
}
inline ::AlgorithmCommunication::CITInfo_Info CITInfo::moduleinfo() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.CITInfo.moduleInfo)
  return static_cast< ::AlgorithmCommunication::CITInfo_Info >(moduleinfo_);
}
inline void CITInfo::set_moduleinfo(::AlgorithmCommunication::CITInfo_Info value) {
  
  moduleinfo_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.CITInfo.moduleInfo)
}

// .AlgorithmCommunication.CITInfo.Info motorInfo = 2;
inline void CITInfo::clear_motorinfo() {
  motorinfo_ = 0;
}
inline ::AlgorithmCommunication::CITInfo_Info CITInfo::motorinfo() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.CITInfo.motorInfo)
  return static_cast< ::AlgorithmCommunication::CITInfo_Info >(motorinfo_);
}
inline void CITInfo::set_motorinfo(::AlgorithmCommunication::CITInfo_Info value) {
  
  motorinfo_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.CITInfo.motorInfo)
}

// .AlgorithmCommunication.CITInfo.Info usbInfo = 3;
inline void CITInfo::clear_usbinfo() {
  usbinfo_ = 0;
}
inline ::AlgorithmCommunication::CITInfo_Info CITInfo::usbinfo() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.CITInfo.usbInfo)
  return static_cast< ::AlgorithmCommunication::CITInfo_Info >(usbinfo_);
}
inline void CITInfo::set_usbinfo(::AlgorithmCommunication::CITInfo_Info value) {
  
  usbinfo_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.CITInfo.usbInfo)
}

// -------------------------------------------------------------------

// GeneralInfo

// .AlgorithmCommunication.AlarmInfo alarmInfo = 1;
inline bool GeneralInfo::has_alarminfo() const {
  return this != internal_default_instance() && alarminfo_ != nullptr;
}
inline void GeneralInfo::clear_alarminfo() {
  if (GetArenaNoVirtual() == nullptr && alarminfo_ != nullptr) {
    delete alarminfo_;
  }
  alarminfo_ = nullptr;
}
inline const ::AlgorithmCommunication::AlarmInfo& GeneralInfo::alarminfo() const {
  const ::AlgorithmCommunication::AlarmInfo* p = alarminfo_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.GeneralInfo.alarmInfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::AlarmInfo*>(
      &::AlgorithmCommunication::_AlarmInfo_default_instance_);
}
inline ::AlgorithmCommunication::AlarmInfo* GeneralInfo::release_alarminfo() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.GeneralInfo.alarmInfo)
  
  ::AlgorithmCommunication::AlarmInfo* temp = alarminfo_;
  alarminfo_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::AlarmInfo* GeneralInfo::mutable_alarminfo() {
  
  if (alarminfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::AlarmInfo>(GetArenaNoVirtual());
    alarminfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.GeneralInfo.alarmInfo)
  return alarminfo_;
}
inline void GeneralInfo::set_allocated_alarminfo(::AlgorithmCommunication::AlarmInfo* alarminfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete alarminfo_;
  }
  if (alarminfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      alarminfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alarminfo, submessage_arena);
    }
    
  } else {
    
  }
  alarminfo_ = alarminfo;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.GeneralInfo.alarmInfo)
}

// .AlgorithmCommunication.CITInfo citInfo = 2;
inline bool GeneralInfo::has_citinfo() const {
  return this != internal_default_instance() && citinfo_ != nullptr;
}
inline void GeneralInfo::clear_citinfo() {
  if (GetArenaNoVirtual() == nullptr && citinfo_ != nullptr) {
    delete citinfo_;
  }
  citinfo_ = nullptr;
}
inline const ::AlgorithmCommunication::CITInfo& GeneralInfo::citinfo() const {
  const ::AlgorithmCommunication::CITInfo* p = citinfo_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.GeneralInfo.citInfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::CITInfo*>(
      &::AlgorithmCommunication::_CITInfo_default_instance_);
}
inline ::AlgorithmCommunication::CITInfo* GeneralInfo::release_citinfo() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.GeneralInfo.citInfo)
  
  ::AlgorithmCommunication::CITInfo* temp = citinfo_;
  citinfo_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::CITInfo* GeneralInfo::mutable_citinfo() {
  
  if (citinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::CITInfo>(GetArenaNoVirtual());
    citinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.GeneralInfo.citInfo)
  return citinfo_;
}
inline void GeneralInfo::set_allocated_citinfo(::AlgorithmCommunication::CITInfo* citinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete citinfo_;
  }
  if (citinfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      citinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, citinfo, submessage_arena);
    }
    
  } else {
    
  }
  citinfo_ = citinfo;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.GeneralInfo.citInfo)
}

// -------------------------------------------------------------------

// AlarmReqAdvancedParameters

// bool enabled = 1;
inline void AlarmReqAdvancedParameters::clear_enabled() {
  enabled_ = false;
}
inline bool AlarmReqAdvancedParameters::enabled() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmReqAdvancedParameters.enabled)
  return enabled_;
}
inline void AlarmReqAdvancedParameters::set_enabled(bool value) {
  
  enabled_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmReqAdvancedParameters.enabled)
}

// int32 suppressInterval = 2;
inline void AlarmReqAdvancedParameters::clear_suppressinterval() {
  suppressinterval_ = 0;
}
inline ::google::protobuf::int32 AlarmReqAdvancedParameters::suppressinterval() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmReqAdvancedParameters.suppressInterval)
  return suppressinterval_;
}
inline void AlarmReqAdvancedParameters::set_suppressinterval(::google::protobuf::int32 value) {
  
  suppressinterval_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmReqAdvancedParameters.suppressInterval)
}

// int32 alarmQueueLength = 3;
inline void AlarmReqAdvancedParameters::clear_alarmqueuelength() {
  alarmqueuelength_ = 0;
}
inline ::google::protobuf::int32 AlarmReqAdvancedParameters::alarmqueuelength() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmReqAdvancedParameters.alarmQueueLength)
  return alarmqueuelength_;
}
inline void AlarmReqAdvancedParameters::set_alarmqueuelength(::google::protobuf::int32 value) {
  
  alarmqueuelength_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmReqAdvancedParameters.alarmQueueLength)
}

// bool smartSnapshot = 4;
inline void AlarmReqAdvancedParameters::clear_smartsnapshot() {
  smartsnapshot_ = false;
}
inline bool AlarmReqAdvancedParameters::smartsnapshot() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmReqAdvancedParameters.smartSnapshot)
  return smartsnapshot_;
}
inline void AlarmReqAdvancedParameters::set_smartsnapshot(bool value) {
  
  smartsnapshot_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmReqAdvancedParameters.smartSnapshot)
}

// int32 smartSnapshotInterval = 5;
inline void AlarmReqAdvancedParameters::clear_smartsnapshotinterval() {
  smartsnapshotinterval_ = 0;
}
inline ::google::protobuf::int32 AlarmReqAdvancedParameters::smartsnapshotinterval() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmReqAdvancedParameters.smartSnapshotInterval)
  return smartsnapshotinterval_;
}
inline void AlarmReqAdvancedParameters::set_smartsnapshotinterval(::google::protobuf::int32 value) {
  
  smartsnapshotinterval_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmReqAdvancedParameters.smartSnapshotInterval)
}

// -------------------------------------------------------------------

// AlarmReqInfo

// string filter = 1;
inline void AlarmReqInfo::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmReqInfo::filter() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmReqInfo.filter)
  return filter_.GetNoArena();
}
inline void AlarmReqInfo::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmReqInfo.filter)
}
#if LANG_CXX11
inline void AlarmReqInfo::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AlgorithmCommunication.AlarmReqInfo.filter)
}
#endif
inline void AlarmReqInfo::set_filter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AlgorithmCommunication.AlarmReqInfo.filter)
}
inline void AlarmReqInfo::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AlgorithmCommunication.AlarmReqInfo.filter)
}
inline ::std::string* AlarmReqInfo::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.AlarmReqInfo.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmReqInfo::release_filter() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.AlarmReqInfo.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmReqInfo::set_allocated_filter(::std::string* filter) {
  if (filter != nullptr) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.AlarmReqInfo.filter)
}

// int32 channel = 2;
inline void AlarmReqInfo::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 AlarmReqInfo::channel() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmReqInfo.channel)
  return channel_;
}
inline void AlarmReqInfo::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmReqInfo.channel)
}

// int32 intervalMsecs = 3;
inline void AlarmReqInfo::clear_intervalmsecs() {
  intervalmsecs_ = 0;
}
inline ::google::protobuf::int32 AlarmReqInfo::intervalmsecs() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmReqInfo.intervalMsecs)
  return intervalmsecs_;
}
inline void AlarmReqInfo::set_intervalmsecs(::google::protobuf::int32 value) {
  
  intervalmsecs_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.AlarmReqInfo.intervalMsecs)
}

// .AlgorithmCommunication.AlarmReqAdvancedParameters advancedParams = 4;
inline bool AlarmReqInfo::has_advancedparams() const {
  return this != internal_default_instance() && advancedparams_ != nullptr;
}
inline void AlarmReqInfo::clear_advancedparams() {
  if (GetArenaNoVirtual() == nullptr && advancedparams_ != nullptr) {
    delete advancedparams_;
  }
  advancedparams_ = nullptr;
}
inline const ::AlgorithmCommunication::AlarmReqAdvancedParameters& AlarmReqInfo::advancedparams() const {
  const ::AlgorithmCommunication::AlarmReqAdvancedParameters* p = advancedparams_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.AlarmReqInfo.advancedParams)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::AlarmReqAdvancedParameters*>(
      &::AlgorithmCommunication::_AlarmReqAdvancedParameters_default_instance_);
}
inline ::AlgorithmCommunication::AlarmReqAdvancedParameters* AlarmReqInfo::release_advancedparams() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.AlarmReqInfo.advancedParams)
  
  ::AlgorithmCommunication::AlarmReqAdvancedParameters* temp = advancedparams_;
  advancedparams_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::AlarmReqAdvancedParameters* AlarmReqInfo::mutable_advancedparams() {
  
  if (advancedparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::AlarmReqAdvancedParameters>(GetArenaNoVirtual());
    advancedparams_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.AlarmReqInfo.advancedParams)
  return advancedparams_;
}
inline void AlarmReqInfo::set_allocated_advancedparams(::AlgorithmCommunication::AlarmReqAdvancedParameters* advancedparams) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete advancedparams_;
  }
  if (advancedparams) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      advancedparams = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, advancedparams, submessage_arena);
    }
    
  } else {
    
  }
  advancedparams_ = advancedparams;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.AlarmReqInfo.advancedParams)
}

// -------------------------------------------------------------------

// Alarm

// repeated string key = 1;
inline int Alarm::key_size() const {
  return key_.size();
}
inline void Alarm::clear_key() {
  key_.Clear();
}
inline const ::std::string& Alarm::key(int index) const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Alarm.key)
  return key_.Get(index);
}
inline ::std::string* Alarm::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.Alarm.key)
  return key_.Mutable(index);
}
inline void Alarm::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.Alarm.key)
  key_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Alarm::set_key(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.Alarm.key)
  key_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Alarm::set_key(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:AlgorithmCommunication.Alarm.key)
}
inline void Alarm::set_key(int index, const char* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:AlgorithmCommunication.Alarm.key)
}
inline ::std::string* Alarm::add_key() {
  // @@protoc_insertion_point(field_add_mutable:AlgorithmCommunication.Alarm.key)
  return key_.Add();
}
inline void Alarm::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:AlgorithmCommunication.Alarm.key)
}
#if LANG_CXX11
inline void Alarm::add_key(::std::string&& value) {
  key_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:AlgorithmCommunication.Alarm.key)
}
#endif
inline void Alarm::add_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:AlgorithmCommunication.Alarm.key)
}
inline void Alarm::add_key(const char* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:AlgorithmCommunication.Alarm.key)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Alarm::key() const {
  // @@protoc_insertion_point(field_list:AlgorithmCommunication.Alarm.key)
  return key_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Alarm::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:AlgorithmCommunication.Alarm.key)
  return &key_;
}

// repeated string value = 2;
inline int Alarm::value_size() const {
  return value_.size();
}
inline void Alarm::clear_value() {
  value_.Clear();
}
inline const ::std::string& Alarm::value(int index) const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Alarm.value)
  return value_.Get(index);
}
inline ::std::string* Alarm::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.Alarm.value)
  return value_.Mutable(index);
}
inline void Alarm::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.Alarm.value)
  value_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Alarm::set_value(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.Alarm.value)
  value_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Alarm::set_value(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:AlgorithmCommunication.Alarm.value)
}
inline void Alarm::set_value(int index, const char* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:AlgorithmCommunication.Alarm.value)
}
inline ::std::string* Alarm::add_value() {
  // @@protoc_insertion_point(field_add_mutable:AlgorithmCommunication.Alarm.value)
  return value_.Add();
}
inline void Alarm::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:AlgorithmCommunication.Alarm.value)
}
#if LANG_CXX11
inline void Alarm::add_value(::std::string&& value) {
  value_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:AlgorithmCommunication.Alarm.value)
}
#endif
inline void Alarm::add_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:AlgorithmCommunication.Alarm.value)
}
inline void Alarm::add_value(const char* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:AlgorithmCommunication.Alarm.value)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Alarm::value() const {
  // @@protoc_insertion_point(field_list:AlgorithmCommunication.Alarm.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Alarm::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:AlgorithmCommunication.Alarm.value)
  return &value_;
}

// string type = 3;
inline void Alarm::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Alarm::type() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Alarm.type)
  return type_.GetNoArena();
}
inline void Alarm::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.Alarm.type)
}
#if LANG_CXX11
inline void Alarm::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AlgorithmCommunication.Alarm.type)
}
#endif
inline void Alarm::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AlgorithmCommunication.Alarm.type)
}
inline void Alarm::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AlgorithmCommunication.Alarm.type)
}
inline ::std::string* Alarm::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.Alarm.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Alarm::release_type() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.Alarm.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Alarm::set_allocated_type(::std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.Alarm.type)
}

// .AlgorithmCommunication.CITInfo cit = 4;
inline bool Alarm::has_cit() const {
  return this != internal_default_instance() && cit_ != nullptr;
}
inline void Alarm::clear_cit() {
  if (GetArenaNoVirtual() == nullptr && cit_ != nullptr) {
    delete cit_;
  }
  cit_ = nullptr;
}
inline const ::AlgorithmCommunication::CITInfo& Alarm::cit() const {
  const ::AlgorithmCommunication::CITInfo* p = cit_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Alarm.cit)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::CITInfo*>(
      &::AlgorithmCommunication::_CITInfo_default_instance_);
}
inline ::AlgorithmCommunication::CITInfo* Alarm::release_cit() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.Alarm.cit)
  
  ::AlgorithmCommunication::CITInfo* temp = cit_;
  cit_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::CITInfo* Alarm::mutable_cit() {
  
  if (cit_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::CITInfo>(GetArenaNoVirtual());
    cit_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.Alarm.cit)
  return cit_;
}
inline void Alarm::set_allocated_cit(::AlgorithmCommunication::CITInfo* cit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete cit_;
  }
  if (cit) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cit, submessage_arena);
    }
    
  } else {
    
  }
  cit_ = cit;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.Alarm.cit)
}

// .AlgorithmCommunication.AlarmInfo alarm = 5;
inline bool Alarm::has_alarm() const {
  return this != internal_default_instance() && alarm_ != nullptr;
}
inline void Alarm::clear_alarm() {
  if (GetArenaNoVirtual() == nullptr && alarm_ != nullptr) {
    delete alarm_;
  }
  alarm_ = nullptr;
}
inline const ::AlgorithmCommunication::AlarmInfo& Alarm::alarm() const {
  const ::AlgorithmCommunication::AlarmInfo* p = alarm_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Alarm.alarm)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::AlarmInfo*>(
      &::AlgorithmCommunication::_AlarmInfo_default_instance_);
}
inline ::AlgorithmCommunication::AlarmInfo* Alarm::release_alarm() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.Alarm.alarm)
  
  ::AlgorithmCommunication::AlarmInfo* temp = alarm_;
  alarm_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::AlarmInfo* Alarm::mutable_alarm() {
  
  if (alarm_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::AlarmInfo>(GetArenaNoVirtual());
    alarm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.Alarm.alarm)
  return alarm_;
}
inline void Alarm::set_allocated_alarm(::AlgorithmCommunication::AlarmInfo* alarm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete alarm_;
  }
  if (alarm) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      alarm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alarm, submessage_arena);
    }
    
  } else {
    
  }
  alarm_ = alarm;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.Alarm.alarm)
}

// -------------------------------------------------------------------

// Alarms

// repeated .AlgorithmCommunication.Alarm alarms = 1;
inline int Alarms::alarms_size() const {
  return alarms_.size();
}
inline void Alarms::clear_alarms() {
  alarms_.Clear();
}
inline ::AlgorithmCommunication::Alarm* Alarms::mutable_alarms(int index) {
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.Alarms.alarms)
  return alarms_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::Alarm >*
Alarms::mutable_alarms() {
  // @@protoc_insertion_point(field_mutable_list:AlgorithmCommunication.Alarms.alarms)
  return &alarms_;
}
inline const ::AlgorithmCommunication::Alarm& Alarms::alarms(int index) const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Alarms.alarms)
  return alarms_.Get(index);
}
inline ::AlgorithmCommunication::Alarm* Alarms::add_alarms() {
  // @@protoc_insertion_point(field_add:AlgorithmCommunication.Alarms.alarms)
  return alarms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::Alarm >&
Alarms::alarms() const {
  // @@protoc_insertion_point(field_list:AlgorithmCommunication.Alarms.alarms)
  return alarms_;
}

// int64 ts = 2;
inline void Alarms::clear_ts() {
  ts_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Alarms::ts() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.Alarms.ts)
  return ts_;
}
inline void Alarms::set_ts(::google::protobuf::int64 value) {
  
  ts_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.Alarms.ts)
}

// -------------------------------------------------------------------

// ResponseOfRequests

// int32 err = 1;
inline void ResponseOfRequests::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 ResponseOfRequests::err() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ResponseOfRequests.err)
  return err_;
}
inline void ResponseOfRequests::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ResponseOfRequests.err)
}

// .AlgorithmCommunication.ResponseOfRequests.Response response = 2;
inline void ResponseOfRequests::clear_response() {
  response_ = 0;
}
inline ::AlgorithmCommunication::ResponseOfRequests_Response ResponseOfRequests::response() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ResponseOfRequests.response)
  return static_cast< ::AlgorithmCommunication::ResponseOfRequests_Response >(response_);
}
inline void ResponseOfRequests::set_response(::AlgorithmCommunication::ResponseOfRequests_Response value) {
  
  response_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ResponseOfRequests.response)
}

// -------------------------------------------------------------------

// ResponseOfParameterRequests

// .AlgorithmCommunication.ResponseOfParameterRequests.Algorithm algorithmType = 1;
inline void ResponseOfParameterRequests::clear_algorithmtype() {
  algorithmtype_ = 0;
}
inline ::AlgorithmCommunication::ResponseOfParameterRequests_Algorithm ResponseOfParameterRequests::algorithmtype() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ResponseOfParameterRequests.algorithmType)
  return static_cast< ::AlgorithmCommunication::ResponseOfParameterRequests_Algorithm >(algorithmtype_);
}
inline void ResponseOfParameterRequests::set_algorithmtype(::AlgorithmCommunication::ResponseOfParameterRequests_Algorithm value) {
  
  algorithmtype_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ResponseOfParameterRequests.algorithmType)
}

// int32 error = 2;
inline void ResponseOfParameterRequests::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 ResponseOfParameterRequests::error() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ResponseOfParameterRequests.error)
  return error_;
}
inline void ResponseOfParameterRequests::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ResponseOfParameterRequests.error)
}

// .AlgorithmCommunication.ResponseOfParameterRequests.Response response = 3;
inline void ResponseOfParameterRequests::clear_response() {
  response_ = 0;
}
inline ::AlgorithmCommunication::ResponseOfParameterRequests_Response ResponseOfParameterRequests::response() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ResponseOfParameterRequests.response)
  return static_cast< ::AlgorithmCommunication::ResponseOfParameterRequests_Response >(response_);
}
inline void ResponseOfParameterRequests::set_response(::AlgorithmCommunication::ResponseOfParameterRequests_Response value) {
  
  response_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.ResponseOfParameterRequests.response)
}

// .AlgorithmCommunication.MotionParameters motionParam = 4;
inline bool ResponseOfParameterRequests::has_motionparam() const {
  return this != internal_default_instance() && motionparam_ != nullptr;
}
inline void ResponseOfParameterRequests::clear_motionparam() {
  if (GetArenaNoVirtual() == nullptr && motionparam_ != nullptr) {
    delete motionparam_;
  }
  motionparam_ = nullptr;
}
inline const ::AlgorithmCommunication::MotionParameters& ResponseOfParameterRequests::motionparam() const {
  const ::AlgorithmCommunication::MotionParameters* p = motionparam_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ResponseOfParameterRequests.motionParam)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::MotionParameters*>(
      &::AlgorithmCommunication::_MotionParameters_default_instance_);
}
inline ::AlgorithmCommunication::MotionParameters* ResponseOfParameterRequests::release_motionparam() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.ResponseOfParameterRequests.motionParam)
  
  ::AlgorithmCommunication::MotionParameters* temp = motionparam_;
  motionparam_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::MotionParameters* ResponseOfParameterRequests::mutable_motionparam() {
  
  if (motionparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::MotionParameters>(GetArenaNoVirtual());
    motionparam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.ResponseOfParameterRequests.motionParam)
  return motionparam_;
}
inline void ResponseOfParameterRequests::set_allocated_motionparam(::AlgorithmCommunication::MotionParameters* motionparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete motionparam_;
  }
  if (motionparam) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      motionparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, motionparam, submessage_arena);
    }
    
  } else {
    
  }
  motionparam_ = motionparam;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.ResponseOfParameterRequests.motionParam)
}

// .AlgorithmCommunication.TrackParameters trackParam = 5;
inline bool ResponseOfParameterRequests::has_trackparam() const {
  return this != internal_default_instance() && trackparam_ != nullptr;
}
inline void ResponseOfParameterRequests::clear_trackparam() {
  if (GetArenaNoVirtual() == nullptr && trackparam_ != nullptr) {
    delete trackparam_;
  }
  trackparam_ = nullptr;
}
inline const ::AlgorithmCommunication::TrackParameters& ResponseOfParameterRequests::trackparam() const {
  const ::AlgorithmCommunication::TrackParameters* p = trackparam_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ResponseOfParameterRequests.trackParam)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::TrackParameters*>(
      &::AlgorithmCommunication::_TrackParameters_default_instance_);
}
inline ::AlgorithmCommunication::TrackParameters* ResponseOfParameterRequests::release_trackparam() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.ResponseOfParameterRequests.trackParam)
  
  ::AlgorithmCommunication::TrackParameters* temp = trackparam_;
  trackparam_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::TrackParameters* ResponseOfParameterRequests::mutable_trackparam() {
  
  if (trackparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::TrackParameters>(GetArenaNoVirtual());
    trackparam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.ResponseOfParameterRequests.trackParam)
  return trackparam_;
}
inline void ResponseOfParameterRequests::set_allocated_trackparam(::AlgorithmCommunication::TrackParameters* trackparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete trackparam_;
  }
  if (trackparam) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      trackparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trackparam, submessage_arena);
    }
    
  } else {
    
  }
  trackparam_ = trackparam;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.ResponseOfParameterRequests.trackParam)
}

// .AlgorithmCommunication.StabilizationParameters stabilizationParam = 6;
inline bool ResponseOfParameterRequests::has_stabilizationparam() const {
  return this != internal_default_instance() && stabilizationparam_ != nullptr;
}
inline void ResponseOfParameterRequests::clear_stabilizationparam() {
  if (GetArenaNoVirtual() == nullptr && stabilizationparam_ != nullptr) {
    delete stabilizationparam_;
  }
  stabilizationparam_ = nullptr;
}
inline const ::AlgorithmCommunication::StabilizationParameters& ResponseOfParameterRequests::stabilizationparam() const {
  const ::AlgorithmCommunication::StabilizationParameters* p = stabilizationparam_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ResponseOfParameterRequests.stabilizationParam)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::StabilizationParameters*>(
      &::AlgorithmCommunication::_StabilizationParameters_default_instance_);
}
inline ::AlgorithmCommunication::StabilizationParameters* ResponseOfParameterRequests::release_stabilizationparam() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.ResponseOfParameterRequests.stabilizationParam)
  
  ::AlgorithmCommunication::StabilizationParameters* temp = stabilizationparam_;
  stabilizationparam_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::StabilizationParameters* ResponseOfParameterRequests::mutable_stabilizationparam() {
  
  if (stabilizationparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::StabilizationParameters>(GetArenaNoVirtual());
    stabilizationparam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.ResponseOfParameterRequests.stabilizationParam)
  return stabilizationparam_;
}
inline void ResponseOfParameterRequests::set_allocated_stabilizationparam(::AlgorithmCommunication::StabilizationParameters* stabilizationparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete stabilizationparam_;
  }
  if (stabilizationparam) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      stabilizationparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stabilizationparam, submessage_arena);
    }
    
  } else {
    
  }
  stabilizationparam_ = stabilizationparam;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.ResponseOfParameterRequests.stabilizationParam)
}

// .AlgorithmCommunication.PanaromaParameters panaromaParam = 7;
inline bool ResponseOfParameterRequests::has_panaromaparam() const {
  return this != internal_default_instance() && panaromaparam_ != nullptr;
}
inline void ResponseOfParameterRequests::clear_panaromaparam() {
  if (GetArenaNoVirtual() == nullptr && panaromaparam_ != nullptr) {
    delete panaromaparam_;
  }
  panaromaparam_ = nullptr;
}
inline const ::AlgorithmCommunication::PanaromaParameters& ResponseOfParameterRequests::panaromaparam() const {
  const ::AlgorithmCommunication::PanaromaParameters* p = panaromaparam_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ResponseOfParameterRequests.panaromaParam)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::PanaromaParameters*>(
      &::AlgorithmCommunication::_PanaromaParameters_default_instance_);
}
inline ::AlgorithmCommunication::PanaromaParameters* ResponseOfParameterRequests::release_panaromaparam() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.ResponseOfParameterRequests.panaromaParam)
  
  ::AlgorithmCommunication::PanaromaParameters* temp = panaromaparam_;
  panaromaparam_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::PanaromaParameters* ResponseOfParameterRequests::mutable_panaromaparam() {
  
  if (panaromaparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::PanaromaParameters>(GetArenaNoVirtual());
    panaromaparam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.ResponseOfParameterRequests.panaromaParam)
  return panaromaparam_;
}
inline void ResponseOfParameterRequests::set_allocated_panaromaparam(::AlgorithmCommunication::PanaromaParameters* panaromaparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete panaromaparam_;
  }
  if (panaromaparam) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      panaromaparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, panaromaparam, submessage_arena);
    }
    
  } else {
    
  }
  panaromaparam_ = panaromaparam;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.ResponseOfParameterRequests.panaromaParam)
}

// .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 8;
inline bool ResponseOfParameterRequests::has_facedetectionparam() const {
  return this != internal_default_instance() && facedetectionparam_ != nullptr;
}
inline void ResponseOfParameterRequests::clear_facedetectionparam() {
  if (GetArenaNoVirtual() == nullptr && facedetectionparam_ != nullptr) {
    delete facedetectionparam_;
  }
  facedetectionparam_ = nullptr;
}
inline const ::AlgorithmCommunication::FaceDetectionParameters& ResponseOfParameterRequests::facedetectionparam() const {
  const ::AlgorithmCommunication::FaceDetectionParameters* p = facedetectionparam_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ResponseOfParameterRequests.faceDetectionParam)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::FaceDetectionParameters*>(
      &::AlgorithmCommunication::_FaceDetectionParameters_default_instance_);
}
inline ::AlgorithmCommunication::FaceDetectionParameters* ResponseOfParameterRequests::release_facedetectionparam() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.ResponseOfParameterRequests.faceDetectionParam)
  
  ::AlgorithmCommunication::FaceDetectionParameters* temp = facedetectionparam_;
  facedetectionparam_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::FaceDetectionParameters* ResponseOfParameterRequests::mutable_facedetectionparam() {
  
  if (facedetectionparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::FaceDetectionParameters>(GetArenaNoVirtual());
    facedetectionparam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.ResponseOfParameterRequests.faceDetectionParam)
  return facedetectionparam_;
}
inline void ResponseOfParameterRequests::set_allocated_facedetectionparam(::AlgorithmCommunication::FaceDetectionParameters* facedetectionparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete facedetectionparam_;
  }
  if (facedetectionparam) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      facedetectionparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, facedetectionparam, submessage_arena);
    }
    
  } else {
    
  }
  facedetectionparam_ = facedetectionparam;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.ResponseOfParameterRequests.faceDetectionParam)
}

// .AlgorithmCommunication.PanChangeParameters panChangeParam = 9;
inline bool ResponseOfParameterRequests::has_panchangeparam() const {
  return this != internal_default_instance() && panchangeparam_ != nullptr;
}
inline void ResponseOfParameterRequests::clear_panchangeparam() {
  if (GetArenaNoVirtual() == nullptr && panchangeparam_ != nullptr) {
    delete panchangeparam_;
  }
  panchangeparam_ = nullptr;
}
inline const ::AlgorithmCommunication::PanChangeParameters& ResponseOfParameterRequests::panchangeparam() const {
  const ::AlgorithmCommunication::PanChangeParameters* p = panchangeparam_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.ResponseOfParameterRequests.panChangeParam)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::PanChangeParameters*>(
      &::AlgorithmCommunication::_PanChangeParameters_default_instance_);
}
inline ::AlgorithmCommunication::PanChangeParameters* ResponseOfParameterRequests::release_panchangeparam() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.ResponseOfParameterRequests.panChangeParam)
  
  ::AlgorithmCommunication::PanChangeParameters* temp = panchangeparam_;
  panchangeparam_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::PanChangeParameters* ResponseOfParameterRequests::mutable_panchangeparam() {
  
  if (panchangeparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::PanChangeParameters>(GetArenaNoVirtual());
    panchangeparam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.ResponseOfParameterRequests.panChangeParam)
  return panchangeparam_;
}
inline void ResponseOfParameterRequests::set_allocated_panchangeparam(::AlgorithmCommunication::PanChangeParameters* panchangeparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete panchangeparam_;
  }
  if (panchangeparam) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      panchangeparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, panchangeparam, submessage_arena);
    }
    
  } else {
    
  }
  panchangeparam_ = panchangeparam;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.ResponseOfParameterRequests.panChangeParam)
}

// -------------------------------------------------------------------

// RequestForAlgorithm

// .AlgorithmCommunication.RequestForAlgorithm.Algorithm algorithmType = 1;
inline void RequestForAlgorithm::clear_algorithmtype() {
  algorithmtype_ = 0;
}
inline ::AlgorithmCommunication::RequestForAlgorithm_Algorithm RequestForAlgorithm::algorithmtype() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.RequestForAlgorithm.algorithmType)
  return static_cast< ::AlgorithmCommunication::RequestForAlgorithm_Algorithm >(algorithmtype_);
}
inline void RequestForAlgorithm::set_algorithmtype(::AlgorithmCommunication::RequestForAlgorithm_Algorithm value) {
  
  algorithmtype_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.RequestForAlgorithm.algorithmType)
}

// .AlgorithmCommunication.MotionParameters motionParam = 2;
inline bool RequestForAlgorithm::has_motionparam() const {
  return this != internal_default_instance() && motionparam_ != nullptr;
}
inline void RequestForAlgorithm::clear_motionparam() {
  if (GetArenaNoVirtual() == nullptr && motionparam_ != nullptr) {
    delete motionparam_;
  }
  motionparam_ = nullptr;
}
inline const ::AlgorithmCommunication::MotionParameters& RequestForAlgorithm::motionparam() const {
  const ::AlgorithmCommunication::MotionParameters* p = motionparam_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.RequestForAlgorithm.motionParam)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::MotionParameters*>(
      &::AlgorithmCommunication::_MotionParameters_default_instance_);
}
inline ::AlgorithmCommunication::MotionParameters* RequestForAlgorithm::release_motionparam() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.RequestForAlgorithm.motionParam)
  
  ::AlgorithmCommunication::MotionParameters* temp = motionparam_;
  motionparam_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::MotionParameters* RequestForAlgorithm::mutable_motionparam() {
  
  if (motionparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::MotionParameters>(GetArenaNoVirtual());
    motionparam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.RequestForAlgorithm.motionParam)
  return motionparam_;
}
inline void RequestForAlgorithm::set_allocated_motionparam(::AlgorithmCommunication::MotionParameters* motionparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete motionparam_;
  }
  if (motionparam) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      motionparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, motionparam, submessage_arena);
    }
    
  } else {
    
  }
  motionparam_ = motionparam;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.RequestForAlgorithm.motionParam)
}

// .AlgorithmCommunication.TrackParameters trackParam = 3;
inline bool RequestForAlgorithm::has_trackparam() const {
  return this != internal_default_instance() && trackparam_ != nullptr;
}
inline void RequestForAlgorithm::clear_trackparam() {
  if (GetArenaNoVirtual() == nullptr && trackparam_ != nullptr) {
    delete trackparam_;
  }
  trackparam_ = nullptr;
}
inline const ::AlgorithmCommunication::TrackParameters& RequestForAlgorithm::trackparam() const {
  const ::AlgorithmCommunication::TrackParameters* p = trackparam_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.RequestForAlgorithm.trackParam)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::TrackParameters*>(
      &::AlgorithmCommunication::_TrackParameters_default_instance_);
}
inline ::AlgorithmCommunication::TrackParameters* RequestForAlgorithm::release_trackparam() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.RequestForAlgorithm.trackParam)
  
  ::AlgorithmCommunication::TrackParameters* temp = trackparam_;
  trackparam_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::TrackParameters* RequestForAlgorithm::mutable_trackparam() {
  
  if (trackparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::TrackParameters>(GetArenaNoVirtual());
    trackparam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.RequestForAlgorithm.trackParam)
  return trackparam_;
}
inline void RequestForAlgorithm::set_allocated_trackparam(::AlgorithmCommunication::TrackParameters* trackparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete trackparam_;
  }
  if (trackparam) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      trackparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trackparam, submessage_arena);
    }
    
  } else {
    
  }
  trackparam_ = trackparam;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.RequestForAlgorithm.trackParam)
}

// .AlgorithmCommunication.StabilizationParameters stabilizationParam = 4;
inline bool RequestForAlgorithm::has_stabilizationparam() const {
  return this != internal_default_instance() && stabilizationparam_ != nullptr;
}
inline void RequestForAlgorithm::clear_stabilizationparam() {
  if (GetArenaNoVirtual() == nullptr && stabilizationparam_ != nullptr) {
    delete stabilizationparam_;
  }
  stabilizationparam_ = nullptr;
}
inline const ::AlgorithmCommunication::StabilizationParameters& RequestForAlgorithm::stabilizationparam() const {
  const ::AlgorithmCommunication::StabilizationParameters* p = stabilizationparam_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.RequestForAlgorithm.stabilizationParam)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::StabilizationParameters*>(
      &::AlgorithmCommunication::_StabilizationParameters_default_instance_);
}
inline ::AlgorithmCommunication::StabilizationParameters* RequestForAlgorithm::release_stabilizationparam() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.RequestForAlgorithm.stabilizationParam)
  
  ::AlgorithmCommunication::StabilizationParameters* temp = stabilizationparam_;
  stabilizationparam_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::StabilizationParameters* RequestForAlgorithm::mutable_stabilizationparam() {
  
  if (stabilizationparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::StabilizationParameters>(GetArenaNoVirtual());
    stabilizationparam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.RequestForAlgorithm.stabilizationParam)
  return stabilizationparam_;
}
inline void RequestForAlgorithm::set_allocated_stabilizationparam(::AlgorithmCommunication::StabilizationParameters* stabilizationparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete stabilizationparam_;
  }
  if (stabilizationparam) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      stabilizationparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stabilizationparam, submessage_arena);
    }
    
  } else {
    
  }
  stabilizationparam_ = stabilizationparam;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.RequestForAlgorithm.stabilizationParam)
}

// .AlgorithmCommunication.PanaromaParameters panaromaParam = 5;
inline bool RequestForAlgorithm::has_panaromaparam() const {
  return this != internal_default_instance() && panaromaparam_ != nullptr;
}
inline void RequestForAlgorithm::clear_panaromaparam() {
  if (GetArenaNoVirtual() == nullptr && panaromaparam_ != nullptr) {
    delete panaromaparam_;
  }
  panaromaparam_ = nullptr;
}
inline const ::AlgorithmCommunication::PanaromaParameters& RequestForAlgorithm::panaromaparam() const {
  const ::AlgorithmCommunication::PanaromaParameters* p = panaromaparam_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.RequestForAlgorithm.panaromaParam)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::PanaromaParameters*>(
      &::AlgorithmCommunication::_PanaromaParameters_default_instance_);
}
inline ::AlgorithmCommunication::PanaromaParameters* RequestForAlgorithm::release_panaromaparam() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.RequestForAlgorithm.panaromaParam)
  
  ::AlgorithmCommunication::PanaromaParameters* temp = panaromaparam_;
  panaromaparam_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::PanaromaParameters* RequestForAlgorithm::mutable_panaromaparam() {
  
  if (panaromaparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::PanaromaParameters>(GetArenaNoVirtual());
    panaromaparam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.RequestForAlgorithm.panaromaParam)
  return panaromaparam_;
}
inline void RequestForAlgorithm::set_allocated_panaromaparam(::AlgorithmCommunication::PanaromaParameters* panaromaparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete panaromaparam_;
  }
  if (panaromaparam) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      panaromaparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, panaromaparam, submessage_arena);
    }
    
  } else {
    
  }
  panaromaparam_ = panaromaparam;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.RequestForAlgorithm.panaromaParam)
}

// .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 6;
inline bool RequestForAlgorithm::has_facedetectionparam() const {
  return this != internal_default_instance() && facedetectionparam_ != nullptr;
}
inline void RequestForAlgorithm::clear_facedetectionparam() {
  if (GetArenaNoVirtual() == nullptr && facedetectionparam_ != nullptr) {
    delete facedetectionparam_;
  }
  facedetectionparam_ = nullptr;
}
inline const ::AlgorithmCommunication::FaceDetectionParameters& RequestForAlgorithm::facedetectionparam() const {
  const ::AlgorithmCommunication::FaceDetectionParameters* p = facedetectionparam_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.RequestForAlgorithm.faceDetectionParam)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::FaceDetectionParameters*>(
      &::AlgorithmCommunication::_FaceDetectionParameters_default_instance_);
}
inline ::AlgorithmCommunication::FaceDetectionParameters* RequestForAlgorithm::release_facedetectionparam() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.RequestForAlgorithm.faceDetectionParam)
  
  ::AlgorithmCommunication::FaceDetectionParameters* temp = facedetectionparam_;
  facedetectionparam_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::FaceDetectionParameters* RequestForAlgorithm::mutable_facedetectionparam() {
  
  if (facedetectionparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::FaceDetectionParameters>(GetArenaNoVirtual());
    facedetectionparam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.RequestForAlgorithm.faceDetectionParam)
  return facedetectionparam_;
}
inline void RequestForAlgorithm::set_allocated_facedetectionparam(::AlgorithmCommunication::FaceDetectionParameters* facedetectionparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete facedetectionparam_;
  }
  if (facedetectionparam) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      facedetectionparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, facedetectionparam, submessage_arena);
    }
    
  } else {
    
  }
  facedetectionparam_ = facedetectionparam;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.RequestForAlgorithm.faceDetectionParam)
}

// .AlgorithmCommunication.PanChangeParameters panChangeParam = 8;
inline bool RequestForAlgorithm::has_panchangeparam() const {
  return this != internal_default_instance() && panchangeparam_ != nullptr;
}
inline void RequestForAlgorithm::clear_panchangeparam() {
  if (GetArenaNoVirtual() == nullptr && panchangeparam_ != nullptr) {
    delete panchangeparam_;
  }
  panchangeparam_ = nullptr;
}
inline const ::AlgorithmCommunication::PanChangeParameters& RequestForAlgorithm::panchangeparam() const {
  const ::AlgorithmCommunication::PanChangeParameters* p = panchangeparam_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.RequestForAlgorithm.panChangeParam)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::PanChangeParameters*>(
      &::AlgorithmCommunication::_PanChangeParameters_default_instance_);
}
inline ::AlgorithmCommunication::PanChangeParameters* RequestForAlgorithm::release_panchangeparam() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.RequestForAlgorithm.panChangeParam)
  
  ::AlgorithmCommunication::PanChangeParameters* temp = panchangeparam_;
  panchangeparam_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::PanChangeParameters* RequestForAlgorithm::mutable_panchangeparam() {
  
  if (panchangeparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::PanChangeParameters>(GetArenaNoVirtual());
    panchangeparam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.RequestForAlgorithm.panChangeParam)
  return panchangeparam_;
}
inline void RequestForAlgorithm::set_allocated_panchangeparam(::AlgorithmCommunication::PanChangeParameters* panchangeparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete panchangeparam_;
  }
  if (panchangeparam) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      panchangeparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, panchangeparam, submessage_arena);
    }
    
  } else {
    
  }
  panchangeparam_ = panchangeparam;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.RequestForAlgorithm.panChangeParam)
}

// int32 channel = 7;
inline void RequestForAlgorithm::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 RequestForAlgorithm::channel() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.RequestForAlgorithm.channel)
  return channel_;
}
inline void RequestForAlgorithm::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.RequestForAlgorithm.channel)
}

// -------------------------------------------------------------------

// PanChangeParameters

// .AlgorithmCommunication.ListOfLocationInformation locationInformation = 1;
inline bool PanChangeParameters::has_locationinformation() const {
  return this != internal_default_instance() && locationinformation_ != nullptr;
}
inline void PanChangeParameters::clear_locationinformation() {
  if (GetArenaNoVirtual() == nullptr && locationinformation_ != nullptr) {
    delete locationinformation_;
  }
  locationinformation_ = nullptr;
}
inline const ::AlgorithmCommunication::ListOfLocationInformation& PanChangeParameters::locationinformation() const {
  const ::AlgorithmCommunication::ListOfLocationInformation* p = locationinformation_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.PanChangeParameters.locationInformation)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::ListOfLocationInformation*>(
      &::AlgorithmCommunication::_ListOfLocationInformation_default_instance_);
}
inline ::AlgorithmCommunication::ListOfLocationInformation* PanChangeParameters::release_locationinformation() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.PanChangeParameters.locationInformation)
  
  ::AlgorithmCommunication::ListOfLocationInformation* temp = locationinformation_;
  locationinformation_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::ListOfLocationInformation* PanChangeParameters::mutable_locationinformation() {
  
  if (locationinformation_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::ListOfLocationInformation>(GetArenaNoVirtual());
    locationinformation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.PanChangeParameters.locationInformation)
  return locationinformation_;
}
inline void PanChangeParameters::set_allocated_locationinformation(::AlgorithmCommunication::ListOfLocationInformation* locationinformation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete locationinformation_;
  }
  if (locationinformation) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      locationinformation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, locationinformation, submessage_arena);
    }
    
  } else {
    
  }
  locationinformation_ = locationinformation;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.PanChangeParameters.locationInformation)
}

// -------------------------------------------------------------------

// SystemFeature

// string key = 1;
inline void SystemFeature::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SystemFeature::key() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.SystemFeature.key)
  return key_.GetNoArena();
}
inline void SystemFeature::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.SystemFeature.key)
}
#if LANG_CXX11
inline void SystemFeature::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AlgorithmCommunication.SystemFeature.key)
}
#endif
inline void SystemFeature::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AlgorithmCommunication.SystemFeature.key)
}
inline void SystemFeature::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AlgorithmCommunication.SystemFeature.key)
}
inline ::std::string* SystemFeature::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.SystemFeature.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SystemFeature::release_key() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.SystemFeature.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SystemFeature::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.SystemFeature.key)
}

// string value = 2;
inline void SystemFeature::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SystemFeature::value() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.SystemFeature.value)
  return value_.GetNoArena();
}
inline void SystemFeature::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.SystemFeature.value)
}
#if LANG_CXX11
inline void SystemFeature::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AlgorithmCommunication.SystemFeature.value)
}
#endif
inline void SystemFeature::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AlgorithmCommunication.SystemFeature.value)
}
inline void SystemFeature::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AlgorithmCommunication.SystemFeature.value)
}
inline ::std::string* SystemFeature::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.SystemFeature.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SystemFeature::release_value() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.SystemFeature.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SystemFeature::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.SystemFeature.value)
}

// int32 device = 3;
inline void SystemFeature::clear_device() {
  device_ = 0;
}
inline ::google::protobuf::int32 SystemFeature::device() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.SystemFeature.device)
  return device_;
}
inline void SystemFeature::set_device(::google::protobuf::int32 value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.SystemFeature.device)
}

// -------------------------------------------------------------------

// SystemFeatures

// repeated .AlgorithmCommunication.SystemFeature features = 1;
inline int SystemFeatures::features_size() const {
  return features_.size();
}
inline void SystemFeatures::clear_features() {
  features_.Clear();
}
inline ::AlgorithmCommunication::SystemFeature* SystemFeatures::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.SystemFeatures.features)
  return features_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::SystemFeature >*
SystemFeatures::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:AlgorithmCommunication.SystemFeatures.features)
  return &features_;
}
inline const ::AlgorithmCommunication::SystemFeature& SystemFeatures::features(int index) const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.SystemFeatures.features)
  return features_.Get(index);
}
inline ::AlgorithmCommunication::SystemFeature* SystemFeatures::add_features() {
  // @@protoc_insertion_point(field_add:AlgorithmCommunication.SystemFeatures.features)
  return features_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::SystemFeature >&
SystemFeatures::features() const {
  // @@protoc_insertion_point(field_list:AlgorithmCommunication.SystemFeatures.features)
  return features_;
}

// -------------------------------------------------------------------

// MotionParameters

// .AlgorithmCommunication.MotionParameters.Settings settingChoice = 1;
inline void MotionParameters::clear_settingchoice() {
  settingchoice_ = 0;
}
inline ::AlgorithmCommunication::MotionParameters_Settings MotionParameters::settingchoice() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.MotionParameters.settingChoice)
  return static_cast< ::AlgorithmCommunication::MotionParameters_Settings >(settingchoice_);
}
inline void MotionParameters::set_settingchoice(::AlgorithmCommunication::MotionParameters_Settings value) {
  
  settingchoice_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.MotionParameters.settingChoice)
}

// int32 sensitivity = 2;
inline void MotionParameters::clear_sensitivity() {
  sensitivity_ = 0;
}
inline ::google::protobuf::int32 MotionParameters::sensitivity() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.MotionParameters.sensitivity)
  return sensitivity_;
}
inline void MotionParameters::set_sensitivity(::google::protobuf::int32 value) {
  
  sensitivity_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.MotionParameters.sensitivity)
}

// .AlgorithmCommunication.TRoi ROIlist = 3;
inline bool MotionParameters::has_roilist() const {
  return this != internal_default_instance() && roilist_ != nullptr;
}
inline void MotionParameters::clear_roilist() {
  if (GetArenaNoVirtual() == nullptr && roilist_ != nullptr) {
    delete roilist_;
  }
  roilist_ = nullptr;
}
inline const ::AlgorithmCommunication::TRoi& MotionParameters::roilist() const {
  const ::AlgorithmCommunication::TRoi* p = roilist_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.MotionParameters.ROIlist)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::TRoi*>(
      &::AlgorithmCommunication::_TRoi_default_instance_);
}
inline ::AlgorithmCommunication::TRoi* MotionParameters::release_roilist() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.MotionParameters.ROIlist)
  
  ::AlgorithmCommunication::TRoi* temp = roilist_;
  roilist_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::TRoi* MotionParameters::mutable_roilist() {
  
  if (roilist_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::TRoi>(GetArenaNoVirtual());
    roilist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.MotionParameters.ROIlist)
  return roilist_;
}
inline void MotionParameters::set_allocated_roilist(::AlgorithmCommunication::TRoi* roilist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete roilist_;
  }
  if (roilist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      roilist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, roilist, submessage_arena);
    }
    
  } else {
    
  }
  roilist_ = roilist;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.MotionParameters.ROIlist)
}

// -------------------------------------------------------------------

// TRoi

// repeated .AlgorithmCommunication.TPolygon polygon = 1;
inline int TRoi::polygon_size() const {
  return polygon_.size();
}
inline void TRoi::clear_polygon() {
  polygon_.Clear();
}
inline ::AlgorithmCommunication::TPolygon* TRoi::mutable_polygon(int index) {
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.TRoi.polygon)
  return polygon_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::TPolygon >*
TRoi::mutable_polygon() {
  // @@protoc_insertion_point(field_mutable_list:AlgorithmCommunication.TRoi.polygon)
  return &polygon_;
}
inline const ::AlgorithmCommunication::TPolygon& TRoi::polygon(int index) const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TRoi.polygon)
  return polygon_.Get(index);
}
inline ::AlgorithmCommunication::TPolygon* TRoi::add_polygon() {
  // @@protoc_insertion_point(field_add:AlgorithmCommunication.TRoi.polygon)
  return polygon_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::TPolygon >&
TRoi::polygon() const {
  // @@protoc_insertion_point(field_list:AlgorithmCommunication.TRoi.polygon)
  return polygon_;
}

// .AlgorithmCommunication.TRectangle rect1 = 2;
inline bool TRoi::has_rect1() const {
  return this != internal_default_instance() && rect1_ != nullptr;
}
inline void TRoi::clear_rect1() {
  if (GetArenaNoVirtual() == nullptr && rect1_ != nullptr) {
    delete rect1_;
  }
  rect1_ = nullptr;
}
inline const ::AlgorithmCommunication::TRectangle& TRoi::rect1() const {
  const ::AlgorithmCommunication::TRectangle* p = rect1_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TRoi.rect1)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::TRectangle*>(
      &::AlgorithmCommunication::_TRectangle_default_instance_);
}
inline ::AlgorithmCommunication::TRectangle* TRoi::release_rect1() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.TRoi.rect1)
  
  ::AlgorithmCommunication::TRectangle* temp = rect1_;
  rect1_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::TRectangle* TRoi::mutable_rect1() {
  
  if (rect1_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::TRectangle>(GetArenaNoVirtual());
    rect1_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.TRoi.rect1)
  return rect1_;
}
inline void TRoi::set_allocated_rect1(::AlgorithmCommunication::TRectangle* rect1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete rect1_;
  }
  if (rect1) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rect1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rect1, submessage_arena);
    }
    
  } else {
    
  }
  rect1_ = rect1;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.TRoi.rect1)
}

// .AlgorithmCommunication.TRectangle rect2 = 3;
inline bool TRoi::has_rect2() const {
  return this != internal_default_instance() && rect2_ != nullptr;
}
inline void TRoi::clear_rect2() {
  if (GetArenaNoVirtual() == nullptr && rect2_ != nullptr) {
    delete rect2_;
  }
  rect2_ = nullptr;
}
inline const ::AlgorithmCommunication::TRectangle& TRoi::rect2() const {
  const ::AlgorithmCommunication::TRectangle* p = rect2_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TRoi.rect2)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::TRectangle*>(
      &::AlgorithmCommunication::_TRectangle_default_instance_);
}
inline ::AlgorithmCommunication::TRectangle* TRoi::release_rect2() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.TRoi.rect2)
  
  ::AlgorithmCommunication::TRectangle* temp = rect2_;
  rect2_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::TRectangle* TRoi::mutable_rect2() {
  
  if (rect2_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::TRectangle>(GetArenaNoVirtual());
    rect2_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.TRoi.rect2)
  return rect2_;
}
inline void TRoi::set_allocated_rect2(::AlgorithmCommunication::TRectangle* rect2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete rect2_;
  }
  if (rect2) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rect2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rect2, submessage_arena);
    }
    
  } else {
    
  }
  rect2_ = rect2;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.TRoi.rect2)
}

// -------------------------------------------------------------------

// TPoint

// float x = 1;
inline void TPoint::clear_x() {
  x_ = 0;
}
inline float TPoint::x() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TPoint.x)
  return x_;
}
inline void TPoint::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TPoint.x)
}

// float y = 2;
inline void TPoint::clear_y() {
  y_ = 0;
}
inline float TPoint::y() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TPoint.y)
  return y_;
}
inline void TPoint::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TPoint.y)
}

// -------------------------------------------------------------------

// TPolygon

// repeated .AlgorithmCommunication.TPoint points = 1;
inline int TPolygon::points_size() const {
  return points_.size();
}
inline void TPolygon::clear_points() {
  points_.Clear();
}
inline ::AlgorithmCommunication::TPoint* TPolygon::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.TPolygon.points)
  return points_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::TPoint >*
TPolygon::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:AlgorithmCommunication.TPolygon.points)
  return &points_;
}
inline const ::AlgorithmCommunication::TPoint& TPolygon::points(int index) const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TPolygon.points)
  return points_.Get(index);
}
inline ::AlgorithmCommunication::TPoint* TPolygon::add_points() {
  // @@protoc_insertion_point(field_add:AlgorithmCommunication.TPolygon.points)
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AlgorithmCommunication::TPoint >&
TPolygon::points() const {
  // @@protoc_insertion_point(field_list:AlgorithmCommunication.TPolygon.points)
  return points_;
}

// bool is_active = 2;
inline void TPolygon::clear_is_active() {
  is_active_ = false;
}
inline bool TPolygon::is_active() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TPolygon.is_active)
  return is_active_;
}
inline void TPolygon::set_is_active(bool value) {
  
  is_active_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TPolygon.is_active)
}

// -------------------------------------------------------------------

// TRectangle

// .AlgorithmCommunication.TPoint upperLeft = 1;
inline bool TRectangle::has_upperleft() const {
  return this != internal_default_instance() && upperleft_ != nullptr;
}
inline void TRectangle::clear_upperleft() {
  if (GetArenaNoVirtual() == nullptr && upperleft_ != nullptr) {
    delete upperleft_;
  }
  upperleft_ = nullptr;
}
inline const ::AlgorithmCommunication::TPoint& TRectangle::upperleft() const {
  const ::AlgorithmCommunication::TPoint* p = upperleft_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TRectangle.upperLeft)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::TPoint*>(
      &::AlgorithmCommunication::_TPoint_default_instance_);
}
inline ::AlgorithmCommunication::TPoint* TRectangle::release_upperleft() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.TRectangle.upperLeft)
  
  ::AlgorithmCommunication::TPoint* temp = upperleft_;
  upperleft_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::TPoint* TRectangle::mutable_upperleft() {
  
  if (upperleft_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::TPoint>(GetArenaNoVirtual());
    upperleft_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.TRectangle.upperLeft)
  return upperleft_;
}
inline void TRectangle::set_allocated_upperleft(::AlgorithmCommunication::TPoint* upperleft) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete upperleft_;
  }
  if (upperleft) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      upperleft = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, upperleft, submessage_arena);
    }
    
  } else {
    
  }
  upperleft_ = upperleft;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.TRectangle.upperLeft)
}

// .AlgorithmCommunication.TPoint bottomRight = 2;
inline bool TRectangle::has_bottomright() const {
  return this != internal_default_instance() && bottomright_ != nullptr;
}
inline void TRectangle::clear_bottomright() {
  if (GetArenaNoVirtual() == nullptr && bottomright_ != nullptr) {
    delete bottomright_;
  }
  bottomright_ = nullptr;
}
inline const ::AlgorithmCommunication::TPoint& TRectangle::bottomright() const {
  const ::AlgorithmCommunication::TPoint* p = bottomright_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TRectangle.bottomRight)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::TPoint*>(
      &::AlgorithmCommunication::_TPoint_default_instance_);
}
inline ::AlgorithmCommunication::TPoint* TRectangle::release_bottomright() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.TRectangle.bottomRight)
  
  ::AlgorithmCommunication::TPoint* temp = bottomright_;
  bottomright_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::TPoint* TRectangle::mutable_bottomright() {
  
  if (bottomright_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::TPoint>(GetArenaNoVirtual());
    bottomright_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.TRectangle.bottomRight)
  return bottomright_;
}
inline void TRectangle::set_allocated_bottomright(::AlgorithmCommunication::TPoint* bottomright) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bottomright_;
  }
  if (bottomright) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bottomright = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bottomright, submessage_arena);
    }
    
  } else {
    
  }
  bottomright_ = bottomright;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.TRectangle.bottomRight)
}

// -------------------------------------------------------------------

// TrackParameters

// .AlgorithmCommunication.TrackParameters.TrackType trackType = 1;
inline void TrackParameters::clear_tracktype() {
  tracktype_ = 0;
}
inline ::AlgorithmCommunication::TrackParameters_TrackType TrackParameters::tracktype() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TrackParameters.trackType)
  return static_cast< ::AlgorithmCommunication::TrackParameters_TrackType >(tracktype_);
}
inline void TrackParameters::set_tracktype(::AlgorithmCommunication::TrackParameters_TrackType value) {
  
  tracktype_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TrackParameters.trackType)
}

// .AlgorithmCommunication.TrackParameters.Mode mode = 2;
inline void TrackParameters::clear_mode() {
  mode_ = 0;
}
inline ::AlgorithmCommunication::TrackParameters_Mode TrackParameters::mode() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TrackParameters.mode)
  return static_cast< ::AlgorithmCommunication::TrackParameters_Mode >(mode_);
}
inline void TrackParameters::set_mode(::AlgorithmCommunication::TrackParameters_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TrackParameters.mode)
}

// float trackScore = 3;
inline void TrackParameters::clear_trackscore() {
  trackscore_ = 0;
}
inline float TrackParameters::trackscore() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TrackParameters.trackScore)
  return trackscore_;
}
inline void TrackParameters::set_trackscore(float value) {
  
  trackscore_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TrackParameters.trackScore)
}

// int32 trackInterval = 4;
inline void TrackParameters::clear_trackinterval() {
  trackinterval_ = 0;
}
inline ::google::protobuf::int32 TrackParameters::trackinterval() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TrackParameters.trackInterval)
  return trackinterval_;
}
inline void TrackParameters::set_trackinterval(::google::protobuf::int32 value) {
  
  trackinterval_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TrackParameters.trackInterval)
}

// .AlgorithmCommunication.TrackObject target = 5;
inline bool TrackParameters::has_target() const {
  return this != internal_default_instance() && target_ != nullptr;
}
inline void TrackParameters::clear_target() {
  if (GetArenaNoVirtual() == nullptr && target_ != nullptr) {
    delete target_;
  }
  target_ = nullptr;
}
inline const ::AlgorithmCommunication::TrackObject& TrackParameters::target() const {
  const ::AlgorithmCommunication::TrackObject* p = target_;
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TrackParameters.target)
  return p != nullptr ? *p : *reinterpret_cast<const ::AlgorithmCommunication::TrackObject*>(
      &::AlgorithmCommunication::_TrackObject_default_instance_);
}
inline ::AlgorithmCommunication::TrackObject* TrackParameters::release_target() {
  // @@protoc_insertion_point(field_release:AlgorithmCommunication.TrackParameters.target)
  
  ::AlgorithmCommunication::TrackObject* temp = target_;
  target_ = nullptr;
  return temp;
}
inline ::AlgorithmCommunication::TrackObject* TrackParameters::mutable_target() {
  
  if (target_ == nullptr) {
    auto* p = CreateMaybeMessage<::AlgorithmCommunication::TrackObject>(GetArenaNoVirtual());
    target_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AlgorithmCommunication.TrackParameters.target)
  return target_;
}
inline void TrackParameters::set_allocated_target(::AlgorithmCommunication::TrackObject* target) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete target_;
  }
  if (target) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    
  } else {
    
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:AlgorithmCommunication.TrackParameters.target)
}

// -------------------------------------------------------------------

// TrackObject

// float point_x = 1;
inline void TrackObject::clear_point_x() {
  point_x_ = 0;
}
inline float TrackObject::point_x() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TrackObject.point_x)
  return point_x_;
}
inline void TrackObject::set_point_x(float value) {
  
  point_x_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TrackObject.point_x)
}

// float point_y = 2;
inline void TrackObject::clear_point_y() {
  point_y_ = 0;
}
inline float TrackObject::point_y() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TrackObject.point_y)
  return point_y_;
}
inline void TrackObject::set_point_y(float value) {
  
  point_y_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TrackObject.point_y)
}

// float width = 3;
inline void TrackObject::clear_width() {
  width_ = 0;
}
inline float TrackObject::width() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TrackObject.width)
  return width_;
}
inline void TrackObject::set_width(float value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TrackObject.width)
}

// float height = 4;
inline void TrackObject::clear_height() {
  height_ = 0;
}
inline float TrackObject::height() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.TrackObject.height)
  return height_;
}
inline void TrackObject::set_height(float value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.TrackObject.height)
}

// -------------------------------------------------------------------

// StabilizationParameters

// int32 privacy = 1;
inline void StabilizationParameters::clear_privacy() {
  privacy_ = 0;
}
inline ::google::protobuf::int32 StabilizationParameters::privacy() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.StabilizationParameters.privacy)
  return privacy_;
}
inline void StabilizationParameters::set_privacy(::google::protobuf::int32 value) {
  
  privacy_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.StabilizationParameters.privacy)
}

// int32 sensitivity = 2;
inline void StabilizationParameters::clear_sensitivity() {
  sensitivity_ = 0;
}
inline ::google::protobuf::int32 StabilizationParameters::sensitivity() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.StabilizationParameters.sensitivity)
  return sensitivity_;
}
inline void StabilizationParameters::set_sensitivity(::google::protobuf::int32 value) {
  
  sensitivity_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.StabilizationParameters.sensitivity)
}

// int32 stabilization = 3;
inline void StabilizationParameters::clear_stabilization() {
  stabilization_ = 0;
}
inline ::google::protobuf::int32 StabilizationParameters::stabilization() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.StabilizationParameters.stabilization)
  return stabilization_;
}
inline void StabilizationParameters::set_stabilization(::google::protobuf::int32 value) {
  
  stabilization_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.StabilizationParameters.stabilization)
}

// -------------------------------------------------------------------

// PanaromaParameters

// int32 dummy = 1;
inline void PanaromaParameters::clear_dummy() {
  dummy_ = 0;
}
inline ::google::protobuf::int32 PanaromaParameters::dummy() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.PanaromaParameters.dummy)
  return dummy_;
}
inline void PanaromaParameters::set_dummy(::google::protobuf::int32 value) {
  
  dummy_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.PanaromaParameters.dummy)
}

// -------------------------------------------------------------------

// FaceDetectionParameters

// int32 dummy = 1;
inline void FaceDetectionParameters::clear_dummy() {
  dummy_ = 0;
}
inline ::google::protobuf::int32 FaceDetectionParameters::dummy() const {
  // @@protoc_insertion_point(field_get:AlgorithmCommunication.FaceDetectionParameters.dummy)
  return dummy_;
}
inline void FaceDetectionParameters::set_dummy(::google::protobuf::int32 value) {
  
  dummy_ = value;
  // @@protoc_insertion_point(field_set:AlgorithmCommunication.FaceDetectionParameters.dummy)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace AlgorithmCommunication

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::AlgorithmCommunication::Node_NodeType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AlgorithmCommunication::Node_NodeType>() {
  return ::AlgorithmCommunication::Node_NodeType_descriptor();
}
template <> struct is_proto_enum< ::AlgorithmCommunication::TargetStruct_TargetClass> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AlgorithmCommunication::TargetStruct_TargetClass>() {
  return ::AlgorithmCommunication::TargetStruct_TargetClass_descriptor();
}
template <> struct is_proto_enum< ::AlgorithmCommunication::CITInfo_Info> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AlgorithmCommunication::CITInfo_Info>() {
  return ::AlgorithmCommunication::CITInfo_Info_descriptor();
}
template <> struct is_proto_enum< ::AlgorithmCommunication::ResponseOfRequests_Response> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AlgorithmCommunication::ResponseOfRequests_Response>() {
  return ::AlgorithmCommunication::ResponseOfRequests_Response_descriptor();
}
template <> struct is_proto_enum< ::AlgorithmCommunication::ResponseOfParameterRequests_Response> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AlgorithmCommunication::ResponseOfParameterRequests_Response>() {
  return ::AlgorithmCommunication::ResponseOfParameterRequests_Response_descriptor();
}
template <> struct is_proto_enum< ::AlgorithmCommunication::ResponseOfParameterRequests_Algorithm> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AlgorithmCommunication::ResponseOfParameterRequests_Algorithm>() {
  return ::AlgorithmCommunication::ResponseOfParameterRequests_Algorithm_descriptor();
}
template <> struct is_proto_enum< ::AlgorithmCommunication::RequestForAlgorithm_Algorithm> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AlgorithmCommunication::RequestForAlgorithm_Algorithm>() {
  return ::AlgorithmCommunication::RequestForAlgorithm_Algorithm_descriptor();
}
template <> struct is_proto_enum< ::AlgorithmCommunication::MotionParameters_Settings> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AlgorithmCommunication::MotionParameters_Settings>() {
  return ::AlgorithmCommunication::MotionParameters_Settings_descriptor();
}
template <> struct is_proto_enum< ::AlgorithmCommunication::TrackParameters_TrackType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AlgorithmCommunication::TrackParameters_TrackType>() {
  return ::AlgorithmCommunication::TrackParameters_TrackType_descriptor();
}
template <> struct is_proto_enum< ::AlgorithmCommunication::TrackParameters_Mode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AlgorithmCommunication::TrackParameters_Mode>() {
  return ::AlgorithmCommunication::TrackParameters_Mode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_AlgorithmCommunication_2eproto
