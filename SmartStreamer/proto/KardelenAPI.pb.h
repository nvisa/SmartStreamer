// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KardelenAPI.proto

#ifndef PROTOBUF_INCLUDED_KardelenAPI_2eproto
#define PROTOBUF_INCLUDED_KardelenAPI_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_KardelenAPI_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_KardelenAPI_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[35]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_KardelenAPI_2eproto();
namespace kaapi {
class AbsoluteMoveParameters;
class AbsoluteMoveParametersDefaultTypeInternal;
extern AbsoluteMoveParametersDefaultTypeInternal _AbsoluteMoveParameters_default_instance_;
class AbsoluteMoveResult;
class AbsoluteMoveResultDefaultTypeInternal;
extern AbsoluteMoveResultDefaultTypeInternal _AbsoluteMoveResult_default_instance_;
class ApiVersion;
class ApiVersionDefaultTypeInternal;
extern ApiVersionDefaultTypeInternal _ApiVersion_default_instance_;
class Boresight;
class BoresightDefaultTypeInternal;
extern BoresightDefaultTypeInternal _Boresight_default_instance_;
class Calibration;
class CalibrationDefaultTypeInternal;
extern CalibrationDefaultTypeInternal _Calibration_default_instance_;
class CalibrationRequest;
class CalibrationRequestDefaultTypeInternal;
extern CalibrationRequestDefaultTypeInternal _CalibrationRequest_default_instance_;
class CameraStatus;
class CameraStatusDefaultTypeInternal;
extern CameraStatusDefaultTypeInternal _CameraStatus_default_instance_;
class ClickParameter;
class ClickParameterDefaultTypeInternal;
extern ClickParameterDefaultTypeInternal _ClickParameter_default_instance_;
class CommRead;
class CommReadDefaultTypeInternal;
extern CommReadDefaultTypeInternal _CommRead_default_instance_;
class CommWrite;
class CommWriteDefaultTypeInternal;
extern CommWriteDefaultTypeInternal _CommWrite_default_instance_;
class GetCameraStatusParameters;
class GetCameraStatusParametersDefaultTypeInternal;
extern GetCameraStatusParametersDefaultTypeInternal _GetCameraStatusParameters_default_instance_;
class GetEnumParameterRequest;
class GetEnumParameterRequestDefaultTypeInternal;
extern GetEnumParameterRequestDefaultTypeInternal _GetEnumParameterRequest_default_instance_;
class GetEnumParameterResponse;
class GetEnumParameterResponseDefaultTypeInternal;
extern GetEnumParameterResponseDefaultTypeInternal _GetEnumParameterResponse_default_instance_;
class GetNumericParameterRequest;
class GetNumericParameterRequestDefaultTypeInternal;
extern GetNumericParameterRequestDefaultTypeInternal _GetNumericParameterRequest_default_instance_;
class GetNumericParameterResponse;
class GetNumericParameterResponseDefaultTypeInternal;
extern GetNumericParameterResponseDefaultTypeInternal _GetNumericParameterResponse_default_instance_;
class ListOfLocationInformation;
class ListOfLocationInformationDefaultTypeInternal;
extern ListOfLocationInformationDefaultTypeInternal _ListOfLocationInformation_default_instance_;
class LocationInformation;
class LocationInformationDefaultTypeInternal;
extern LocationInformationDefaultTypeInternal _LocationInformation_default_instance_;
class MotionROIRequest;
class MotionROIRequestDefaultTypeInternal;
extern MotionROIRequestDefaultTypeInternal _MotionROIRequest_default_instance_;
class NumericParameter;
class NumericParameterDefaultTypeInternal;
extern NumericParameterDefaultTypeInternal _NumericParameter_default_instance_;
class Point;
class PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
class Polygon;
class PolygonDefaultTypeInternal;
extern PolygonDefaultTypeInternal _Polygon_default_instance_;
class PosInfo;
class PosInfoDefaultTypeInternal;
extern PosInfoDefaultTypeInternal _PosInfo_default_instance_;
class ROI;
class ROIDefaultTypeInternal;
extern ROIDefaultTypeInternal _ROI_default_instance_;
class Rectangle;
class RectangleDefaultTypeInternal;
extern RectangleDefaultTypeInternal _Rectangle_default_instance_;
class RelativeMoveParameters;
class RelativeMoveParametersDefaultTypeInternal;
extern RelativeMoveParametersDefaultTypeInternal _RelativeMoveParameters_default_instance_;
class RelativeMoveResult;
class RelativeMoveResultDefaultTypeInternal;
extern RelativeMoveResultDefaultTypeInternal _RelativeMoveResult_default_instance_;
class SetCameraRequest;
class SetCameraRequestDefaultTypeInternal;
extern SetCameraRequestDefaultTypeInternal _SetCameraRequest_default_instance_;
class SetCameraResponse;
class SetCameraResponseDefaultTypeInternal;
extern SetCameraResponseDefaultTypeInternal _SetCameraResponse_default_instance_;
class SetEnumCommandRequest;
class SetEnumCommandRequestDefaultTypeInternal;
extern SetEnumCommandRequestDefaultTypeInternal _SetEnumCommandRequest_default_instance_;
class SetEnumCommandResponse;
class SetEnumCommandResponseDefaultTypeInternal;
extern SetEnumCommandResponseDefaultTypeInternal _SetEnumCommandResponse_default_instance_;
class SetEnumParameterRequest;
class SetEnumParameterRequestDefaultTypeInternal;
extern SetEnumParameterRequestDefaultTypeInternal _SetEnumParameterRequest_default_instance_;
class SetEnumParameterResponse;
class SetEnumParameterResponseDefaultTypeInternal;
extern SetEnumParameterResponseDefaultTypeInternal _SetEnumParameterResponse_default_instance_;
class SetNumericParameterRequest;
class SetNumericParameterRequestDefaultTypeInternal;
extern SetNumericParameterRequestDefaultTypeInternal _SetNumericParameterRequest_default_instance_;
class SetNumericParameterResponse;
class SetNumericParameterResponseDefaultTypeInternal;
extern SetNumericParameterResponseDefaultTypeInternal _SetNumericParameterResponse_default_instance_;
class UpdateCameraStatusParameters;
class UpdateCameraStatusParametersDefaultTypeInternal;
extern UpdateCameraStatusParametersDefaultTypeInternal _UpdateCameraStatusParameters_default_instance_;
}  // namespace kaapi
namespace google {
namespace protobuf {
template<> ::kaapi::AbsoluteMoveParameters* Arena::CreateMaybeMessage<::kaapi::AbsoluteMoveParameters>(Arena*);
template<> ::kaapi::AbsoluteMoveResult* Arena::CreateMaybeMessage<::kaapi::AbsoluteMoveResult>(Arena*);
template<> ::kaapi::ApiVersion* Arena::CreateMaybeMessage<::kaapi::ApiVersion>(Arena*);
template<> ::kaapi::Boresight* Arena::CreateMaybeMessage<::kaapi::Boresight>(Arena*);
template<> ::kaapi::Calibration* Arena::CreateMaybeMessage<::kaapi::Calibration>(Arena*);
template<> ::kaapi::CalibrationRequest* Arena::CreateMaybeMessage<::kaapi::CalibrationRequest>(Arena*);
template<> ::kaapi::CameraStatus* Arena::CreateMaybeMessage<::kaapi::CameraStatus>(Arena*);
template<> ::kaapi::ClickParameter* Arena::CreateMaybeMessage<::kaapi::ClickParameter>(Arena*);
template<> ::kaapi::CommRead* Arena::CreateMaybeMessage<::kaapi::CommRead>(Arena*);
template<> ::kaapi::CommWrite* Arena::CreateMaybeMessage<::kaapi::CommWrite>(Arena*);
template<> ::kaapi::GetCameraStatusParameters* Arena::CreateMaybeMessage<::kaapi::GetCameraStatusParameters>(Arena*);
template<> ::kaapi::GetEnumParameterRequest* Arena::CreateMaybeMessage<::kaapi::GetEnumParameterRequest>(Arena*);
template<> ::kaapi::GetEnumParameterResponse* Arena::CreateMaybeMessage<::kaapi::GetEnumParameterResponse>(Arena*);
template<> ::kaapi::GetNumericParameterRequest* Arena::CreateMaybeMessage<::kaapi::GetNumericParameterRequest>(Arena*);
template<> ::kaapi::GetNumericParameterResponse* Arena::CreateMaybeMessage<::kaapi::GetNumericParameterResponse>(Arena*);
template<> ::kaapi::ListOfLocationInformation* Arena::CreateMaybeMessage<::kaapi::ListOfLocationInformation>(Arena*);
template<> ::kaapi::LocationInformation* Arena::CreateMaybeMessage<::kaapi::LocationInformation>(Arena*);
template<> ::kaapi::MotionROIRequest* Arena::CreateMaybeMessage<::kaapi::MotionROIRequest>(Arena*);
template<> ::kaapi::NumericParameter* Arena::CreateMaybeMessage<::kaapi::NumericParameter>(Arena*);
template<> ::kaapi::Point* Arena::CreateMaybeMessage<::kaapi::Point>(Arena*);
template<> ::kaapi::Polygon* Arena::CreateMaybeMessage<::kaapi::Polygon>(Arena*);
template<> ::kaapi::PosInfo* Arena::CreateMaybeMessage<::kaapi::PosInfo>(Arena*);
template<> ::kaapi::ROI* Arena::CreateMaybeMessage<::kaapi::ROI>(Arena*);
template<> ::kaapi::Rectangle* Arena::CreateMaybeMessage<::kaapi::Rectangle>(Arena*);
template<> ::kaapi::RelativeMoveParameters* Arena::CreateMaybeMessage<::kaapi::RelativeMoveParameters>(Arena*);
template<> ::kaapi::RelativeMoveResult* Arena::CreateMaybeMessage<::kaapi::RelativeMoveResult>(Arena*);
template<> ::kaapi::SetCameraRequest* Arena::CreateMaybeMessage<::kaapi::SetCameraRequest>(Arena*);
template<> ::kaapi::SetCameraResponse* Arena::CreateMaybeMessage<::kaapi::SetCameraResponse>(Arena*);
template<> ::kaapi::SetEnumCommandRequest* Arena::CreateMaybeMessage<::kaapi::SetEnumCommandRequest>(Arena*);
template<> ::kaapi::SetEnumCommandResponse* Arena::CreateMaybeMessage<::kaapi::SetEnumCommandResponse>(Arena*);
template<> ::kaapi::SetEnumParameterRequest* Arena::CreateMaybeMessage<::kaapi::SetEnumParameterRequest>(Arena*);
template<> ::kaapi::SetEnumParameterResponse* Arena::CreateMaybeMessage<::kaapi::SetEnumParameterResponse>(Arena*);
template<> ::kaapi::SetNumericParameterRequest* Arena::CreateMaybeMessage<::kaapi::SetNumericParameterRequest>(Arena*);
template<> ::kaapi::SetNumericParameterResponse* Arena::CreateMaybeMessage<::kaapi::SetNumericParameterResponse>(Arena*);
template<> ::kaapi::UpdateCameraStatusParameters* Arena::CreateMaybeMessage<::kaapi::UpdateCameraStatusParameters>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace kaapi {

enum CommWrite_Action {
  CommWrite_Action_NONE = 0,
  CommWrite_Action_MOVE_ABS = 1,
  CommWrite_Action_MOVE_REL = 2,
  CommWrite_Action_UPDATE = 3,
  CommWrite_Action_SET_CAMERA = 4,
  CommWrite_Action_CommWrite_Action_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  CommWrite_Action_CommWrite_Action_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool CommWrite_Action_IsValid(int value);
const CommWrite_Action CommWrite_Action_Action_MIN = CommWrite_Action_NONE;
const CommWrite_Action CommWrite_Action_Action_MAX = CommWrite_Action_SET_CAMERA;
const int CommWrite_Action_Action_ARRAYSIZE = CommWrite_Action_Action_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommWrite_Action_descriptor();
inline const ::std::string& CommWrite_Action_Name(CommWrite_Action value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommWrite_Action_descriptor(), value);
}
inline bool CommWrite_Action_Parse(
    const ::std::string& name, CommWrite_Action* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommWrite_Action>(
    CommWrite_Action_descriptor(), name, value);
}
enum AbsoluteMoveResult_Completion {
  AbsoluteMoveResult_Completion_COMPLETED = 0,
  AbsoluteMoveResult_Completion_INPROGRESS = 1,
  AbsoluteMoveResult_Completion_AbsoluteMoveResult_Completion_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  AbsoluteMoveResult_Completion_AbsoluteMoveResult_Completion_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool AbsoluteMoveResult_Completion_IsValid(int value);
const AbsoluteMoveResult_Completion AbsoluteMoveResult_Completion_Completion_MIN = AbsoluteMoveResult_Completion_COMPLETED;
const AbsoluteMoveResult_Completion AbsoluteMoveResult_Completion_Completion_MAX = AbsoluteMoveResult_Completion_INPROGRESS;
const int AbsoluteMoveResult_Completion_Completion_ARRAYSIZE = AbsoluteMoveResult_Completion_Completion_MAX + 1;

const ::google::protobuf::EnumDescriptor* AbsoluteMoveResult_Completion_descriptor();
inline const ::std::string& AbsoluteMoveResult_Completion_Name(AbsoluteMoveResult_Completion value) {
  return ::google::protobuf::internal::NameOfEnum(
    AbsoluteMoveResult_Completion_descriptor(), value);
}
inline bool AbsoluteMoveResult_Completion_Parse(
    const ::std::string& name, AbsoluteMoveResult_Completion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AbsoluteMoveResult_Completion>(
    AbsoluteMoveResult_Completion_descriptor(), name, value);
}
// ===================================================================

class LocationInformation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.LocationInformation) */ {
 public:
  LocationInformation();
  virtual ~LocationInformation();

  LocationInformation(const LocationInformation& from);

  inline LocationInformation& operator=(const LocationInformation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocationInformation(LocationInformation&& from) noexcept
    : LocationInformation() {
    *this = ::std::move(from);
  }

  inline LocationInformation& operator=(LocationInformation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LocationInformation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocationInformation* internal_default_instance() {
    return reinterpret_cast<const LocationInformation*>(
               &_LocationInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LocationInformation* other);
  friend void swap(LocationInformation& a, LocationInformation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocationInformation* New() const final {
    return CreateMaybeMessage<LocationInformation>(nullptr);
  }

  LocationInformation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocationInformation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocationInformation& from);
  void MergeFrom(const LocationInformation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocationInformation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float pan = 1;
  void clear_pan();
  static const int kPanFieldNumber = 1;
  float pan() const;
  void set_pan(float value);

  // float tilt = 2;
  void clear_tilt();
  static const int kTiltFieldNumber = 2;
  float tilt() const;
  void set_tilt(float value);

  // float zoom = 3;
  void clear_zoom();
  static const int kZoomFieldNumber = 3;
  float zoom() const;
  void set_zoom(float value);

  // @@protoc_insertion_point(class_scope:kaapi.LocationInformation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float pan_;
  float tilt_;
  float zoom_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class ListOfLocationInformation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.ListOfLocationInformation) */ {
 public:
  ListOfLocationInformation();
  virtual ~ListOfLocationInformation();

  ListOfLocationInformation(const ListOfLocationInformation& from);

  inline ListOfLocationInformation& operator=(const ListOfLocationInformation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListOfLocationInformation(ListOfLocationInformation&& from) noexcept
    : ListOfLocationInformation() {
    *this = ::std::move(from);
  }

  inline ListOfLocationInformation& operator=(ListOfLocationInformation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListOfLocationInformation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListOfLocationInformation* internal_default_instance() {
    return reinterpret_cast<const ListOfLocationInformation*>(
               &_ListOfLocationInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ListOfLocationInformation* other);
  friend void swap(ListOfLocationInformation& a, ListOfLocationInformation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListOfLocationInformation* New() const final {
    return CreateMaybeMessage<ListOfLocationInformation>(nullptr);
  }

  ListOfLocationInformation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListOfLocationInformation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListOfLocationInformation& from);
  void MergeFrom(const ListOfLocationInformation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListOfLocationInformation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .kaapi.LocationInformation locationInformation = 1;
  int locationinformation_size() const;
  void clear_locationinformation();
  static const int kLocationInformationFieldNumber = 1;
  ::kaapi::LocationInformation* mutable_locationinformation(int index);
  ::google::protobuf::RepeatedPtrField< ::kaapi::LocationInformation >*
      mutable_locationinformation();
  const ::kaapi::LocationInformation& locationinformation(int index) const;
  ::kaapi::LocationInformation* add_locationinformation();
  const ::google::protobuf::RepeatedPtrField< ::kaapi::LocationInformation >&
      locationinformation() const;

  // int64 intervalForCirculation = 2;
  void clear_intervalforcirculation();
  static const int kIntervalForCirculationFieldNumber = 2;
  ::google::protobuf::int64 intervalforcirculation() const;
  void set_intervalforcirculation(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:kaapi.ListOfLocationInformation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::kaapi::LocationInformation > locationinformation_;
  ::google::protobuf::int64 intervalforcirculation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class CalibrationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.CalibrationRequest) */ {
 public:
  CalibrationRequest();
  virtual ~CalibrationRequest();

  CalibrationRequest(const CalibrationRequest& from);

  inline CalibrationRequest& operator=(const CalibrationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalibrationRequest(CalibrationRequest&& from) noexcept
    : CalibrationRequest() {
    *this = ::std::move(from);
  }

  inline CalibrationRequest& operator=(CalibrationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CalibrationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalibrationRequest* internal_default_instance() {
    return reinterpret_cast<const CalibrationRequest*>(
               &_CalibrationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CalibrationRequest* other);
  friend void swap(CalibrationRequest& a, CalibrationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalibrationRequest* New() const final {
    return CreateMaybeMessage<CalibrationRequest>(nullptr);
  }

  CalibrationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CalibrationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CalibrationRequest& from);
  void MergeFrom(const CalibrationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CalibrationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float value1 = 1;
  void clear_value1();
  static const int kValue1FieldNumber = 1;
  float value1() const;
  void set_value1(float value);

  // float value2 = 2;
  void clear_value2();
  static const int kValue2FieldNumber = 2;
  float value2() const;
  void set_value2(float value);

  // int32 mode = 3;
  void clear_mode();
  static const int kModeFieldNumber = 3;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.CalibrationRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float value1_;
  float value2_;
  ::google::protobuf::int32 mode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class MotionROIRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.MotionROIRequest) */ {
 public:
  MotionROIRequest();
  virtual ~MotionROIRequest();

  MotionROIRequest(const MotionROIRequest& from);

  inline MotionROIRequest& operator=(const MotionROIRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MotionROIRequest(MotionROIRequest&& from) noexcept
    : MotionROIRequest() {
    *this = ::std::move(from);
  }

  inline MotionROIRequest& operator=(MotionROIRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MotionROIRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MotionROIRequest* internal_default_instance() {
    return reinterpret_cast<const MotionROIRequest*>(
               &_MotionROIRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MotionROIRequest* other);
  friend void swap(MotionROIRequest& a, MotionROIRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotionROIRequest* New() const final {
    return CreateMaybeMessage<MotionROIRequest>(nullptr);
  }

  MotionROIRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MotionROIRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MotionROIRequest& from);
  void MergeFrom(const MotionROIRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotionROIRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .kaapi.Polygon roi = 1;
  bool has_roi() const;
  void clear_roi();
  static const int kRoiFieldNumber = 1;
  const ::kaapi::Polygon& roi() const;
  ::kaapi::Polygon* release_roi();
  ::kaapi::Polygon* mutable_roi();
  void set_allocated_roi(::kaapi::Polygon* roi);

  // .kaapi.Rectangle far = 2;
  bool has_far() const;
  void clear_far();
  static const int kFarFieldNumber = 2;
  const ::kaapi::Rectangle& far() const;
  ::kaapi::Rectangle* release_far();
  ::kaapi::Rectangle* mutable_far();
  void set_allocated_far(::kaapi::Rectangle* far);

  // .kaapi.Rectangle close = 3;
  bool has_close() const;
  void clear_close();
  static const int kCloseFieldNumber = 3;
  const ::kaapi::Rectangle& close() const;
  ::kaapi::Rectangle* release_close();
  ::kaapi::Rectangle* mutable_close();
  void set_allocated_close(::kaapi::Rectangle* close);

  // @@protoc_insertion_point(class_scope:kaapi.MotionROIRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::kaapi::Polygon* roi_;
  ::kaapi::Rectangle* far_;
  ::kaapi::Rectangle* close_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class ApiVersion final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.ApiVersion) */ {
 public:
  ApiVersion();
  virtual ~ApiVersion();

  ApiVersion(const ApiVersion& from);

  inline ApiVersion& operator=(const ApiVersion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApiVersion(ApiVersion&& from) noexcept
    : ApiVersion() {
    *this = ::std::move(from);
  }

  inline ApiVersion& operator=(ApiVersion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApiVersion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApiVersion* internal_default_instance() {
    return reinterpret_cast<const ApiVersion*>(
               &_ApiVersion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ApiVersion* other);
  friend void swap(ApiVersion& a, ApiVersion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApiVersion* New() const final {
    return CreateMaybeMessage<ApiVersion>(nullptr);
  }

  ApiVersion* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApiVersion>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApiVersion& from);
  void MergeFrom(const ApiVersion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApiVersion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string date = 1;
  void clear_date();
  static const int kDateFieldNumber = 1;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  #if LANG_CXX11
  void set_date(::std::string&& value);
  #endif
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // string time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  const ::std::string& time() const;
  void set_time(const ::std::string& value);
  #if LANG_CXX11
  void set_time(::std::string&& value);
  #endif
  void set_time(const char* value);
  void set_time(const char* value, size_t size);
  ::std::string* mutable_time();
  ::std::string* release_time();
  void set_allocated_time(::std::string* time);

  // string version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // @@protoc_insertion_point(class_scope:kaapi.ApiVersion)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::internal::ArenaStringPtr time_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class ClickParameter final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.ClickParameter) */ {
 public:
  ClickParameter();
  virtual ~ClickParameter();

  ClickParameter(const ClickParameter& from);

  inline ClickParameter& operator=(const ClickParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClickParameter(ClickParameter&& from) noexcept
    : ClickParameter() {
    *this = ::std::move(from);
  }

  inline ClickParameter& operator=(ClickParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ClickParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClickParameter* internal_default_instance() {
    return reinterpret_cast<const ClickParameter*>(
               &_ClickParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ClickParameter* other);
  friend void swap(ClickParameter& a, ClickParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClickParameter* New() const final {
    return CreateMaybeMessage<ClickParameter>(nullptr);
  }

  ClickParameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClickParameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClickParameter& from);
  void MergeFrom(const ClickParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClickParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .kaapi.Point pt = 1;
  bool has_pt() const;
  void clear_pt();
  static const int kPtFieldNumber = 1;
  const ::kaapi::Point& pt() const;
  ::kaapi::Point* release_pt();
  ::kaapi::Point* mutable_pt();
  void set_allocated_pt(::kaapi::Point* pt);

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.ClickParameter)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::kaapi::Point* pt_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class GetNumericParameterRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.GetNumericParameterRequest) */ {
 public:
  GetNumericParameterRequest();
  virtual ~GetNumericParameterRequest();

  GetNumericParameterRequest(const GetNumericParameterRequest& from);

  inline GetNumericParameterRequest& operator=(const GetNumericParameterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetNumericParameterRequest(GetNumericParameterRequest&& from) noexcept
    : GetNumericParameterRequest() {
    *this = ::std::move(from);
  }

  inline GetNumericParameterRequest& operator=(GetNumericParameterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetNumericParameterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetNumericParameterRequest* internal_default_instance() {
    return reinterpret_cast<const GetNumericParameterRequest*>(
               &_GetNumericParameterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(GetNumericParameterRequest* other);
  friend void swap(GetNumericParameterRequest& a, GetNumericParameterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetNumericParameterRequest* New() const final {
    return CreateMaybeMessage<GetNumericParameterRequest>(nullptr);
  }

  GetNumericParameterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetNumericParameterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetNumericParameterRequest& from);
  void MergeFrom(const GetNumericParameterRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetNumericParameterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.GetNumericParameterRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class GetNumericParameterResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.GetNumericParameterResponse) */ {
 public:
  GetNumericParameterResponse();
  virtual ~GetNumericParameterResponse();

  GetNumericParameterResponse(const GetNumericParameterResponse& from);

  inline GetNumericParameterResponse& operator=(const GetNumericParameterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetNumericParameterResponse(GetNumericParameterResponse&& from) noexcept
    : GetNumericParameterResponse() {
    *this = ::std::move(from);
  }

  inline GetNumericParameterResponse& operator=(GetNumericParameterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetNumericParameterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetNumericParameterResponse* internal_default_instance() {
    return reinterpret_cast<const GetNumericParameterResponse*>(
               &_GetNumericParameterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(GetNumericParameterResponse* other);
  friend void swap(GetNumericParameterResponse& a, GetNumericParameterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetNumericParameterResponse* New() const final {
    return CreateMaybeMessage<GetNumericParameterResponse>(nullptr);
  }

  GetNumericParameterResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetNumericParameterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetNumericParameterResponse& from);
  void MergeFrom(const GetNumericParameterResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetNumericParameterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .kaapi.NumericParameter value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::kaapi::NumericParameter& value() const;
  ::kaapi::NumericParameter* release_value();
  ::kaapi::NumericParameter* mutable_value();
  void set_allocated_value(::kaapi::NumericParameter* value);

  // @@protoc_insertion_point(class_scope:kaapi.GetNumericParameterResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::kaapi::NumericParameter* value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class GetEnumParameterRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.GetEnumParameterRequest) */ {
 public:
  GetEnumParameterRequest();
  virtual ~GetEnumParameterRequest();

  GetEnumParameterRequest(const GetEnumParameterRequest& from);

  inline GetEnumParameterRequest& operator=(const GetEnumParameterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetEnumParameterRequest(GetEnumParameterRequest&& from) noexcept
    : GetEnumParameterRequest() {
    *this = ::std::move(from);
  }

  inline GetEnumParameterRequest& operator=(GetEnumParameterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetEnumParameterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetEnumParameterRequest* internal_default_instance() {
    return reinterpret_cast<const GetEnumParameterRequest*>(
               &_GetEnumParameterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GetEnumParameterRequest* other);
  friend void swap(GetEnumParameterRequest& a, GetEnumParameterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetEnumParameterRequest* New() const final {
    return CreateMaybeMessage<GetEnumParameterRequest>(nullptr);
  }

  GetEnumParameterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetEnumParameterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetEnumParameterRequest& from);
  void MergeFrom(const GetEnumParameterRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEnumParameterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.GetEnumParameterRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class GetEnumParameterResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.GetEnumParameterResponse) */ {
 public:
  GetEnumParameterResponse();
  virtual ~GetEnumParameterResponse();

  GetEnumParameterResponse(const GetEnumParameterResponse& from);

  inline GetEnumParameterResponse& operator=(const GetEnumParameterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetEnumParameterResponse(GetEnumParameterResponse&& from) noexcept
    : GetEnumParameterResponse() {
    *this = ::std::move(from);
  }

  inline GetEnumParameterResponse& operator=(GetEnumParameterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetEnumParameterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetEnumParameterResponse* internal_default_instance() {
    return reinterpret_cast<const GetEnumParameterResponse*>(
               &_GetEnumParameterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(GetEnumParameterResponse* other);
  friend void swap(GetEnumParameterResponse& a, GetEnumParameterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetEnumParameterResponse* New() const final {
    return CreateMaybeMessage<GetEnumParameterResponse>(nullptr);
  }

  GetEnumParameterResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetEnumParameterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetEnumParameterResponse& from);
  void MergeFrom(const GetEnumParameterResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEnumParameterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.GetEnumParameterResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class SetNumericParameterRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.SetNumericParameterRequest) */ {
 public:
  SetNumericParameterRequest();
  virtual ~SetNumericParameterRequest();

  SetNumericParameterRequest(const SetNumericParameterRequest& from);

  inline SetNumericParameterRequest& operator=(const SetNumericParameterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetNumericParameterRequest(SetNumericParameterRequest&& from) noexcept
    : SetNumericParameterRequest() {
    *this = ::std::move(from);
  }

  inline SetNumericParameterRequest& operator=(SetNumericParameterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetNumericParameterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetNumericParameterRequest* internal_default_instance() {
    return reinterpret_cast<const SetNumericParameterRequest*>(
               &_SetNumericParameterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(SetNumericParameterRequest* other);
  friend void swap(SetNumericParameterRequest& a, SetNumericParameterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetNumericParameterRequest* New() const final {
    return CreateMaybeMessage<SetNumericParameterRequest>(nullptr);
  }

  SetNumericParameterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetNumericParameterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetNumericParameterRequest& from);
  void MergeFrom(const SetNumericParameterRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetNumericParameterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .kaapi.NumericParameter value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::kaapi::NumericParameter& value() const;
  ::kaapi::NumericParameter* release_value();
  ::kaapi::NumericParameter* mutable_value();
  void set_allocated_value(::kaapi::NumericParameter* value);

  // int32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.SetNumericParameterRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::kaapi::NumericParameter* value_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class SetNumericParameterResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.SetNumericParameterResponse) */ {
 public:
  SetNumericParameterResponse();
  virtual ~SetNumericParameterResponse();

  SetNumericParameterResponse(const SetNumericParameterResponse& from);

  inline SetNumericParameterResponse& operator=(const SetNumericParameterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetNumericParameterResponse(SetNumericParameterResponse&& from) noexcept
    : SetNumericParameterResponse() {
    *this = ::std::move(from);
  }

  inline SetNumericParameterResponse& operator=(SetNumericParameterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetNumericParameterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetNumericParameterResponse* internal_default_instance() {
    return reinterpret_cast<const SetNumericParameterResponse*>(
               &_SetNumericParameterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(SetNumericParameterResponse* other);
  friend void swap(SetNumericParameterResponse& a, SetNumericParameterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetNumericParameterResponse* New() const final {
    return CreateMaybeMessage<SetNumericParameterResponse>(nullptr);
  }

  SetNumericParameterResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetNumericParameterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetNumericParameterResponse& from);
  void MergeFrom(const SetNumericParameterResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetNumericParameterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .kaapi.NumericParameter value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::kaapi::NumericParameter& value() const;
  ::kaapi::NumericParameter* release_value();
  ::kaapi::NumericParameter* mutable_value();
  void set_allocated_value(::kaapi::NumericParameter* value);

  // @@protoc_insertion_point(class_scope:kaapi.SetNumericParameterResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::kaapi::NumericParameter* value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class SetEnumParameterRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.SetEnumParameterRequest) */ {
 public:
  SetEnumParameterRequest();
  virtual ~SetEnumParameterRequest();

  SetEnumParameterRequest(const SetEnumParameterRequest& from);

  inline SetEnumParameterRequest& operator=(const SetEnumParameterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetEnumParameterRequest(SetEnumParameterRequest&& from) noexcept
    : SetEnumParameterRequest() {
    *this = ::std::move(from);
  }

  inline SetEnumParameterRequest& operator=(SetEnumParameterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetEnumParameterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetEnumParameterRequest* internal_default_instance() {
    return reinterpret_cast<const SetEnumParameterRequest*>(
               &_SetEnumParameterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(SetEnumParameterRequest* other);
  friend void swap(SetEnumParameterRequest& a, SetEnumParameterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetEnumParameterRequest* New() const final {
    return CreateMaybeMessage<SetEnumParameterRequest>(nullptr);
  }

  SetEnumParameterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetEnumParameterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetEnumParameterRequest& from);
  void MergeFrom(const SetEnumParameterRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetEnumParameterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.SetEnumParameterRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class SetEnumParameterResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.SetEnumParameterResponse) */ {
 public:
  SetEnumParameterResponse();
  virtual ~SetEnumParameterResponse();

  SetEnumParameterResponse(const SetEnumParameterResponse& from);

  inline SetEnumParameterResponse& operator=(const SetEnumParameterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetEnumParameterResponse(SetEnumParameterResponse&& from) noexcept
    : SetEnumParameterResponse() {
    *this = ::std::move(from);
  }

  inline SetEnumParameterResponse& operator=(SetEnumParameterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetEnumParameterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetEnumParameterResponse* internal_default_instance() {
    return reinterpret_cast<const SetEnumParameterResponse*>(
               &_SetEnumParameterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(SetEnumParameterResponse* other);
  friend void swap(SetEnumParameterResponse& a, SetEnumParameterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetEnumParameterResponse* New() const final {
    return CreateMaybeMessage<SetEnumParameterResponse>(nullptr);
  }

  SetEnumParameterResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetEnumParameterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetEnumParameterResponse& from);
  void MergeFrom(const SetEnumParameterResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetEnumParameterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.SetEnumParameterResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class SetEnumCommandRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.SetEnumCommandRequest) */ {
 public:
  SetEnumCommandRequest();
  virtual ~SetEnumCommandRequest();

  SetEnumCommandRequest(const SetEnumCommandRequest& from);

  inline SetEnumCommandRequest& operator=(const SetEnumCommandRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetEnumCommandRequest(SetEnumCommandRequest&& from) noexcept
    : SetEnumCommandRequest() {
    *this = ::std::move(from);
  }

  inline SetEnumCommandRequest& operator=(SetEnumCommandRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetEnumCommandRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetEnumCommandRequest* internal_default_instance() {
    return reinterpret_cast<const SetEnumCommandRequest*>(
               &_SetEnumCommandRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(SetEnumCommandRequest* other);
  friend void swap(SetEnumCommandRequest& a, SetEnumCommandRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetEnumCommandRequest* New() const final {
    return CreateMaybeMessage<SetEnumCommandRequest>(nullptr);
  }

  SetEnumCommandRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetEnumCommandRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetEnumCommandRequest& from);
  void MergeFrom(const SetEnumCommandRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetEnumCommandRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.SetEnumCommandRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class SetEnumCommandResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.SetEnumCommandResponse) */ {
 public:
  SetEnumCommandResponse();
  virtual ~SetEnumCommandResponse();

  SetEnumCommandResponse(const SetEnumCommandResponse& from);

  inline SetEnumCommandResponse& operator=(const SetEnumCommandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetEnumCommandResponse(SetEnumCommandResponse&& from) noexcept
    : SetEnumCommandResponse() {
    *this = ::std::move(from);
  }

  inline SetEnumCommandResponse& operator=(SetEnumCommandResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetEnumCommandResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetEnumCommandResponse* internal_default_instance() {
    return reinterpret_cast<const SetEnumCommandResponse*>(
               &_SetEnumCommandResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(SetEnumCommandResponse* other);
  friend void swap(SetEnumCommandResponse& a, SetEnumCommandResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetEnumCommandResponse* New() const final {
    return CreateMaybeMessage<SetEnumCommandResponse>(nullptr);
  }

  SetEnumCommandResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetEnumCommandResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetEnumCommandResponse& from);
  void MergeFrom(const SetEnumCommandResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetEnumCommandResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.SetEnumCommandResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class SetCameraRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.SetCameraRequest) */ {
 public:
  SetCameraRequest();
  virtual ~SetCameraRequest();

  SetCameraRequest(const SetCameraRequest& from);

  inline SetCameraRequest& operator=(const SetCameraRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetCameraRequest(SetCameraRequest&& from) noexcept
    : SetCameraRequest() {
    *this = ::std::move(from);
  }

  inline SetCameraRequest& operator=(SetCameraRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetCameraRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetCameraRequest* internal_default_instance() {
    return reinterpret_cast<const SetCameraRequest*>(
               &_SetCameraRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(SetCameraRequest* other);
  friend void swap(SetCameraRequest& a, SetCameraRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetCameraRequest* New() const final {
    return CreateMaybeMessage<SetCameraRequest>(nullptr);
  }

  SetCameraRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetCameraRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetCameraRequest& from);
  void MergeFrom(const SetCameraRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetCameraRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 cameraType = 1;
  void clear_cameratype();
  static const int kCameraTypeFieldNumber = 1;
  ::google::protobuf::int32 cameratype() const;
  void set_cameratype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.SetCameraRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 cameratype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class SetCameraResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.SetCameraResponse) */ {
 public:
  SetCameraResponse();
  virtual ~SetCameraResponse();

  SetCameraResponse(const SetCameraResponse& from);

  inline SetCameraResponse& operator=(const SetCameraResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetCameraResponse(SetCameraResponse&& from) noexcept
    : SetCameraResponse() {
    *this = ::std::move(from);
  }

  inline SetCameraResponse& operator=(SetCameraResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetCameraResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetCameraResponse* internal_default_instance() {
    return reinterpret_cast<const SetCameraResponse*>(
               &_SetCameraResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(SetCameraResponse* other);
  friend void swap(SetCameraResponse& a, SetCameraResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetCameraResponse* New() const final {
    return CreateMaybeMessage<SetCameraResponse>(nullptr);
  }

  SetCameraResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetCameraResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetCameraResponse& from);
  void MergeFrom(const SetCameraResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetCameraResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 capabilities = 1;
  void clear_capabilities();
  static const int kCapabilitiesFieldNumber = 1;
  ::google::protobuf::int64 capabilities() const;
  void set_capabilities(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:kaapi.SetCameraResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 capabilities_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class CommWrite final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.CommWrite) */ {
 public:
  CommWrite();
  virtual ~CommWrite();

  CommWrite(const CommWrite& from);

  inline CommWrite& operator=(const CommWrite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommWrite(CommWrite&& from) noexcept
    : CommWrite() {
    *this = ::std::move(from);
  }

  inline CommWrite& operator=(CommWrite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CommWrite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommWrite* internal_default_instance() {
    return reinterpret_cast<const CommWrite*>(
               &_CommWrite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(CommWrite* other);
  friend void swap(CommWrite& a, CommWrite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommWrite* New() const final {
    return CreateMaybeMessage<CommWrite>(nullptr);
  }

  CommWrite* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommWrite>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommWrite& from);
  void MergeFrom(const CommWrite& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommWrite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CommWrite_Action Action;
  static const Action NONE =
    CommWrite_Action_NONE;
  static const Action MOVE_ABS =
    CommWrite_Action_MOVE_ABS;
  static const Action MOVE_REL =
    CommWrite_Action_MOVE_REL;
  static const Action UPDATE =
    CommWrite_Action_UPDATE;
  static const Action SET_CAMERA =
    CommWrite_Action_SET_CAMERA;
  static inline bool Action_IsValid(int value) {
    return CommWrite_Action_IsValid(value);
  }
  static const Action Action_MIN =
    CommWrite_Action_Action_MIN;
  static const Action Action_MAX =
    CommWrite_Action_Action_MAX;
  static const int Action_ARRAYSIZE =
    CommWrite_Action_Action_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Action_descriptor() {
    return CommWrite_Action_descriptor();
  }
  static inline const ::std::string& Action_Name(Action value) {
    return CommWrite_Action_Name(value);
  }
  static inline bool Action_Parse(const ::std::string& name,
      Action* value) {
    return CommWrite_Action_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .kaapi.AbsoluteMoveParameters abspars = 2;
  bool has_abspars() const;
  void clear_abspars();
  static const int kAbsparsFieldNumber = 2;
  const ::kaapi::AbsoluteMoveParameters& abspars() const;
  ::kaapi::AbsoluteMoveParameters* release_abspars();
  ::kaapi::AbsoluteMoveParameters* mutable_abspars();
  void set_allocated_abspars(::kaapi::AbsoluteMoveParameters* abspars);

  // .kaapi.RelativeMoveParameters relpars = 3;
  bool has_relpars() const;
  void clear_relpars();
  static const int kRelparsFieldNumber = 3;
  const ::kaapi::RelativeMoveParameters& relpars() const;
  ::kaapi::RelativeMoveParameters* release_relpars();
  ::kaapi::RelativeMoveParameters* mutable_relpars();
  void set_allocated_relpars(::kaapi::RelativeMoveParameters* relpars);

  // .kaapi.UpdateCameraStatusParameters updpars = 4;
  bool has_updpars() const;
  void clear_updpars();
  static const int kUpdparsFieldNumber = 4;
  const ::kaapi::UpdateCameraStatusParameters& updpars() const;
  ::kaapi::UpdateCameraStatusParameters* release_updpars();
  ::kaapi::UpdateCameraStatusParameters* mutable_updpars();
  void set_allocated_updpars(::kaapi::UpdateCameraStatusParameters* updpars);

  // .kaapi.CommWrite.Action action = 1;
  void clear_action();
  static const int kActionFieldNumber = 1;
  ::kaapi::CommWrite_Action action() const;
  void set_action(::kaapi::CommWrite_Action value);

  // @@protoc_insertion_point(class_scope:kaapi.CommWrite)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::kaapi::AbsoluteMoveParameters* abspars_;
  ::kaapi::RelativeMoveParameters* relpars_;
  ::kaapi::UpdateCameraStatusParameters* updpars_;
  int action_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class CommRead final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.CommRead) */ {
 public:
  CommRead();
  virtual ~CommRead();

  CommRead(const CommRead& from);

  inline CommRead& operator=(const CommRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommRead(CommRead&& from) noexcept
    : CommRead() {
    *this = ::std::move(from);
  }

  inline CommRead& operator=(CommRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CommRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommRead* internal_default_instance() {
    return reinterpret_cast<const CommRead*>(
               &_CommRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(CommRead* other);
  friend void swap(CommRead& a, CommRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommRead* New() const final {
    return CreateMaybeMessage<CommRead>(nullptr);
  }

  CommRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommRead& from);
  void MergeFrom(const CommRead& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string keys = 5;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 5;
  const ::std::string& keys(int index) const;
  ::std::string* mutable_keys(int index);
  void set_keys(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_keys(int index, ::std::string&& value);
  #endif
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, size_t size);
  ::std::string* add_keys();
  void add_keys(const ::std::string& value);
  #if LANG_CXX11
  void add_keys(::std::string&& value);
  #endif
  void add_keys(const char* value);
  void add_keys(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_keys();

  // repeated string values = 6;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 6;
  const ::std::string& values(int index) const;
  ::std::string* mutable_values(int index);
  void set_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_values(int index, ::std::string&& value);
  #endif
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, size_t size);
  ::std::string* add_values();
  void add_values(const ::std::string& value);
  #if LANG_CXX11
  void add_values(::std::string&& value);
  #endif
  void add_values(const char* value);
  void add_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& values() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_values();

  // bytes frameData = 7;
  void clear_framedata();
  static const int kFrameDataFieldNumber = 7;
  const ::std::string& framedata() const;
  void set_framedata(const ::std::string& value);
  #if LANG_CXX11
  void set_framedata(::std::string&& value);
  #endif
  void set_framedata(const char* value);
  void set_framedata(const void* value, size_t size);
  ::std::string* mutable_framedata();
  ::std::string* release_framedata();
  void set_allocated_framedata(::std::string* framedata);

  // .kaapi.PosInfo posInfo = 1;
  bool has_posinfo() const;
  void clear_posinfo();
  static const int kPosInfoFieldNumber = 1;
  const ::kaapi::PosInfo& posinfo() const;
  ::kaapi::PosInfo* release_posinfo();
  ::kaapi::PosInfo* mutable_posinfo();
  void set_allocated_posinfo(::kaapi::PosInfo* posinfo);

  // .kaapi.CameraStatus status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::kaapi::CameraStatus& status() const;
  ::kaapi::CameraStatus* release_status();
  ::kaapi::CameraStatus* mutable_status();
  void set_allocated_status(::kaapi::CameraStatus* status);

  // .kaapi.AbsoluteMoveResult absres = 3;
  bool has_absres() const;
  void clear_absres();
  static const int kAbsresFieldNumber = 3;
  const ::kaapi::AbsoluteMoveResult& absres() const;
  ::kaapi::AbsoluteMoveResult* release_absres();
  ::kaapi::AbsoluteMoveResult* mutable_absres();
  void set_allocated_absres(::kaapi::AbsoluteMoveResult* absres);

  // .kaapi.RelativeMoveResult relres = 4;
  bool has_relres() const;
  void clear_relres();
  static const int kRelresFieldNumber = 4;
  const ::kaapi::RelativeMoveResult& relres() const;
  ::kaapi::RelativeMoveResult* release_relres();
  ::kaapi::RelativeMoveResult* mutable_relres();
  void set_allocated_relres(::kaapi::RelativeMoveResult* relres);

  // @@protoc_insertion_point(class_scope:kaapi.CommRead)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> keys_;
  ::google::protobuf::RepeatedPtrField<::std::string> values_;
  ::google::protobuf::internal::ArenaStringPtr framedata_;
  ::kaapi::PosInfo* posinfo_;
  ::kaapi::CameraStatus* status_;
  ::kaapi::AbsoluteMoveResult* absres_;
  ::kaapi::RelativeMoveResult* relres_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class UpdateCameraStatusParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.UpdateCameraStatusParameters) */ {
 public:
  UpdateCameraStatusParameters();
  virtual ~UpdateCameraStatusParameters();

  UpdateCameraStatusParameters(const UpdateCameraStatusParameters& from);

  inline UpdateCameraStatusParameters& operator=(const UpdateCameraStatusParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateCameraStatusParameters(UpdateCameraStatusParameters&& from) noexcept
    : UpdateCameraStatusParameters() {
    *this = ::std::move(from);
  }

  inline UpdateCameraStatusParameters& operator=(UpdateCameraStatusParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UpdateCameraStatusParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateCameraStatusParameters* internal_default_instance() {
    return reinterpret_cast<const UpdateCameraStatusParameters*>(
               &_UpdateCameraStatusParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(UpdateCameraStatusParameters* other);
  friend void swap(UpdateCameraStatusParameters& a, UpdateCameraStatusParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateCameraStatusParameters* New() const final {
    return CreateMaybeMessage<UpdateCameraStatusParameters>(nullptr);
  }

  UpdateCameraStatusParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateCameraStatusParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateCameraStatusParameters& from);
  void MergeFrom(const UpdateCameraStatusParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateCameraStatusParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .kaapi.CameraStatus status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  const ::kaapi::CameraStatus& status() const;
  ::kaapi::CameraStatus* release_status();
  ::kaapi::CameraStatus* mutable_status();
  void set_allocated_status(::kaapi::CameraStatus* status);

  // @@protoc_insertion_point(class_scope:kaapi.UpdateCameraStatusParameters)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::kaapi::CameraStatus* status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class GetCameraStatusParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.GetCameraStatusParameters) */ {
 public:
  GetCameraStatusParameters();
  virtual ~GetCameraStatusParameters();

  GetCameraStatusParameters(const GetCameraStatusParameters& from);

  inline GetCameraStatusParameters& operator=(const GetCameraStatusParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCameraStatusParameters(GetCameraStatusParameters&& from) noexcept
    : GetCameraStatusParameters() {
    *this = ::std::move(from);
  }

  inline GetCameraStatusParameters& operator=(GetCameraStatusParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetCameraStatusParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCameraStatusParameters* internal_default_instance() {
    return reinterpret_cast<const GetCameraStatusParameters*>(
               &_GetCameraStatusParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(GetCameraStatusParameters* other);
  friend void swap(GetCameraStatusParameters& a, GetCameraStatusParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCameraStatusParameters* New() const final {
    return CreateMaybeMessage<GetCameraStatusParameters>(nullptr);
  }

  GetCameraStatusParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetCameraStatusParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetCameraStatusParameters& from);
  void MergeFrom(const GetCameraStatusParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCameraStatusParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 filters = 1;
  void clear_filters();
  static const int kFiltersFieldNumber = 1;
  ::google::protobuf::int64 filters() const;
  void set_filters(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:kaapi.GetCameraStatusParameters)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 filters_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class CameraStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.CameraStatus) */ {
 public:
  CameraStatus();
  virtual ~CameraStatus();

  CameraStatus(const CameraStatus& from);

  inline CameraStatus& operator=(const CameraStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CameraStatus(CameraStatus&& from) noexcept
    : CameraStatus() {
    *this = ::std::move(from);
  }

  inline CameraStatus& operator=(CameraStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CameraStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CameraStatus* internal_default_instance() {
    return reinterpret_cast<const CameraStatus*>(
               &_CameraStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(CameraStatus* other);
  friend void swap(CameraStatus& a, CameraStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CameraStatus* New() const final {
    return CreateMaybeMessage<CameraStatus>(nullptr);
  }

  CameraStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CameraStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CameraStatus& from);
  void MergeFrom(const CameraStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CameraStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .kaapi.NumericParameter numericParameters = 3;
  int numericparameters_size() const;
  void clear_numericparameters();
  static const int kNumericParametersFieldNumber = 3;
  ::kaapi::NumericParameter* mutable_numericparameters(int index);
  ::google::protobuf::RepeatedPtrField< ::kaapi::NumericParameter >*
      mutable_numericparameters();
  const ::kaapi::NumericParameter& numericparameters(int index) const;
  ::kaapi::NumericParameter* add_numericparameters();
  const ::google::protobuf::RepeatedPtrField< ::kaapi::NumericParameter >&
      numericparameters() const;

  // repeated int32 enumParameters = 5;
  int enumparameters_size() const;
  void clear_enumparameters();
  static const int kEnumParametersFieldNumber = 5;
  ::google::protobuf::int32 enumparameters(int index) const;
  void set_enumparameters(int index, ::google::protobuf::int32 value);
  void add_enumparameters(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      enumparameters() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_enumparameters();

  // repeated int32 enumCommands = 7;
  int enumcommands_size() const;
  void clear_enumcommands();
  static const int kEnumCommandsFieldNumber = 7;
  ::google::protobuf::int32 enumcommands(int index) const;
  void set_enumcommands(int index, ::google::protobuf::int32 value);
  void add_enumcommands(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      enumcommands() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_enumcommands();

  // repeated .kaapi.Rectangle objectDetections = 12;
  int objectdetections_size() const;
  void clear_objectdetections();
  static const int kObjectDetectionsFieldNumber = 12;
  ::kaapi::Rectangle* mutable_objectdetections(int index);
  ::google::protobuf::RepeatedPtrField< ::kaapi::Rectangle >*
      mutable_objectdetections();
  const ::kaapi::Rectangle& objectdetections(int index) const;
  ::kaapi::Rectangle* add_objectdetections();
  const ::google::protobuf::RepeatedPtrField< ::kaapi::Rectangle >&
      objectdetections() const;

  // .kaapi.Calibration calibration = 8;
  bool has_calibration() const;
  void clear_calibration();
  static const int kCalibrationFieldNumber = 8;
  const ::kaapi::Calibration& calibration() const;
  ::kaapi::Calibration* release_calibration();
  ::kaapi::Calibration* mutable_calibration();
  void set_allocated_calibration(::kaapi::Calibration* calibration);

  // .kaapi.Boresight boresight = 9;
  bool has_boresight() const;
  void clear_boresight();
  static const int kBoresightFieldNumber = 9;
  const ::kaapi::Boresight& boresight() const;
  ::kaapi::Boresight* release_boresight();
  ::kaapi::Boresight* mutable_boresight();
  void set_allocated_boresight(::kaapi::Boresight* boresight);

  // .kaapi.ROI roi = 10;
  bool has_roi() const;
  void clear_roi();
  static const int kRoiFieldNumber = 10;
  const ::kaapi::ROI& roi() const;
  ::kaapi::ROI* release_roi();
  ::kaapi::ROI* mutable_roi();
  void set_allocated_roi(::kaapi::ROI* roi);

  // .kaapi.ROI fence = 11;
  bool has_fence() const;
  void clear_fence();
  static const int kFenceFieldNumber = 11;
  const ::kaapi::ROI& fence() const;
  ::kaapi::ROI* release_fence();
  ::kaapi::ROI* mutable_fence();
  void set_allocated_fence(::kaapi::ROI* fence);

  // int64 capabilities = 1;
  void clear_capabilities();
  static const int kCapabilitiesFieldNumber = 1;
  ::google::protobuf::int64 capabilities() const;
  void set_capabilities(::google::protobuf::int64 value);

  // int32 numericParametersVector = 2;
  void clear_numericparametersvector();
  static const int kNumericParametersVectorFieldNumber = 2;
  ::google::protobuf::int32 numericparametersvector() const;
  void set_numericparametersvector(::google::protobuf::int32 value);

  // int32 enumParametersVector = 4;
  void clear_enumparametersvector();
  static const int kEnumParametersVectorFieldNumber = 4;
  ::google::protobuf::int32 enumparametersvector() const;
  void set_enumparametersvector(::google::protobuf::int32 value);

  // int32 enumCommandsVector = 6;
  void clear_enumcommandsvector();
  static const int kEnumCommandsVectorFieldNumber = 6;
  ::google::protobuf::int32 enumcommandsvector() const;
  void set_enumcommandsvector(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.CameraStatus)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::kaapi::NumericParameter > numericparameters_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > enumparameters_;
  mutable std::atomic<int> _enumparameters_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > enumcommands_;
  mutable std::atomic<int> _enumcommands_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::kaapi::Rectangle > objectdetections_;
  ::kaapi::Calibration* calibration_;
  ::kaapi::Boresight* boresight_;
  ::kaapi::ROI* roi_;
  ::kaapi::ROI* fence_;
  ::google::protobuf::int64 capabilities_;
  ::google::protobuf::int32 numericparametersvector_;
  ::google::protobuf::int32 enumparametersvector_;
  ::google::protobuf::int32 enumcommandsvector_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class Rectangle final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.Rectangle) */ {
 public:
  Rectangle();
  virtual ~Rectangle();

  Rectangle(const Rectangle& from);

  inline Rectangle& operator=(const Rectangle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rectangle(Rectangle&& from) noexcept
    : Rectangle() {
    *this = ::std::move(from);
  }

  inline Rectangle& operator=(Rectangle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Rectangle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rectangle* internal_default_instance() {
    return reinterpret_cast<const Rectangle*>(
               &_Rectangle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(Rectangle* other);
  friend void swap(Rectangle& a, Rectangle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rectangle* New() const final {
    return CreateMaybeMessage<Rectangle>(nullptr);
  }

  Rectangle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Rectangle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Rectangle& from);
  void MergeFrom(const Rectangle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Rectangle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .kaapi.Point topLeft = 1;
  bool has_topleft() const;
  void clear_topleft();
  static const int kTopLeftFieldNumber = 1;
  const ::kaapi::Point& topleft() const;
  ::kaapi::Point* release_topleft();
  ::kaapi::Point* mutable_topleft();
  void set_allocated_topleft(::kaapi::Point* topleft);

  // int32 width = 2;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // int32 height = 3;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.Rectangle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::kaapi::Point* topleft_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class Point final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point(Point&& from) noexcept
    : Point() {
    *this = ::std::move(from);
  }

  inline Point& operator=(Point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Point& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point* internal_default_instance() {
    return reinterpret_cast<const Point*>(
               &_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(Point* other);
  friend void swap(Point& a, Point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point* New() const final {
    return CreateMaybeMessage<Point>(nullptr);
  }

  Point* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Point>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:kaapi.Point)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class Polygon final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.Polygon) */ {
 public:
  Polygon();
  virtual ~Polygon();

  Polygon(const Polygon& from);

  inline Polygon& operator=(const Polygon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Polygon(Polygon&& from) noexcept
    : Polygon() {
    *this = ::std::move(from);
  }

  inline Polygon& operator=(Polygon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Polygon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Polygon* internal_default_instance() {
    return reinterpret_cast<const Polygon*>(
               &_Polygon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(Polygon* other);
  friend void swap(Polygon& a, Polygon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Polygon* New() const final {
    return CreateMaybeMessage<Polygon>(nullptr);
  }

  Polygon* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Polygon>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Polygon& from);
  void MergeFrom(const Polygon& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Polygon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .kaapi.Point points = 1;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 1;
  ::kaapi::Point* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField< ::kaapi::Point >*
      mutable_points();
  const ::kaapi::Point& points(int index) const;
  ::kaapi::Point* add_points();
  const ::google::protobuf::RepeatedPtrField< ::kaapi::Point >&
      points() const;

  // @@protoc_insertion_point(class_scope:kaapi.Polygon)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::kaapi::Point > points_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class ROI final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.ROI) */ {
 public:
  ROI();
  virtual ~ROI();

  ROI(const ROI& from);

  inline ROI& operator=(const ROI& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ROI(ROI&& from) noexcept
    : ROI() {
    *this = ::std::move(from);
  }

  inline ROI& operator=(ROI&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ROI& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ROI* internal_default_instance() {
    return reinterpret_cast<const ROI*>(
               &_ROI_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(ROI* other);
  friend void swap(ROI& a, ROI& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ROI* New() const final {
    return CreateMaybeMessage<ROI>(nullptr);
  }

  ROI* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ROI>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ROI& from);
  void MergeFrom(const ROI& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROI* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .kaapi.Polygon regions = 2;
  int regions_size() const;
  void clear_regions();
  static const int kRegionsFieldNumber = 2;
  ::kaapi::Polygon* mutable_regions(int index);
  ::google::protobuf::RepeatedPtrField< ::kaapi::Polygon >*
      mutable_regions();
  const ::kaapi::Polygon& regions(int index) const;
  ::kaapi::Polygon* add_regions();
  const ::google::protobuf::RepeatedPtrField< ::kaapi::Polygon >&
      regions() const;

  // int32 roiCount = 1;
  void clear_roicount();
  static const int kRoiCountFieldNumber = 1;
  ::google::protobuf::int32 roicount() const;
  void set_roicount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.ROI)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::kaapi::Polygon > regions_;
  ::google::protobuf::int32 roicount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class Boresight final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.Boresight) */ {
 public:
  Boresight();
  virtual ~Boresight();

  Boresight(const Boresight& from);

  inline Boresight& operator=(const Boresight& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Boresight(Boresight&& from) noexcept
    : Boresight() {
    *this = ::std::move(from);
  }

  inline Boresight& operator=(Boresight&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Boresight& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Boresight* internal_default_instance() {
    return reinterpret_cast<const Boresight*>(
               &_Boresight_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(Boresight* other);
  friend void swap(Boresight& a, Boresight& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Boresight* New() const final {
    return CreateMaybeMessage<Boresight>(nullptr);
  }

  Boresight* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Boresight>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Boresight& from);
  void MergeFrom(const Boresight& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Boresight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 d0 = 1;
  void clear_d0();
  static const int kD0FieldNumber = 1;
  ::google::protobuf::int32 d0() const;
  void set_d0(::google::protobuf::int32 value);

  // int32 d1 = 2;
  void clear_d1();
  static const int kD1FieldNumber = 2;
  ::google::protobuf::int32 d1() const;
  void set_d1(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.Boresight)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 d0_;
  ::google::protobuf::int32 d1_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class Calibration final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.Calibration) */ {
 public:
  Calibration();
  virtual ~Calibration();

  Calibration(const Calibration& from);

  inline Calibration& operator=(const Calibration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Calibration(Calibration&& from) noexcept
    : Calibration() {
    *this = ::std::move(from);
  }

  inline Calibration& operator=(Calibration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Calibration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Calibration* internal_default_instance() {
    return reinterpret_cast<const Calibration*>(
               &_Calibration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(Calibration* other);
  friend void swap(Calibration& a, Calibration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Calibration* New() const final {
    return CreateMaybeMessage<Calibration>(nullptr);
  }

  Calibration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Calibration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Calibration& from);
  void MergeFrom(const Calibration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Calibration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double d0 = 1;
  void clear_d0();
  static const int kD0FieldNumber = 1;
  double d0() const;
  void set_d0(double value);

  // double d1 = 2;
  void clear_d1();
  static const int kD1FieldNumber = 2;
  double d1() const;
  void set_d1(double value);

  // @@protoc_insertion_point(class_scope:kaapi.Calibration)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double d0_;
  double d1_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class NumericParameter final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.NumericParameter) */ {
 public:
  NumericParameter();
  virtual ~NumericParameter();

  NumericParameter(const NumericParameter& from);

  inline NumericParameter& operator=(const NumericParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NumericParameter(NumericParameter&& from) noexcept
    : NumericParameter() {
    *this = ::std::move(from);
  }

  inline NumericParameter& operator=(NumericParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NumericParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NumericParameter* internal_default_instance() {
    return reinterpret_cast<const NumericParameter*>(
               &_NumericParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(NumericParameter* other);
  friend void swap(NumericParameter& a, NumericParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NumericParameter* New() const final {
    return CreateMaybeMessage<NumericParameter>(nullptr);
  }

  NumericParameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NumericParameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NumericParameter& from);
  void MergeFrom(const NumericParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NumericParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  double value() const;
  void set_value(double value);

  // int32 byte0 = 2;
  void clear_byte0();
  static const int kByte0FieldNumber = 2;
  ::google::protobuf::int32 byte0() const;
  void set_byte0(::google::protobuf::int32 value);

  // int32 byte1 = 3;
  void clear_byte1();
  static const int kByte1FieldNumber = 3;
  ::google::protobuf::int32 byte1() const;
  void set_byte1(::google::protobuf::int32 value);

  // int32 byte2 = 4;
  void clear_byte2();
  static const int kByte2FieldNumber = 4;
  ::google::protobuf::int32 byte2() const;
  void set_byte2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:kaapi.NumericParameter)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double value_;
  ::google::protobuf::int32 byte0_;
  ::google::protobuf::int32 byte1_;
  ::google::protobuf::int32 byte2_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class RelativeMoveParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.RelativeMoveParameters) */ {
 public:
  RelativeMoveParameters();
  virtual ~RelativeMoveParameters();

  RelativeMoveParameters(const RelativeMoveParameters& from);

  inline RelativeMoveParameters& operator=(const RelativeMoveParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RelativeMoveParameters(RelativeMoveParameters&& from) noexcept
    : RelativeMoveParameters() {
    *this = ::std::move(from);
  }

  inline RelativeMoveParameters& operator=(RelativeMoveParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RelativeMoveParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RelativeMoveParameters* internal_default_instance() {
    return reinterpret_cast<const RelativeMoveParameters*>(
               &_RelativeMoveParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(RelativeMoveParameters* other);
  friend void swap(RelativeMoveParameters& a, RelativeMoveParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RelativeMoveParameters* New() const final {
    return CreateMaybeMessage<RelativeMoveParameters>(nullptr);
  }

  RelativeMoveParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RelativeMoveParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RelativeMoveParameters& from);
  void MergeFrom(const RelativeMoveParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RelativeMoveParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float panSpeed = 1;
  void clear_panspeed();
  static const int kPanSpeedFieldNumber = 1;
  float panspeed() const;
  void set_panspeed(float value);

  // float tiltSpeed = 2;
  void clear_tiltspeed();
  static const int kTiltSpeedFieldNumber = 2;
  float tiltspeed() const;
  void set_tiltspeed(float value);

  // float zoomSpeed = 3;
  void clear_zoomspeed();
  static const int kZoomSpeedFieldNumber = 3;
  float zoomspeed() const;
  void set_zoomspeed(float value);

  // @@protoc_insertion_point(class_scope:kaapi.RelativeMoveParameters)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float panspeed_;
  float tiltspeed_;
  float zoomspeed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class RelativeMoveResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.RelativeMoveResult) */ {
 public:
  RelativeMoveResult();
  virtual ~RelativeMoveResult();

  RelativeMoveResult(const RelativeMoveResult& from);

  inline RelativeMoveResult& operator=(const RelativeMoveResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RelativeMoveResult(RelativeMoveResult&& from) noexcept
    : RelativeMoveResult() {
    *this = ::std::move(from);
  }

  inline RelativeMoveResult& operator=(RelativeMoveResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RelativeMoveResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RelativeMoveResult* internal_default_instance() {
    return reinterpret_cast<const RelativeMoveResult*>(
               &_RelativeMoveResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(RelativeMoveResult* other);
  friend void swap(RelativeMoveResult& a, RelativeMoveResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RelativeMoveResult* New() const final {
    return CreateMaybeMessage<RelativeMoveResult>(nullptr);
  }

  RelativeMoveResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RelativeMoveResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RelativeMoveResult& from);
  void MergeFrom(const RelativeMoveResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RelativeMoveResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .kaapi.PosInfo posInfo = 1;
  bool has_posinfo() const;
  void clear_posinfo();
  static const int kPosInfoFieldNumber = 1;
  const ::kaapi::PosInfo& posinfo() const;
  ::kaapi::PosInfo* release_posinfo();
  ::kaapi::PosInfo* mutable_posinfo();
  void set_allocated_posinfo(::kaapi::PosInfo* posinfo);

  // @@protoc_insertion_point(class_scope:kaapi.RelativeMoveResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::kaapi::PosInfo* posinfo_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class AbsoluteMoveParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.AbsoluteMoveParameters) */ {
 public:
  AbsoluteMoveParameters();
  virtual ~AbsoluteMoveParameters();

  AbsoluteMoveParameters(const AbsoluteMoveParameters& from);

  inline AbsoluteMoveParameters& operator=(const AbsoluteMoveParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbsoluteMoveParameters(AbsoluteMoveParameters&& from) noexcept
    : AbsoluteMoveParameters() {
    *this = ::std::move(from);
  }

  inline AbsoluteMoveParameters& operator=(AbsoluteMoveParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AbsoluteMoveParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbsoluteMoveParameters* internal_default_instance() {
    return reinterpret_cast<const AbsoluteMoveParameters*>(
               &_AbsoluteMoveParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(AbsoluteMoveParameters* other);
  friend void swap(AbsoluteMoveParameters& a, AbsoluteMoveParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbsoluteMoveParameters* New() const final {
    return CreateMaybeMessage<AbsoluteMoveParameters>(nullptr);
  }

  AbsoluteMoveParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AbsoluteMoveParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AbsoluteMoveParameters& from);
  void MergeFrom(const AbsoluteMoveParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbsoluteMoveParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float panPos = 1;
  void clear_panpos();
  static const int kPanPosFieldNumber = 1;
  float panpos() const;
  void set_panpos(float value);

  // float tiltPos = 2;
  void clear_tiltpos();
  static const int kTiltPosFieldNumber = 2;
  float tiltpos() const;
  void set_tiltpos(float value);

  // float zoomPos = 3;
  void clear_zoompos();
  static const int kZoomPosFieldNumber = 3;
  float zoompos() const;
  void set_zoompos(float value);

  // float panSpeed = 4;
  void clear_panspeed();
  static const int kPanSpeedFieldNumber = 4;
  float panspeed() const;
  void set_panspeed(float value);

  // float tiltSpeed = 5;
  void clear_tiltspeed();
  static const int kTiltSpeedFieldNumber = 5;
  float tiltspeed() const;
  void set_tiltspeed(float value);

  // float zoomSpeed = 6;
  void clear_zoomspeed();
  static const int kZoomSpeedFieldNumber = 6;
  float zoomspeed() const;
  void set_zoomspeed(float value);

  // @@protoc_insertion_point(class_scope:kaapi.AbsoluteMoveParameters)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float panpos_;
  float tiltpos_;
  float zoompos_;
  float panspeed_;
  float tiltspeed_;
  float zoomspeed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class AbsoluteMoveResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.AbsoluteMoveResult) */ {
 public:
  AbsoluteMoveResult();
  virtual ~AbsoluteMoveResult();

  AbsoluteMoveResult(const AbsoluteMoveResult& from);

  inline AbsoluteMoveResult& operator=(const AbsoluteMoveResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbsoluteMoveResult(AbsoluteMoveResult&& from) noexcept
    : AbsoluteMoveResult() {
    *this = ::std::move(from);
  }

  inline AbsoluteMoveResult& operator=(AbsoluteMoveResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AbsoluteMoveResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbsoluteMoveResult* internal_default_instance() {
    return reinterpret_cast<const AbsoluteMoveResult*>(
               &_AbsoluteMoveResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(AbsoluteMoveResult* other);
  friend void swap(AbsoluteMoveResult& a, AbsoluteMoveResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbsoluteMoveResult* New() const final {
    return CreateMaybeMessage<AbsoluteMoveResult>(nullptr);
  }

  AbsoluteMoveResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AbsoluteMoveResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AbsoluteMoveResult& from);
  void MergeFrom(const AbsoluteMoveResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbsoluteMoveResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AbsoluteMoveResult_Completion Completion;
  static const Completion COMPLETED =
    AbsoluteMoveResult_Completion_COMPLETED;
  static const Completion INPROGRESS =
    AbsoluteMoveResult_Completion_INPROGRESS;
  static inline bool Completion_IsValid(int value) {
    return AbsoluteMoveResult_Completion_IsValid(value);
  }
  static const Completion Completion_MIN =
    AbsoluteMoveResult_Completion_Completion_MIN;
  static const Completion Completion_MAX =
    AbsoluteMoveResult_Completion_Completion_MAX;
  static const int Completion_ARRAYSIZE =
    AbsoluteMoveResult_Completion_Completion_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Completion_descriptor() {
    return AbsoluteMoveResult_Completion_descriptor();
  }
  static inline const ::std::string& Completion_Name(Completion value) {
    return AbsoluteMoveResult_Completion_Name(value);
  }
  static inline bool Completion_Parse(const ::std::string& name,
      Completion* value) {
    return AbsoluteMoveResult_Completion_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .kaapi.PosInfo posInfo = 2;
  bool has_posinfo() const;
  void clear_posinfo();
  static const int kPosInfoFieldNumber = 2;
  const ::kaapi::PosInfo& posinfo() const;
  ::kaapi::PosInfo* release_posinfo();
  ::kaapi::PosInfo* mutable_posinfo();
  void set_allocated_posinfo(::kaapi::PosInfo* posinfo);

  // .kaapi.AbsoluteMoveResult.Completion completionStatus = 1;
  void clear_completionstatus();
  static const int kCompletionStatusFieldNumber = 1;
  ::kaapi::AbsoluteMoveResult_Completion completionstatus() const;
  void set_completionstatus(::kaapi::AbsoluteMoveResult_Completion value);

  // @@protoc_insertion_point(class_scope:kaapi.AbsoluteMoveResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::kaapi::PosInfo* posinfo_;
  int completionstatus_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// -------------------------------------------------------------------

class PosInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kaapi.PosInfo) */ {
 public:
  PosInfo();
  virtual ~PosInfo();

  PosInfo(const PosInfo& from);

  inline PosInfo& operator=(const PosInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PosInfo(PosInfo&& from) noexcept
    : PosInfo() {
    *this = ::std::move(from);
  }

  inline PosInfo& operator=(PosInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PosInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PosInfo* internal_default_instance() {
    return reinterpret_cast<const PosInfo*>(
               &_PosInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(PosInfo* other);
  friend void swap(PosInfo& a, PosInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PosInfo* New() const final {
    return CreateMaybeMessage<PosInfo>(nullptr);
  }

  PosInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PosInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PosInfo& from);
  void MergeFrom(const PosInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PosInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float panPos = 1;
  void clear_panpos();
  static const int kPanPosFieldNumber = 1;
  float panpos() const;
  void set_panpos(float value);

  // float tiltPos = 2;
  void clear_tiltpos();
  static const int kTiltPosFieldNumber = 2;
  float tiltpos() const;
  void set_tiltpos(float value);

  // float zoomPos = 3;
  void clear_zoompos();
  static const int kZoomPosFieldNumber = 3;
  float zoompos() const;
  void set_zoompos(float value);

  // float fovh = 4;
  void clear_fovh();
  static const int kFovhFieldNumber = 4;
  float fovh() const;
  void set_fovh(float value);

  // float fovv = 5;
  void clear_fovv();
  static const int kFovvFieldNumber = 5;
  float fovv() const;
  void set_fovv(float value);

  // @@protoc_insertion_point(class_scope:kaapi.PosInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float panpos_;
  float tiltpos_;
  float zoompos_;
  float fovh_;
  float fovv_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_KardelenAPI_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LocationInformation

// float pan = 1;
inline void LocationInformation::clear_pan() {
  pan_ = 0;
}
inline float LocationInformation::pan() const {
  // @@protoc_insertion_point(field_get:kaapi.LocationInformation.pan)
  return pan_;
}
inline void LocationInformation::set_pan(float value) {
  
  pan_ = value;
  // @@protoc_insertion_point(field_set:kaapi.LocationInformation.pan)
}

// float tilt = 2;
inline void LocationInformation::clear_tilt() {
  tilt_ = 0;
}
inline float LocationInformation::tilt() const {
  // @@protoc_insertion_point(field_get:kaapi.LocationInformation.tilt)
  return tilt_;
}
inline void LocationInformation::set_tilt(float value) {
  
  tilt_ = value;
  // @@protoc_insertion_point(field_set:kaapi.LocationInformation.tilt)
}

// float zoom = 3;
inline void LocationInformation::clear_zoom() {
  zoom_ = 0;
}
inline float LocationInformation::zoom() const {
  // @@protoc_insertion_point(field_get:kaapi.LocationInformation.zoom)
  return zoom_;
}
inline void LocationInformation::set_zoom(float value) {
  
  zoom_ = value;
  // @@protoc_insertion_point(field_set:kaapi.LocationInformation.zoom)
}

// -------------------------------------------------------------------

// ListOfLocationInformation

// repeated .kaapi.LocationInformation locationInformation = 1;
inline int ListOfLocationInformation::locationinformation_size() const {
  return locationinformation_.size();
}
inline void ListOfLocationInformation::clear_locationinformation() {
  locationinformation_.Clear();
}
inline ::kaapi::LocationInformation* ListOfLocationInformation::mutable_locationinformation(int index) {
  // @@protoc_insertion_point(field_mutable:kaapi.ListOfLocationInformation.locationInformation)
  return locationinformation_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::kaapi::LocationInformation >*
ListOfLocationInformation::mutable_locationinformation() {
  // @@protoc_insertion_point(field_mutable_list:kaapi.ListOfLocationInformation.locationInformation)
  return &locationinformation_;
}
inline const ::kaapi::LocationInformation& ListOfLocationInformation::locationinformation(int index) const {
  // @@protoc_insertion_point(field_get:kaapi.ListOfLocationInformation.locationInformation)
  return locationinformation_.Get(index);
}
inline ::kaapi::LocationInformation* ListOfLocationInformation::add_locationinformation() {
  // @@protoc_insertion_point(field_add:kaapi.ListOfLocationInformation.locationInformation)
  return locationinformation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::kaapi::LocationInformation >&
ListOfLocationInformation::locationinformation() const {
  // @@protoc_insertion_point(field_list:kaapi.ListOfLocationInformation.locationInformation)
  return locationinformation_;
}

// int64 intervalForCirculation = 2;
inline void ListOfLocationInformation::clear_intervalforcirculation() {
  intervalforcirculation_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ListOfLocationInformation::intervalforcirculation() const {
  // @@protoc_insertion_point(field_get:kaapi.ListOfLocationInformation.intervalForCirculation)
  return intervalforcirculation_;
}
inline void ListOfLocationInformation::set_intervalforcirculation(::google::protobuf::int64 value) {
  
  intervalforcirculation_ = value;
  // @@protoc_insertion_point(field_set:kaapi.ListOfLocationInformation.intervalForCirculation)
}

// -------------------------------------------------------------------

// CalibrationRequest

// float value1 = 1;
inline void CalibrationRequest::clear_value1() {
  value1_ = 0;
}
inline float CalibrationRequest::value1() const {
  // @@protoc_insertion_point(field_get:kaapi.CalibrationRequest.value1)
  return value1_;
}
inline void CalibrationRequest::set_value1(float value) {
  
  value1_ = value;
  // @@protoc_insertion_point(field_set:kaapi.CalibrationRequest.value1)
}

// float value2 = 2;
inline void CalibrationRequest::clear_value2() {
  value2_ = 0;
}
inline float CalibrationRequest::value2() const {
  // @@protoc_insertion_point(field_get:kaapi.CalibrationRequest.value2)
  return value2_;
}
inline void CalibrationRequest::set_value2(float value) {
  
  value2_ = value;
  // @@protoc_insertion_point(field_set:kaapi.CalibrationRequest.value2)
}

// int32 mode = 3;
inline void CalibrationRequest::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 CalibrationRequest::mode() const {
  // @@protoc_insertion_point(field_get:kaapi.CalibrationRequest.mode)
  return mode_;
}
inline void CalibrationRequest::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:kaapi.CalibrationRequest.mode)
}

// -------------------------------------------------------------------

// MotionROIRequest

// .kaapi.Polygon roi = 1;
inline bool MotionROIRequest::has_roi() const {
  return this != internal_default_instance() && roi_ != nullptr;
}
inline void MotionROIRequest::clear_roi() {
  if (GetArenaNoVirtual() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
}
inline const ::kaapi::Polygon& MotionROIRequest::roi() const {
  const ::kaapi::Polygon* p = roi_;
  // @@protoc_insertion_point(field_get:kaapi.MotionROIRequest.roi)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::Polygon*>(
      &::kaapi::_Polygon_default_instance_);
}
inline ::kaapi::Polygon* MotionROIRequest::release_roi() {
  // @@protoc_insertion_point(field_release:kaapi.MotionROIRequest.roi)
  
  ::kaapi::Polygon* temp = roi_;
  roi_ = nullptr;
  return temp;
}
inline ::kaapi::Polygon* MotionROIRequest::mutable_roi() {
  
  if (roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::Polygon>(GetArenaNoVirtual());
    roi_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.MotionROIRequest.roi)
  return roi_;
}
inline void MotionROIRequest::set_allocated_roi(::kaapi::Polygon* roi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete roi_;
  }
  if (roi) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      roi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, roi, submessage_arena);
    }
    
  } else {
    
  }
  roi_ = roi;
  // @@protoc_insertion_point(field_set_allocated:kaapi.MotionROIRequest.roi)
}

// .kaapi.Rectangle far = 2;
inline bool MotionROIRequest::has_far() const {
  return this != internal_default_instance() && far_ != nullptr;
}
inline void MotionROIRequest::clear_far() {
  if (GetArenaNoVirtual() == nullptr && far_ != nullptr) {
    delete far_;
  }
  far_ = nullptr;
}
inline const ::kaapi::Rectangle& MotionROIRequest::far() const {
  const ::kaapi::Rectangle* p = far_;
  // @@protoc_insertion_point(field_get:kaapi.MotionROIRequest.far)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::Rectangle*>(
      &::kaapi::_Rectangle_default_instance_);
}
inline ::kaapi::Rectangle* MotionROIRequest::release_far() {
  // @@protoc_insertion_point(field_release:kaapi.MotionROIRequest.far)
  
  ::kaapi::Rectangle* temp = far_;
  far_ = nullptr;
  return temp;
}
inline ::kaapi::Rectangle* MotionROIRequest::mutable_far() {
  
  if (far_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::Rectangle>(GetArenaNoVirtual());
    far_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.MotionROIRequest.far)
  return far_;
}
inline void MotionROIRequest::set_allocated_far(::kaapi::Rectangle* far) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete far_;
  }
  if (far) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      far = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, far, submessage_arena);
    }
    
  } else {
    
  }
  far_ = far;
  // @@protoc_insertion_point(field_set_allocated:kaapi.MotionROIRequest.far)
}

// .kaapi.Rectangle close = 3;
inline bool MotionROIRequest::has_close() const {
  return this != internal_default_instance() && close_ != nullptr;
}
inline void MotionROIRequest::clear_close() {
  if (GetArenaNoVirtual() == nullptr && close_ != nullptr) {
    delete close_;
  }
  close_ = nullptr;
}
inline const ::kaapi::Rectangle& MotionROIRequest::close() const {
  const ::kaapi::Rectangle* p = close_;
  // @@protoc_insertion_point(field_get:kaapi.MotionROIRequest.close)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::Rectangle*>(
      &::kaapi::_Rectangle_default_instance_);
}
inline ::kaapi::Rectangle* MotionROIRequest::release_close() {
  // @@protoc_insertion_point(field_release:kaapi.MotionROIRequest.close)
  
  ::kaapi::Rectangle* temp = close_;
  close_ = nullptr;
  return temp;
}
inline ::kaapi::Rectangle* MotionROIRequest::mutable_close() {
  
  if (close_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::Rectangle>(GetArenaNoVirtual());
    close_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.MotionROIRequest.close)
  return close_;
}
inline void MotionROIRequest::set_allocated_close(::kaapi::Rectangle* close) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete close_;
  }
  if (close) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      close = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, close, submessage_arena);
    }
    
  } else {
    
  }
  close_ = close;
  // @@protoc_insertion_point(field_set_allocated:kaapi.MotionROIRequest.close)
}

// -------------------------------------------------------------------

// ApiVersion

// string date = 1;
inline void ApiVersion::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApiVersion::date() const {
  // @@protoc_insertion_point(field_get:kaapi.ApiVersion.date)
  return date_.GetNoArena();
}
inline void ApiVersion::set_date(const ::std::string& value) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kaapi.ApiVersion.date)
}
#if LANG_CXX11
inline void ApiVersion::set_date(::std::string&& value) {
  
  date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kaapi.ApiVersion.date)
}
#endif
inline void ApiVersion::set_date(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kaapi.ApiVersion.date)
}
inline void ApiVersion::set_date(const char* value, size_t size) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kaapi.ApiVersion.date)
}
inline ::std::string* ApiVersion::mutable_date() {
  
  // @@protoc_insertion_point(field_mutable:kaapi.ApiVersion.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiVersion::release_date() {
  // @@protoc_insertion_point(field_release:kaapi.ApiVersion.date)
  
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiVersion::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    
  } else {
    
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:kaapi.ApiVersion.date)
}

// string time = 2;
inline void ApiVersion::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApiVersion::time() const {
  // @@protoc_insertion_point(field_get:kaapi.ApiVersion.time)
  return time_.GetNoArena();
}
inline void ApiVersion::set_time(const ::std::string& value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kaapi.ApiVersion.time)
}
#if LANG_CXX11
inline void ApiVersion::set_time(::std::string&& value) {
  
  time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kaapi.ApiVersion.time)
}
#endif
inline void ApiVersion::set_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kaapi.ApiVersion.time)
}
inline void ApiVersion::set_time(const char* value, size_t size) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kaapi.ApiVersion.time)
}
inline ::std::string* ApiVersion::mutable_time() {
  
  // @@protoc_insertion_point(field_mutable:kaapi.ApiVersion.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiVersion::release_time() {
  // @@protoc_insertion_point(field_release:kaapi.ApiVersion.time)
  
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiVersion::set_allocated_time(::std::string* time) {
  if (time != nullptr) {
    
  } else {
    
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:kaapi.ApiVersion.time)
}

// string version = 3;
inline void ApiVersion::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApiVersion::version() const {
  // @@protoc_insertion_point(field_get:kaapi.ApiVersion.version)
  return version_.GetNoArena();
}
inline void ApiVersion::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kaapi.ApiVersion.version)
}
#if LANG_CXX11
inline void ApiVersion::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kaapi.ApiVersion.version)
}
#endif
inline void ApiVersion::set_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kaapi.ApiVersion.version)
}
inline void ApiVersion::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kaapi.ApiVersion.version)
}
inline ::std::string* ApiVersion::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:kaapi.ApiVersion.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApiVersion::release_version() {
  // @@protoc_insertion_point(field_release:kaapi.ApiVersion.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApiVersion::set_allocated_version(::std::string* version) {
  if (version != nullptr) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:kaapi.ApiVersion.version)
}

// -------------------------------------------------------------------

// ClickParameter

// .kaapi.Point pt = 1;
inline bool ClickParameter::has_pt() const {
  return this != internal_default_instance() && pt_ != nullptr;
}
inline void ClickParameter::clear_pt() {
  if (GetArenaNoVirtual() == nullptr && pt_ != nullptr) {
    delete pt_;
  }
  pt_ = nullptr;
}
inline const ::kaapi::Point& ClickParameter::pt() const {
  const ::kaapi::Point* p = pt_;
  // @@protoc_insertion_point(field_get:kaapi.ClickParameter.pt)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::Point*>(
      &::kaapi::_Point_default_instance_);
}
inline ::kaapi::Point* ClickParameter::release_pt() {
  // @@protoc_insertion_point(field_release:kaapi.ClickParameter.pt)
  
  ::kaapi::Point* temp = pt_;
  pt_ = nullptr;
  return temp;
}
inline ::kaapi::Point* ClickParameter::mutable_pt() {
  
  if (pt_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::Point>(GetArenaNoVirtual());
    pt_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.ClickParameter.pt)
  return pt_;
}
inline void ClickParameter::set_allocated_pt(::kaapi::Point* pt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pt_;
  }
  if (pt) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pt, submessage_arena);
    }
    
  } else {
    
  }
  pt_ = pt;
  // @@protoc_insertion_point(field_set_allocated:kaapi.ClickParameter.pt)
}

// int32 value = 2;
inline void ClickParameter::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 ClickParameter::value() const {
  // @@protoc_insertion_point(field_get:kaapi.ClickParameter.value)
  return value_;
}
inline void ClickParameter::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:kaapi.ClickParameter.value)
}

// -------------------------------------------------------------------

// GetNumericParameterRequest

// int32 index = 1;
inline void GetNumericParameterRequest::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 GetNumericParameterRequest::index() const {
  // @@protoc_insertion_point(field_get:kaapi.GetNumericParameterRequest.index)
  return index_;
}
inline void GetNumericParameterRequest::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:kaapi.GetNumericParameterRequest.index)
}

// -------------------------------------------------------------------

// GetNumericParameterResponse

// .kaapi.NumericParameter value = 1;
inline bool GetNumericParameterResponse::has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline void GetNumericParameterResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
inline const ::kaapi::NumericParameter& GetNumericParameterResponse::value() const {
  const ::kaapi::NumericParameter* p = value_;
  // @@protoc_insertion_point(field_get:kaapi.GetNumericParameterResponse.value)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::NumericParameter*>(
      &::kaapi::_NumericParameter_default_instance_);
}
inline ::kaapi::NumericParameter* GetNumericParameterResponse::release_value() {
  // @@protoc_insertion_point(field_release:kaapi.GetNumericParameterResponse.value)
  
  ::kaapi::NumericParameter* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::kaapi::NumericParameter* GetNumericParameterResponse::mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::NumericParameter>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.GetNumericParameterResponse.value)
  return value_;
}
inline void GetNumericParameterResponse::set_allocated_value(::kaapi::NumericParameter* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:kaapi.GetNumericParameterResponse.value)
}

// -------------------------------------------------------------------

// GetEnumParameterRequest

// int32 index = 1;
inline void GetEnumParameterRequest::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 GetEnumParameterRequest::index() const {
  // @@protoc_insertion_point(field_get:kaapi.GetEnumParameterRequest.index)
  return index_;
}
inline void GetEnumParameterRequest::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:kaapi.GetEnumParameterRequest.index)
}

// -------------------------------------------------------------------

// GetEnumParameterResponse

// int32 value = 1;
inline void GetEnumParameterResponse::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 GetEnumParameterResponse::value() const {
  // @@protoc_insertion_point(field_get:kaapi.GetEnumParameterResponse.value)
  return value_;
}
inline void GetEnumParameterResponse::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:kaapi.GetEnumParameterResponse.value)
}

// -------------------------------------------------------------------

// SetNumericParameterRequest

// int32 index = 1;
inline void SetNumericParameterRequest::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 SetNumericParameterRequest::index() const {
  // @@protoc_insertion_point(field_get:kaapi.SetNumericParameterRequest.index)
  return index_;
}
inline void SetNumericParameterRequest::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:kaapi.SetNumericParameterRequest.index)
}

// .kaapi.NumericParameter value = 2;
inline bool SetNumericParameterRequest::has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline void SetNumericParameterRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
inline const ::kaapi::NumericParameter& SetNumericParameterRequest::value() const {
  const ::kaapi::NumericParameter* p = value_;
  // @@protoc_insertion_point(field_get:kaapi.SetNumericParameterRequest.value)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::NumericParameter*>(
      &::kaapi::_NumericParameter_default_instance_);
}
inline ::kaapi::NumericParameter* SetNumericParameterRequest::release_value() {
  // @@protoc_insertion_point(field_release:kaapi.SetNumericParameterRequest.value)
  
  ::kaapi::NumericParameter* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::kaapi::NumericParameter* SetNumericParameterRequest::mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::NumericParameter>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.SetNumericParameterRequest.value)
  return value_;
}
inline void SetNumericParameterRequest::set_allocated_value(::kaapi::NumericParameter* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:kaapi.SetNumericParameterRequest.value)
}

// -------------------------------------------------------------------

// SetNumericParameterResponse

// .kaapi.NumericParameter value = 1;
inline bool SetNumericParameterResponse::has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline void SetNumericParameterResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
inline const ::kaapi::NumericParameter& SetNumericParameterResponse::value() const {
  const ::kaapi::NumericParameter* p = value_;
  // @@protoc_insertion_point(field_get:kaapi.SetNumericParameterResponse.value)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::NumericParameter*>(
      &::kaapi::_NumericParameter_default_instance_);
}
inline ::kaapi::NumericParameter* SetNumericParameterResponse::release_value() {
  // @@protoc_insertion_point(field_release:kaapi.SetNumericParameterResponse.value)
  
  ::kaapi::NumericParameter* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::kaapi::NumericParameter* SetNumericParameterResponse::mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::NumericParameter>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.SetNumericParameterResponse.value)
  return value_;
}
inline void SetNumericParameterResponse::set_allocated_value(::kaapi::NumericParameter* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:kaapi.SetNumericParameterResponse.value)
}

// -------------------------------------------------------------------

// SetEnumParameterRequest

// int32 index = 1;
inline void SetEnumParameterRequest::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 SetEnumParameterRequest::index() const {
  // @@protoc_insertion_point(field_get:kaapi.SetEnumParameterRequest.index)
  return index_;
}
inline void SetEnumParameterRequest::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:kaapi.SetEnumParameterRequest.index)
}

// int32 value = 2;
inline void SetEnumParameterRequest::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 SetEnumParameterRequest::value() const {
  // @@protoc_insertion_point(field_get:kaapi.SetEnumParameterRequest.value)
  return value_;
}
inline void SetEnumParameterRequest::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:kaapi.SetEnumParameterRequest.value)
}

// -------------------------------------------------------------------

// SetEnumParameterResponse

// int32 value = 1;
inline void SetEnumParameterResponse::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 SetEnumParameterResponse::value() const {
  // @@protoc_insertion_point(field_get:kaapi.SetEnumParameterResponse.value)
  return value_;
}
inline void SetEnumParameterResponse::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:kaapi.SetEnumParameterResponse.value)
}

// -------------------------------------------------------------------

// SetEnumCommandRequest

// int32 index = 1;
inline void SetEnumCommandRequest::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 SetEnumCommandRequest::index() const {
  // @@protoc_insertion_point(field_get:kaapi.SetEnumCommandRequest.index)
  return index_;
}
inline void SetEnumCommandRequest::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:kaapi.SetEnumCommandRequest.index)
}

// int32 value = 2;
inline void SetEnumCommandRequest::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 SetEnumCommandRequest::value() const {
  // @@protoc_insertion_point(field_get:kaapi.SetEnumCommandRequest.value)
  return value_;
}
inline void SetEnumCommandRequest::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:kaapi.SetEnumCommandRequest.value)
}

// -------------------------------------------------------------------

// SetEnumCommandResponse

// int32 value = 1;
inline void SetEnumCommandResponse::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 SetEnumCommandResponse::value() const {
  // @@protoc_insertion_point(field_get:kaapi.SetEnumCommandResponse.value)
  return value_;
}
inline void SetEnumCommandResponse::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:kaapi.SetEnumCommandResponse.value)
}

// -------------------------------------------------------------------

// SetCameraRequest

// int32 cameraType = 1;
inline void SetCameraRequest::clear_cameratype() {
  cameratype_ = 0;
}
inline ::google::protobuf::int32 SetCameraRequest::cameratype() const {
  // @@protoc_insertion_point(field_get:kaapi.SetCameraRequest.cameraType)
  return cameratype_;
}
inline void SetCameraRequest::set_cameratype(::google::protobuf::int32 value) {
  
  cameratype_ = value;
  // @@protoc_insertion_point(field_set:kaapi.SetCameraRequest.cameraType)
}

// -------------------------------------------------------------------

// SetCameraResponse

// int64 capabilities = 1;
inline void SetCameraResponse::clear_capabilities() {
  capabilities_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 SetCameraResponse::capabilities() const {
  // @@protoc_insertion_point(field_get:kaapi.SetCameraResponse.capabilities)
  return capabilities_;
}
inline void SetCameraResponse::set_capabilities(::google::protobuf::int64 value) {
  
  capabilities_ = value;
  // @@protoc_insertion_point(field_set:kaapi.SetCameraResponse.capabilities)
}

// -------------------------------------------------------------------

// CommWrite

// .kaapi.CommWrite.Action action = 1;
inline void CommWrite::clear_action() {
  action_ = 0;
}
inline ::kaapi::CommWrite_Action CommWrite::action() const {
  // @@protoc_insertion_point(field_get:kaapi.CommWrite.action)
  return static_cast< ::kaapi::CommWrite_Action >(action_);
}
inline void CommWrite::set_action(::kaapi::CommWrite_Action value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:kaapi.CommWrite.action)
}

// .kaapi.AbsoluteMoveParameters abspars = 2;
inline bool CommWrite::has_abspars() const {
  return this != internal_default_instance() && abspars_ != nullptr;
}
inline void CommWrite::clear_abspars() {
  if (GetArenaNoVirtual() == nullptr && abspars_ != nullptr) {
    delete abspars_;
  }
  abspars_ = nullptr;
}
inline const ::kaapi::AbsoluteMoveParameters& CommWrite::abspars() const {
  const ::kaapi::AbsoluteMoveParameters* p = abspars_;
  // @@protoc_insertion_point(field_get:kaapi.CommWrite.abspars)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::AbsoluteMoveParameters*>(
      &::kaapi::_AbsoluteMoveParameters_default_instance_);
}
inline ::kaapi::AbsoluteMoveParameters* CommWrite::release_abspars() {
  // @@protoc_insertion_point(field_release:kaapi.CommWrite.abspars)
  
  ::kaapi::AbsoluteMoveParameters* temp = abspars_;
  abspars_ = nullptr;
  return temp;
}
inline ::kaapi::AbsoluteMoveParameters* CommWrite::mutable_abspars() {
  
  if (abspars_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::AbsoluteMoveParameters>(GetArenaNoVirtual());
    abspars_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.CommWrite.abspars)
  return abspars_;
}
inline void CommWrite::set_allocated_abspars(::kaapi::AbsoluteMoveParameters* abspars) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete abspars_;
  }
  if (abspars) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      abspars = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, abspars, submessage_arena);
    }
    
  } else {
    
  }
  abspars_ = abspars;
  // @@protoc_insertion_point(field_set_allocated:kaapi.CommWrite.abspars)
}

// .kaapi.RelativeMoveParameters relpars = 3;
inline bool CommWrite::has_relpars() const {
  return this != internal_default_instance() && relpars_ != nullptr;
}
inline void CommWrite::clear_relpars() {
  if (GetArenaNoVirtual() == nullptr && relpars_ != nullptr) {
    delete relpars_;
  }
  relpars_ = nullptr;
}
inline const ::kaapi::RelativeMoveParameters& CommWrite::relpars() const {
  const ::kaapi::RelativeMoveParameters* p = relpars_;
  // @@protoc_insertion_point(field_get:kaapi.CommWrite.relpars)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::RelativeMoveParameters*>(
      &::kaapi::_RelativeMoveParameters_default_instance_);
}
inline ::kaapi::RelativeMoveParameters* CommWrite::release_relpars() {
  // @@protoc_insertion_point(field_release:kaapi.CommWrite.relpars)
  
  ::kaapi::RelativeMoveParameters* temp = relpars_;
  relpars_ = nullptr;
  return temp;
}
inline ::kaapi::RelativeMoveParameters* CommWrite::mutable_relpars() {
  
  if (relpars_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::RelativeMoveParameters>(GetArenaNoVirtual());
    relpars_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.CommWrite.relpars)
  return relpars_;
}
inline void CommWrite::set_allocated_relpars(::kaapi::RelativeMoveParameters* relpars) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete relpars_;
  }
  if (relpars) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      relpars = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, relpars, submessage_arena);
    }
    
  } else {
    
  }
  relpars_ = relpars;
  // @@protoc_insertion_point(field_set_allocated:kaapi.CommWrite.relpars)
}

// .kaapi.UpdateCameraStatusParameters updpars = 4;
inline bool CommWrite::has_updpars() const {
  return this != internal_default_instance() && updpars_ != nullptr;
}
inline void CommWrite::clear_updpars() {
  if (GetArenaNoVirtual() == nullptr && updpars_ != nullptr) {
    delete updpars_;
  }
  updpars_ = nullptr;
}
inline const ::kaapi::UpdateCameraStatusParameters& CommWrite::updpars() const {
  const ::kaapi::UpdateCameraStatusParameters* p = updpars_;
  // @@protoc_insertion_point(field_get:kaapi.CommWrite.updpars)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::UpdateCameraStatusParameters*>(
      &::kaapi::_UpdateCameraStatusParameters_default_instance_);
}
inline ::kaapi::UpdateCameraStatusParameters* CommWrite::release_updpars() {
  // @@protoc_insertion_point(field_release:kaapi.CommWrite.updpars)
  
  ::kaapi::UpdateCameraStatusParameters* temp = updpars_;
  updpars_ = nullptr;
  return temp;
}
inline ::kaapi::UpdateCameraStatusParameters* CommWrite::mutable_updpars() {
  
  if (updpars_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::UpdateCameraStatusParameters>(GetArenaNoVirtual());
    updpars_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.CommWrite.updpars)
  return updpars_;
}
inline void CommWrite::set_allocated_updpars(::kaapi::UpdateCameraStatusParameters* updpars) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete updpars_;
  }
  if (updpars) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      updpars = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, updpars, submessage_arena);
    }
    
  } else {
    
  }
  updpars_ = updpars;
  // @@protoc_insertion_point(field_set_allocated:kaapi.CommWrite.updpars)
}

// -------------------------------------------------------------------

// CommRead

// .kaapi.PosInfo posInfo = 1;
inline bool CommRead::has_posinfo() const {
  return this != internal_default_instance() && posinfo_ != nullptr;
}
inline void CommRead::clear_posinfo() {
  if (GetArenaNoVirtual() == nullptr && posinfo_ != nullptr) {
    delete posinfo_;
  }
  posinfo_ = nullptr;
}
inline const ::kaapi::PosInfo& CommRead::posinfo() const {
  const ::kaapi::PosInfo* p = posinfo_;
  // @@protoc_insertion_point(field_get:kaapi.CommRead.posInfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::PosInfo*>(
      &::kaapi::_PosInfo_default_instance_);
}
inline ::kaapi::PosInfo* CommRead::release_posinfo() {
  // @@protoc_insertion_point(field_release:kaapi.CommRead.posInfo)
  
  ::kaapi::PosInfo* temp = posinfo_;
  posinfo_ = nullptr;
  return temp;
}
inline ::kaapi::PosInfo* CommRead::mutable_posinfo() {
  
  if (posinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::PosInfo>(GetArenaNoVirtual());
    posinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.CommRead.posInfo)
  return posinfo_;
}
inline void CommRead::set_allocated_posinfo(::kaapi::PosInfo* posinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete posinfo_;
  }
  if (posinfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      posinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, posinfo, submessage_arena);
    }
    
  } else {
    
  }
  posinfo_ = posinfo;
  // @@protoc_insertion_point(field_set_allocated:kaapi.CommRead.posInfo)
}

// .kaapi.CameraStatus status = 2;
inline bool CommRead::has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline void CommRead::clear_status() {
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
inline const ::kaapi::CameraStatus& CommRead::status() const {
  const ::kaapi::CameraStatus* p = status_;
  // @@protoc_insertion_point(field_get:kaapi.CommRead.status)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::CameraStatus*>(
      &::kaapi::_CameraStatus_default_instance_);
}
inline ::kaapi::CameraStatus* CommRead::release_status() {
  // @@protoc_insertion_point(field_release:kaapi.CommRead.status)
  
  ::kaapi::CameraStatus* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::kaapi::CameraStatus* CommRead::mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::CameraStatus>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.CommRead.status)
  return status_;
}
inline void CommRead::set_allocated_status(::kaapi::CameraStatus* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:kaapi.CommRead.status)
}

// .kaapi.AbsoluteMoveResult absres = 3;
inline bool CommRead::has_absres() const {
  return this != internal_default_instance() && absres_ != nullptr;
}
inline void CommRead::clear_absres() {
  if (GetArenaNoVirtual() == nullptr && absres_ != nullptr) {
    delete absres_;
  }
  absres_ = nullptr;
}
inline const ::kaapi::AbsoluteMoveResult& CommRead::absres() const {
  const ::kaapi::AbsoluteMoveResult* p = absres_;
  // @@protoc_insertion_point(field_get:kaapi.CommRead.absres)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::AbsoluteMoveResult*>(
      &::kaapi::_AbsoluteMoveResult_default_instance_);
}
inline ::kaapi::AbsoluteMoveResult* CommRead::release_absres() {
  // @@protoc_insertion_point(field_release:kaapi.CommRead.absres)
  
  ::kaapi::AbsoluteMoveResult* temp = absres_;
  absres_ = nullptr;
  return temp;
}
inline ::kaapi::AbsoluteMoveResult* CommRead::mutable_absres() {
  
  if (absres_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::AbsoluteMoveResult>(GetArenaNoVirtual());
    absres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.CommRead.absres)
  return absres_;
}
inline void CommRead::set_allocated_absres(::kaapi::AbsoluteMoveResult* absres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete absres_;
  }
  if (absres) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      absres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, absres, submessage_arena);
    }
    
  } else {
    
  }
  absres_ = absres;
  // @@protoc_insertion_point(field_set_allocated:kaapi.CommRead.absres)
}

// .kaapi.RelativeMoveResult relres = 4;
inline bool CommRead::has_relres() const {
  return this != internal_default_instance() && relres_ != nullptr;
}
inline void CommRead::clear_relres() {
  if (GetArenaNoVirtual() == nullptr && relres_ != nullptr) {
    delete relres_;
  }
  relres_ = nullptr;
}
inline const ::kaapi::RelativeMoveResult& CommRead::relres() const {
  const ::kaapi::RelativeMoveResult* p = relres_;
  // @@protoc_insertion_point(field_get:kaapi.CommRead.relres)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::RelativeMoveResult*>(
      &::kaapi::_RelativeMoveResult_default_instance_);
}
inline ::kaapi::RelativeMoveResult* CommRead::release_relres() {
  // @@protoc_insertion_point(field_release:kaapi.CommRead.relres)
  
  ::kaapi::RelativeMoveResult* temp = relres_;
  relres_ = nullptr;
  return temp;
}
inline ::kaapi::RelativeMoveResult* CommRead::mutable_relres() {
  
  if (relres_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::RelativeMoveResult>(GetArenaNoVirtual());
    relres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.CommRead.relres)
  return relres_;
}
inline void CommRead::set_allocated_relres(::kaapi::RelativeMoveResult* relres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete relres_;
  }
  if (relres) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      relres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, relres, submessage_arena);
    }
    
  } else {
    
  }
  relres_ = relres;
  // @@protoc_insertion_point(field_set_allocated:kaapi.CommRead.relres)
}

// repeated string keys = 5;
inline int CommRead::keys_size() const {
  return keys_.size();
}
inline void CommRead::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& CommRead::keys(int index) const {
  // @@protoc_insertion_point(field_get:kaapi.CommRead.keys)
  return keys_.Get(index);
}
inline ::std::string* CommRead::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:kaapi.CommRead.keys)
  return keys_.Mutable(index);
}
inline void CommRead::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:kaapi.CommRead.keys)
  keys_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CommRead::set_keys(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:kaapi.CommRead.keys)
  keys_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CommRead::set_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kaapi.CommRead.keys)
}
inline void CommRead::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kaapi.CommRead.keys)
}
inline ::std::string* CommRead::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:kaapi.CommRead.keys)
  return keys_.Add();
}
inline void CommRead::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kaapi.CommRead.keys)
}
#if LANG_CXX11
inline void CommRead::add_keys(::std::string&& value) {
  keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kaapi.CommRead.keys)
}
#endif
inline void CommRead::add_keys(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kaapi.CommRead.keys)
}
inline void CommRead::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kaapi.CommRead.keys)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CommRead::keys() const {
  // @@protoc_insertion_point(field_list:kaapi.CommRead.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CommRead::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:kaapi.CommRead.keys)
  return &keys_;
}

// repeated string values = 6;
inline int CommRead::values_size() const {
  return values_.size();
}
inline void CommRead::clear_values() {
  values_.Clear();
}
inline const ::std::string& CommRead::values(int index) const {
  // @@protoc_insertion_point(field_get:kaapi.CommRead.values)
  return values_.Get(index);
}
inline ::std::string* CommRead::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:kaapi.CommRead.values)
  return values_.Mutable(index);
}
inline void CommRead::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:kaapi.CommRead.values)
  values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CommRead::set_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:kaapi.CommRead.values)
  values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CommRead::set_values(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kaapi.CommRead.values)
}
inline void CommRead::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kaapi.CommRead.values)
}
inline ::std::string* CommRead::add_values() {
  // @@protoc_insertion_point(field_add_mutable:kaapi.CommRead.values)
  return values_.Add();
}
inline void CommRead::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kaapi.CommRead.values)
}
#if LANG_CXX11
inline void CommRead::add_values(::std::string&& value) {
  values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kaapi.CommRead.values)
}
#endif
inline void CommRead::add_values(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kaapi.CommRead.values)
}
inline void CommRead::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kaapi.CommRead.values)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CommRead::values() const {
  // @@protoc_insertion_point(field_list:kaapi.CommRead.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CommRead::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:kaapi.CommRead.values)
  return &values_;
}

// bytes frameData = 7;
inline void CommRead::clear_framedata() {
  framedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommRead::framedata() const {
  // @@protoc_insertion_point(field_get:kaapi.CommRead.frameData)
  return framedata_.GetNoArena();
}
inline void CommRead::set_framedata(const ::std::string& value) {
  
  framedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kaapi.CommRead.frameData)
}
#if LANG_CXX11
inline void CommRead::set_framedata(::std::string&& value) {
  
  framedata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kaapi.CommRead.frameData)
}
#endif
inline void CommRead::set_framedata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  framedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kaapi.CommRead.frameData)
}
inline void CommRead::set_framedata(const void* value, size_t size) {
  
  framedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kaapi.CommRead.frameData)
}
inline ::std::string* CommRead::mutable_framedata() {
  
  // @@protoc_insertion_point(field_mutable:kaapi.CommRead.frameData)
  return framedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommRead::release_framedata() {
  // @@protoc_insertion_point(field_release:kaapi.CommRead.frameData)
  
  return framedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommRead::set_allocated_framedata(::std::string* framedata) {
  if (framedata != nullptr) {
    
  } else {
    
  }
  framedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), framedata);
  // @@protoc_insertion_point(field_set_allocated:kaapi.CommRead.frameData)
}

// -------------------------------------------------------------------

// UpdateCameraStatusParameters

// .kaapi.CameraStatus status = 1;
inline bool UpdateCameraStatusParameters::has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline void UpdateCameraStatusParameters::clear_status() {
  if (GetArenaNoVirtual() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
inline const ::kaapi::CameraStatus& UpdateCameraStatusParameters::status() const {
  const ::kaapi::CameraStatus* p = status_;
  // @@protoc_insertion_point(field_get:kaapi.UpdateCameraStatusParameters.status)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::CameraStatus*>(
      &::kaapi::_CameraStatus_default_instance_);
}
inline ::kaapi::CameraStatus* UpdateCameraStatusParameters::release_status() {
  // @@protoc_insertion_point(field_release:kaapi.UpdateCameraStatusParameters.status)
  
  ::kaapi::CameraStatus* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::kaapi::CameraStatus* UpdateCameraStatusParameters::mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::CameraStatus>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.UpdateCameraStatusParameters.status)
  return status_;
}
inline void UpdateCameraStatusParameters::set_allocated_status(::kaapi::CameraStatus* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:kaapi.UpdateCameraStatusParameters.status)
}

// -------------------------------------------------------------------

// GetCameraStatusParameters

// int64 filters = 1;
inline void GetCameraStatusParameters::clear_filters() {
  filters_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GetCameraStatusParameters::filters() const {
  // @@protoc_insertion_point(field_get:kaapi.GetCameraStatusParameters.filters)
  return filters_;
}
inline void GetCameraStatusParameters::set_filters(::google::protobuf::int64 value) {
  
  filters_ = value;
  // @@protoc_insertion_point(field_set:kaapi.GetCameraStatusParameters.filters)
}

// -------------------------------------------------------------------

// CameraStatus

// int64 capabilities = 1;
inline void CameraStatus::clear_capabilities() {
  capabilities_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 CameraStatus::capabilities() const {
  // @@protoc_insertion_point(field_get:kaapi.CameraStatus.capabilities)
  return capabilities_;
}
inline void CameraStatus::set_capabilities(::google::protobuf::int64 value) {
  
  capabilities_ = value;
  // @@protoc_insertion_point(field_set:kaapi.CameraStatus.capabilities)
}

// int32 numericParametersVector = 2;
inline void CameraStatus::clear_numericparametersvector() {
  numericparametersvector_ = 0;
}
inline ::google::protobuf::int32 CameraStatus::numericparametersvector() const {
  // @@protoc_insertion_point(field_get:kaapi.CameraStatus.numericParametersVector)
  return numericparametersvector_;
}
inline void CameraStatus::set_numericparametersvector(::google::protobuf::int32 value) {
  
  numericparametersvector_ = value;
  // @@protoc_insertion_point(field_set:kaapi.CameraStatus.numericParametersVector)
}

// repeated .kaapi.NumericParameter numericParameters = 3;
inline int CameraStatus::numericparameters_size() const {
  return numericparameters_.size();
}
inline void CameraStatus::clear_numericparameters() {
  numericparameters_.Clear();
}
inline ::kaapi::NumericParameter* CameraStatus::mutable_numericparameters(int index) {
  // @@protoc_insertion_point(field_mutable:kaapi.CameraStatus.numericParameters)
  return numericparameters_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::kaapi::NumericParameter >*
CameraStatus::mutable_numericparameters() {
  // @@protoc_insertion_point(field_mutable_list:kaapi.CameraStatus.numericParameters)
  return &numericparameters_;
}
inline const ::kaapi::NumericParameter& CameraStatus::numericparameters(int index) const {
  // @@protoc_insertion_point(field_get:kaapi.CameraStatus.numericParameters)
  return numericparameters_.Get(index);
}
inline ::kaapi::NumericParameter* CameraStatus::add_numericparameters() {
  // @@protoc_insertion_point(field_add:kaapi.CameraStatus.numericParameters)
  return numericparameters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::kaapi::NumericParameter >&
CameraStatus::numericparameters() const {
  // @@protoc_insertion_point(field_list:kaapi.CameraStatus.numericParameters)
  return numericparameters_;
}

// int32 enumParametersVector = 4;
inline void CameraStatus::clear_enumparametersvector() {
  enumparametersvector_ = 0;
}
inline ::google::protobuf::int32 CameraStatus::enumparametersvector() const {
  // @@protoc_insertion_point(field_get:kaapi.CameraStatus.enumParametersVector)
  return enumparametersvector_;
}
inline void CameraStatus::set_enumparametersvector(::google::protobuf::int32 value) {
  
  enumparametersvector_ = value;
  // @@protoc_insertion_point(field_set:kaapi.CameraStatus.enumParametersVector)
}

// repeated int32 enumParameters = 5;
inline int CameraStatus::enumparameters_size() const {
  return enumparameters_.size();
}
inline void CameraStatus::clear_enumparameters() {
  enumparameters_.Clear();
}
inline ::google::protobuf::int32 CameraStatus::enumparameters(int index) const {
  // @@protoc_insertion_point(field_get:kaapi.CameraStatus.enumParameters)
  return enumparameters_.Get(index);
}
inline void CameraStatus::set_enumparameters(int index, ::google::protobuf::int32 value) {
  enumparameters_.Set(index, value);
  // @@protoc_insertion_point(field_set:kaapi.CameraStatus.enumParameters)
}
inline void CameraStatus::add_enumparameters(::google::protobuf::int32 value) {
  enumparameters_.Add(value);
  // @@protoc_insertion_point(field_add:kaapi.CameraStatus.enumParameters)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CameraStatus::enumparameters() const {
  // @@protoc_insertion_point(field_list:kaapi.CameraStatus.enumParameters)
  return enumparameters_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CameraStatus::mutable_enumparameters() {
  // @@protoc_insertion_point(field_mutable_list:kaapi.CameraStatus.enumParameters)
  return &enumparameters_;
}

// int32 enumCommandsVector = 6;
inline void CameraStatus::clear_enumcommandsvector() {
  enumcommandsvector_ = 0;
}
inline ::google::protobuf::int32 CameraStatus::enumcommandsvector() const {
  // @@protoc_insertion_point(field_get:kaapi.CameraStatus.enumCommandsVector)
  return enumcommandsvector_;
}
inline void CameraStatus::set_enumcommandsvector(::google::protobuf::int32 value) {
  
  enumcommandsvector_ = value;
  // @@protoc_insertion_point(field_set:kaapi.CameraStatus.enumCommandsVector)
}

// repeated int32 enumCommands = 7;
inline int CameraStatus::enumcommands_size() const {
  return enumcommands_.size();
}
inline void CameraStatus::clear_enumcommands() {
  enumcommands_.Clear();
}
inline ::google::protobuf::int32 CameraStatus::enumcommands(int index) const {
  // @@protoc_insertion_point(field_get:kaapi.CameraStatus.enumCommands)
  return enumcommands_.Get(index);
}
inline void CameraStatus::set_enumcommands(int index, ::google::protobuf::int32 value) {
  enumcommands_.Set(index, value);
  // @@protoc_insertion_point(field_set:kaapi.CameraStatus.enumCommands)
}
inline void CameraStatus::add_enumcommands(::google::protobuf::int32 value) {
  enumcommands_.Add(value);
  // @@protoc_insertion_point(field_add:kaapi.CameraStatus.enumCommands)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CameraStatus::enumcommands() const {
  // @@protoc_insertion_point(field_list:kaapi.CameraStatus.enumCommands)
  return enumcommands_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CameraStatus::mutable_enumcommands() {
  // @@protoc_insertion_point(field_mutable_list:kaapi.CameraStatus.enumCommands)
  return &enumcommands_;
}

// .kaapi.Calibration calibration = 8;
inline bool CameraStatus::has_calibration() const {
  return this != internal_default_instance() && calibration_ != nullptr;
}
inline void CameraStatus::clear_calibration() {
  if (GetArenaNoVirtual() == nullptr && calibration_ != nullptr) {
    delete calibration_;
  }
  calibration_ = nullptr;
}
inline const ::kaapi::Calibration& CameraStatus::calibration() const {
  const ::kaapi::Calibration* p = calibration_;
  // @@protoc_insertion_point(field_get:kaapi.CameraStatus.calibration)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::Calibration*>(
      &::kaapi::_Calibration_default_instance_);
}
inline ::kaapi::Calibration* CameraStatus::release_calibration() {
  // @@protoc_insertion_point(field_release:kaapi.CameraStatus.calibration)
  
  ::kaapi::Calibration* temp = calibration_;
  calibration_ = nullptr;
  return temp;
}
inline ::kaapi::Calibration* CameraStatus::mutable_calibration() {
  
  if (calibration_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::Calibration>(GetArenaNoVirtual());
    calibration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.CameraStatus.calibration)
  return calibration_;
}
inline void CameraStatus::set_allocated_calibration(::kaapi::Calibration* calibration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete calibration_;
  }
  if (calibration) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      calibration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, calibration, submessage_arena);
    }
    
  } else {
    
  }
  calibration_ = calibration;
  // @@protoc_insertion_point(field_set_allocated:kaapi.CameraStatus.calibration)
}

// .kaapi.Boresight boresight = 9;
inline bool CameraStatus::has_boresight() const {
  return this != internal_default_instance() && boresight_ != nullptr;
}
inline void CameraStatus::clear_boresight() {
  if (GetArenaNoVirtual() == nullptr && boresight_ != nullptr) {
    delete boresight_;
  }
  boresight_ = nullptr;
}
inline const ::kaapi::Boresight& CameraStatus::boresight() const {
  const ::kaapi::Boresight* p = boresight_;
  // @@protoc_insertion_point(field_get:kaapi.CameraStatus.boresight)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::Boresight*>(
      &::kaapi::_Boresight_default_instance_);
}
inline ::kaapi::Boresight* CameraStatus::release_boresight() {
  // @@protoc_insertion_point(field_release:kaapi.CameraStatus.boresight)
  
  ::kaapi::Boresight* temp = boresight_;
  boresight_ = nullptr;
  return temp;
}
inline ::kaapi::Boresight* CameraStatus::mutable_boresight() {
  
  if (boresight_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::Boresight>(GetArenaNoVirtual());
    boresight_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.CameraStatus.boresight)
  return boresight_;
}
inline void CameraStatus::set_allocated_boresight(::kaapi::Boresight* boresight) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete boresight_;
  }
  if (boresight) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      boresight = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boresight, submessage_arena);
    }
    
  } else {
    
  }
  boresight_ = boresight;
  // @@protoc_insertion_point(field_set_allocated:kaapi.CameraStatus.boresight)
}

// .kaapi.ROI roi = 10;
inline bool CameraStatus::has_roi() const {
  return this != internal_default_instance() && roi_ != nullptr;
}
inline void CameraStatus::clear_roi() {
  if (GetArenaNoVirtual() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
}
inline const ::kaapi::ROI& CameraStatus::roi() const {
  const ::kaapi::ROI* p = roi_;
  // @@protoc_insertion_point(field_get:kaapi.CameraStatus.roi)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::ROI*>(
      &::kaapi::_ROI_default_instance_);
}
inline ::kaapi::ROI* CameraStatus::release_roi() {
  // @@protoc_insertion_point(field_release:kaapi.CameraStatus.roi)
  
  ::kaapi::ROI* temp = roi_;
  roi_ = nullptr;
  return temp;
}
inline ::kaapi::ROI* CameraStatus::mutable_roi() {
  
  if (roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::ROI>(GetArenaNoVirtual());
    roi_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.CameraStatus.roi)
  return roi_;
}
inline void CameraStatus::set_allocated_roi(::kaapi::ROI* roi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete roi_;
  }
  if (roi) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      roi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, roi, submessage_arena);
    }
    
  } else {
    
  }
  roi_ = roi;
  // @@protoc_insertion_point(field_set_allocated:kaapi.CameraStatus.roi)
}

// .kaapi.ROI fence = 11;
inline bool CameraStatus::has_fence() const {
  return this != internal_default_instance() && fence_ != nullptr;
}
inline void CameraStatus::clear_fence() {
  if (GetArenaNoVirtual() == nullptr && fence_ != nullptr) {
    delete fence_;
  }
  fence_ = nullptr;
}
inline const ::kaapi::ROI& CameraStatus::fence() const {
  const ::kaapi::ROI* p = fence_;
  // @@protoc_insertion_point(field_get:kaapi.CameraStatus.fence)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::ROI*>(
      &::kaapi::_ROI_default_instance_);
}
inline ::kaapi::ROI* CameraStatus::release_fence() {
  // @@protoc_insertion_point(field_release:kaapi.CameraStatus.fence)
  
  ::kaapi::ROI* temp = fence_;
  fence_ = nullptr;
  return temp;
}
inline ::kaapi::ROI* CameraStatus::mutable_fence() {
  
  if (fence_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::ROI>(GetArenaNoVirtual());
    fence_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.CameraStatus.fence)
  return fence_;
}
inline void CameraStatus::set_allocated_fence(::kaapi::ROI* fence) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fence_;
  }
  if (fence) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fence = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fence, submessage_arena);
    }
    
  } else {
    
  }
  fence_ = fence;
  // @@protoc_insertion_point(field_set_allocated:kaapi.CameraStatus.fence)
}

// repeated .kaapi.Rectangle objectDetections = 12;
inline int CameraStatus::objectdetections_size() const {
  return objectdetections_.size();
}
inline void CameraStatus::clear_objectdetections() {
  objectdetections_.Clear();
}
inline ::kaapi::Rectangle* CameraStatus::mutable_objectdetections(int index) {
  // @@protoc_insertion_point(field_mutable:kaapi.CameraStatus.objectDetections)
  return objectdetections_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::kaapi::Rectangle >*
CameraStatus::mutable_objectdetections() {
  // @@protoc_insertion_point(field_mutable_list:kaapi.CameraStatus.objectDetections)
  return &objectdetections_;
}
inline const ::kaapi::Rectangle& CameraStatus::objectdetections(int index) const {
  // @@protoc_insertion_point(field_get:kaapi.CameraStatus.objectDetections)
  return objectdetections_.Get(index);
}
inline ::kaapi::Rectangle* CameraStatus::add_objectdetections() {
  // @@protoc_insertion_point(field_add:kaapi.CameraStatus.objectDetections)
  return objectdetections_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::kaapi::Rectangle >&
CameraStatus::objectdetections() const {
  // @@protoc_insertion_point(field_list:kaapi.CameraStatus.objectDetections)
  return objectdetections_;
}

// -------------------------------------------------------------------

// Rectangle

// .kaapi.Point topLeft = 1;
inline bool Rectangle::has_topleft() const {
  return this != internal_default_instance() && topleft_ != nullptr;
}
inline void Rectangle::clear_topleft() {
  if (GetArenaNoVirtual() == nullptr && topleft_ != nullptr) {
    delete topleft_;
  }
  topleft_ = nullptr;
}
inline const ::kaapi::Point& Rectangle::topleft() const {
  const ::kaapi::Point* p = topleft_;
  // @@protoc_insertion_point(field_get:kaapi.Rectangle.topLeft)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::Point*>(
      &::kaapi::_Point_default_instance_);
}
inline ::kaapi::Point* Rectangle::release_topleft() {
  // @@protoc_insertion_point(field_release:kaapi.Rectangle.topLeft)
  
  ::kaapi::Point* temp = topleft_;
  topleft_ = nullptr;
  return temp;
}
inline ::kaapi::Point* Rectangle::mutable_topleft() {
  
  if (topleft_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::Point>(GetArenaNoVirtual());
    topleft_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.Rectangle.topLeft)
  return topleft_;
}
inline void Rectangle::set_allocated_topleft(::kaapi::Point* topleft) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete topleft_;
  }
  if (topleft) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      topleft = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, topleft, submessage_arena);
    }
    
  } else {
    
  }
  topleft_ = topleft;
  // @@protoc_insertion_point(field_set_allocated:kaapi.Rectangle.topLeft)
}

// int32 width = 2;
inline void Rectangle::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 Rectangle::width() const {
  // @@protoc_insertion_point(field_get:kaapi.Rectangle.width)
  return width_;
}
inline void Rectangle::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:kaapi.Rectangle.width)
}

// int32 height = 3;
inline void Rectangle::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 Rectangle::height() const {
  // @@protoc_insertion_point(field_get:kaapi.Rectangle.height)
  return height_;
}
inline void Rectangle::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:kaapi.Rectangle.height)
}

// -------------------------------------------------------------------

// Point

// float x = 1;
inline void Point::clear_x() {
  x_ = 0;
}
inline float Point::x() const {
  // @@protoc_insertion_point(field_get:kaapi.Point.x)
  return x_;
}
inline void Point::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:kaapi.Point.x)
}

// float y = 2;
inline void Point::clear_y() {
  y_ = 0;
}
inline float Point::y() const {
  // @@protoc_insertion_point(field_get:kaapi.Point.y)
  return y_;
}
inline void Point::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:kaapi.Point.y)
}

// -------------------------------------------------------------------

// Polygon

// repeated .kaapi.Point points = 1;
inline int Polygon::points_size() const {
  return points_.size();
}
inline void Polygon::clear_points() {
  points_.Clear();
}
inline ::kaapi::Point* Polygon::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:kaapi.Polygon.points)
  return points_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::kaapi::Point >*
Polygon::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:kaapi.Polygon.points)
  return &points_;
}
inline const ::kaapi::Point& Polygon::points(int index) const {
  // @@protoc_insertion_point(field_get:kaapi.Polygon.points)
  return points_.Get(index);
}
inline ::kaapi::Point* Polygon::add_points() {
  // @@protoc_insertion_point(field_add:kaapi.Polygon.points)
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::kaapi::Point >&
Polygon::points() const {
  // @@protoc_insertion_point(field_list:kaapi.Polygon.points)
  return points_;
}

// -------------------------------------------------------------------

// ROI

// int32 roiCount = 1;
inline void ROI::clear_roicount() {
  roicount_ = 0;
}
inline ::google::protobuf::int32 ROI::roicount() const {
  // @@protoc_insertion_point(field_get:kaapi.ROI.roiCount)
  return roicount_;
}
inline void ROI::set_roicount(::google::protobuf::int32 value) {
  
  roicount_ = value;
  // @@protoc_insertion_point(field_set:kaapi.ROI.roiCount)
}

// repeated .kaapi.Polygon regions = 2;
inline int ROI::regions_size() const {
  return regions_.size();
}
inline void ROI::clear_regions() {
  regions_.Clear();
}
inline ::kaapi::Polygon* ROI::mutable_regions(int index) {
  // @@protoc_insertion_point(field_mutable:kaapi.ROI.regions)
  return regions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::kaapi::Polygon >*
ROI::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:kaapi.ROI.regions)
  return &regions_;
}
inline const ::kaapi::Polygon& ROI::regions(int index) const {
  // @@protoc_insertion_point(field_get:kaapi.ROI.regions)
  return regions_.Get(index);
}
inline ::kaapi::Polygon* ROI::add_regions() {
  // @@protoc_insertion_point(field_add:kaapi.ROI.regions)
  return regions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::kaapi::Polygon >&
ROI::regions() const {
  // @@protoc_insertion_point(field_list:kaapi.ROI.regions)
  return regions_;
}

// -------------------------------------------------------------------

// Boresight

// int32 d0 = 1;
inline void Boresight::clear_d0() {
  d0_ = 0;
}
inline ::google::protobuf::int32 Boresight::d0() const {
  // @@protoc_insertion_point(field_get:kaapi.Boresight.d0)
  return d0_;
}
inline void Boresight::set_d0(::google::protobuf::int32 value) {
  
  d0_ = value;
  // @@protoc_insertion_point(field_set:kaapi.Boresight.d0)
}

// int32 d1 = 2;
inline void Boresight::clear_d1() {
  d1_ = 0;
}
inline ::google::protobuf::int32 Boresight::d1() const {
  // @@protoc_insertion_point(field_get:kaapi.Boresight.d1)
  return d1_;
}
inline void Boresight::set_d1(::google::protobuf::int32 value) {
  
  d1_ = value;
  // @@protoc_insertion_point(field_set:kaapi.Boresight.d1)
}

// -------------------------------------------------------------------

// Calibration

// double d0 = 1;
inline void Calibration::clear_d0() {
  d0_ = 0;
}
inline double Calibration::d0() const {
  // @@protoc_insertion_point(field_get:kaapi.Calibration.d0)
  return d0_;
}
inline void Calibration::set_d0(double value) {
  
  d0_ = value;
  // @@protoc_insertion_point(field_set:kaapi.Calibration.d0)
}

// double d1 = 2;
inline void Calibration::clear_d1() {
  d1_ = 0;
}
inline double Calibration::d1() const {
  // @@protoc_insertion_point(field_get:kaapi.Calibration.d1)
  return d1_;
}
inline void Calibration::set_d1(double value) {
  
  d1_ = value;
  // @@protoc_insertion_point(field_set:kaapi.Calibration.d1)
}

// -------------------------------------------------------------------

// NumericParameter

// double value = 1;
inline void NumericParameter::clear_value() {
  value_ = 0;
}
inline double NumericParameter::value() const {
  // @@protoc_insertion_point(field_get:kaapi.NumericParameter.value)
  return value_;
}
inline void NumericParameter::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:kaapi.NumericParameter.value)
}

// int32 byte0 = 2;
inline void NumericParameter::clear_byte0() {
  byte0_ = 0;
}
inline ::google::protobuf::int32 NumericParameter::byte0() const {
  // @@protoc_insertion_point(field_get:kaapi.NumericParameter.byte0)
  return byte0_;
}
inline void NumericParameter::set_byte0(::google::protobuf::int32 value) {
  
  byte0_ = value;
  // @@protoc_insertion_point(field_set:kaapi.NumericParameter.byte0)
}

// int32 byte1 = 3;
inline void NumericParameter::clear_byte1() {
  byte1_ = 0;
}
inline ::google::protobuf::int32 NumericParameter::byte1() const {
  // @@protoc_insertion_point(field_get:kaapi.NumericParameter.byte1)
  return byte1_;
}
inline void NumericParameter::set_byte1(::google::protobuf::int32 value) {
  
  byte1_ = value;
  // @@protoc_insertion_point(field_set:kaapi.NumericParameter.byte1)
}

// int32 byte2 = 4;
inline void NumericParameter::clear_byte2() {
  byte2_ = 0;
}
inline ::google::protobuf::int32 NumericParameter::byte2() const {
  // @@protoc_insertion_point(field_get:kaapi.NumericParameter.byte2)
  return byte2_;
}
inline void NumericParameter::set_byte2(::google::protobuf::int32 value) {
  
  byte2_ = value;
  // @@protoc_insertion_point(field_set:kaapi.NumericParameter.byte2)
}

// -------------------------------------------------------------------

// RelativeMoveParameters

// float panSpeed = 1;
inline void RelativeMoveParameters::clear_panspeed() {
  panspeed_ = 0;
}
inline float RelativeMoveParameters::panspeed() const {
  // @@protoc_insertion_point(field_get:kaapi.RelativeMoveParameters.panSpeed)
  return panspeed_;
}
inline void RelativeMoveParameters::set_panspeed(float value) {
  
  panspeed_ = value;
  // @@protoc_insertion_point(field_set:kaapi.RelativeMoveParameters.panSpeed)
}

// float tiltSpeed = 2;
inline void RelativeMoveParameters::clear_tiltspeed() {
  tiltspeed_ = 0;
}
inline float RelativeMoveParameters::tiltspeed() const {
  // @@protoc_insertion_point(field_get:kaapi.RelativeMoveParameters.tiltSpeed)
  return tiltspeed_;
}
inline void RelativeMoveParameters::set_tiltspeed(float value) {
  
  tiltspeed_ = value;
  // @@protoc_insertion_point(field_set:kaapi.RelativeMoveParameters.tiltSpeed)
}

// float zoomSpeed = 3;
inline void RelativeMoveParameters::clear_zoomspeed() {
  zoomspeed_ = 0;
}
inline float RelativeMoveParameters::zoomspeed() const {
  // @@protoc_insertion_point(field_get:kaapi.RelativeMoveParameters.zoomSpeed)
  return zoomspeed_;
}
inline void RelativeMoveParameters::set_zoomspeed(float value) {
  
  zoomspeed_ = value;
  // @@protoc_insertion_point(field_set:kaapi.RelativeMoveParameters.zoomSpeed)
}

// -------------------------------------------------------------------

// RelativeMoveResult

// .kaapi.PosInfo posInfo = 1;
inline bool RelativeMoveResult::has_posinfo() const {
  return this != internal_default_instance() && posinfo_ != nullptr;
}
inline void RelativeMoveResult::clear_posinfo() {
  if (GetArenaNoVirtual() == nullptr && posinfo_ != nullptr) {
    delete posinfo_;
  }
  posinfo_ = nullptr;
}
inline const ::kaapi::PosInfo& RelativeMoveResult::posinfo() const {
  const ::kaapi::PosInfo* p = posinfo_;
  // @@protoc_insertion_point(field_get:kaapi.RelativeMoveResult.posInfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::PosInfo*>(
      &::kaapi::_PosInfo_default_instance_);
}
inline ::kaapi::PosInfo* RelativeMoveResult::release_posinfo() {
  // @@protoc_insertion_point(field_release:kaapi.RelativeMoveResult.posInfo)
  
  ::kaapi::PosInfo* temp = posinfo_;
  posinfo_ = nullptr;
  return temp;
}
inline ::kaapi::PosInfo* RelativeMoveResult::mutable_posinfo() {
  
  if (posinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::PosInfo>(GetArenaNoVirtual());
    posinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.RelativeMoveResult.posInfo)
  return posinfo_;
}
inline void RelativeMoveResult::set_allocated_posinfo(::kaapi::PosInfo* posinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete posinfo_;
  }
  if (posinfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      posinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, posinfo, submessage_arena);
    }
    
  } else {
    
  }
  posinfo_ = posinfo;
  // @@protoc_insertion_point(field_set_allocated:kaapi.RelativeMoveResult.posInfo)
}

// -------------------------------------------------------------------

// AbsoluteMoveParameters

// float panPos = 1;
inline void AbsoluteMoveParameters::clear_panpos() {
  panpos_ = 0;
}
inline float AbsoluteMoveParameters::panpos() const {
  // @@protoc_insertion_point(field_get:kaapi.AbsoluteMoveParameters.panPos)
  return panpos_;
}
inline void AbsoluteMoveParameters::set_panpos(float value) {
  
  panpos_ = value;
  // @@protoc_insertion_point(field_set:kaapi.AbsoluteMoveParameters.panPos)
}

// float tiltPos = 2;
inline void AbsoluteMoveParameters::clear_tiltpos() {
  tiltpos_ = 0;
}
inline float AbsoluteMoveParameters::tiltpos() const {
  // @@protoc_insertion_point(field_get:kaapi.AbsoluteMoveParameters.tiltPos)
  return tiltpos_;
}
inline void AbsoluteMoveParameters::set_tiltpos(float value) {
  
  tiltpos_ = value;
  // @@protoc_insertion_point(field_set:kaapi.AbsoluteMoveParameters.tiltPos)
}

// float zoomPos = 3;
inline void AbsoluteMoveParameters::clear_zoompos() {
  zoompos_ = 0;
}
inline float AbsoluteMoveParameters::zoompos() const {
  // @@protoc_insertion_point(field_get:kaapi.AbsoluteMoveParameters.zoomPos)
  return zoompos_;
}
inline void AbsoluteMoveParameters::set_zoompos(float value) {
  
  zoompos_ = value;
  // @@protoc_insertion_point(field_set:kaapi.AbsoluteMoveParameters.zoomPos)
}

// float panSpeed = 4;
inline void AbsoluteMoveParameters::clear_panspeed() {
  panspeed_ = 0;
}
inline float AbsoluteMoveParameters::panspeed() const {
  // @@protoc_insertion_point(field_get:kaapi.AbsoluteMoveParameters.panSpeed)
  return panspeed_;
}
inline void AbsoluteMoveParameters::set_panspeed(float value) {
  
  panspeed_ = value;
  // @@protoc_insertion_point(field_set:kaapi.AbsoluteMoveParameters.panSpeed)
}

// float tiltSpeed = 5;
inline void AbsoluteMoveParameters::clear_tiltspeed() {
  tiltspeed_ = 0;
}
inline float AbsoluteMoveParameters::tiltspeed() const {
  // @@protoc_insertion_point(field_get:kaapi.AbsoluteMoveParameters.tiltSpeed)
  return tiltspeed_;
}
inline void AbsoluteMoveParameters::set_tiltspeed(float value) {
  
  tiltspeed_ = value;
  // @@protoc_insertion_point(field_set:kaapi.AbsoluteMoveParameters.tiltSpeed)
}

// float zoomSpeed = 6;
inline void AbsoluteMoveParameters::clear_zoomspeed() {
  zoomspeed_ = 0;
}
inline float AbsoluteMoveParameters::zoomspeed() const {
  // @@protoc_insertion_point(field_get:kaapi.AbsoluteMoveParameters.zoomSpeed)
  return zoomspeed_;
}
inline void AbsoluteMoveParameters::set_zoomspeed(float value) {
  
  zoomspeed_ = value;
  // @@protoc_insertion_point(field_set:kaapi.AbsoluteMoveParameters.zoomSpeed)
}

// -------------------------------------------------------------------

// AbsoluteMoveResult

// .kaapi.AbsoluteMoveResult.Completion completionStatus = 1;
inline void AbsoluteMoveResult::clear_completionstatus() {
  completionstatus_ = 0;
}
inline ::kaapi::AbsoluteMoveResult_Completion AbsoluteMoveResult::completionstatus() const {
  // @@protoc_insertion_point(field_get:kaapi.AbsoluteMoveResult.completionStatus)
  return static_cast< ::kaapi::AbsoluteMoveResult_Completion >(completionstatus_);
}
inline void AbsoluteMoveResult::set_completionstatus(::kaapi::AbsoluteMoveResult_Completion value) {
  
  completionstatus_ = value;
  // @@protoc_insertion_point(field_set:kaapi.AbsoluteMoveResult.completionStatus)
}

// .kaapi.PosInfo posInfo = 2;
inline bool AbsoluteMoveResult::has_posinfo() const {
  return this != internal_default_instance() && posinfo_ != nullptr;
}
inline void AbsoluteMoveResult::clear_posinfo() {
  if (GetArenaNoVirtual() == nullptr && posinfo_ != nullptr) {
    delete posinfo_;
  }
  posinfo_ = nullptr;
}
inline const ::kaapi::PosInfo& AbsoluteMoveResult::posinfo() const {
  const ::kaapi::PosInfo* p = posinfo_;
  // @@protoc_insertion_point(field_get:kaapi.AbsoluteMoveResult.posInfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::kaapi::PosInfo*>(
      &::kaapi::_PosInfo_default_instance_);
}
inline ::kaapi::PosInfo* AbsoluteMoveResult::release_posinfo() {
  // @@protoc_insertion_point(field_release:kaapi.AbsoluteMoveResult.posInfo)
  
  ::kaapi::PosInfo* temp = posinfo_;
  posinfo_ = nullptr;
  return temp;
}
inline ::kaapi::PosInfo* AbsoluteMoveResult::mutable_posinfo() {
  
  if (posinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::kaapi::PosInfo>(GetArenaNoVirtual());
    posinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:kaapi.AbsoluteMoveResult.posInfo)
  return posinfo_;
}
inline void AbsoluteMoveResult::set_allocated_posinfo(::kaapi::PosInfo* posinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete posinfo_;
  }
  if (posinfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      posinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, posinfo, submessage_arena);
    }
    
  } else {
    
  }
  posinfo_ = posinfo;
  // @@protoc_insertion_point(field_set_allocated:kaapi.AbsoluteMoveResult.posInfo)
}

// -------------------------------------------------------------------

// PosInfo

// float panPos = 1;
inline void PosInfo::clear_panpos() {
  panpos_ = 0;
}
inline float PosInfo::panpos() const {
  // @@protoc_insertion_point(field_get:kaapi.PosInfo.panPos)
  return panpos_;
}
inline void PosInfo::set_panpos(float value) {
  
  panpos_ = value;
  // @@protoc_insertion_point(field_set:kaapi.PosInfo.panPos)
}

// float tiltPos = 2;
inline void PosInfo::clear_tiltpos() {
  tiltpos_ = 0;
}
inline float PosInfo::tiltpos() const {
  // @@protoc_insertion_point(field_get:kaapi.PosInfo.tiltPos)
  return tiltpos_;
}
inline void PosInfo::set_tiltpos(float value) {
  
  tiltpos_ = value;
  // @@protoc_insertion_point(field_set:kaapi.PosInfo.tiltPos)
}

// float zoomPos = 3;
inline void PosInfo::clear_zoompos() {
  zoompos_ = 0;
}
inline float PosInfo::zoompos() const {
  // @@protoc_insertion_point(field_get:kaapi.PosInfo.zoomPos)
  return zoompos_;
}
inline void PosInfo::set_zoompos(float value) {
  
  zoompos_ = value;
  // @@protoc_insertion_point(field_set:kaapi.PosInfo.zoomPos)
}

// float fovh = 4;
inline void PosInfo::clear_fovh() {
  fovh_ = 0;
}
inline float PosInfo::fovh() const {
  // @@protoc_insertion_point(field_get:kaapi.PosInfo.fovh)
  return fovh_;
}
inline void PosInfo::set_fovh(float value) {
  
  fovh_ = value;
  // @@protoc_insertion_point(field_set:kaapi.PosInfo.fovh)
}

// float fovv = 5;
inline void PosInfo::clear_fovv() {
  fovv_ = 0;
}
inline float PosInfo::fovv() const {
  // @@protoc_insertion_point(field_get:kaapi.PosInfo.fovv)
  return fovv_;
}
inline void PosInfo::set_fovv(float value) {
  
  fovv_ = value;
  // @@protoc_insertion_point(field_set:kaapi.PosInfo.fovv)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace kaapi

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::kaapi::CommWrite_Action> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::kaapi::CommWrite_Action>() {
  return ::kaapi::CommWrite_Action_descriptor();
}
template <> struct is_proto_enum< ::kaapi::AbsoluteMoveResult_Completion> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::kaapi::AbsoluteMoveResult_Completion>() {
  return ::kaapi::AbsoluteMoveResult_Completion_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_KardelenAPI_2eproto
