// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AlgorithmCommunication.proto

#include "AlgorithmCommunication.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AlarmReqAdvancedParameters_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CITInfo_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ElementQueue_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Element_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FaceDetectionParameters_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LocationInformation_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PanaromaParameters_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StabilizationParameters_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SystemFeature_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TPoint_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TargetStruct_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TrackObject_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AlarmInfo_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ListOfLocationInformation_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MotionParameters_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PanChangeParameters_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TPolygon_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TRectangle_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TrackParameters_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Alarm_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Node_AlgorithmCommunication_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_AlgorithmCommunication_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TRoi_AlgorithmCommunication_2eproto;
namespace AlgorithmCommunication {
class LocationInformationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocationInformation> _instance;
} _LocationInformation_default_instance_;
class ListOfLocationInformationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListOfLocationInformation> _instance;
} _ListOfLocationInformation_default_instance_;
class DiagnosticQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiagnosticQ> _instance;
} _DiagnosticQ_default_instance_;
class DiagnosticInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiagnosticInfo> _instance;
} _DiagnosticInfo_default_instance_;
class NodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Node> _instance;
} _Node_default_instance_;
class ElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Element> _instance;
} _Element_default_instance_;
class ElementQueueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementQueue> _instance;
} _ElementQueue_default_instance_;
class ScreenshotInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScreenshotInfo> _instance;
} _ScreenshotInfo_default_instance_;
class ScreenFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScreenFrame> _instance;
} _ScreenFrame_default_instance_;
class TargetStructDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetStruct> _instance;
} _TargetStruct_default_instance_;
class AlarmInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlarmInfo> _instance;
} _AlarmInfo_default_instance_;
class CITInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CITInfo> _instance;
} _CITInfo_default_instance_;
class GeneralInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GeneralInfo> _instance;
} _GeneralInfo_default_instance_;
class AlarmReqAdvancedParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlarmReqAdvancedParameters> _instance;
} _AlarmReqAdvancedParameters_default_instance_;
class AlarmReqInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlarmReqInfo> _instance;
} _AlarmReqInfo_default_instance_;
class AlarmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Alarm> _instance;
} _Alarm_default_instance_;
class AlarmsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Alarms> _instance;
} _Alarms_default_instance_;
class ResponseOfRequestsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseOfRequests> _instance;
} _ResponseOfRequests_default_instance_;
class ResponseOfParameterRequestsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseOfParameterRequests> _instance;
} _ResponseOfParameterRequests_default_instance_;
class RequestForAlgorithmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestForAlgorithm> _instance;
} _RequestForAlgorithm_default_instance_;
class PanChangeParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PanChangeParameters> _instance;
} _PanChangeParameters_default_instance_;
class SystemFeatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemFeature> _instance;
} _SystemFeature_default_instance_;
class SystemFeaturesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemFeatures> _instance;
} _SystemFeatures_default_instance_;
class MotionParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MotionParameters> _instance;
} _MotionParameters_default_instance_;
class TRoiDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TRoi> _instance;
} _TRoi_default_instance_;
class TPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPoint> _instance;
} _TPoint_default_instance_;
class TPolygonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPolygon> _instance;
} _TPolygon_default_instance_;
class TRectangleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TRectangle> _instance;
} _TRectangle_default_instance_;
class TrackParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrackParameters> _instance;
} _TrackParameters_default_instance_;
class TrackObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrackObject> _instance;
} _TrackObject_default_instance_;
class StabilizationParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StabilizationParameters> _instance;
} _StabilizationParameters_default_instance_;
class PanaromaParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PanaromaParameters> _instance;
} _PanaromaParameters_default_instance_;
class FaceDetectionParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaceDetectionParameters> _instance;
} _FaceDetectionParameters_default_instance_;
}  // namespace AlgorithmCommunication
static void InitDefaultsLocationInformation_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_LocationInformation_default_instance_;
    new (ptr) ::AlgorithmCommunication::LocationInformation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::LocationInformation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LocationInformation_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLocationInformation_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsListOfLocationInformation_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_ListOfLocationInformation_default_instance_;
    new (ptr) ::AlgorithmCommunication::ListOfLocationInformation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::ListOfLocationInformation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListOfLocationInformation_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListOfLocationInformation_AlgorithmCommunication_2eproto}, {
      &scc_info_LocationInformation_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsDiagnosticQ_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_DiagnosticQ_default_instance_;
    new (ptr) ::AlgorithmCommunication::DiagnosticQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::DiagnosticQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DiagnosticQ_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiagnosticQ_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsDiagnosticInfo_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_DiagnosticInfo_default_instance_;
    new (ptr) ::AlgorithmCommunication::DiagnosticInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::DiagnosticInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DiagnosticInfo_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDiagnosticInfo_AlgorithmCommunication_2eproto}, {
      &scc_info_Node_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsNode_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_Node_default_instance_;
    new (ptr) ::AlgorithmCommunication::Node();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::Node::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Node_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsNode_AlgorithmCommunication_2eproto}, {
      &scc_info_Element_AlgorithmCommunication_2eproto.base,
      &scc_info_ElementQueue_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsElement_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_Element_default_instance_;
    new (ptr) ::AlgorithmCommunication::Element();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::Element::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Element_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsElement_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsElementQueue_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_ElementQueue_default_instance_;
    new (ptr) ::AlgorithmCommunication::ElementQueue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::ElementQueue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ElementQueue_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsElementQueue_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsScreenshotInfo_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_ScreenshotInfo_default_instance_;
    new (ptr) ::AlgorithmCommunication::ScreenshotInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::ScreenshotInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScreenshotInfo_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScreenshotInfo_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsScreenFrame_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_ScreenFrame_default_instance_;
    new (ptr) ::AlgorithmCommunication::ScreenFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::ScreenFrame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScreenFrame_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScreenFrame_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsTargetStruct_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_TargetStruct_default_instance_;
    new (ptr) ::AlgorithmCommunication::TargetStruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::TargetStruct::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TargetStruct_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTargetStruct_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsAlarmInfo_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_AlarmInfo_default_instance_;
    new (ptr) ::AlgorithmCommunication::AlarmInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::AlarmInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AlarmInfo_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAlarmInfo_AlgorithmCommunication_2eproto}, {
      &scc_info_TargetStruct_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsCITInfo_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_CITInfo_default_instance_;
    new (ptr) ::AlgorithmCommunication::CITInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::CITInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CITInfo_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCITInfo_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsGeneralInfo_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_GeneralInfo_default_instance_;
    new (ptr) ::AlgorithmCommunication::GeneralInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::GeneralInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GeneralInfo_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGeneralInfo_AlgorithmCommunication_2eproto}, {
      &scc_info_AlarmInfo_AlgorithmCommunication_2eproto.base,
      &scc_info_CITInfo_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsAlarmReqAdvancedParameters_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_AlarmReqAdvancedParameters_default_instance_;
    new (ptr) ::AlgorithmCommunication::AlarmReqAdvancedParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::AlarmReqAdvancedParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AlarmReqAdvancedParameters_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAlarmReqAdvancedParameters_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsAlarmReqInfo_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_AlarmReqInfo_default_instance_;
    new (ptr) ::AlgorithmCommunication::AlarmReqInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::AlarmReqInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AlarmReqInfo_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAlarmReqInfo_AlgorithmCommunication_2eproto}, {
      &scc_info_AlarmReqAdvancedParameters_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsAlarm_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_Alarm_default_instance_;
    new (ptr) ::AlgorithmCommunication::Alarm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::Alarm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Alarm_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAlarm_AlgorithmCommunication_2eproto}, {
      &scc_info_CITInfo_AlgorithmCommunication_2eproto.base,
      &scc_info_AlarmInfo_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsAlarms_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_Alarms_default_instance_;
    new (ptr) ::AlgorithmCommunication::Alarms();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::Alarms::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Alarms_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAlarms_AlgorithmCommunication_2eproto}, {
      &scc_info_Alarm_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsResponseOfRequests_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_ResponseOfRequests_default_instance_;
    new (ptr) ::AlgorithmCommunication::ResponseOfRequests();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::ResponseOfRequests::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResponseOfRequests_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponseOfRequests_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsResponseOfParameterRequests_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_ResponseOfParameterRequests_default_instance_;
    new (ptr) ::AlgorithmCommunication::ResponseOfParameterRequests();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::ResponseOfParameterRequests::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_ResponseOfParameterRequests_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsResponseOfParameterRequests_AlgorithmCommunication_2eproto}, {
      &scc_info_MotionParameters_AlgorithmCommunication_2eproto.base,
      &scc_info_TrackParameters_AlgorithmCommunication_2eproto.base,
      &scc_info_StabilizationParameters_AlgorithmCommunication_2eproto.base,
      &scc_info_PanaromaParameters_AlgorithmCommunication_2eproto.base,
      &scc_info_FaceDetectionParameters_AlgorithmCommunication_2eproto.base,
      &scc_info_PanChangeParameters_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsRequestForAlgorithm_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_RequestForAlgorithm_default_instance_;
    new (ptr) ::AlgorithmCommunication::RequestForAlgorithm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::RequestForAlgorithm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_RequestForAlgorithm_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsRequestForAlgorithm_AlgorithmCommunication_2eproto}, {
      &scc_info_MotionParameters_AlgorithmCommunication_2eproto.base,
      &scc_info_TrackParameters_AlgorithmCommunication_2eproto.base,
      &scc_info_StabilizationParameters_AlgorithmCommunication_2eproto.base,
      &scc_info_PanaromaParameters_AlgorithmCommunication_2eproto.base,
      &scc_info_FaceDetectionParameters_AlgorithmCommunication_2eproto.base,
      &scc_info_PanChangeParameters_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsPanChangeParameters_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_PanChangeParameters_default_instance_;
    new (ptr) ::AlgorithmCommunication::PanChangeParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::PanChangeParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PanChangeParameters_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPanChangeParameters_AlgorithmCommunication_2eproto}, {
      &scc_info_ListOfLocationInformation_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsSystemFeature_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_SystemFeature_default_instance_;
    new (ptr) ::AlgorithmCommunication::SystemFeature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::SystemFeature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SystemFeature_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSystemFeature_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsSystemFeatures_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_SystemFeatures_default_instance_;
    new (ptr) ::AlgorithmCommunication::SystemFeatures();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::SystemFeatures::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SystemFeatures_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSystemFeatures_AlgorithmCommunication_2eproto}, {
      &scc_info_SystemFeature_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsMotionParameters_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_MotionParameters_default_instance_;
    new (ptr) ::AlgorithmCommunication::MotionParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::MotionParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MotionParameters_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMotionParameters_AlgorithmCommunication_2eproto}, {
      &scc_info_TRoi_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsTRoi_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_TRoi_default_instance_;
    new (ptr) ::AlgorithmCommunication::TRoi();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::TRoi::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TRoi_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTRoi_AlgorithmCommunication_2eproto}, {
      &scc_info_TPolygon_AlgorithmCommunication_2eproto.base,
      &scc_info_TRectangle_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsTPoint_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_TPoint_default_instance_;
    new (ptr) ::AlgorithmCommunication::TPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::TPoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TPoint_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTPoint_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsTPolygon_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_TPolygon_default_instance_;
    new (ptr) ::AlgorithmCommunication::TPolygon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::TPolygon::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TPolygon_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTPolygon_AlgorithmCommunication_2eproto}, {
      &scc_info_TPoint_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsTRectangle_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_TRectangle_default_instance_;
    new (ptr) ::AlgorithmCommunication::TRectangle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::TRectangle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TRectangle_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTRectangle_AlgorithmCommunication_2eproto}, {
      &scc_info_TPoint_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsTrackParameters_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_TrackParameters_default_instance_;
    new (ptr) ::AlgorithmCommunication::TrackParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::TrackParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TrackParameters_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTrackParameters_AlgorithmCommunication_2eproto}, {
      &scc_info_TrackObject_AlgorithmCommunication_2eproto.base,}};

static void InitDefaultsTrackObject_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_TrackObject_default_instance_;
    new (ptr) ::AlgorithmCommunication::TrackObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::TrackObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TrackObject_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrackObject_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsStabilizationParameters_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_StabilizationParameters_default_instance_;
    new (ptr) ::AlgorithmCommunication::StabilizationParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::StabilizationParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StabilizationParameters_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStabilizationParameters_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsPanaromaParameters_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_PanaromaParameters_default_instance_;
    new (ptr) ::AlgorithmCommunication::PanaromaParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::PanaromaParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PanaromaParameters_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPanaromaParameters_AlgorithmCommunication_2eproto}, {}};

static void InitDefaultsFaceDetectionParameters_AlgorithmCommunication_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AlgorithmCommunication::_FaceDetectionParameters_default_instance_;
    new (ptr) ::AlgorithmCommunication::FaceDetectionParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlgorithmCommunication::FaceDetectionParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FaceDetectionParameters_AlgorithmCommunication_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFaceDetectionParameters_AlgorithmCommunication_2eproto}, {}};

void InitDefaults_AlgorithmCommunication_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_LocationInformation_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListOfLocationInformation_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiagnosticQ_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiagnosticInfo_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Node_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Element_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementQueue_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScreenshotInfo_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScreenFrame_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetStruct_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlarmInfo_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CITInfo_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GeneralInfo_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlarmReqAdvancedParameters_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlarmReqInfo_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Alarm_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Alarms_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseOfRequests_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseOfParameterRequests_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestForAlgorithm_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PanChangeParameters_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SystemFeature_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SystemFeatures_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MotionParameters_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TRoi_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TPoint_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TPolygon_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TRectangle_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TrackParameters_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TrackObject_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StabilizationParameters_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PanaromaParameters_AlgorithmCommunication_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FaceDetectionParameters_AlgorithmCommunication_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_AlgorithmCommunication_2eproto[33];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_AlgorithmCommunication_2eproto[10];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_AlgorithmCommunication_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_AlgorithmCommunication_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::LocationInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::LocationInformation, pan_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::LocationInformation, tilt_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::LocationInformation, zoom_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ListOfLocationInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ListOfLocationInformation, locationinformation_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ListOfLocationInformation, intervalforcirculation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::DiagnosticQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::DiagnosticQ, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::DiagnosticInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::DiagnosticInfo, nodes_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::DiagnosticInfo, latency_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::DiagnosticInfo, totalusememory_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Node, type_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Node, element_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Node, queue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Element, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Element, inputqueuecount_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Element, outputqueuecount_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Element, name_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Element, latency_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Element, totalusememory_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ElementQueue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ElementQueue, fps_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ElementQueue, bitrate_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ElementQueue, sendcount_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ElementQueue, elapsedtime_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ElementQueue, buffercount_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ElementQueue, receivedcount_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ElementQueue, totalsize_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ScreenshotInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ScreenshotInfo, channelid_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ScreenshotInfo, quality_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ScreenshotInfo, fps_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ScreenFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ScreenFrame, frame_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ScreenFrame, quality_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ScreenFrame, ts_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ScreenFrame, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TargetStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TargetStruct, topleftx_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TargetStruct, toplefty_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TargetStruct, widthoftarget_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TargetStruct, heightoftarget_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TargetStruct, targetclass_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmInfo, baseid_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmInfo, stationid_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmInfo, deviceid_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmInfo, unittype_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmInfo, date_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmInfo, alarmflag_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmInfo, target_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmInfo, frameofalarm_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::CITInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::CITInfo, moduleinfo_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::CITInfo, motorinfo_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::CITInfo, usbinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::GeneralInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::GeneralInfo, alarminfo_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::GeneralInfo, citinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmReqAdvancedParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmReqAdvancedParameters, enabled_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmReqAdvancedParameters, suppressinterval_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmReqAdvancedParameters, alarmqueuelength_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmReqAdvancedParameters, smartsnapshot_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmReqAdvancedParameters, smartsnapshotinterval_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmReqInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmReqInfo, filter_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmReqInfo, channel_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmReqInfo, intervalmsecs_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::AlarmReqInfo, advancedparams_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Alarm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Alarm, key_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Alarm, value_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Alarm, type_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Alarm, cit_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Alarm, alarm_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Alarms, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Alarms, alarms_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::Alarms, ts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ResponseOfRequests, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ResponseOfRequests, err_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ResponseOfRequests, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ResponseOfParameterRequests, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ResponseOfParameterRequests, algorithmtype_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ResponseOfParameterRequests, error_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ResponseOfParameterRequests, response_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ResponseOfParameterRequests, motionparam_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ResponseOfParameterRequests, trackparam_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ResponseOfParameterRequests, stabilizationparam_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ResponseOfParameterRequests, panaromaparam_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ResponseOfParameterRequests, facedetectionparam_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::ResponseOfParameterRequests, panchangeparam_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::RequestForAlgorithm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::RequestForAlgorithm, algorithmtype_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::RequestForAlgorithm, motionparam_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::RequestForAlgorithm, trackparam_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::RequestForAlgorithm, stabilizationparam_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::RequestForAlgorithm, panaromaparam_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::RequestForAlgorithm, facedetectionparam_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::RequestForAlgorithm, panchangeparam_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::RequestForAlgorithm, channel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::PanChangeParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::PanChangeParameters, locationinformation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::SystemFeature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::SystemFeature, key_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::SystemFeature, value_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::SystemFeature, device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::SystemFeatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::SystemFeatures, features_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::MotionParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::MotionParameters, settingchoice_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::MotionParameters, sensitivity_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::MotionParameters, roilist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TRoi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TRoi, polygon_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TRoi, rect1_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TRoi, rect2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TPoint, x_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TPoint, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TPolygon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TPolygon, points_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TPolygon, is_active_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TRectangle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TRectangle, upperleft_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TRectangle, bottomright_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TrackParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TrackParameters, tracktype_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TrackParameters, mode_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TrackParameters, trackscore_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TrackParameters, trackinterval_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TrackParameters, target_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TrackObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TrackObject, point_x_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TrackObject, point_y_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TrackObject, width_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::TrackObject, height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::StabilizationParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::StabilizationParameters, privacy_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::StabilizationParameters, sensitivity_),
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::StabilizationParameters, stabilization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::PanaromaParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::PanaromaParameters, dummy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::FaceDetectionParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AlgorithmCommunication::FaceDetectionParameters, dummy_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::AlgorithmCommunication::LocationInformation)},
  { 8, -1, sizeof(::AlgorithmCommunication::ListOfLocationInformation)},
  { 15, -1, sizeof(::AlgorithmCommunication::DiagnosticQ)},
  { 21, -1, sizeof(::AlgorithmCommunication::DiagnosticInfo)},
  { 29, -1, sizeof(::AlgorithmCommunication::Node)},
  { 37, -1, sizeof(::AlgorithmCommunication::Element)},
  { 47, -1, sizeof(::AlgorithmCommunication::ElementQueue)},
  { 59, -1, sizeof(::AlgorithmCommunication::ScreenshotInfo)},
  { 67, -1, sizeof(::AlgorithmCommunication::ScreenFrame)},
  { 76, -1, sizeof(::AlgorithmCommunication::TargetStruct)},
  { 86, -1, sizeof(::AlgorithmCommunication::AlarmInfo)},
  { 99, -1, sizeof(::AlgorithmCommunication::CITInfo)},
  { 107, -1, sizeof(::AlgorithmCommunication::GeneralInfo)},
  { 114, -1, sizeof(::AlgorithmCommunication::AlarmReqAdvancedParameters)},
  { 124, -1, sizeof(::AlgorithmCommunication::AlarmReqInfo)},
  { 133, -1, sizeof(::AlgorithmCommunication::Alarm)},
  { 143, -1, sizeof(::AlgorithmCommunication::Alarms)},
  { 150, -1, sizeof(::AlgorithmCommunication::ResponseOfRequests)},
  { 157, -1, sizeof(::AlgorithmCommunication::ResponseOfParameterRequests)},
  { 171, -1, sizeof(::AlgorithmCommunication::RequestForAlgorithm)},
  { 184, -1, sizeof(::AlgorithmCommunication::PanChangeParameters)},
  { 190, -1, sizeof(::AlgorithmCommunication::SystemFeature)},
  { 198, -1, sizeof(::AlgorithmCommunication::SystemFeatures)},
  { 204, -1, sizeof(::AlgorithmCommunication::MotionParameters)},
  { 212, -1, sizeof(::AlgorithmCommunication::TRoi)},
  { 220, -1, sizeof(::AlgorithmCommunication::TPoint)},
  { 227, -1, sizeof(::AlgorithmCommunication::TPolygon)},
  { 234, -1, sizeof(::AlgorithmCommunication::TRectangle)},
  { 241, -1, sizeof(::AlgorithmCommunication::TrackParameters)},
  { 251, -1, sizeof(::AlgorithmCommunication::TrackObject)},
  { 260, -1, sizeof(::AlgorithmCommunication::StabilizationParameters)},
  { 268, -1, sizeof(::AlgorithmCommunication::PanaromaParameters)},
  { 274, -1, sizeof(::AlgorithmCommunication::FaceDetectionParameters)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_LocationInformation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_ListOfLocationInformation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_DiagnosticQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_DiagnosticInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_Element_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_ElementQueue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_ScreenshotInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_ScreenFrame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_TargetStruct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_AlarmInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_CITInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_GeneralInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_AlarmReqAdvancedParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_AlarmReqInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_Alarm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_Alarms_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_ResponseOfRequests_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_ResponseOfParameterRequests_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_RequestForAlgorithm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_PanChangeParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_SystemFeature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_SystemFeatures_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_MotionParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_TRoi_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_TPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_TPolygon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_TRectangle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_TrackParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_TrackObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_StabilizationParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_PanaromaParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AlgorithmCommunication::_FaceDetectionParameters_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_AlgorithmCommunication_2eproto = {
  {}, AddDescriptors_AlgorithmCommunication_2eproto, "AlgorithmCommunication.proto", schemas,
  file_default_instances, TableStruct_AlgorithmCommunication_2eproto::offsets,
  file_level_metadata_AlgorithmCommunication_2eproto, 33, file_level_enum_descriptors_AlgorithmCommunication_2eproto, file_level_service_descriptors_AlgorithmCommunication_2eproto,
};

const char descriptor_table_protodef_AlgorithmCommunication_2eproto[] =
  "\n\034AlgorithmCommunication.proto\022\026Algorith"
  "mCommunication\">\n\023LocationInformation\022\013\n"
  "\003pan\030\001 \001(\002\022\014\n\004tilt\030\002 \001(\002\022\014\n\004zoom\030\003 \001(\002\"\205"
  "\001\n\031ListOfLocationInformation\022H\n\023location"
  "Information\030\001 \003(\0132+.AlgorithmCommunicati"
  "on.LocationInformation\022\036\n\026intervalForCir"
  "culation\030\002 \001(\003\"\034\n\013DiagnosticQ\022\r\n\005value\030\001"
  " \001(\005\"f\n\016DiagnosticInfo\022+\n\005nodes\030\001 \003(\0132\034."
  "AlgorithmCommunication.Node\022\017\n\007latency\030\002"
  " \001(\003\022\026\n\016totalUseMemory\030\003 \001(\003\"\306\001\n\004Node\0223\n"
  "\004type\030\001 \001(\0162%.AlgorithmCommunication.Nod"
  "e.NodeType\0220\n\007element\030\002 \001(\0132\037.AlgorithmC"
  "ommunication.Element\0223\n\005queue\030\003 \001(\0132$.Al"
  "gorithmCommunication.ElementQueue\"\"\n\010Nod"
  "eType\022\013\n\007ELEMENT\020\000\022\t\n\005QUEUE\020\001\"s\n\007Element"
  "\022\027\n\017inputQueueCount\030\001 \001(\005\022\030\n\020outputQueue"
  "Count\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\022\017\n\007latency\030\004 \001"
  "(\003\022\026\n\016totalUseMemory\030\005 \001(\003\"\223\001\n\014ElementQu"
  "eue\022\013\n\003fps\030\001 \001(\002\022\017\n\007bitrate\030\002 \001(\003\022\021\n\tsen"
  "dCount\030\003 \001(\005\022\023\n\013elapsedTime\030\004 \001(\003\022\023\n\013buf"
  "ferCount\030\005 \001(\005\022\025\n\rreceivedCount\030\006 \001(\005\022\021\n"
  "\ttotalSize\030\007 \001(\003\"A\n\016ScreenshotInfo\022\021\n\tch"
  "annelId\030\001 \001(\005\022\017\n\007quality\030\002 \001(\005\022\013\n\003fps\030\003 "
  "\001(\002\"K\n\013ScreenFrame\022\r\n\005frame\030\001 \001(\014\022\017\n\007qua"
  "lity\030\002 \001(\005\022\n\n\002ts\030\003 \001(\003\022\020\n\010metadata\030\004 \001(\t"
  "\"\326\001\n\014TargetStruct\022\020\n\010topLeftX\030\001 \001(\005\022\020\n\010t"
  "opLeftY\030\002 \001(\005\022\025\n\rwidthOfTarget\030\003 \001(\005\022\026\n\016"
  "heightOfTarget\030\004 \001(\005\022E\n\013targetClass\030\005 \001("
  "\01620.AlgorithmCommunication.TargetStruct."
  "TargetClass\",\n\013TargetClass\022\t\n\005HUMAN\020\000\022\007\n"
  "\003CAR\020\001\022\t\n\005OTHER\020\002\"\277\001\n\tAlarmInfo\022\016\n\006baseI"
  "d\030\001 \001(\005\022\021\n\tstationId\030\002 \001(\005\022\020\n\010deviceId\030\003"
  " \001(\005\022\020\n\010unitType\030\004 \001(\005\022\014\n\004date\030\005 \001(\t\022\021\n\t"
  "alarmFlag\030\006 \001(\010\0224\n\006target\030\007 \001(\0132$.Algori"
  "thmCommunication.TargetStruct\022\024\n\014frameOf"
  "Alarm\030\010 \001(\014\"\314\001\n\007CITInfo\0228\n\nmoduleInfo\030\001 "
  "\001(\0162$.AlgorithmCommunication.CITInfo.Inf"
  "o\0227\n\tmotorInfo\030\002 \001(\0162$.AlgorithmCommunic"
  "ation.CITInfo.Info\0225\n\007usbInfo\030\003 \001(\0162$.Al"
  "gorithmCommunication.CITInfo.Info\"\027\n\004Inf"
  "o\022\006\n\002OK\020\000\022\007\n\003NOK\020\001\"u\n\013GeneralInfo\0224\n\tala"
  "rmInfo\030\001 \001(\0132!.AlgorithmCommunication.Al"
  "armInfo\0220\n\007citInfo\030\002 \001(\0132\037.AlgorithmComm"
  "unication.CITInfo\"\227\001\n\032AlarmReqAdvancedPa"
  "rameters\022\017\n\007enabled\030\001 \001(\010\022\030\n\020suppressInt"
  "erval\030\002 \001(\005\022\030\n\020alarmQueueLength\030\003 \001(\005\022\025\n"
  "\rsmartSnapshot\030\004 \001(\010\022\035\n\025smartSnapshotInt"
  "erval\030\005 \001(\005\"\222\001\n\014AlarmReqInfo\022\016\n\006filter\030\001"
  " \001(\t\022\017\n\007channel\030\002 \001(\005\022\025\n\rintervalMsecs\030\003"
  " \001(\005\022J\n\016advancedParams\030\004 \001(\01322.Algorithm"
  "Communication.AlarmReqAdvancedParameters"
  "\"\221\001\n\005Alarm\022\013\n\003key\030\001 \003(\t\022\r\n\005value\030\002 \003(\t\022\014"
  "\n\004type\030\003 \001(\t\022,\n\003cit\030\004 \001(\0132\037.AlgorithmCom"
  "munication.CITInfo\0220\n\005alarm\030\005 \001(\0132!.Algo"
  "rithmCommunication.AlarmInfo\"C\n\006Alarms\022-"
  "\n\006alarms\030\001 \003(\0132\035.AlgorithmCommunication."
  "Alarm\022\n\n\002ts\030\002 \001(\003\"\271\001\n\022ResponseOfRequests"
  "\022\013\n\003err\030\001 \001(\005\022E\n\010response\030\002 \001(\01623.Algori"
  "thmCommunication.ResponseOfRequests.Resp"
  "onse\"O\n\010Response\022\016\n\nSUCCESSFUL\020\000\022\010\n\004FAIL"
  "\020\001\022\025\n\021MISSING_PARAMETER\020\002\022\022\n\016NOT_APPLICA"
  "BLE\020\003\"\267\006\n\033ResponseOfParameterRequests\022T\n"
  "\ralgorithmType\030\001 \001(\0162=.AlgorithmCommunic"
  "ation.ResponseOfParameterRequests.Algori"
  "thm\022\r\n\005error\030\002 \001(\005\022N\n\010response\030\003 \001(\0162<.A"
  "lgorithmCommunication.ResponseOfParamete"
  "rRequests.Response\022=\n\013motionParam\030\004 \001(\0132"
  "(.AlgorithmCommunication.MotionParameter"
  "s\022;\n\ntrackParam\030\005 \001(\0132\'.AlgorithmCommuni"
  "cation.TrackParameters\022K\n\022stabilizationP"
  "aram\030\006 \001(\0132/.AlgorithmCommunication.Stab"
  "ilizationParameters\022A\n\rpanaromaParam\030\007 \001"
  "(\0132*.AlgorithmCommunication.PanaromaPara"
  "meters\022K\n\022faceDetectionParam\030\010 \001(\0132/.Alg"
  "orithmCommunication.FaceDetectionParamet"
  "ers\022C\n\016panChangeParam\030\t \001(\0132+.AlgorithmC"
  "ommunication.PanChangeParameters\"O\n\010Resp"
  "onse\022\016\n\nSUCCESSFUL\020\000\022\010\n\004FAIL\020\001\022\025\n\021MISSIN"
  "G_PARAMETER\020\002\022\022\n\016NOT_APPLICABLE\020\003\"t\n\tAlg"
  "orithm\022\n\n\006MOTION\020\000\022\021\n\rSTABILIZATION\020\001\022\014\n"
  "\010TRACKING\020\002\022\014\n\010PANAROMA\020\003\022\022\n\016FACE_DETECT"
  "ION\020\004\022\010\n\004NONE\020\005\022\016\n\nPAN_CHANGE\020\006\"\210\005\n\023Requ"
  "estForAlgorithm\022L\n\ralgorithmType\030\001 \001(\01625"
  ".AlgorithmCommunication.RequestForAlgori"
  "thm.Algorithm\022=\n\013motionParam\030\002 \001(\0132(.Alg"
  "orithmCommunication.MotionParameters\022;\n\n"
  "trackParam\030\003 \001(\0132\'.AlgorithmCommunicatio"
  "n.TrackParameters\022K\n\022stabilizationParam\030"
  "\004 \001(\0132/.AlgorithmCommunication.Stabiliza"
  "tionParameters\022A\n\rpanaromaParam\030\005 \001(\0132*."
  "AlgorithmCommunication.PanaromaParameter"
  "s\022K\n\022faceDetectionParam\030\006 \001(\0132/.Algorith"
  "mCommunication.FaceDetectionParameters\022C"
  "\n\016panChangeParam\030\010 \001(\0132+.AlgorithmCommun"
  "ication.PanChangeParameters\022\017\n\007channel\030\007"
  " \001(\005\"t\n\tAlgorithm\022\n\n\006MOTION\020\000\022\021\n\rSTABILI"
  "ZATION\020\001\022\014\n\010TRACKING\020\002\022\014\n\010PANAROMA\020\003\022\022\n\016"
  "FACE_DETECTION\020\004\022\010\n\004NONE\020\005\022\016\n\nPAN_CHANGE"
  "\020\006\"e\n\023PanChangeParameters\022N\n\023locationInf"
  "ormation\030\001 \001(\01321.AlgorithmCommunication."
  "ListOfLocationInformation\";\n\rSystemFeatu"
  "re\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022\016\n\006device"
  "\030\003 \001(\005\"I\n\016SystemFeatures\0227\n\010features\030\001 \003"
  "(\0132%.AlgorithmCommunication.SystemFeatur"
  "e\"\320\001\n\020MotionParameters\022H\n\rsettingChoice\030"
  "\001 \001(\01621.AlgorithmCommunication.MotionPar"
  "ameters.Settings\022\023\n\013sensitivity\030\002 \001(\005\022-\n"
  "\007ROIlist\030\003 \001(\0132\034.AlgorithmCommunication."
  "TRoi\".\n\010Settings\022\017\n\013SENSITIVITY\020\000\022\007\n\003ROI"
  "\020\001\022\010\n\004BOTH\020\002\"\237\001\n\004TRoi\0221\n\007polygon\030\001 \003(\0132 "
  ".AlgorithmCommunication.TPolygon\0221\n\005rect"
  "1\030\002 \001(\0132\".AlgorithmCommunication.TRectan"
  "gle\0221\n\005rect2\030\003 \001(\0132\".AlgorithmCommunicat"
  "ion.TRectangle\"\036\n\006TPoint\022\t\n\001x\030\001 \001(\002\022\t\n\001y"
  "\030\002 \001(\002\"M\n\010TPolygon\022.\n\006points\030\001 \003(\0132\036.Alg"
  "orithmCommunication.TPoint\022\021\n\tis_active\030"
  "\002 \001(\010\"t\n\nTRectangle\0221\n\tupperLeft\030\001 \001(\0132\036"
  ".AlgorithmCommunication.TPoint\0223\n\013bottom"
  "Right\030\002 \001(\0132\036.AlgorithmCommunication.TPo"
  "int\"\343\002\n\017TrackParameters\022D\n\ttrackType\030\001 \001"
  "(\01621.AlgorithmCommunication.TrackParamet"
  "ers.TrackType\022:\n\004mode\030\002 \001(\0162,.AlgorithmC"
  "ommunication.TrackParameters.Mode\022\022\n\ntra"
  "ckScore\030\003 \001(\002\022\025\n\rtrackInterval\030\004 \001(\005\0223\n\006"
  "target\030\005 \001(\0132#.AlgorithmCommunication.Tr"
  "ackObject\"0\n\tTrackType\022\010\n\004AUTO\020\000\022\r\n\tSEMI"
  "_AUTO\020\001\022\n\n\006MANUAL\020\002\"<\n\004Mode\022\024\n\020DistanceT"
  "oCenter\020\000\022\020\n\014SizeOfObject\020\001\022\014\n\010UserMode\020"
  "\002\"N\n\013TrackObject\022\017\n\007point_x\030\001 \001(\002\022\017\n\007poi"
  "nt_y\030\002 \001(\002\022\r\n\005width\030\003 \001(\002\022\016\n\006height\030\004 \001("
  "\002\"V\n\027StabilizationParameters\022\017\n\007privacy\030"
  "\001 \001(\005\022\023\n\013sensitivity\030\002 \001(\005\022\025\n\rstabilizat"
  "ion\030\003 \001(\005\"#\n\022PanaromaParameters\022\r\n\005dummy"
  "\030\001 \001(\005\"(\n\027FaceDetectionParameters\022\r\n\005dum"
  "my\030\001 \001(\0052\230\t\n\020AlgorithmService\022^\n\rGetScre"
  "enShot\022&.AlgorithmCommunication.Screensh"
  "otInfo\032#.AlgorithmCommunication.ScreenFr"
  "ame\"\000\022f\n\023GetScreenShotStream\022&.Algorithm"
  "Communication.ScreenshotInfo\032#.Algorithm"
  "Communication.ScreenFrame\"\0000\001\022i\n\014RunAlgo"
  "rithm\022+.AlgorithmCommunication.RequestFo"
  "rAlgorithm\032*.AlgorithmCommunication.Resp"
  "onseOfRequests\"\000\022j\n\rStopAlgorithm\022+.Algo"
  "rithmCommunication.RequestForAlgorithm\032*"
  ".AlgorithmCommunication.ResponseOfReques"
  "ts\"\000\022s\n\026SetAlgorithmParameters\022+.Algorit"
  "hmCommunication.RequestForAlgorithm\032*.Al"
  "gorithmCommunication.ResponseOfRequests\""
  "\000\022|\n\026GetAlgorithmParameters\022+.AlgorithmC"
  "ommunication.RequestForAlgorithm\0323.Algor"
  "ithmCommunication.ResponseOfParameterReq"
  "uests\"\000\022b\n\020GetSystemFeature\022%.AlgorithmC"
  "ommunication.SystemFeature\032%.AlgorithmCo"
  "mmunication.SystemFeature\"\000\022b\n\020SetSystem"
  "Feature\022%.AlgorithmCommunication.SystemF"
  "eature\032%.AlgorithmCommunication.SystemFe"
  "ature\"\000\022h\n\024GetAllSystemFeatures\022&.Algori"
  "thmCommunication.SystemFeatures\032&.Algori"
  "thmCommunication.SystemFeatures\"\000\022h\n\024Set"
  "AllSystemFeatures\022&.AlgorithmCommunicati"
  "on.SystemFeatures\032&.AlgorithmCommunicati"
  "on.SystemFeatures\"\000\022V\n\010GetAlarm\022$.Algori"
  "thmCommunication.AlarmReqInfo\032\036.Algorith"
  "mCommunication.Alarms\"\000(\0010\0012\347\001\n\021Diagnost"
  "icService\022l\n\031GetDiagnosticStatusStream\022#"
  ".AlgorithmCommunication.DiagnosticQ\032&.Al"
  "gorithmCommunication.DiagnosticInfo\"\0000\001\022"
  "d\n\023GetDiagnosticStatus\022#.AlgorithmCommun"
  "ication.DiagnosticQ\032&.AlgorithmCommunica"
  "tion.DiagnosticInfo\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_AlgorithmCommunication_2eproto = {
  false, InitDefaults_AlgorithmCommunication_2eproto, 
  descriptor_table_protodef_AlgorithmCommunication_2eproto,
  "AlgorithmCommunication.proto", &assign_descriptors_table_AlgorithmCommunication_2eproto, 6789,
};

void AddDescriptors_AlgorithmCommunication_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_AlgorithmCommunication_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_AlgorithmCommunication_2eproto = []() { AddDescriptors_AlgorithmCommunication_2eproto(); return true; }();
namespace AlgorithmCommunication {
const ::google::protobuf::EnumDescriptor* Node_NodeType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunication_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunication_2eproto[0];
}
bool Node_NodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Node_NodeType Node::ELEMENT;
const Node_NodeType Node::QUEUE;
const Node_NodeType Node::NodeType_MIN;
const Node_NodeType Node::NodeType_MAX;
const int Node::NodeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TargetStruct_TargetClass_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunication_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunication_2eproto[1];
}
bool TargetStruct_TargetClass_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TargetStruct_TargetClass TargetStruct::HUMAN;
const TargetStruct_TargetClass TargetStruct::CAR;
const TargetStruct_TargetClass TargetStruct::OTHER;
const TargetStruct_TargetClass TargetStruct::TargetClass_MIN;
const TargetStruct_TargetClass TargetStruct::TargetClass_MAX;
const int TargetStruct::TargetClass_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CITInfo_Info_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunication_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunication_2eproto[2];
}
bool CITInfo_Info_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CITInfo_Info CITInfo::OK;
const CITInfo_Info CITInfo::NOK;
const CITInfo_Info CITInfo::Info_MIN;
const CITInfo_Info CITInfo::Info_MAX;
const int CITInfo::Info_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ResponseOfRequests_Response_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunication_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunication_2eproto[3];
}
bool ResponseOfRequests_Response_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ResponseOfRequests_Response ResponseOfRequests::SUCCESSFUL;
const ResponseOfRequests_Response ResponseOfRequests::FAIL;
const ResponseOfRequests_Response ResponseOfRequests::MISSING_PARAMETER;
const ResponseOfRequests_Response ResponseOfRequests::NOT_APPLICABLE;
const ResponseOfRequests_Response ResponseOfRequests::Response_MIN;
const ResponseOfRequests_Response ResponseOfRequests::Response_MAX;
const int ResponseOfRequests::Response_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ResponseOfParameterRequests_Response_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunication_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunication_2eproto[4];
}
bool ResponseOfParameterRequests_Response_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ResponseOfParameterRequests_Response ResponseOfParameterRequests::SUCCESSFUL;
const ResponseOfParameterRequests_Response ResponseOfParameterRequests::FAIL;
const ResponseOfParameterRequests_Response ResponseOfParameterRequests::MISSING_PARAMETER;
const ResponseOfParameterRequests_Response ResponseOfParameterRequests::NOT_APPLICABLE;
const ResponseOfParameterRequests_Response ResponseOfParameterRequests::Response_MIN;
const ResponseOfParameterRequests_Response ResponseOfParameterRequests::Response_MAX;
const int ResponseOfParameterRequests::Response_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ResponseOfParameterRequests_Algorithm_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunication_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunication_2eproto[5];
}
bool ResponseOfParameterRequests_Algorithm_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ResponseOfParameterRequests_Algorithm ResponseOfParameterRequests::MOTION;
const ResponseOfParameterRequests_Algorithm ResponseOfParameterRequests::STABILIZATION;
const ResponseOfParameterRequests_Algorithm ResponseOfParameterRequests::TRACKING;
const ResponseOfParameterRequests_Algorithm ResponseOfParameterRequests::PANAROMA;
const ResponseOfParameterRequests_Algorithm ResponseOfParameterRequests::FACE_DETECTION;
const ResponseOfParameterRequests_Algorithm ResponseOfParameterRequests::NONE;
const ResponseOfParameterRequests_Algorithm ResponseOfParameterRequests::PAN_CHANGE;
const ResponseOfParameterRequests_Algorithm ResponseOfParameterRequests::Algorithm_MIN;
const ResponseOfParameterRequests_Algorithm ResponseOfParameterRequests::Algorithm_MAX;
const int ResponseOfParameterRequests::Algorithm_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RequestForAlgorithm_Algorithm_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunication_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunication_2eproto[6];
}
bool RequestForAlgorithm_Algorithm_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RequestForAlgorithm_Algorithm RequestForAlgorithm::MOTION;
const RequestForAlgorithm_Algorithm RequestForAlgorithm::STABILIZATION;
const RequestForAlgorithm_Algorithm RequestForAlgorithm::TRACKING;
const RequestForAlgorithm_Algorithm RequestForAlgorithm::PANAROMA;
const RequestForAlgorithm_Algorithm RequestForAlgorithm::FACE_DETECTION;
const RequestForAlgorithm_Algorithm RequestForAlgorithm::NONE;
const RequestForAlgorithm_Algorithm RequestForAlgorithm::PAN_CHANGE;
const RequestForAlgorithm_Algorithm RequestForAlgorithm::Algorithm_MIN;
const RequestForAlgorithm_Algorithm RequestForAlgorithm::Algorithm_MAX;
const int RequestForAlgorithm::Algorithm_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MotionParameters_Settings_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunication_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunication_2eproto[7];
}
bool MotionParameters_Settings_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MotionParameters_Settings MotionParameters::SENSITIVITY;
const MotionParameters_Settings MotionParameters::ROI;
const MotionParameters_Settings MotionParameters::BOTH;
const MotionParameters_Settings MotionParameters::Settings_MIN;
const MotionParameters_Settings MotionParameters::Settings_MAX;
const int MotionParameters::Settings_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TrackParameters_TrackType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunication_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunication_2eproto[8];
}
bool TrackParameters_TrackType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TrackParameters_TrackType TrackParameters::AUTO;
const TrackParameters_TrackType TrackParameters::SEMI_AUTO;
const TrackParameters_TrackType TrackParameters::MANUAL;
const TrackParameters_TrackType TrackParameters::TrackType_MIN;
const TrackParameters_TrackType TrackParameters::TrackType_MAX;
const int TrackParameters::TrackType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TrackParameters_Mode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_AlgorithmCommunication_2eproto);
  return file_level_enum_descriptors_AlgorithmCommunication_2eproto[9];
}
bool TrackParameters_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TrackParameters_Mode TrackParameters::DistanceToCenter;
const TrackParameters_Mode TrackParameters::SizeOfObject;
const TrackParameters_Mode TrackParameters::UserMode;
const TrackParameters_Mode TrackParameters::Mode_MIN;
const TrackParameters_Mode TrackParameters::Mode_MAX;
const int TrackParameters::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void LocationInformation::InitAsDefaultInstance() {
}
class LocationInformation::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocationInformation::kPanFieldNumber;
const int LocationInformation::kTiltFieldNumber;
const int LocationInformation::kZoomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocationInformation::LocationInformation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.LocationInformation)
}
LocationInformation::LocationInformation(const LocationInformation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pan_, &from.pan_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoom_) -
    reinterpret_cast<char*>(&pan_)) + sizeof(zoom_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.LocationInformation)
}

void LocationInformation::SharedCtor() {
  ::memset(&pan_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoom_) -
      reinterpret_cast<char*>(&pan_)) + sizeof(zoom_));
}

LocationInformation::~LocationInformation() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.LocationInformation)
  SharedDtor();
}

void LocationInformation::SharedDtor() {
}

void LocationInformation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocationInformation& LocationInformation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LocationInformation_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void LocationInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.LocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pan_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoom_) -
      reinterpret_cast<char*>(&pan_)) + sizeof(zoom_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LocationInformation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LocationInformation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float pan = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_pan(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float tilt = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_tilt(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float zoom = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_zoom(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LocationInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.LocationInformation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float pan = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float tilt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tilt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float zoom = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zoom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.LocationInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.LocationInformation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LocationInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.LocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pan = 1;
  if (this->pan() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->pan(), output);
  }

  // float tilt = 2;
  if (this->tilt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->tilt(), output);
  }

  // float zoom = 3;
  if (this->zoom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->zoom(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.LocationInformation)
}

::google::protobuf::uint8* LocationInformation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.LocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pan = 1;
  if (this->pan() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->pan(), target);
  }

  // float tilt = 2;
  if (this->tilt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->tilt(), target);
  }

  // float zoom = 3;
  if (this->zoom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->zoom(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.LocationInformation)
  return target;
}

size_t LocationInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.LocationInformation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float pan = 1;
  if (this->pan() != 0) {
    total_size += 1 + 4;
  }

  // float tilt = 2;
  if (this->tilt() != 0) {
    total_size += 1 + 4;
  }

  // float zoom = 3;
  if (this->zoom() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocationInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.LocationInformation)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationInformation* source =
      ::google::protobuf::DynamicCastToGenerated<LocationInformation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.LocationInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.LocationInformation)
    MergeFrom(*source);
  }
}

void LocationInformation::MergeFrom(const LocationInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.LocationInformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pan() != 0) {
    set_pan(from.pan());
  }
  if (from.tilt() != 0) {
    set_tilt(from.tilt());
  }
  if (from.zoom() != 0) {
    set_zoom(from.zoom());
  }
}

void LocationInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.LocationInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationInformation::CopyFrom(const LocationInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.LocationInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationInformation::IsInitialized() const {
  return true;
}

void LocationInformation::Swap(LocationInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocationInformation::InternalSwap(LocationInformation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pan_, other->pan_);
  swap(tilt_, other->tilt_);
  swap(zoom_, other->zoom_);
}

::google::protobuf::Metadata LocationInformation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListOfLocationInformation::InitAsDefaultInstance() {
}
class ListOfLocationInformation::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListOfLocationInformation::kLocationInformationFieldNumber;
const int ListOfLocationInformation::kIntervalForCirculationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListOfLocationInformation::ListOfLocationInformation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.ListOfLocationInformation)
}
ListOfLocationInformation::ListOfLocationInformation(const ListOfLocationInformation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      locationinformation_(from.locationinformation_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  intervalforcirculation_ = from.intervalforcirculation_;
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.ListOfLocationInformation)
}

void ListOfLocationInformation::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListOfLocationInformation_AlgorithmCommunication_2eproto.base);
  intervalforcirculation_ = PROTOBUF_LONGLONG(0);
}

ListOfLocationInformation::~ListOfLocationInformation() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.ListOfLocationInformation)
  SharedDtor();
}

void ListOfLocationInformation::SharedDtor() {
}

void ListOfLocationInformation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListOfLocationInformation& ListOfLocationInformation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListOfLocationInformation_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void ListOfLocationInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.ListOfLocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locationinformation_.Clear();
  intervalforcirculation_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListOfLocationInformation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListOfLocationInformation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .AlgorithmCommunication.LocationInformation locationInformation = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::AlgorithmCommunication::LocationInformation::_InternalParse;
          object = msg->add_locationinformation();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // int64 intervalForCirculation = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_intervalforcirculation(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListOfLocationInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.ListOfLocationInformation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AlgorithmCommunication.LocationInformation locationInformation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_locationinformation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 intervalForCirculation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &intervalforcirculation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.ListOfLocationInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.ListOfLocationInformation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListOfLocationInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.ListOfLocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.LocationInformation locationInformation = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locationinformation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->locationinformation(static_cast<int>(i)),
      output);
  }

  // int64 intervalForCirculation = 2;
  if (this->intervalforcirculation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->intervalforcirculation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.ListOfLocationInformation)
}

::google::protobuf::uint8* ListOfLocationInformation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.ListOfLocationInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.LocationInformation locationInformation = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locationinformation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->locationinformation(static_cast<int>(i)), target);
  }

  // int64 intervalForCirculation = 2;
  if (this->intervalforcirculation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->intervalforcirculation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.ListOfLocationInformation)
  return target;
}

size_t ListOfLocationInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.ListOfLocationInformation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.LocationInformation locationInformation = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->locationinformation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locationinformation(static_cast<int>(i)));
    }
  }

  // int64 intervalForCirculation = 2;
  if (this->intervalforcirculation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->intervalforcirculation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListOfLocationInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.ListOfLocationInformation)
  GOOGLE_DCHECK_NE(&from, this);
  const ListOfLocationInformation* source =
      ::google::protobuf::DynamicCastToGenerated<ListOfLocationInformation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.ListOfLocationInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.ListOfLocationInformation)
    MergeFrom(*source);
  }
}

void ListOfLocationInformation::MergeFrom(const ListOfLocationInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.ListOfLocationInformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locationinformation_.MergeFrom(from.locationinformation_);
  if (from.intervalforcirculation() != 0) {
    set_intervalforcirculation(from.intervalforcirculation());
  }
}

void ListOfLocationInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.ListOfLocationInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListOfLocationInformation::CopyFrom(const ListOfLocationInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.ListOfLocationInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOfLocationInformation::IsInitialized() const {
  return true;
}

void ListOfLocationInformation::Swap(ListOfLocationInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListOfLocationInformation::InternalSwap(ListOfLocationInformation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&locationinformation_)->InternalSwap(CastToBase(&other->locationinformation_));
  swap(intervalforcirculation_, other->intervalforcirculation_);
}

::google::protobuf::Metadata ListOfLocationInformation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DiagnosticQ::InitAsDefaultInstance() {
}
class DiagnosticQ::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiagnosticQ::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiagnosticQ::DiagnosticQ()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.DiagnosticQ)
}
DiagnosticQ::DiagnosticQ(const DiagnosticQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.DiagnosticQ)
}

void DiagnosticQ::SharedCtor() {
  value_ = 0;
}

DiagnosticQ::~DiagnosticQ() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.DiagnosticQ)
  SharedDtor();
}

void DiagnosticQ::SharedDtor() {
}

void DiagnosticQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DiagnosticQ& DiagnosticQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DiagnosticQ_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void DiagnosticQ::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.DiagnosticQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DiagnosticQ::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DiagnosticQ*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DiagnosticQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.DiagnosticQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.DiagnosticQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.DiagnosticQ)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DiagnosticQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.DiagnosticQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.DiagnosticQ)
}

::google::protobuf::uint8* DiagnosticQ::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.DiagnosticQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.DiagnosticQ)
  return target;
}

size_t DiagnosticQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.DiagnosticQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiagnosticQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.DiagnosticQ)
  GOOGLE_DCHECK_NE(&from, this);
  const DiagnosticQ* source =
      ::google::protobuf::DynamicCastToGenerated<DiagnosticQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.DiagnosticQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.DiagnosticQ)
    MergeFrom(*source);
  }
}

void DiagnosticQ::MergeFrom(const DiagnosticQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.DiagnosticQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void DiagnosticQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.DiagnosticQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiagnosticQ::CopyFrom(const DiagnosticQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.DiagnosticQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiagnosticQ::IsInitialized() const {
  return true;
}

void DiagnosticQ::Swap(DiagnosticQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiagnosticQ::InternalSwap(DiagnosticQ* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata DiagnosticQ::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DiagnosticInfo::InitAsDefaultInstance() {
}
class DiagnosticInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiagnosticInfo::kNodesFieldNumber;
const int DiagnosticInfo::kLatencyFieldNumber;
const int DiagnosticInfo::kTotalUseMemoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiagnosticInfo::DiagnosticInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.DiagnosticInfo)
}
DiagnosticInfo::DiagnosticInfo(const DiagnosticInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&latency_, &from.latency_,
    static_cast<size_t>(reinterpret_cast<char*>(&totalusememory_) -
    reinterpret_cast<char*>(&latency_)) + sizeof(totalusememory_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.DiagnosticInfo)
}

void DiagnosticInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DiagnosticInfo_AlgorithmCommunication_2eproto.base);
  ::memset(&latency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalusememory_) -
      reinterpret_cast<char*>(&latency_)) + sizeof(totalusememory_));
}

DiagnosticInfo::~DiagnosticInfo() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.DiagnosticInfo)
  SharedDtor();
}

void DiagnosticInfo::SharedDtor() {
}

void DiagnosticInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DiagnosticInfo& DiagnosticInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DiagnosticInfo_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void DiagnosticInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.DiagnosticInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  ::memset(&latency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalusememory_) -
      reinterpret_cast<char*>(&latency_)) + sizeof(totalusememory_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DiagnosticInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DiagnosticInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .AlgorithmCommunication.Node nodes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::AlgorithmCommunication::Node::_InternalParse;
          object = msg->add_nodes();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // int64 latency = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_latency(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 totalUseMemory = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_totalusememory(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DiagnosticInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.DiagnosticInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AlgorithmCommunication.Node nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 latency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &latency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 totalUseMemory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalusememory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.DiagnosticInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.DiagnosticInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DiagnosticInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.DiagnosticInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->nodes(static_cast<int>(i)),
      output);
  }

  // int64 latency = 2;
  if (this->latency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->latency(), output);
  }

  // int64 totalUseMemory = 3;
  if (this->totalusememory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->totalusememory(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.DiagnosticInfo)
}

::google::protobuf::uint8* DiagnosticInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.DiagnosticInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), target);
  }

  // int64 latency = 2;
  if (this->latency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->latency(), target);
  }

  // int64 totalUseMemory = 3;
  if (this->totalusememory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->totalusememory(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.DiagnosticInfo)
  return target;
}

size_t DiagnosticInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.DiagnosticInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.Node nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  // int64 latency = 2;
  if (this->latency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->latency());
  }

  // int64 totalUseMemory = 3;
  if (this->totalusememory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalusememory());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiagnosticInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.DiagnosticInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DiagnosticInfo* source =
      ::google::protobuf::DynamicCastToGenerated<DiagnosticInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.DiagnosticInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.DiagnosticInfo)
    MergeFrom(*source);
  }
}

void DiagnosticInfo::MergeFrom(const DiagnosticInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.DiagnosticInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  if (from.latency() != 0) {
    set_latency(from.latency());
  }
  if (from.totalusememory() != 0) {
    set_totalusememory(from.totalusememory());
  }
}

void DiagnosticInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.DiagnosticInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiagnosticInfo::CopyFrom(const DiagnosticInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.DiagnosticInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiagnosticInfo::IsInitialized() const {
  return true;
}

void DiagnosticInfo::Swap(DiagnosticInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiagnosticInfo::InternalSwap(DiagnosticInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  swap(latency_, other->latency_);
  swap(totalusememory_, other->totalusememory_);
}

::google::protobuf::Metadata DiagnosticInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Node::InitAsDefaultInstance() {
  ::AlgorithmCommunication::_Node_default_instance_._instance.get_mutable()->element_ = const_cast< ::AlgorithmCommunication::Element*>(
      ::AlgorithmCommunication::Element::internal_default_instance());
  ::AlgorithmCommunication::_Node_default_instance_._instance.get_mutable()->queue_ = const_cast< ::AlgorithmCommunication::ElementQueue*>(
      ::AlgorithmCommunication::ElementQueue::internal_default_instance());
}
class Node::HasBitSetters {
 public:
  static const ::AlgorithmCommunication::Element& element(const Node* msg);
  static const ::AlgorithmCommunication::ElementQueue& queue(const Node* msg);
};

const ::AlgorithmCommunication::Element&
Node::HasBitSetters::element(const Node* msg) {
  return *msg->element_;
}
const ::AlgorithmCommunication::ElementQueue&
Node::HasBitSetters::queue(const Node* msg) {
  return *msg->queue_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Node::kTypeFieldNumber;
const int Node::kElementFieldNumber;
const int Node::kQueueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Node::Node()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.Node)
}
Node::Node(const Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_element()) {
    element_ = new ::AlgorithmCommunication::Element(*from.element_);
  } else {
    element_ = nullptr;
  }
  if (from.has_queue()) {
    queue_ = new ::AlgorithmCommunication::ElementQueue(*from.queue_);
  } else {
    queue_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.Node)
}

void Node::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Node_AlgorithmCommunication_2eproto.base);
  ::memset(&element_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&element_)) + sizeof(type_));
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.Node)
  SharedDtor();
}

void Node::SharedDtor() {
  if (this != internal_default_instance()) delete element_;
  if (this != internal_default_instance()) delete queue_;
}

void Node::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Node& Node::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Node_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && element_ != nullptr) {
    delete element_;
  }
  element_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && queue_ != nullptr) {
    delete queue_;
  }
  queue_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Node::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Node*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .AlgorithmCommunication.Node.NodeType type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::AlgorithmCommunication::Node_NodeType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.Element element = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::Element::_InternalParse;
        object = msg->mutable_element();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.ElementQueue queue = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::ElementQueue::_InternalParse;
        object = msg->mutable_queue();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.Node)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AlgorithmCommunication.Node.NodeType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::AlgorithmCommunication::Node_NodeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.Element element = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.ElementQueue queue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_queue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.Node)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.Node.NodeType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .AlgorithmCommunication.Element element = 2;
  if (this->has_element()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::element(this), output);
  }

  // .AlgorithmCommunication.ElementQueue queue = 3;
  if (this->has_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::queue(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.Node)
}

::google::protobuf::uint8* Node::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.Node.NodeType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .AlgorithmCommunication.Element element = 2;
  if (this->has_element()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::element(this), target);
  }

  // .AlgorithmCommunication.ElementQueue queue = 3;
  if (this->has_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::queue(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.Node)
  return target;
}

size_t Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.Node)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AlgorithmCommunication.Element element = 2;
  if (this->has_element()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *element_);
  }

  // .AlgorithmCommunication.ElementQueue queue = 3;
  if (this->has_queue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *queue_);
  }

  // .AlgorithmCommunication.Node.NodeType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const Node* source =
      ::google::protobuf::DynamicCastToGenerated<Node>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.Node)
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_element()) {
    mutable_element()->::AlgorithmCommunication::Element::MergeFrom(from.element());
  }
  if (from.has_queue()) {
    mutable_queue()->::AlgorithmCommunication::ElementQueue::MergeFrom(from.queue());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {
  return true;
}

void Node::Swap(Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Node::InternalSwap(Node* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(element_, other->element_);
  swap(queue_, other->queue_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Element::InitAsDefaultInstance() {
}
class Element::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Element::kInputQueueCountFieldNumber;
const int Element::kOutputQueueCountFieldNumber;
const int Element::kNameFieldNumber;
const int Element::kLatencyFieldNumber;
const int Element::kTotalUseMemoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Element::Element()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.Element)
}
Element::Element(const Element& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&inputqueuecount_, &from.inputqueuecount_,
    static_cast<size_t>(reinterpret_cast<char*>(&totalusememory_) -
    reinterpret_cast<char*>(&inputqueuecount_)) + sizeof(totalusememory_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.Element)
}

void Element::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Element_AlgorithmCommunication_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inputqueuecount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalusememory_) -
      reinterpret_cast<char*>(&inputqueuecount_)) + sizeof(totalusememory_));
}

Element::~Element() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.Element)
  SharedDtor();
}

void Element::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Element::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Element& Element::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Element_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void Element::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inputqueuecount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalusememory_) -
      reinterpret_cast<char*>(&inputqueuecount_)) + sizeof(totalusememory_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Element::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Element*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 inputQueueCount = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_inputqueuecount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 outputQueueCount = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_outputqueuecount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AlgorithmCommunication.Element.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 latency = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_latency(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 totalUseMemory = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_totalusememory(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Element::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.Element)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 inputQueueCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inputqueuecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 outputQueueCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &outputqueuecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AlgorithmCommunication.Element.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 latency = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &latency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 totalUseMemory = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalusememory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.Element)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.Element)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Element::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 inputQueueCount = 1;
  if (this->inputqueuecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->inputqueuecount(), output);
  }

  // int32 outputQueueCount = 2;
  if (this->outputqueuecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->outputqueuecount(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.Element.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // int64 latency = 4;
  if (this->latency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->latency(), output);
  }

  // int64 totalUseMemory = 5;
  if (this->totalusememory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->totalusememory(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.Element)
}

::google::protobuf::uint8* Element::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 inputQueueCount = 1;
  if (this->inputqueuecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->inputqueuecount(), target);
  }

  // int32 outputQueueCount = 2;
  if (this->outputqueuecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->outputqueuecount(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.Element.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // int64 latency = 4;
  if (this->latency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->latency(), target);
  }

  // int64 totalUseMemory = 5;
  if (this->totalusememory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->totalusememory(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.Element)
  return target;
}

size_t Element::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.Element)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 inputQueueCount = 1;
  if (this->inputqueuecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->inputqueuecount());
  }

  // int32 outputQueueCount = 2;
  if (this->outputqueuecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->outputqueuecount());
  }

  // int64 latency = 4;
  if (this->latency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->latency());
  }

  // int64 totalUseMemory = 5;
  if (this->totalusememory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalusememory());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Element::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.Element)
  GOOGLE_DCHECK_NE(&from, this);
  const Element* source =
      ::google::protobuf::DynamicCastToGenerated<Element>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.Element)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.Element)
    MergeFrom(*source);
  }
}

void Element::MergeFrom(const Element& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.Element)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.inputqueuecount() != 0) {
    set_inputqueuecount(from.inputqueuecount());
  }
  if (from.outputqueuecount() != 0) {
    set_outputqueuecount(from.outputqueuecount());
  }
  if (from.latency() != 0) {
    set_latency(from.latency());
  }
  if (from.totalusememory() != 0) {
    set_totalusememory(from.totalusememory());
  }
}

void Element::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.Element)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Element::CopyFrom(const Element& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.Element)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Element::IsInitialized() const {
  return true;
}

void Element::Swap(Element* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Element::InternalSwap(Element* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(inputqueuecount_, other->inputqueuecount_);
  swap(outputqueuecount_, other->outputqueuecount_);
  swap(latency_, other->latency_);
  swap(totalusememory_, other->totalusememory_);
}

::google::protobuf::Metadata Element::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ElementQueue::InitAsDefaultInstance() {
}
class ElementQueue::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementQueue::kFpsFieldNumber;
const int ElementQueue::kBitrateFieldNumber;
const int ElementQueue::kSendCountFieldNumber;
const int ElementQueue::kElapsedTimeFieldNumber;
const int ElementQueue::kBufferCountFieldNumber;
const int ElementQueue::kReceivedCountFieldNumber;
const int ElementQueue::kTotalSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementQueue::ElementQueue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.ElementQueue)
}
ElementQueue::ElementQueue(const ElementQueue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bitrate_, &from.bitrate_,
    static_cast<size_t>(reinterpret_cast<char*>(&totalsize_) -
    reinterpret_cast<char*>(&bitrate_)) + sizeof(totalsize_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.ElementQueue)
}

void ElementQueue::SharedCtor() {
  ::memset(&bitrate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalsize_) -
      reinterpret_cast<char*>(&bitrate_)) + sizeof(totalsize_));
}

ElementQueue::~ElementQueue() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.ElementQueue)
  SharedDtor();
}

void ElementQueue::SharedDtor() {
}

void ElementQueue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ElementQueue& ElementQueue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ElementQueue_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void ElementQueue::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.ElementQueue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bitrate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalsize_) -
      reinterpret_cast<char*>(&bitrate_)) + sizeof(totalsize_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ElementQueue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ElementQueue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float fps = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_fps(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // int64 bitrate = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_bitrate(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 sendCount = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_sendcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 elapsedTime = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_elapsedtime(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 bufferCount = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_buffercount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 receivedCount = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_receivedcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 totalSize = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_totalsize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ElementQueue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.ElementQueue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float fps = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bitrate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bitrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sendCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sendcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 elapsedTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &elapsedtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bufferCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buffercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 receivedCount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &receivedcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 totalSize = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.ElementQueue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.ElementQueue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ElementQueue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.ElementQueue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float fps = 1;
  if (this->fps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->fps(), output);
  }

  // int64 bitrate = 2;
  if (this->bitrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->bitrate(), output);
  }

  // int32 sendCount = 3;
  if (this->sendcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sendcount(), output);
  }

  // int64 elapsedTime = 4;
  if (this->elapsedtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->elapsedtime(), output);
  }

  // int32 bufferCount = 5;
  if (this->buffercount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->buffercount(), output);
  }

  // int32 receivedCount = 6;
  if (this->receivedcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->receivedcount(), output);
  }

  // int64 totalSize = 7;
  if (this->totalsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->totalsize(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.ElementQueue)
}

::google::protobuf::uint8* ElementQueue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.ElementQueue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float fps = 1;
  if (this->fps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->fps(), target);
  }

  // int64 bitrate = 2;
  if (this->bitrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->bitrate(), target);
  }

  // int32 sendCount = 3;
  if (this->sendcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sendcount(), target);
  }

  // int64 elapsedTime = 4;
  if (this->elapsedtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->elapsedtime(), target);
  }

  // int32 bufferCount = 5;
  if (this->buffercount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->buffercount(), target);
  }

  // int32 receivedCount = 6;
  if (this->receivedcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->receivedcount(), target);
  }

  // int64 totalSize = 7;
  if (this->totalsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->totalsize(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.ElementQueue)
  return target;
}

size_t ElementQueue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.ElementQueue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 bitrate = 2;
  if (this->bitrate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bitrate());
  }

  // float fps = 1;
  if (this->fps() != 0) {
    total_size += 1 + 4;
  }

  // int32 sendCount = 3;
  if (this->sendcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sendcount());
  }

  // int64 elapsedTime = 4;
  if (this->elapsedtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->elapsedtime());
  }

  // int32 bufferCount = 5;
  if (this->buffercount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->buffercount());
  }

  // int32 receivedCount = 6;
  if (this->receivedcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->receivedcount());
  }

  // int64 totalSize = 7;
  if (this->totalsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementQueue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.ElementQueue)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementQueue* source =
      ::google::protobuf::DynamicCastToGenerated<ElementQueue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.ElementQueue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.ElementQueue)
    MergeFrom(*source);
  }
}

void ElementQueue::MergeFrom(const ElementQueue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.ElementQueue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bitrate() != 0) {
    set_bitrate(from.bitrate());
  }
  if (from.fps() != 0) {
    set_fps(from.fps());
  }
  if (from.sendcount() != 0) {
    set_sendcount(from.sendcount());
  }
  if (from.elapsedtime() != 0) {
    set_elapsedtime(from.elapsedtime());
  }
  if (from.buffercount() != 0) {
    set_buffercount(from.buffercount());
  }
  if (from.receivedcount() != 0) {
    set_receivedcount(from.receivedcount());
  }
  if (from.totalsize() != 0) {
    set_totalsize(from.totalsize());
  }
}

void ElementQueue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.ElementQueue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementQueue::CopyFrom(const ElementQueue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.ElementQueue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementQueue::IsInitialized() const {
  return true;
}

void ElementQueue::Swap(ElementQueue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementQueue::InternalSwap(ElementQueue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(bitrate_, other->bitrate_);
  swap(fps_, other->fps_);
  swap(sendcount_, other->sendcount_);
  swap(elapsedtime_, other->elapsedtime_);
  swap(buffercount_, other->buffercount_);
  swap(receivedcount_, other->receivedcount_);
  swap(totalsize_, other->totalsize_);
}

::google::protobuf::Metadata ElementQueue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ScreenshotInfo::InitAsDefaultInstance() {
}
class ScreenshotInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScreenshotInfo::kChannelIdFieldNumber;
const int ScreenshotInfo::kQualityFieldNumber;
const int ScreenshotInfo::kFpsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScreenshotInfo::ScreenshotInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.ScreenshotInfo)
}
ScreenshotInfo::ScreenshotInfo(const ScreenshotInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&channelid_, &from.channelid_,
    static_cast<size_t>(reinterpret_cast<char*>(&fps_) -
    reinterpret_cast<char*>(&channelid_)) + sizeof(fps_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.ScreenshotInfo)
}

void ScreenshotInfo::SharedCtor() {
  ::memset(&channelid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fps_) -
      reinterpret_cast<char*>(&channelid_)) + sizeof(fps_));
}

ScreenshotInfo::~ScreenshotInfo() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.ScreenshotInfo)
  SharedDtor();
}

void ScreenshotInfo::SharedDtor() {
}

void ScreenshotInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScreenshotInfo& ScreenshotInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ScreenshotInfo_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void ScreenshotInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.ScreenshotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channelid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fps_) -
      reinterpret_cast<char*>(&channelid_)) + sizeof(fps_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ScreenshotInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ScreenshotInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 channelId = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_channelid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 quality = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_quality(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float fps = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_fps(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ScreenshotInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.ScreenshotInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 channelId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 quality = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fps = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.ScreenshotInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.ScreenshotInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ScreenshotInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.ScreenshotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 channelId = 1;
  if (this->channelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->channelid(), output);
  }

  // int32 quality = 2;
  if (this->quality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->quality(), output);
  }

  // float fps = 3;
  if (this->fps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->fps(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.ScreenshotInfo)
}

::google::protobuf::uint8* ScreenshotInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.ScreenshotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 channelId = 1;
  if (this->channelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->channelid(), target);
  }

  // int32 quality = 2;
  if (this->quality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->quality(), target);
  }

  // float fps = 3;
  if (this->fps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->fps(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.ScreenshotInfo)
  return target;
}

size_t ScreenshotInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.ScreenshotInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 channelId = 1;
  if (this->channelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channelid());
  }

  // int32 quality = 2;
  if (this->quality() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quality());
  }

  // float fps = 3;
  if (this->fps() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScreenshotInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.ScreenshotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ScreenshotInfo* source =
      ::google::protobuf::DynamicCastToGenerated<ScreenshotInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.ScreenshotInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.ScreenshotInfo)
    MergeFrom(*source);
  }
}

void ScreenshotInfo::MergeFrom(const ScreenshotInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.ScreenshotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channelid() != 0) {
    set_channelid(from.channelid());
  }
  if (from.quality() != 0) {
    set_quality(from.quality());
  }
  if (from.fps() != 0) {
    set_fps(from.fps());
  }
}

void ScreenshotInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.ScreenshotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScreenshotInfo::CopyFrom(const ScreenshotInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.ScreenshotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScreenshotInfo::IsInitialized() const {
  return true;
}

void ScreenshotInfo::Swap(ScreenshotInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScreenshotInfo::InternalSwap(ScreenshotInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(channelid_, other->channelid_);
  swap(quality_, other->quality_);
  swap(fps_, other->fps_);
}

::google::protobuf::Metadata ScreenshotInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ScreenFrame::InitAsDefaultInstance() {
}
class ScreenFrame::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScreenFrame::kFrameFieldNumber;
const int ScreenFrame::kQualityFieldNumber;
const int ScreenFrame::kTsFieldNumber;
const int ScreenFrame::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScreenFrame::ScreenFrame()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.ScreenFrame)
}
ScreenFrame::ScreenFrame(const ScreenFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.frame().size() > 0) {
    frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_);
  }
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metadata().size() > 0) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  ::memcpy(&ts_, &from.ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&quality_) -
    reinterpret_cast<char*>(&ts_)) + sizeof(quality_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.ScreenFrame)
}

void ScreenFrame::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ScreenFrame_AlgorithmCommunication_2eproto.base);
  frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quality_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(quality_));
}

ScreenFrame::~ScreenFrame() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.ScreenFrame)
  SharedDtor();
}

void ScreenFrame::SharedDtor() {
  frame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScreenFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScreenFrame& ScreenFrame::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ScreenFrame_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void ScreenFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.ScreenFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quality_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(quality_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ScreenFrame::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ScreenFrame*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes frame = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_frame();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 quality = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_quality(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 ts = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ts(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string metadata = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AlgorithmCommunication.ScreenFrame.metadata");
        object = msg->mutable_metadata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ScreenFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.ScreenFrame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes frame = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 quality = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string metadata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metadata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metadata().data(), static_cast<int>(this->metadata().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AlgorithmCommunication.ScreenFrame.metadata"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.ScreenFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.ScreenFrame)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ScreenFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.ScreenFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes frame = 1;
  if (this->frame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->frame(), output);
  }

  // int32 quality = 2;
  if (this->quality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->quality(), output);
  }

  // int64 ts = 3;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->ts(), output);
  }

  // string metadata = 4;
  if (this->metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.ScreenFrame.metadata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->metadata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.ScreenFrame)
}

::google::protobuf::uint8* ScreenFrame::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.ScreenFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes frame = 1;
  if (this->frame().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->frame(), target);
  }

  // int32 quality = 2;
  if (this->quality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->quality(), target);
  }

  // int64 ts = 3;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->ts(), target);
  }

  // string metadata = 4;
  if (this->metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.ScreenFrame.metadata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->metadata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.ScreenFrame)
  return target;
}

size_t ScreenFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.ScreenFrame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes frame = 1;
  if (this->frame().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->frame());
  }

  // string metadata = 4;
  if (this->metadata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metadata());
  }

  // int64 ts = 3;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  // int32 quality = 2;
  if (this->quality() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quality());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScreenFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.ScreenFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const ScreenFrame* source =
      ::google::protobuf::DynamicCastToGenerated<ScreenFrame>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.ScreenFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.ScreenFrame)
    MergeFrom(*source);
  }
}

void ScreenFrame::MergeFrom(const ScreenFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.ScreenFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.frame().size() > 0) {

    frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_);
  }
  if (from.metadata().size() > 0) {

    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
  if (from.quality() != 0) {
    set_quality(from.quality());
  }
}

void ScreenFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.ScreenFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScreenFrame::CopyFrom(const ScreenFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.ScreenFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScreenFrame::IsInitialized() const {
  return true;
}

void ScreenFrame::Swap(ScreenFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScreenFrame::InternalSwap(ScreenFrame* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  frame_.Swap(&other->frame_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ts_, other->ts_);
  swap(quality_, other->quality_);
}

::google::protobuf::Metadata ScreenFrame::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TargetStruct::InitAsDefaultInstance() {
}
class TargetStruct::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetStruct::kTopLeftXFieldNumber;
const int TargetStruct::kTopLeftYFieldNumber;
const int TargetStruct::kWidthOfTargetFieldNumber;
const int TargetStruct::kHeightOfTargetFieldNumber;
const int TargetStruct::kTargetClassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetStruct::TargetStruct()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.TargetStruct)
}
TargetStruct::TargetStruct(const TargetStruct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&topleftx_, &from.topleftx_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetclass_) -
    reinterpret_cast<char*>(&topleftx_)) + sizeof(targetclass_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.TargetStruct)
}

void TargetStruct::SharedCtor() {
  ::memset(&topleftx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetclass_) -
      reinterpret_cast<char*>(&topleftx_)) + sizeof(targetclass_));
}

TargetStruct::~TargetStruct() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.TargetStruct)
  SharedDtor();
}

void TargetStruct::SharedDtor() {
}

void TargetStruct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TargetStruct& TargetStruct::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TargetStruct_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void TargetStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.TargetStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&topleftx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetclass_) -
      reinterpret_cast<char*>(&topleftx_)) + sizeof(targetclass_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TargetStruct::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TargetStruct*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 topLeftX = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_topleftx(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 topLeftY = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_toplefty(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 widthOfTarget = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_widthoftarget(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 heightOfTarget = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_heightoftarget(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.TargetStruct.TargetClass targetClass = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_targetclass(static_cast<::AlgorithmCommunication::TargetStruct_TargetClass>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TargetStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.TargetStruct)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 topLeftX = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &topleftx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 topLeftY = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toplefty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 widthOfTarget = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &widthoftarget_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 heightOfTarget = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heightoftarget_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.TargetStruct.TargetClass targetClass = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_targetclass(static_cast< ::AlgorithmCommunication::TargetStruct_TargetClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.TargetStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.TargetStruct)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TargetStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.TargetStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 topLeftX = 1;
  if (this->topleftx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->topleftx(), output);
  }

  // int32 topLeftY = 2;
  if (this->toplefty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->toplefty(), output);
  }

  // int32 widthOfTarget = 3;
  if (this->widthoftarget() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->widthoftarget(), output);
  }

  // int32 heightOfTarget = 4;
  if (this->heightoftarget() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->heightoftarget(), output);
  }

  // .AlgorithmCommunication.TargetStruct.TargetClass targetClass = 5;
  if (this->targetclass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->targetclass(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.TargetStruct)
}

::google::protobuf::uint8* TargetStruct::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.TargetStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 topLeftX = 1;
  if (this->topleftx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->topleftx(), target);
  }

  // int32 topLeftY = 2;
  if (this->toplefty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->toplefty(), target);
  }

  // int32 widthOfTarget = 3;
  if (this->widthoftarget() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->widthoftarget(), target);
  }

  // int32 heightOfTarget = 4;
  if (this->heightoftarget() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->heightoftarget(), target);
  }

  // .AlgorithmCommunication.TargetStruct.TargetClass targetClass = 5;
  if (this->targetclass() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->targetclass(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.TargetStruct)
  return target;
}

size_t TargetStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.TargetStruct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 topLeftX = 1;
  if (this->topleftx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->topleftx());
  }

  // int32 topLeftY = 2;
  if (this->toplefty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->toplefty());
  }

  // int32 widthOfTarget = 3;
  if (this->widthoftarget() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->widthoftarget());
  }

  // int32 heightOfTarget = 4;
  if (this->heightoftarget() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->heightoftarget());
  }

  // .AlgorithmCommunication.TargetStruct.TargetClass targetClass = 5;
  if (this->targetclass() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->targetclass());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetStruct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.TargetStruct)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetStruct* source =
      ::google::protobuf::DynamicCastToGenerated<TargetStruct>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.TargetStruct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.TargetStruct)
    MergeFrom(*source);
  }
}

void TargetStruct::MergeFrom(const TargetStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.TargetStruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topleftx() != 0) {
    set_topleftx(from.topleftx());
  }
  if (from.toplefty() != 0) {
    set_toplefty(from.toplefty());
  }
  if (from.widthoftarget() != 0) {
    set_widthoftarget(from.widthoftarget());
  }
  if (from.heightoftarget() != 0) {
    set_heightoftarget(from.heightoftarget());
  }
  if (from.targetclass() != 0) {
    set_targetclass(from.targetclass());
  }
}

void TargetStruct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.TargetStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetStruct::CopyFrom(const TargetStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.TargetStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetStruct::IsInitialized() const {
  return true;
}

void TargetStruct::Swap(TargetStruct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetStruct::InternalSwap(TargetStruct* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(topleftx_, other->topleftx_);
  swap(toplefty_, other->toplefty_);
  swap(widthoftarget_, other->widthoftarget_);
  swap(heightoftarget_, other->heightoftarget_);
  swap(targetclass_, other->targetclass_);
}

::google::protobuf::Metadata TargetStruct::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlarmInfo::InitAsDefaultInstance() {
  ::AlgorithmCommunication::_AlarmInfo_default_instance_._instance.get_mutable()->target_ = const_cast< ::AlgorithmCommunication::TargetStruct*>(
      ::AlgorithmCommunication::TargetStruct::internal_default_instance());
}
class AlarmInfo::HasBitSetters {
 public:
  static const ::AlgorithmCommunication::TargetStruct& target(const AlarmInfo* msg);
};

const ::AlgorithmCommunication::TargetStruct&
AlarmInfo::HasBitSetters::target(const AlarmInfo* msg) {
  return *msg->target_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlarmInfo::kBaseIdFieldNumber;
const int AlarmInfo::kStationIdFieldNumber;
const int AlarmInfo::kDeviceIdFieldNumber;
const int AlarmInfo::kUnitTypeFieldNumber;
const int AlarmInfo::kDateFieldNumber;
const int AlarmInfo::kAlarmFlagFieldNumber;
const int AlarmInfo::kTargetFieldNumber;
const int AlarmInfo::kFrameOfAlarmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlarmInfo::AlarmInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.AlarmInfo)
}
AlarmInfo::AlarmInfo(const AlarmInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.date().size() > 0) {
    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  frameofalarm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.frameofalarm().size() > 0) {
    frameofalarm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frameofalarm_);
  }
  if (from.has_target()) {
    target_ = new ::AlgorithmCommunication::TargetStruct(*from.target_);
  } else {
    target_ = nullptr;
  }
  ::memcpy(&baseid_, &from.baseid_,
    static_cast<size_t>(reinterpret_cast<char*>(&alarmflag_) -
    reinterpret_cast<char*>(&baseid_)) + sizeof(alarmflag_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.AlarmInfo)
}

void AlarmInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlarmInfo_AlgorithmCommunication_2eproto.base);
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frameofalarm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alarmflag_) -
      reinterpret_cast<char*>(&target_)) + sizeof(alarmflag_));
}

AlarmInfo::~AlarmInfo() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.AlarmInfo)
  SharedDtor();
}

void AlarmInfo::SharedDtor() {
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frameofalarm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete target_;
}

void AlarmInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlarmInfo& AlarmInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlarmInfo_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void AlarmInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.AlarmInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frameofalarm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && target_ != nullptr) {
    delete target_;
  }
  target_ = nullptr;
  ::memset(&baseid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alarmflag_) -
      reinterpret_cast<char*>(&baseid_)) + sizeof(alarmflag_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlarmInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlarmInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 baseId = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_baseid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 stationId = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_stationid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 deviceId = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_deviceid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 unitType = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_unittype(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string date = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AlgorithmCommunication.AlarmInfo.date");
        object = msg->mutable_date();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool alarmFlag = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_alarmflag(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.TargetStruct target = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::TargetStruct::_InternalParse;
        object = msg->mutable_target();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes frameOfAlarm = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_frameofalarm();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlarmInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.AlarmInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 baseId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &baseid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stationId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stationid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 deviceId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 unitType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unittype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string date = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->date().data(), static_cast<int>(this->date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AlgorithmCommunication.AlarmInfo.date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool alarmFlag = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &alarmflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.TargetStruct target = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes frameOfAlarm = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_frameofalarm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.AlarmInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.AlarmInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlarmInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.AlarmInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 baseId = 1;
  if (this->baseid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->baseid(), output);
  }

  // int32 stationId = 2;
  if (this->stationid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stationid(), output);
  }

  // int32 deviceId = 3;
  if (this->deviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->deviceid(), output);
  }

  // int32 unitType = 4;
  if (this->unittype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->unittype(), output);
  }

  // string date = 5;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.AlarmInfo.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->date(), output);
  }

  // bool alarmFlag = 6;
  if (this->alarmflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->alarmflag(), output);
  }

  // .AlgorithmCommunication.TargetStruct target = 7;
  if (this->has_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::target(this), output);
  }

  // bytes frameOfAlarm = 8;
  if (this->frameofalarm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->frameofalarm(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.AlarmInfo)
}

::google::protobuf::uint8* AlarmInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.AlarmInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 baseId = 1;
  if (this->baseid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->baseid(), target);
  }

  // int32 stationId = 2;
  if (this->stationid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stationid(), target);
  }

  // int32 deviceId = 3;
  if (this->deviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->deviceid(), target);
  }

  // int32 unitType = 4;
  if (this->unittype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->unittype(), target);
  }

  // string date = 5;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.AlarmInfo.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->date(), target);
  }

  // bool alarmFlag = 6;
  if (this->alarmflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->alarmflag(), target);
  }

  // .AlgorithmCommunication.TargetStruct target = 7;
  if (this->has_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::target(this), target);
  }

  // bytes frameOfAlarm = 8;
  if (this->frameofalarm().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->frameofalarm(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.AlarmInfo)
  return target;
}

size_t AlarmInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.AlarmInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string date = 5;
  if (this->date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  // bytes frameOfAlarm = 8;
  if (this->frameofalarm().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->frameofalarm());
  }

  // .AlgorithmCommunication.TargetStruct target = 7;
  if (this->has_target()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_);
  }

  // int32 baseId = 1;
  if (this->baseid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->baseid());
  }

  // int32 stationId = 2;
  if (this->stationid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stationid());
  }

  // int32 deviceId = 3;
  if (this->deviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deviceid());
  }

  // int32 unitType = 4;
  if (this->unittype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unittype());
  }

  // bool alarmFlag = 6;
  if (this->alarmflag() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlarmInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.AlarmInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AlarmInfo* source =
      ::google::protobuf::DynamicCastToGenerated<AlarmInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.AlarmInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.AlarmInfo)
    MergeFrom(*source);
  }
}

void AlarmInfo::MergeFrom(const AlarmInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.AlarmInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.date().size() > 0) {

    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  if (from.frameofalarm().size() > 0) {

    frameofalarm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frameofalarm_);
  }
  if (from.has_target()) {
    mutable_target()->::AlgorithmCommunication::TargetStruct::MergeFrom(from.target());
  }
  if (from.baseid() != 0) {
    set_baseid(from.baseid());
  }
  if (from.stationid() != 0) {
    set_stationid(from.stationid());
  }
  if (from.deviceid() != 0) {
    set_deviceid(from.deviceid());
  }
  if (from.unittype() != 0) {
    set_unittype(from.unittype());
  }
  if (from.alarmflag() != 0) {
    set_alarmflag(from.alarmflag());
  }
}

void AlarmInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.AlarmInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmInfo::CopyFrom(const AlarmInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.AlarmInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmInfo::IsInitialized() const {
  return true;
}

void AlarmInfo::Swap(AlarmInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlarmInfo::InternalSwap(AlarmInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  date_.Swap(&other->date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  frameofalarm_.Swap(&other->frameofalarm_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(target_, other->target_);
  swap(baseid_, other->baseid_);
  swap(stationid_, other->stationid_);
  swap(deviceid_, other->deviceid_);
  swap(unittype_, other->unittype_);
  swap(alarmflag_, other->alarmflag_);
}

::google::protobuf::Metadata AlarmInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CITInfo::InitAsDefaultInstance() {
}
class CITInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CITInfo::kModuleInfoFieldNumber;
const int CITInfo::kMotorInfoFieldNumber;
const int CITInfo::kUsbInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CITInfo::CITInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.CITInfo)
}
CITInfo::CITInfo(const CITInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&moduleinfo_, &from.moduleinfo_,
    static_cast<size_t>(reinterpret_cast<char*>(&usbinfo_) -
    reinterpret_cast<char*>(&moduleinfo_)) + sizeof(usbinfo_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.CITInfo)
}

void CITInfo::SharedCtor() {
  ::memset(&moduleinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usbinfo_) -
      reinterpret_cast<char*>(&moduleinfo_)) + sizeof(usbinfo_));
}

CITInfo::~CITInfo() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.CITInfo)
  SharedDtor();
}

void CITInfo::SharedDtor() {
}

void CITInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CITInfo& CITInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CITInfo_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void CITInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.CITInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&moduleinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usbinfo_) -
      reinterpret_cast<char*>(&moduleinfo_)) + sizeof(usbinfo_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CITInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CITInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .AlgorithmCommunication.CITInfo.Info moduleInfo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_moduleinfo(static_cast<::AlgorithmCommunication::CITInfo_Info>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.CITInfo.Info motorInfo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_motorinfo(static_cast<::AlgorithmCommunication::CITInfo_Info>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.CITInfo.Info usbInfo = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_usbinfo(static_cast<::AlgorithmCommunication::CITInfo_Info>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CITInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.CITInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AlgorithmCommunication.CITInfo.Info moduleInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_moduleinfo(static_cast< ::AlgorithmCommunication::CITInfo_Info >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.CITInfo.Info motorInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_motorinfo(static_cast< ::AlgorithmCommunication::CITInfo_Info >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.CITInfo.Info usbInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_usbinfo(static_cast< ::AlgorithmCommunication::CITInfo_Info >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.CITInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.CITInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CITInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.CITInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.CITInfo.Info moduleInfo = 1;
  if (this->moduleinfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->moduleinfo(), output);
  }

  // .AlgorithmCommunication.CITInfo.Info motorInfo = 2;
  if (this->motorinfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->motorinfo(), output);
  }

  // .AlgorithmCommunication.CITInfo.Info usbInfo = 3;
  if (this->usbinfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->usbinfo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.CITInfo)
}

::google::protobuf::uint8* CITInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.CITInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.CITInfo.Info moduleInfo = 1;
  if (this->moduleinfo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->moduleinfo(), target);
  }

  // .AlgorithmCommunication.CITInfo.Info motorInfo = 2;
  if (this->motorinfo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->motorinfo(), target);
  }

  // .AlgorithmCommunication.CITInfo.Info usbInfo = 3;
  if (this->usbinfo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->usbinfo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.CITInfo)
  return target;
}

size_t CITInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.CITInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AlgorithmCommunication.CITInfo.Info moduleInfo = 1;
  if (this->moduleinfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->moduleinfo());
  }

  // .AlgorithmCommunication.CITInfo.Info motorInfo = 2;
  if (this->motorinfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->motorinfo());
  }

  // .AlgorithmCommunication.CITInfo.Info usbInfo = 3;
  if (this->usbinfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->usbinfo());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CITInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.CITInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CITInfo* source =
      ::google::protobuf::DynamicCastToGenerated<CITInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.CITInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.CITInfo)
    MergeFrom(*source);
  }
}

void CITInfo::MergeFrom(const CITInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.CITInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.moduleinfo() != 0) {
    set_moduleinfo(from.moduleinfo());
  }
  if (from.motorinfo() != 0) {
    set_motorinfo(from.motorinfo());
  }
  if (from.usbinfo() != 0) {
    set_usbinfo(from.usbinfo());
  }
}

void CITInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.CITInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CITInfo::CopyFrom(const CITInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.CITInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CITInfo::IsInitialized() const {
  return true;
}

void CITInfo::Swap(CITInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CITInfo::InternalSwap(CITInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(moduleinfo_, other->moduleinfo_);
  swap(motorinfo_, other->motorinfo_);
  swap(usbinfo_, other->usbinfo_);
}

::google::protobuf::Metadata CITInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GeneralInfo::InitAsDefaultInstance() {
  ::AlgorithmCommunication::_GeneralInfo_default_instance_._instance.get_mutable()->alarminfo_ = const_cast< ::AlgorithmCommunication::AlarmInfo*>(
      ::AlgorithmCommunication::AlarmInfo::internal_default_instance());
  ::AlgorithmCommunication::_GeneralInfo_default_instance_._instance.get_mutable()->citinfo_ = const_cast< ::AlgorithmCommunication::CITInfo*>(
      ::AlgorithmCommunication::CITInfo::internal_default_instance());
}
class GeneralInfo::HasBitSetters {
 public:
  static const ::AlgorithmCommunication::AlarmInfo& alarminfo(const GeneralInfo* msg);
  static const ::AlgorithmCommunication::CITInfo& citinfo(const GeneralInfo* msg);
};

const ::AlgorithmCommunication::AlarmInfo&
GeneralInfo::HasBitSetters::alarminfo(const GeneralInfo* msg) {
  return *msg->alarminfo_;
}
const ::AlgorithmCommunication::CITInfo&
GeneralInfo::HasBitSetters::citinfo(const GeneralInfo* msg) {
  return *msg->citinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GeneralInfo::kAlarmInfoFieldNumber;
const int GeneralInfo::kCitInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GeneralInfo::GeneralInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.GeneralInfo)
}
GeneralInfo::GeneralInfo(const GeneralInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_alarminfo()) {
    alarminfo_ = new ::AlgorithmCommunication::AlarmInfo(*from.alarminfo_);
  } else {
    alarminfo_ = nullptr;
  }
  if (from.has_citinfo()) {
    citinfo_ = new ::AlgorithmCommunication::CITInfo(*from.citinfo_);
  } else {
    citinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.GeneralInfo)
}

void GeneralInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GeneralInfo_AlgorithmCommunication_2eproto.base);
  ::memset(&alarminfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&citinfo_) -
      reinterpret_cast<char*>(&alarminfo_)) + sizeof(citinfo_));
}

GeneralInfo::~GeneralInfo() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.GeneralInfo)
  SharedDtor();
}

void GeneralInfo::SharedDtor() {
  if (this != internal_default_instance()) delete alarminfo_;
  if (this != internal_default_instance()) delete citinfo_;
}

void GeneralInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GeneralInfo& GeneralInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GeneralInfo_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void GeneralInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.GeneralInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && alarminfo_ != nullptr) {
    delete alarminfo_;
  }
  alarminfo_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && citinfo_ != nullptr) {
    delete citinfo_;
  }
  citinfo_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GeneralInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GeneralInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .AlgorithmCommunication.AlarmInfo alarmInfo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::AlarmInfo::_InternalParse;
        object = msg->mutable_alarminfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.CITInfo citInfo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::CITInfo::_InternalParse;
        object = msg->mutable_citinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GeneralInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.GeneralInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AlgorithmCommunication.AlarmInfo alarmInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alarminfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.CITInfo citInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_citinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.GeneralInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.GeneralInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GeneralInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.GeneralInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.AlarmInfo alarmInfo = 1;
  if (this->has_alarminfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::alarminfo(this), output);
  }

  // .AlgorithmCommunication.CITInfo citInfo = 2;
  if (this->has_citinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::citinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.GeneralInfo)
}

::google::protobuf::uint8* GeneralInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.GeneralInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.AlarmInfo alarmInfo = 1;
  if (this->has_alarminfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::alarminfo(this), target);
  }

  // .AlgorithmCommunication.CITInfo citInfo = 2;
  if (this->has_citinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::citinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.GeneralInfo)
  return target;
}

size_t GeneralInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.GeneralInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AlgorithmCommunication.AlarmInfo alarmInfo = 1;
  if (this->has_alarminfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *alarminfo_);
  }

  // .AlgorithmCommunication.CITInfo citInfo = 2;
  if (this->has_citinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *citinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GeneralInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.GeneralInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GeneralInfo* source =
      ::google::protobuf::DynamicCastToGenerated<GeneralInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.GeneralInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.GeneralInfo)
    MergeFrom(*source);
  }
}

void GeneralInfo::MergeFrom(const GeneralInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.GeneralInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_alarminfo()) {
    mutable_alarminfo()->::AlgorithmCommunication::AlarmInfo::MergeFrom(from.alarminfo());
  }
  if (from.has_citinfo()) {
    mutable_citinfo()->::AlgorithmCommunication::CITInfo::MergeFrom(from.citinfo());
  }
}

void GeneralInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.GeneralInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeneralInfo::CopyFrom(const GeneralInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.GeneralInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneralInfo::IsInitialized() const {
  return true;
}

void GeneralInfo::Swap(GeneralInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GeneralInfo::InternalSwap(GeneralInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(alarminfo_, other->alarminfo_);
  swap(citinfo_, other->citinfo_);
}

::google::protobuf::Metadata GeneralInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlarmReqAdvancedParameters::InitAsDefaultInstance() {
}
class AlarmReqAdvancedParameters::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlarmReqAdvancedParameters::kEnabledFieldNumber;
const int AlarmReqAdvancedParameters::kSuppressIntervalFieldNumber;
const int AlarmReqAdvancedParameters::kAlarmQueueLengthFieldNumber;
const int AlarmReqAdvancedParameters::kSmartSnapshotFieldNumber;
const int AlarmReqAdvancedParameters::kSmartSnapshotIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlarmReqAdvancedParameters::AlarmReqAdvancedParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.AlarmReqAdvancedParameters)
}
AlarmReqAdvancedParameters::AlarmReqAdvancedParameters(const AlarmReqAdvancedParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&suppressinterval_, &from.suppressinterval_,
    static_cast<size_t>(reinterpret_cast<char*>(&smartsnapshotinterval_) -
    reinterpret_cast<char*>(&suppressinterval_)) + sizeof(smartsnapshotinterval_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.AlarmReqAdvancedParameters)
}

void AlarmReqAdvancedParameters::SharedCtor() {
  ::memset(&suppressinterval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&smartsnapshotinterval_) -
      reinterpret_cast<char*>(&suppressinterval_)) + sizeof(smartsnapshotinterval_));
}

AlarmReqAdvancedParameters::~AlarmReqAdvancedParameters() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.AlarmReqAdvancedParameters)
  SharedDtor();
}

void AlarmReqAdvancedParameters::SharedDtor() {
}

void AlarmReqAdvancedParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlarmReqAdvancedParameters& AlarmReqAdvancedParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlarmReqAdvancedParameters_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void AlarmReqAdvancedParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.AlarmReqAdvancedParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&suppressinterval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&smartsnapshotinterval_) -
      reinterpret_cast<char*>(&suppressinterval_)) + sizeof(smartsnapshotinterval_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlarmReqAdvancedParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlarmReqAdvancedParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 suppressInterval = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_suppressinterval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 alarmQueueLength = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_alarmqueuelength(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool smartSnapshot = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_smartsnapshot(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 smartSnapshotInterval = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_smartsnapshotinterval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlarmReqAdvancedParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.AlarmReqAdvancedParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 suppressInterval = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suppressinterval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 alarmQueueLength = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmqueuelength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool smartSnapshot = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &smartsnapshot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 smartSnapshotInterval = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &smartsnapshotinterval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.AlarmReqAdvancedParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.AlarmReqAdvancedParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlarmReqAdvancedParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.AlarmReqAdvancedParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // int32 suppressInterval = 2;
  if (this->suppressinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->suppressinterval(), output);
  }

  // int32 alarmQueueLength = 3;
  if (this->alarmqueuelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->alarmqueuelength(), output);
  }

  // bool smartSnapshot = 4;
  if (this->smartsnapshot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->smartsnapshot(), output);
  }

  // int32 smartSnapshotInterval = 5;
  if (this->smartsnapshotinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->smartsnapshotinterval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.AlarmReqAdvancedParameters)
}

::google::protobuf::uint8* AlarmReqAdvancedParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.AlarmReqAdvancedParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // int32 suppressInterval = 2;
  if (this->suppressinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->suppressinterval(), target);
  }

  // int32 alarmQueueLength = 3;
  if (this->alarmqueuelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->alarmqueuelength(), target);
  }

  // bool smartSnapshot = 4;
  if (this->smartsnapshot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->smartsnapshot(), target);
  }

  // int32 smartSnapshotInterval = 5;
  if (this->smartsnapshotinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->smartsnapshotinterval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.AlarmReqAdvancedParameters)
  return target;
}

size_t AlarmReqAdvancedParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.AlarmReqAdvancedParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 suppressInterval = 2;
  if (this->suppressinterval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suppressinterval());
  }

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool smartSnapshot = 4;
  if (this->smartsnapshot() != 0) {
    total_size += 1 + 1;
  }

  // int32 alarmQueueLength = 3;
  if (this->alarmqueuelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->alarmqueuelength());
  }

  // int32 smartSnapshotInterval = 5;
  if (this->smartsnapshotinterval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->smartsnapshotinterval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlarmReqAdvancedParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.AlarmReqAdvancedParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AlarmReqAdvancedParameters* source =
      ::google::protobuf::DynamicCastToGenerated<AlarmReqAdvancedParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.AlarmReqAdvancedParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.AlarmReqAdvancedParameters)
    MergeFrom(*source);
  }
}

void AlarmReqAdvancedParameters::MergeFrom(const AlarmReqAdvancedParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.AlarmReqAdvancedParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suppressinterval() != 0) {
    set_suppressinterval(from.suppressinterval());
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
  if (from.smartsnapshot() != 0) {
    set_smartsnapshot(from.smartsnapshot());
  }
  if (from.alarmqueuelength() != 0) {
    set_alarmqueuelength(from.alarmqueuelength());
  }
  if (from.smartsnapshotinterval() != 0) {
    set_smartsnapshotinterval(from.smartsnapshotinterval());
  }
}

void AlarmReqAdvancedParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.AlarmReqAdvancedParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmReqAdvancedParameters::CopyFrom(const AlarmReqAdvancedParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.AlarmReqAdvancedParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmReqAdvancedParameters::IsInitialized() const {
  return true;
}

void AlarmReqAdvancedParameters::Swap(AlarmReqAdvancedParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlarmReqAdvancedParameters::InternalSwap(AlarmReqAdvancedParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(suppressinterval_, other->suppressinterval_);
  swap(enabled_, other->enabled_);
  swap(smartsnapshot_, other->smartsnapshot_);
  swap(alarmqueuelength_, other->alarmqueuelength_);
  swap(smartsnapshotinterval_, other->smartsnapshotinterval_);
}

::google::protobuf::Metadata AlarmReqAdvancedParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlarmReqInfo::InitAsDefaultInstance() {
  ::AlgorithmCommunication::_AlarmReqInfo_default_instance_._instance.get_mutable()->advancedparams_ = const_cast< ::AlgorithmCommunication::AlarmReqAdvancedParameters*>(
      ::AlgorithmCommunication::AlarmReqAdvancedParameters::internal_default_instance());
}
class AlarmReqInfo::HasBitSetters {
 public:
  static const ::AlgorithmCommunication::AlarmReqAdvancedParameters& advancedparams(const AlarmReqInfo* msg);
};

const ::AlgorithmCommunication::AlarmReqAdvancedParameters&
AlarmReqInfo::HasBitSetters::advancedparams(const AlarmReqInfo* msg) {
  return *msg->advancedparams_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlarmReqInfo::kFilterFieldNumber;
const int AlarmReqInfo::kChannelFieldNumber;
const int AlarmReqInfo::kIntervalMsecsFieldNumber;
const int AlarmReqInfo::kAdvancedParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlarmReqInfo::AlarmReqInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.AlarmReqInfo)
}
AlarmReqInfo::AlarmReqInfo(const AlarmReqInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.has_advancedparams()) {
    advancedparams_ = new ::AlgorithmCommunication::AlarmReqAdvancedParameters(*from.advancedparams_);
  } else {
    advancedparams_ = nullptr;
  }
  ::memcpy(&channel_, &from.channel_,
    static_cast<size_t>(reinterpret_cast<char*>(&intervalmsecs_) -
    reinterpret_cast<char*>(&channel_)) + sizeof(intervalmsecs_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.AlarmReqInfo)
}

void AlarmReqInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlarmReqInfo_AlgorithmCommunication_2eproto.base);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&advancedparams_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intervalmsecs_) -
      reinterpret_cast<char*>(&advancedparams_)) + sizeof(intervalmsecs_));
}

AlarmReqInfo::~AlarmReqInfo() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.AlarmReqInfo)
  SharedDtor();
}

void AlarmReqInfo::SharedDtor() {
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete advancedparams_;
}

void AlarmReqInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlarmReqInfo& AlarmReqInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlarmReqInfo_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void AlarmReqInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.AlarmReqInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && advancedparams_ != nullptr) {
    delete advancedparams_;
  }
  advancedparams_ = nullptr;
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intervalmsecs_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(intervalmsecs_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlarmReqInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlarmReqInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string filter = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AlgorithmCommunication.AlarmReqInfo.filter");
        object = msg->mutable_filter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 channel = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_channel(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 intervalMsecs = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_intervalmsecs(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.AlarmReqAdvancedParameters advancedParams = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::AlarmReqAdvancedParameters::_InternalParse;
        object = msg->mutable_advancedparams();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlarmReqInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.AlarmReqInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AlgorithmCommunication.AlarmReqInfo.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 intervalMsecs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intervalmsecs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.AlarmReqAdvancedParameters advancedParams = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advancedparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.AlarmReqInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.AlarmReqInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlarmReqInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.AlarmReqInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 1;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.AlarmReqInfo.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filter(), output);
  }

  // int32 channel = 2;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel(), output);
  }

  // int32 intervalMsecs = 3;
  if (this->intervalmsecs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->intervalmsecs(), output);
  }

  // .AlgorithmCommunication.AlarmReqAdvancedParameters advancedParams = 4;
  if (this->has_advancedparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::advancedparams(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.AlarmReqInfo)
}

::google::protobuf::uint8* AlarmReqInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.AlarmReqInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 1;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.AlarmReqInfo.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filter(), target);
  }

  // int32 channel = 2;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel(), target);
  }

  // int32 intervalMsecs = 3;
  if (this->intervalmsecs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->intervalmsecs(), target);
  }

  // .AlgorithmCommunication.AlarmReqAdvancedParameters advancedParams = 4;
  if (this->has_advancedparams()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::advancedparams(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.AlarmReqInfo)
  return target;
}

size_t AlarmReqInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.AlarmReqInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filter = 1;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // .AlgorithmCommunication.AlarmReqAdvancedParameters advancedParams = 4;
  if (this->has_advancedparams()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advancedparams_);
  }

  // int32 channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // int32 intervalMsecs = 3;
  if (this->intervalmsecs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intervalmsecs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlarmReqInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.AlarmReqInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AlarmReqInfo* source =
      ::google::protobuf::DynamicCastToGenerated<AlarmReqInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.AlarmReqInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.AlarmReqInfo)
    MergeFrom(*source);
  }
}

void AlarmReqInfo::MergeFrom(const AlarmReqInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.AlarmReqInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.has_advancedparams()) {
    mutable_advancedparams()->::AlgorithmCommunication::AlarmReqAdvancedParameters::MergeFrom(from.advancedparams());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.intervalmsecs() != 0) {
    set_intervalmsecs(from.intervalmsecs());
  }
}

void AlarmReqInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.AlarmReqInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmReqInfo::CopyFrom(const AlarmReqInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.AlarmReqInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmReqInfo::IsInitialized() const {
  return true;
}

void AlarmReqInfo::Swap(AlarmReqInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlarmReqInfo::InternalSwap(AlarmReqInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(advancedparams_, other->advancedparams_);
  swap(channel_, other->channel_);
  swap(intervalmsecs_, other->intervalmsecs_);
}

::google::protobuf::Metadata AlarmReqInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Alarm::InitAsDefaultInstance() {
  ::AlgorithmCommunication::_Alarm_default_instance_._instance.get_mutable()->cit_ = const_cast< ::AlgorithmCommunication::CITInfo*>(
      ::AlgorithmCommunication::CITInfo::internal_default_instance());
  ::AlgorithmCommunication::_Alarm_default_instance_._instance.get_mutable()->alarm_ = const_cast< ::AlgorithmCommunication::AlarmInfo*>(
      ::AlgorithmCommunication::AlarmInfo::internal_default_instance());
}
class Alarm::HasBitSetters {
 public:
  static const ::AlgorithmCommunication::CITInfo& cit(const Alarm* msg);
  static const ::AlgorithmCommunication::AlarmInfo& alarm(const Alarm* msg);
};

const ::AlgorithmCommunication::CITInfo&
Alarm::HasBitSetters::cit(const Alarm* msg) {
  return *msg->cit_;
}
const ::AlgorithmCommunication::AlarmInfo&
Alarm::HasBitSetters::alarm(const Alarm* msg) {
  return *msg->alarm_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Alarm::kKeyFieldNumber;
const int Alarm::kValueFieldNumber;
const int Alarm::kTypeFieldNumber;
const int Alarm::kCitFieldNumber;
const int Alarm::kAlarmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Alarm::Alarm()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.Alarm)
}
Alarm::Alarm(const Alarm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      key_(from.key_),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_cit()) {
    cit_ = new ::AlgorithmCommunication::CITInfo(*from.cit_);
  } else {
    cit_ = nullptr;
  }
  if (from.has_alarm()) {
    alarm_ = new ::AlgorithmCommunication::AlarmInfo(*from.alarm_);
  } else {
    alarm_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.Alarm)
}

void Alarm::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Alarm_AlgorithmCommunication_2eproto.base);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alarm_) -
      reinterpret_cast<char*>(&cit_)) + sizeof(alarm_));
}

Alarm::~Alarm() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.Alarm)
  SharedDtor();
}

void Alarm::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cit_;
  if (this != internal_default_instance()) delete alarm_;
}

void Alarm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Alarm& Alarm::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Alarm_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void Alarm::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.Alarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.Clear();
  value_.Clear();
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && cit_ != nullptr) {
    delete cit_;
  }
  cit_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && alarm_ != nullptr) {
    delete alarm_;
  }
  alarm_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Alarm::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Alarm*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("AlgorithmCommunication.Alarm.key");
          object = msg->add_key();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated string value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("AlgorithmCommunication.Alarm.value");
          object = msg->add_value();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // string type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AlgorithmCommunication.Alarm.type");
        object = msg->mutable_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .AlgorithmCommunication.CITInfo cit = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::CITInfo::_InternalParse;
        object = msg->mutable_cit();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.AlarmInfo alarm = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::AlarmInfo::_InternalParse;
        object = msg->mutable_alarm();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Alarm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.Alarm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key(this->key_size() - 1).data(),
            static_cast<int>(this->key(this->key_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AlgorithmCommunication.Alarm.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value(this->value_size() - 1).data(),
            static_cast<int>(this->value(this->value_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AlgorithmCommunication.Alarm.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AlgorithmCommunication.Alarm.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.CITInfo cit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.AlarmInfo alarm = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alarm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.Alarm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.Alarm)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Alarm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.Alarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string key = 1;
  for (int i = 0, n = this->key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key(i).data(), static_cast<int>(this->key(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.Alarm.key");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->key(i), output);
  }

  // repeated string value = 2;
  for (int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value(i).data(), static_cast<int>(this->value(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.Alarm.value");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->value(i), output);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.Alarm.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // .AlgorithmCommunication.CITInfo cit = 4;
  if (this->has_cit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::cit(this), output);
  }

  // .AlgorithmCommunication.AlarmInfo alarm = 5;
  if (this->has_alarm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::alarm(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.Alarm)
}

::google::protobuf::uint8* Alarm::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.Alarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string key = 1;
  for (int i = 0, n = this->key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key(i).data(), static_cast<int>(this->key(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.Alarm.key");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->key(i), target);
  }

  // repeated string value = 2;
  for (int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value(i).data(), static_cast<int>(this->value(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.Alarm.value");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->value(i), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.Alarm.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // .AlgorithmCommunication.CITInfo cit = 4;
  if (this->has_cit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::cit(this), target);
  }

  // .AlgorithmCommunication.AlarmInfo alarm = 5;
  if (this->has_alarm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::alarm(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.Alarm)
  return target;
}

size_t Alarm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.Alarm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string key = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->key_size());
  for (int i = 0, n = this->key_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->key(i));
  }

  // repeated string value = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->value_size());
  for (int i = 0, n = this->value_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->value(i));
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // .AlgorithmCommunication.CITInfo cit = 4;
  if (this->has_cit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cit_);
  }

  // .AlgorithmCommunication.AlarmInfo alarm = 5;
  if (this->has_alarm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *alarm_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Alarm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.Alarm)
  GOOGLE_DCHECK_NE(&from, this);
  const Alarm* source =
      ::google::protobuf::DynamicCastToGenerated<Alarm>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.Alarm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.Alarm)
    MergeFrom(*source);
  }
}

void Alarm::MergeFrom(const Alarm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.Alarm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_.MergeFrom(from.key_);
  value_.MergeFrom(from.value_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_cit()) {
    mutable_cit()->::AlgorithmCommunication::CITInfo::MergeFrom(from.cit());
  }
  if (from.has_alarm()) {
    mutable_alarm()->::AlgorithmCommunication::AlarmInfo::MergeFrom(from.alarm());
  }
}

void Alarm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.Alarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Alarm::CopyFrom(const Alarm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.Alarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Alarm::IsInitialized() const {
  return true;
}

void Alarm::Swap(Alarm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Alarm::InternalSwap(Alarm* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.InternalSwap(CastToBase(&other->key_));
  value_.InternalSwap(CastToBase(&other->value_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cit_, other->cit_);
  swap(alarm_, other->alarm_);
}

::google::protobuf::Metadata Alarm::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Alarms::InitAsDefaultInstance() {
}
class Alarms::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Alarms::kAlarmsFieldNumber;
const int Alarms::kTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Alarms::Alarms()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.Alarms)
}
Alarms::Alarms(const Alarms& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      alarms_(from.alarms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ts_ = from.ts_;
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.Alarms)
}

void Alarms::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Alarms_AlgorithmCommunication_2eproto.base);
  ts_ = PROTOBUF_LONGLONG(0);
}

Alarms::~Alarms() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.Alarms)
  SharedDtor();
}

void Alarms::SharedDtor() {
}

void Alarms::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Alarms& Alarms::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Alarms_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void Alarms::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.Alarms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alarms_.Clear();
  ts_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Alarms::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Alarms*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .AlgorithmCommunication.Alarm alarms = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::AlgorithmCommunication::Alarm::_InternalParse;
          object = msg->add_alarms();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // int64 ts = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_ts(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Alarms::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.Alarms)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AlgorithmCommunication.Alarm alarms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_alarms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.Alarms)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.Alarms)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Alarms::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.Alarms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.Alarm alarms = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alarms_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->alarms(static_cast<int>(i)),
      output);
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ts(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.Alarms)
}

::google::protobuf::uint8* Alarms::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.Alarms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.Alarm alarms = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alarms_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->alarms(static_cast<int>(i)), target);
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ts(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.Alarms)
  return target;
}

size_t Alarms::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.Alarms)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.Alarm alarms = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->alarms_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->alarms(static_cast<int>(i)));
    }
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Alarms::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.Alarms)
  GOOGLE_DCHECK_NE(&from, this);
  const Alarms* source =
      ::google::protobuf::DynamicCastToGenerated<Alarms>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.Alarms)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.Alarms)
    MergeFrom(*source);
  }
}

void Alarms::MergeFrom(const Alarms& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.Alarms)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alarms_.MergeFrom(from.alarms_);
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
}

void Alarms::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.Alarms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Alarms::CopyFrom(const Alarms& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.Alarms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Alarms::IsInitialized() const {
  return true;
}

void Alarms::Swap(Alarms* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Alarms::InternalSwap(Alarms* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&alarms_)->InternalSwap(CastToBase(&other->alarms_));
  swap(ts_, other->ts_);
}

::google::protobuf::Metadata Alarms::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResponseOfRequests::InitAsDefaultInstance() {
}
class ResponseOfRequests::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseOfRequests::kErrFieldNumber;
const int ResponseOfRequests::kResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseOfRequests::ResponseOfRequests()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.ResponseOfRequests)
}
ResponseOfRequests::ResponseOfRequests(const ResponseOfRequests& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&err_, &from.err_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&err_)) + sizeof(response_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.ResponseOfRequests)
}

void ResponseOfRequests::SharedCtor() {
  ::memset(&err_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&err_)) + sizeof(response_));
}

ResponseOfRequests::~ResponseOfRequests() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.ResponseOfRequests)
  SharedDtor();
}

void ResponseOfRequests::SharedDtor() {
}

void ResponseOfRequests::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResponseOfRequests& ResponseOfRequests::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResponseOfRequests_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void ResponseOfRequests::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.ResponseOfRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&err_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&err_)) + sizeof(response_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResponseOfRequests::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResponseOfRequests*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 err = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_err(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.ResponseOfRequests.Response response = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_response(static_cast<::AlgorithmCommunication::ResponseOfRequests_Response>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResponseOfRequests::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.ResponseOfRequests)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.ResponseOfRequests.Response response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response(static_cast< ::AlgorithmCommunication::ResponseOfRequests_Response >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.ResponseOfRequests)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.ResponseOfRequests)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResponseOfRequests::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.ResponseOfRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err(), output);
  }

  // .AlgorithmCommunication.ResponseOfRequests.Response response = 2;
  if (this->response() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.ResponseOfRequests)
}

::google::protobuf::uint8* ResponseOfRequests::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.ResponseOfRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err(), target);
  }

  // .AlgorithmCommunication.ResponseOfRequests.Response response = 2;
  if (this->response() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.ResponseOfRequests)
  return target;
}

size_t ResponseOfRequests::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.ResponseOfRequests)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  // .AlgorithmCommunication.ResponseOfRequests.Response response = 2;
  if (this->response() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponseOfRequests::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.ResponseOfRequests)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseOfRequests* source =
      ::google::protobuf::DynamicCastToGenerated<ResponseOfRequests>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.ResponseOfRequests)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.ResponseOfRequests)
    MergeFrom(*source);
  }
}

void ResponseOfRequests::MergeFrom(const ResponseOfRequests& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.ResponseOfRequests)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err() != 0) {
    set_err(from.err());
  }
  if (from.response() != 0) {
    set_response(from.response());
  }
}

void ResponseOfRequests::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.ResponseOfRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseOfRequests::CopyFrom(const ResponseOfRequests& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.ResponseOfRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseOfRequests::IsInitialized() const {
  return true;
}

void ResponseOfRequests::Swap(ResponseOfRequests* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseOfRequests::InternalSwap(ResponseOfRequests* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(err_, other->err_);
  swap(response_, other->response_);
}

::google::protobuf::Metadata ResponseOfRequests::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResponseOfParameterRequests::InitAsDefaultInstance() {
  ::AlgorithmCommunication::_ResponseOfParameterRequests_default_instance_._instance.get_mutable()->motionparam_ = const_cast< ::AlgorithmCommunication::MotionParameters*>(
      ::AlgorithmCommunication::MotionParameters::internal_default_instance());
  ::AlgorithmCommunication::_ResponseOfParameterRequests_default_instance_._instance.get_mutable()->trackparam_ = const_cast< ::AlgorithmCommunication::TrackParameters*>(
      ::AlgorithmCommunication::TrackParameters::internal_default_instance());
  ::AlgorithmCommunication::_ResponseOfParameterRequests_default_instance_._instance.get_mutable()->stabilizationparam_ = const_cast< ::AlgorithmCommunication::StabilizationParameters*>(
      ::AlgorithmCommunication::StabilizationParameters::internal_default_instance());
  ::AlgorithmCommunication::_ResponseOfParameterRequests_default_instance_._instance.get_mutable()->panaromaparam_ = const_cast< ::AlgorithmCommunication::PanaromaParameters*>(
      ::AlgorithmCommunication::PanaromaParameters::internal_default_instance());
  ::AlgorithmCommunication::_ResponseOfParameterRequests_default_instance_._instance.get_mutable()->facedetectionparam_ = const_cast< ::AlgorithmCommunication::FaceDetectionParameters*>(
      ::AlgorithmCommunication::FaceDetectionParameters::internal_default_instance());
  ::AlgorithmCommunication::_ResponseOfParameterRequests_default_instance_._instance.get_mutable()->panchangeparam_ = const_cast< ::AlgorithmCommunication::PanChangeParameters*>(
      ::AlgorithmCommunication::PanChangeParameters::internal_default_instance());
}
class ResponseOfParameterRequests::HasBitSetters {
 public:
  static const ::AlgorithmCommunication::MotionParameters& motionparam(const ResponseOfParameterRequests* msg);
  static const ::AlgorithmCommunication::TrackParameters& trackparam(const ResponseOfParameterRequests* msg);
  static const ::AlgorithmCommunication::StabilizationParameters& stabilizationparam(const ResponseOfParameterRequests* msg);
  static const ::AlgorithmCommunication::PanaromaParameters& panaromaparam(const ResponseOfParameterRequests* msg);
  static const ::AlgorithmCommunication::FaceDetectionParameters& facedetectionparam(const ResponseOfParameterRequests* msg);
  static const ::AlgorithmCommunication::PanChangeParameters& panchangeparam(const ResponseOfParameterRequests* msg);
};

const ::AlgorithmCommunication::MotionParameters&
ResponseOfParameterRequests::HasBitSetters::motionparam(const ResponseOfParameterRequests* msg) {
  return *msg->motionparam_;
}
const ::AlgorithmCommunication::TrackParameters&
ResponseOfParameterRequests::HasBitSetters::trackparam(const ResponseOfParameterRequests* msg) {
  return *msg->trackparam_;
}
const ::AlgorithmCommunication::StabilizationParameters&
ResponseOfParameterRequests::HasBitSetters::stabilizationparam(const ResponseOfParameterRequests* msg) {
  return *msg->stabilizationparam_;
}
const ::AlgorithmCommunication::PanaromaParameters&
ResponseOfParameterRequests::HasBitSetters::panaromaparam(const ResponseOfParameterRequests* msg) {
  return *msg->panaromaparam_;
}
const ::AlgorithmCommunication::FaceDetectionParameters&
ResponseOfParameterRequests::HasBitSetters::facedetectionparam(const ResponseOfParameterRequests* msg) {
  return *msg->facedetectionparam_;
}
const ::AlgorithmCommunication::PanChangeParameters&
ResponseOfParameterRequests::HasBitSetters::panchangeparam(const ResponseOfParameterRequests* msg) {
  return *msg->panchangeparam_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseOfParameterRequests::kAlgorithmTypeFieldNumber;
const int ResponseOfParameterRequests::kErrorFieldNumber;
const int ResponseOfParameterRequests::kResponseFieldNumber;
const int ResponseOfParameterRequests::kMotionParamFieldNumber;
const int ResponseOfParameterRequests::kTrackParamFieldNumber;
const int ResponseOfParameterRequests::kStabilizationParamFieldNumber;
const int ResponseOfParameterRequests::kPanaromaParamFieldNumber;
const int ResponseOfParameterRequests::kFaceDetectionParamFieldNumber;
const int ResponseOfParameterRequests::kPanChangeParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseOfParameterRequests::ResponseOfParameterRequests()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.ResponseOfParameterRequests)
}
ResponseOfParameterRequests::ResponseOfParameterRequests(const ResponseOfParameterRequests& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_motionparam()) {
    motionparam_ = new ::AlgorithmCommunication::MotionParameters(*from.motionparam_);
  } else {
    motionparam_ = nullptr;
  }
  if (from.has_trackparam()) {
    trackparam_ = new ::AlgorithmCommunication::TrackParameters(*from.trackparam_);
  } else {
    trackparam_ = nullptr;
  }
  if (from.has_stabilizationparam()) {
    stabilizationparam_ = new ::AlgorithmCommunication::StabilizationParameters(*from.stabilizationparam_);
  } else {
    stabilizationparam_ = nullptr;
  }
  if (from.has_panaromaparam()) {
    panaromaparam_ = new ::AlgorithmCommunication::PanaromaParameters(*from.panaromaparam_);
  } else {
    panaromaparam_ = nullptr;
  }
  if (from.has_facedetectionparam()) {
    facedetectionparam_ = new ::AlgorithmCommunication::FaceDetectionParameters(*from.facedetectionparam_);
  } else {
    facedetectionparam_ = nullptr;
  }
  if (from.has_panchangeparam()) {
    panchangeparam_ = new ::AlgorithmCommunication::PanChangeParameters(*from.panchangeparam_);
  } else {
    panchangeparam_ = nullptr;
  }
  ::memcpy(&algorithmtype_, &from.algorithmtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&algorithmtype_)) + sizeof(response_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.ResponseOfParameterRequests)
}

void ResponseOfParameterRequests::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResponseOfParameterRequests_AlgorithmCommunication_2eproto.base);
  ::memset(&motionparam_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&motionparam_)) + sizeof(response_));
}

ResponseOfParameterRequests::~ResponseOfParameterRequests() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.ResponseOfParameterRequests)
  SharedDtor();
}

void ResponseOfParameterRequests::SharedDtor() {
  if (this != internal_default_instance()) delete motionparam_;
  if (this != internal_default_instance()) delete trackparam_;
  if (this != internal_default_instance()) delete stabilizationparam_;
  if (this != internal_default_instance()) delete panaromaparam_;
  if (this != internal_default_instance()) delete facedetectionparam_;
  if (this != internal_default_instance()) delete panchangeparam_;
}

void ResponseOfParameterRequests::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResponseOfParameterRequests& ResponseOfParameterRequests::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResponseOfParameterRequests_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void ResponseOfParameterRequests::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.ResponseOfParameterRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && motionparam_ != nullptr) {
    delete motionparam_;
  }
  motionparam_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && trackparam_ != nullptr) {
    delete trackparam_;
  }
  trackparam_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && stabilizationparam_ != nullptr) {
    delete stabilizationparam_;
  }
  stabilizationparam_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && panaromaparam_ != nullptr) {
    delete panaromaparam_;
  }
  panaromaparam_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && facedetectionparam_ != nullptr) {
    delete facedetectionparam_;
  }
  facedetectionparam_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && panchangeparam_ != nullptr) {
    delete panchangeparam_;
  }
  panchangeparam_ = nullptr;
  ::memset(&algorithmtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&algorithmtype_)) + sizeof(response_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResponseOfParameterRequests::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResponseOfParameterRequests*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .AlgorithmCommunication.ResponseOfParameterRequests.Algorithm algorithmType = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_algorithmtype(static_cast<::AlgorithmCommunication::ResponseOfParameterRequests_Algorithm>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 error = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.ResponseOfParameterRequests.Response response = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_response(static_cast<::AlgorithmCommunication::ResponseOfParameterRequests_Response>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.MotionParameters motionParam = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::MotionParameters::_InternalParse;
        object = msg->mutable_motionparam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.TrackParameters trackParam = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::TrackParameters::_InternalParse;
        object = msg->mutable_trackparam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.StabilizationParameters stabilizationParam = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::StabilizationParameters::_InternalParse;
        object = msg->mutable_stabilizationparam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.PanaromaParameters panaromaParam = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::PanaromaParameters::_InternalParse;
        object = msg->mutable_panaromaparam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::FaceDetectionParameters::_InternalParse;
        object = msg->mutable_facedetectionparam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.PanChangeParameters panChangeParam = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::PanChangeParameters::_InternalParse;
        object = msg->mutable_panchangeparam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResponseOfParameterRequests::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.ResponseOfParameterRequests)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AlgorithmCommunication.ResponseOfParameterRequests.Algorithm algorithmType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_algorithmtype(static_cast< ::AlgorithmCommunication::ResponseOfParameterRequests_Algorithm >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.ResponseOfParameterRequests.Response response = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response(static_cast< ::AlgorithmCommunication::ResponseOfParameterRequests_Response >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.MotionParameters motionParam = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_motionparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.TrackParameters trackParam = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trackparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.StabilizationParameters stabilizationParam = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stabilizationparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.PanaromaParameters panaromaParam = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_panaromaparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_facedetectionparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.PanChangeParameters panChangeParam = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_panchangeparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.ResponseOfParameterRequests)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.ResponseOfParameterRequests)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResponseOfParameterRequests::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.ResponseOfParameterRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.ResponseOfParameterRequests.Algorithm algorithmType = 1;
  if (this->algorithmtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->algorithmtype(), output);
  }

  // int32 error = 2;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error(), output);
  }

  // .AlgorithmCommunication.ResponseOfParameterRequests.Response response = 3;
  if (this->response() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->response(), output);
  }

  // .AlgorithmCommunication.MotionParameters motionParam = 4;
  if (this->has_motionparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::motionparam(this), output);
  }

  // .AlgorithmCommunication.TrackParameters trackParam = 5;
  if (this->has_trackparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::trackparam(this), output);
  }

  // .AlgorithmCommunication.StabilizationParameters stabilizationParam = 6;
  if (this->has_stabilizationparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::stabilizationparam(this), output);
  }

  // .AlgorithmCommunication.PanaromaParameters panaromaParam = 7;
  if (this->has_panaromaparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::panaromaparam(this), output);
  }

  // .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 8;
  if (this->has_facedetectionparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::facedetectionparam(this), output);
  }

  // .AlgorithmCommunication.PanChangeParameters panChangeParam = 9;
  if (this->has_panchangeparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::panchangeparam(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.ResponseOfParameterRequests)
}

::google::protobuf::uint8* ResponseOfParameterRequests::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.ResponseOfParameterRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.ResponseOfParameterRequests.Algorithm algorithmType = 1;
  if (this->algorithmtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->algorithmtype(), target);
  }

  // int32 error = 2;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error(), target);
  }

  // .AlgorithmCommunication.ResponseOfParameterRequests.Response response = 3;
  if (this->response() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->response(), target);
  }

  // .AlgorithmCommunication.MotionParameters motionParam = 4;
  if (this->has_motionparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::motionparam(this), target);
  }

  // .AlgorithmCommunication.TrackParameters trackParam = 5;
  if (this->has_trackparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::trackparam(this), target);
  }

  // .AlgorithmCommunication.StabilizationParameters stabilizationParam = 6;
  if (this->has_stabilizationparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::stabilizationparam(this), target);
  }

  // .AlgorithmCommunication.PanaromaParameters panaromaParam = 7;
  if (this->has_panaromaparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::panaromaparam(this), target);
  }

  // .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 8;
  if (this->has_facedetectionparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::facedetectionparam(this), target);
  }

  // .AlgorithmCommunication.PanChangeParameters panChangeParam = 9;
  if (this->has_panchangeparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::panchangeparam(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.ResponseOfParameterRequests)
  return target;
}

size_t ResponseOfParameterRequests::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.ResponseOfParameterRequests)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AlgorithmCommunication.MotionParameters motionParam = 4;
  if (this->has_motionparam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *motionparam_);
  }

  // .AlgorithmCommunication.TrackParameters trackParam = 5;
  if (this->has_trackparam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *trackparam_);
  }

  // .AlgorithmCommunication.StabilizationParameters stabilizationParam = 6;
  if (this->has_stabilizationparam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stabilizationparam_);
  }

  // .AlgorithmCommunication.PanaromaParameters panaromaParam = 7;
  if (this->has_panaromaparam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *panaromaparam_);
  }

  // .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 8;
  if (this->has_facedetectionparam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *facedetectionparam_);
  }

  // .AlgorithmCommunication.PanChangeParameters panChangeParam = 9;
  if (this->has_panchangeparam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *panchangeparam_);
  }

  // .AlgorithmCommunication.ResponseOfParameterRequests.Algorithm algorithmType = 1;
  if (this->algorithmtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->algorithmtype());
  }

  // int32 error = 2;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // .AlgorithmCommunication.ResponseOfParameterRequests.Response response = 3;
  if (this->response() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponseOfParameterRequests::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.ResponseOfParameterRequests)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseOfParameterRequests* source =
      ::google::protobuf::DynamicCastToGenerated<ResponseOfParameterRequests>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.ResponseOfParameterRequests)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.ResponseOfParameterRequests)
    MergeFrom(*source);
  }
}

void ResponseOfParameterRequests::MergeFrom(const ResponseOfParameterRequests& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.ResponseOfParameterRequests)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_motionparam()) {
    mutable_motionparam()->::AlgorithmCommunication::MotionParameters::MergeFrom(from.motionparam());
  }
  if (from.has_trackparam()) {
    mutable_trackparam()->::AlgorithmCommunication::TrackParameters::MergeFrom(from.trackparam());
  }
  if (from.has_stabilizationparam()) {
    mutable_stabilizationparam()->::AlgorithmCommunication::StabilizationParameters::MergeFrom(from.stabilizationparam());
  }
  if (from.has_panaromaparam()) {
    mutable_panaromaparam()->::AlgorithmCommunication::PanaromaParameters::MergeFrom(from.panaromaparam());
  }
  if (from.has_facedetectionparam()) {
    mutable_facedetectionparam()->::AlgorithmCommunication::FaceDetectionParameters::MergeFrom(from.facedetectionparam());
  }
  if (from.has_panchangeparam()) {
    mutable_panchangeparam()->::AlgorithmCommunication::PanChangeParameters::MergeFrom(from.panchangeparam());
  }
  if (from.algorithmtype() != 0) {
    set_algorithmtype(from.algorithmtype());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.response() != 0) {
    set_response(from.response());
  }
}

void ResponseOfParameterRequests::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.ResponseOfParameterRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseOfParameterRequests::CopyFrom(const ResponseOfParameterRequests& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.ResponseOfParameterRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseOfParameterRequests::IsInitialized() const {
  return true;
}

void ResponseOfParameterRequests::Swap(ResponseOfParameterRequests* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseOfParameterRequests::InternalSwap(ResponseOfParameterRequests* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(motionparam_, other->motionparam_);
  swap(trackparam_, other->trackparam_);
  swap(stabilizationparam_, other->stabilizationparam_);
  swap(panaromaparam_, other->panaromaparam_);
  swap(facedetectionparam_, other->facedetectionparam_);
  swap(panchangeparam_, other->panchangeparam_);
  swap(algorithmtype_, other->algorithmtype_);
  swap(error_, other->error_);
  swap(response_, other->response_);
}

::google::protobuf::Metadata ResponseOfParameterRequests::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RequestForAlgorithm::InitAsDefaultInstance() {
  ::AlgorithmCommunication::_RequestForAlgorithm_default_instance_._instance.get_mutable()->motionparam_ = const_cast< ::AlgorithmCommunication::MotionParameters*>(
      ::AlgorithmCommunication::MotionParameters::internal_default_instance());
  ::AlgorithmCommunication::_RequestForAlgorithm_default_instance_._instance.get_mutable()->trackparam_ = const_cast< ::AlgorithmCommunication::TrackParameters*>(
      ::AlgorithmCommunication::TrackParameters::internal_default_instance());
  ::AlgorithmCommunication::_RequestForAlgorithm_default_instance_._instance.get_mutable()->stabilizationparam_ = const_cast< ::AlgorithmCommunication::StabilizationParameters*>(
      ::AlgorithmCommunication::StabilizationParameters::internal_default_instance());
  ::AlgorithmCommunication::_RequestForAlgorithm_default_instance_._instance.get_mutable()->panaromaparam_ = const_cast< ::AlgorithmCommunication::PanaromaParameters*>(
      ::AlgorithmCommunication::PanaromaParameters::internal_default_instance());
  ::AlgorithmCommunication::_RequestForAlgorithm_default_instance_._instance.get_mutable()->facedetectionparam_ = const_cast< ::AlgorithmCommunication::FaceDetectionParameters*>(
      ::AlgorithmCommunication::FaceDetectionParameters::internal_default_instance());
  ::AlgorithmCommunication::_RequestForAlgorithm_default_instance_._instance.get_mutable()->panchangeparam_ = const_cast< ::AlgorithmCommunication::PanChangeParameters*>(
      ::AlgorithmCommunication::PanChangeParameters::internal_default_instance());
}
class RequestForAlgorithm::HasBitSetters {
 public:
  static const ::AlgorithmCommunication::MotionParameters& motionparam(const RequestForAlgorithm* msg);
  static const ::AlgorithmCommunication::TrackParameters& trackparam(const RequestForAlgorithm* msg);
  static const ::AlgorithmCommunication::StabilizationParameters& stabilizationparam(const RequestForAlgorithm* msg);
  static const ::AlgorithmCommunication::PanaromaParameters& panaromaparam(const RequestForAlgorithm* msg);
  static const ::AlgorithmCommunication::FaceDetectionParameters& facedetectionparam(const RequestForAlgorithm* msg);
  static const ::AlgorithmCommunication::PanChangeParameters& panchangeparam(const RequestForAlgorithm* msg);
};

const ::AlgorithmCommunication::MotionParameters&
RequestForAlgorithm::HasBitSetters::motionparam(const RequestForAlgorithm* msg) {
  return *msg->motionparam_;
}
const ::AlgorithmCommunication::TrackParameters&
RequestForAlgorithm::HasBitSetters::trackparam(const RequestForAlgorithm* msg) {
  return *msg->trackparam_;
}
const ::AlgorithmCommunication::StabilizationParameters&
RequestForAlgorithm::HasBitSetters::stabilizationparam(const RequestForAlgorithm* msg) {
  return *msg->stabilizationparam_;
}
const ::AlgorithmCommunication::PanaromaParameters&
RequestForAlgorithm::HasBitSetters::panaromaparam(const RequestForAlgorithm* msg) {
  return *msg->panaromaparam_;
}
const ::AlgorithmCommunication::FaceDetectionParameters&
RequestForAlgorithm::HasBitSetters::facedetectionparam(const RequestForAlgorithm* msg) {
  return *msg->facedetectionparam_;
}
const ::AlgorithmCommunication::PanChangeParameters&
RequestForAlgorithm::HasBitSetters::panchangeparam(const RequestForAlgorithm* msg) {
  return *msg->panchangeparam_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestForAlgorithm::kAlgorithmTypeFieldNumber;
const int RequestForAlgorithm::kMotionParamFieldNumber;
const int RequestForAlgorithm::kTrackParamFieldNumber;
const int RequestForAlgorithm::kStabilizationParamFieldNumber;
const int RequestForAlgorithm::kPanaromaParamFieldNumber;
const int RequestForAlgorithm::kFaceDetectionParamFieldNumber;
const int RequestForAlgorithm::kPanChangeParamFieldNumber;
const int RequestForAlgorithm::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestForAlgorithm::RequestForAlgorithm()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.RequestForAlgorithm)
}
RequestForAlgorithm::RequestForAlgorithm(const RequestForAlgorithm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_motionparam()) {
    motionparam_ = new ::AlgorithmCommunication::MotionParameters(*from.motionparam_);
  } else {
    motionparam_ = nullptr;
  }
  if (from.has_trackparam()) {
    trackparam_ = new ::AlgorithmCommunication::TrackParameters(*from.trackparam_);
  } else {
    trackparam_ = nullptr;
  }
  if (from.has_stabilizationparam()) {
    stabilizationparam_ = new ::AlgorithmCommunication::StabilizationParameters(*from.stabilizationparam_);
  } else {
    stabilizationparam_ = nullptr;
  }
  if (from.has_panaromaparam()) {
    panaromaparam_ = new ::AlgorithmCommunication::PanaromaParameters(*from.panaromaparam_);
  } else {
    panaromaparam_ = nullptr;
  }
  if (from.has_facedetectionparam()) {
    facedetectionparam_ = new ::AlgorithmCommunication::FaceDetectionParameters(*from.facedetectionparam_);
  } else {
    facedetectionparam_ = nullptr;
  }
  if (from.has_panchangeparam()) {
    panchangeparam_ = new ::AlgorithmCommunication::PanChangeParameters(*from.panchangeparam_);
  } else {
    panchangeparam_ = nullptr;
  }
  ::memcpy(&algorithmtype_, &from.algorithmtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&algorithmtype_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.RequestForAlgorithm)
}

void RequestForAlgorithm::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RequestForAlgorithm_AlgorithmCommunication_2eproto.base);
  ::memset(&motionparam_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&motionparam_)) + sizeof(channel_));
}

RequestForAlgorithm::~RequestForAlgorithm() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.RequestForAlgorithm)
  SharedDtor();
}

void RequestForAlgorithm::SharedDtor() {
  if (this != internal_default_instance()) delete motionparam_;
  if (this != internal_default_instance()) delete trackparam_;
  if (this != internal_default_instance()) delete stabilizationparam_;
  if (this != internal_default_instance()) delete panaromaparam_;
  if (this != internal_default_instance()) delete facedetectionparam_;
  if (this != internal_default_instance()) delete panchangeparam_;
}

void RequestForAlgorithm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestForAlgorithm& RequestForAlgorithm::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RequestForAlgorithm_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void RequestForAlgorithm::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.RequestForAlgorithm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && motionparam_ != nullptr) {
    delete motionparam_;
  }
  motionparam_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && trackparam_ != nullptr) {
    delete trackparam_;
  }
  trackparam_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && stabilizationparam_ != nullptr) {
    delete stabilizationparam_;
  }
  stabilizationparam_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && panaromaparam_ != nullptr) {
    delete panaromaparam_;
  }
  panaromaparam_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && facedetectionparam_ != nullptr) {
    delete facedetectionparam_;
  }
  facedetectionparam_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && panchangeparam_ != nullptr) {
    delete panchangeparam_;
  }
  panchangeparam_ = nullptr;
  ::memset(&algorithmtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&algorithmtype_)) + sizeof(channel_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RequestForAlgorithm::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RequestForAlgorithm*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .AlgorithmCommunication.RequestForAlgorithm.Algorithm algorithmType = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_algorithmtype(static_cast<::AlgorithmCommunication::RequestForAlgorithm_Algorithm>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.MotionParameters motionParam = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::MotionParameters::_InternalParse;
        object = msg->mutable_motionparam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.TrackParameters trackParam = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::TrackParameters::_InternalParse;
        object = msg->mutable_trackparam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.StabilizationParameters stabilizationParam = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::StabilizationParameters::_InternalParse;
        object = msg->mutable_stabilizationparam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.PanaromaParameters panaromaParam = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::PanaromaParameters::_InternalParse;
        object = msg->mutable_panaromaparam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::FaceDetectionParameters::_InternalParse;
        object = msg->mutable_facedetectionparam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 channel = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_channel(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.PanChangeParameters panChangeParam = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::PanChangeParameters::_InternalParse;
        object = msg->mutable_panchangeparam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RequestForAlgorithm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.RequestForAlgorithm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AlgorithmCommunication.RequestForAlgorithm.Algorithm algorithmType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_algorithmtype(static_cast< ::AlgorithmCommunication::RequestForAlgorithm_Algorithm >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.MotionParameters motionParam = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_motionparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.TrackParameters trackParam = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trackparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.StabilizationParameters stabilizationParam = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stabilizationparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.PanaromaParameters panaromaParam = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_panaromaparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_facedetectionparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 channel = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.PanChangeParameters panChangeParam = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_panchangeparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.RequestForAlgorithm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.RequestForAlgorithm)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RequestForAlgorithm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.RequestForAlgorithm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.RequestForAlgorithm.Algorithm algorithmType = 1;
  if (this->algorithmtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->algorithmtype(), output);
  }

  // .AlgorithmCommunication.MotionParameters motionParam = 2;
  if (this->has_motionparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::motionparam(this), output);
  }

  // .AlgorithmCommunication.TrackParameters trackParam = 3;
  if (this->has_trackparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::trackparam(this), output);
  }

  // .AlgorithmCommunication.StabilizationParameters stabilizationParam = 4;
  if (this->has_stabilizationparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::stabilizationparam(this), output);
  }

  // .AlgorithmCommunication.PanaromaParameters panaromaParam = 5;
  if (this->has_panaromaparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::panaromaparam(this), output);
  }

  // .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 6;
  if (this->has_facedetectionparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::facedetectionparam(this), output);
  }

  // int32 channel = 7;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->channel(), output);
  }

  // .AlgorithmCommunication.PanChangeParameters panChangeParam = 8;
  if (this->has_panchangeparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::panchangeparam(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.RequestForAlgorithm)
}

::google::protobuf::uint8* RequestForAlgorithm::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.RequestForAlgorithm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.RequestForAlgorithm.Algorithm algorithmType = 1;
  if (this->algorithmtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->algorithmtype(), target);
  }

  // .AlgorithmCommunication.MotionParameters motionParam = 2;
  if (this->has_motionparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::motionparam(this), target);
  }

  // .AlgorithmCommunication.TrackParameters trackParam = 3;
  if (this->has_trackparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::trackparam(this), target);
  }

  // .AlgorithmCommunication.StabilizationParameters stabilizationParam = 4;
  if (this->has_stabilizationparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::stabilizationparam(this), target);
  }

  // .AlgorithmCommunication.PanaromaParameters panaromaParam = 5;
  if (this->has_panaromaparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::panaromaparam(this), target);
  }

  // .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 6;
  if (this->has_facedetectionparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::facedetectionparam(this), target);
  }

  // int32 channel = 7;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->channel(), target);
  }

  // .AlgorithmCommunication.PanChangeParameters panChangeParam = 8;
  if (this->has_panchangeparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::panchangeparam(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.RequestForAlgorithm)
  return target;
}

size_t RequestForAlgorithm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.RequestForAlgorithm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AlgorithmCommunication.MotionParameters motionParam = 2;
  if (this->has_motionparam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *motionparam_);
  }

  // .AlgorithmCommunication.TrackParameters trackParam = 3;
  if (this->has_trackparam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *trackparam_);
  }

  // .AlgorithmCommunication.StabilizationParameters stabilizationParam = 4;
  if (this->has_stabilizationparam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stabilizationparam_);
  }

  // .AlgorithmCommunication.PanaromaParameters panaromaParam = 5;
  if (this->has_panaromaparam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *panaromaparam_);
  }

  // .AlgorithmCommunication.FaceDetectionParameters faceDetectionParam = 6;
  if (this->has_facedetectionparam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *facedetectionparam_);
  }

  // .AlgorithmCommunication.PanChangeParameters panChangeParam = 8;
  if (this->has_panchangeparam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *panchangeparam_);
  }

  // .AlgorithmCommunication.RequestForAlgorithm.Algorithm algorithmType = 1;
  if (this->algorithmtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->algorithmtype());
  }

  // int32 channel = 7;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestForAlgorithm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.RequestForAlgorithm)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestForAlgorithm* source =
      ::google::protobuf::DynamicCastToGenerated<RequestForAlgorithm>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.RequestForAlgorithm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.RequestForAlgorithm)
    MergeFrom(*source);
  }
}

void RequestForAlgorithm::MergeFrom(const RequestForAlgorithm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.RequestForAlgorithm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_motionparam()) {
    mutable_motionparam()->::AlgorithmCommunication::MotionParameters::MergeFrom(from.motionparam());
  }
  if (from.has_trackparam()) {
    mutable_trackparam()->::AlgorithmCommunication::TrackParameters::MergeFrom(from.trackparam());
  }
  if (from.has_stabilizationparam()) {
    mutable_stabilizationparam()->::AlgorithmCommunication::StabilizationParameters::MergeFrom(from.stabilizationparam());
  }
  if (from.has_panaromaparam()) {
    mutable_panaromaparam()->::AlgorithmCommunication::PanaromaParameters::MergeFrom(from.panaromaparam());
  }
  if (from.has_facedetectionparam()) {
    mutable_facedetectionparam()->::AlgorithmCommunication::FaceDetectionParameters::MergeFrom(from.facedetectionparam());
  }
  if (from.has_panchangeparam()) {
    mutable_panchangeparam()->::AlgorithmCommunication::PanChangeParameters::MergeFrom(from.panchangeparam());
  }
  if (from.algorithmtype() != 0) {
    set_algorithmtype(from.algorithmtype());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void RequestForAlgorithm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.RequestForAlgorithm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestForAlgorithm::CopyFrom(const RequestForAlgorithm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.RequestForAlgorithm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestForAlgorithm::IsInitialized() const {
  return true;
}

void RequestForAlgorithm::Swap(RequestForAlgorithm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestForAlgorithm::InternalSwap(RequestForAlgorithm* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(motionparam_, other->motionparam_);
  swap(trackparam_, other->trackparam_);
  swap(stabilizationparam_, other->stabilizationparam_);
  swap(panaromaparam_, other->panaromaparam_);
  swap(facedetectionparam_, other->facedetectionparam_);
  swap(panchangeparam_, other->panchangeparam_);
  swap(algorithmtype_, other->algorithmtype_);
  swap(channel_, other->channel_);
}

::google::protobuf::Metadata RequestForAlgorithm::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PanChangeParameters::InitAsDefaultInstance() {
  ::AlgorithmCommunication::_PanChangeParameters_default_instance_._instance.get_mutable()->locationinformation_ = const_cast< ::AlgorithmCommunication::ListOfLocationInformation*>(
      ::AlgorithmCommunication::ListOfLocationInformation::internal_default_instance());
}
class PanChangeParameters::HasBitSetters {
 public:
  static const ::AlgorithmCommunication::ListOfLocationInformation& locationinformation(const PanChangeParameters* msg);
};

const ::AlgorithmCommunication::ListOfLocationInformation&
PanChangeParameters::HasBitSetters::locationinformation(const PanChangeParameters* msg) {
  return *msg->locationinformation_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PanChangeParameters::kLocationInformationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PanChangeParameters::PanChangeParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.PanChangeParameters)
}
PanChangeParameters::PanChangeParameters(const PanChangeParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_locationinformation()) {
    locationinformation_ = new ::AlgorithmCommunication::ListOfLocationInformation(*from.locationinformation_);
  } else {
    locationinformation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.PanChangeParameters)
}

void PanChangeParameters::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PanChangeParameters_AlgorithmCommunication_2eproto.base);
  locationinformation_ = nullptr;
}

PanChangeParameters::~PanChangeParameters() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.PanChangeParameters)
  SharedDtor();
}

void PanChangeParameters::SharedDtor() {
  if (this != internal_default_instance()) delete locationinformation_;
}

void PanChangeParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PanChangeParameters& PanChangeParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PanChangeParameters_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void PanChangeParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.PanChangeParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && locationinformation_ != nullptr) {
    delete locationinformation_;
  }
  locationinformation_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PanChangeParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PanChangeParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .AlgorithmCommunication.ListOfLocationInformation locationInformation = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::ListOfLocationInformation::_InternalParse;
        object = msg->mutable_locationinformation();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PanChangeParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.PanChangeParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AlgorithmCommunication.ListOfLocationInformation locationInformation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_locationinformation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.PanChangeParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.PanChangeParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PanChangeParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.PanChangeParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.ListOfLocationInformation locationInformation = 1;
  if (this->has_locationinformation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::locationinformation(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.PanChangeParameters)
}

::google::protobuf::uint8* PanChangeParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.PanChangeParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.ListOfLocationInformation locationInformation = 1;
  if (this->has_locationinformation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::locationinformation(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.PanChangeParameters)
  return target;
}

size_t PanChangeParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.PanChangeParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AlgorithmCommunication.ListOfLocationInformation locationInformation = 1;
  if (this->has_locationinformation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *locationinformation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PanChangeParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.PanChangeParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const PanChangeParameters* source =
      ::google::protobuf::DynamicCastToGenerated<PanChangeParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.PanChangeParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.PanChangeParameters)
    MergeFrom(*source);
  }
}

void PanChangeParameters::MergeFrom(const PanChangeParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.PanChangeParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_locationinformation()) {
    mutable_locationinformation()->::AlgorithmCommunication::ListOfLocationInformation::MergeFrom(from.locationinformation());
  }
}

void PanChangeParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.PanChangeParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PanChangeParameters::CopyFrom(const PanChangeParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.PanChangeParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PanChangeParameters::IsInitialized() const {
  return true;
}

void PanChangeParameters::Swap(PanChangeParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PanChangeParameters::InternalSwap(PanChangeParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(locationinformation_, other->locationinformation_);
}

::google::protobuf::Metadata PanChangeParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SystemFeature::InitAsDefaultInstance() {
}
class SystemFeature::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemFeature::kKeyFieldNumber;
const int SystemFeature::kValueFieldNumber;
const int SystemFeature::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemFeature::SystemFeature()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.SystemFeature)
}
SystemFeature::SystemFeature(const SystemFeature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  device_ = from.device_;
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.SystemFeature)
}

void SystemFeature::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SystemFeature_AlgorithmCommunication_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_ = 0;
}

SystemFeature::~SystemFeature() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.SystemFeature)
  SharedDtor();
}

void SystemFeature::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SystemFeature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SystemFeature& SystemFeature::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SystemFeature_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void SystemFeature::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.SystemFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SystemFeature::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SystemFeature*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AlgorithmCommunication.SystemFeature.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AlgorithmCommunication.SystemFeature.value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 device = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_device(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SystemFeature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.SystemFeature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AlgorithmCommunication.SystemFeature.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AlgorithmCommunication.SystemFeature.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 device = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.SystemFeature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.SystemFeature)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SystemFeature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.SystemFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.SystemFeature.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.SystemFeature.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // int32 device = 3;
  if (this->device() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->device(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.SystemFeature)
}

::google::protobuf::uint8* SystemFeature::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.SystemFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.SystemFeature.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AlgorithmCommunication.SystemFeature.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // int32 device = 3;
  if (this->device() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->device(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.SystemFeature)
  return target;
}

size_t SystemFeature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.SystemFeature)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // int32 device = 3;
  if (this->device() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemFeature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.SystemFeature)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemFeature* source =
      ::google::protobuf::DynamicCastToGenerated<SystemFeature>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.SystemFeature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.SystemFeature)
    MergeFrom(*source);
  }
}

void SystemFeature::MergeFrom(const SystemFeature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.SystemFeature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.device() != 0) {
    set_device(from.device());
  }
}

void SystemFeature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.SystemFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemFeature::CopyFrom(const SystemFeature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.SystemFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemFeature::IsInitialized() const {
  return true;
}

void SystemFeature::Swap(SystemFeature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemFeature::InternalSwap(SystemFeature* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(device_, other->device_);
}

::google::protobuf::Metadata SystemFeature::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SystemFeatures::InitAsDefaultInstance() {
}
class SystemFeatures::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemFeatures::kFeaturesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemFeatures::SystemFeatures()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.SystemFeatures)
}
SystemFeatures::SystemFeatures(const SystemFeatures& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      features_(from.features_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.SystemFeatures)
}

void SystemFeatures::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SystemFeatures_AlgorithmCommunication_2eproto.base);
}

SystemFeatures::~SystemFeatures() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.SystemFeatures)
  SharedDtor();
}

void SystemFeatures::SharedDtor() {
}

void SystemFeatures::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SystemFeatures& SystemFeatures::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SystemFeatures_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void SystemFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.SystemFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SystemFeatures::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SystemFeatures*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .AlgorithmCommunication.SystemFeature features = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::AlgorithmCommunication::SystemFeature::_InternalParse;
          object = msg->add_features();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SystemFeatures::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.SystemFeatures)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AlgorithmCommunication.SystemFeature features = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_features()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.SystemFeatures)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.SystemFeatures)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SystemFeatures::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.SystemFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.SystemFeature features = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->features_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->features(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.SystemFeatures)
}

::google::protobuf::uint8* SystemFeatures::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.SystemFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.SystemFeature features = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->features_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->features(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.SystemFeatures)
  return target;
}

size_t SystemFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.SystemFeatures)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.SystemFeature features = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->features_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->features(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemFeatures::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.SystemFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemFeatures* source =
      ::google::protobuf::DynamicCastToGenerated<SystemFeatures>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.SystemFeatures)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.SystemFeatures)
    MergeFrom(*source);
  }
}

void SystemFeatures::MergeFrom(const SystemFeatures& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.SystemFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
}

void SystemFeatures::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.SystemFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemFeatures::CopyFrom(const SystemFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.SystemFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemFeatures::IsInitialized() const {
  return true;
}

void SystemFeatures::Swap(SystemFeatures* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemFeatures::InternalSwap(SystemFeatures* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&features_)->InternalSwap(CastToBase(&other->features_));
}

::google::protobuf::Metadata SystemFeatures::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MotionParameters::InitAsDefaultInstance() {
  ::AlgorithmCommunication::_MotionParameters_default_instance_._instance.get_mutable()->roilist_ = const_cast< ::AlgorithmCommunication::TRoi*>(
      ::AlgorithmCommunication::TRoi::internal_default_instance());
}
class MotionParameters::HasBitSetters {
 public:
  static const ::AlgorithmCommunication::TRoi& roilist(const MotionParameters* msg);
};

const ::AlgorithmCommunication::TRoi&
MotionParameters::HasBitSetters::roilist(const MotionParameters* msg) {
  return *msg->roilist_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MotionParameters::kSettingChoiceFieldNumber;
const int MotionParameters::kSensitivityFieldNumber;
const int MotionParameters::kROIlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MotionParameters::MotionParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.MotionParameters)
}
MotionParameters::MotionParameters(const MotionParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_roilist()) {
    roilist_ = new ::AlgorithmCommunication::TRoi(*from.roilist_);
  } else {
    roilist_ = nullptr;
  }
  ::memcpy(&settingchoice_, &from.settingchoice_,
    static_cast<size_t>(reinterpret_cast<char*>(&sensitivity_) -
    reinterpret_cast<char*>(&settingchoice_)) + sizeof(sensitivity_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.MotionParameters)
}

void MotionParameters::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MotionParameters_AlgorithmCommunication_2eproto.base);
  ::memset(&roilist_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sensitivity_) -
      reinterpret_cast<char*>(&roilist_)) + sizeof(sensitivity_));
}

MotionParameters::~MotionParameters() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.MotionParameters)
  SharedDtor();
}

void MotionParameters::SharedDtor() {
  if (this != internal_default_instance()) delete roilist_;
}

void MotionParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MotionParameters& MotionParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MotionParameters_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void MotionParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.MotionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && roilist_ != nullptr) {
    delete roilist_;
  }
  roilist_ = nullptr;
  ::memset(&settingchoice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sensitivity_) -
      reinterpret_cast<char*>(&settingchoice_)) + sizeof(sensitivity_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MotionParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MotionParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .AlgorithmCommunication.MotionParameters.Settings settingChoice = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_settingchoice(static_cast<::AlgorithmCommunication::MotionParameters_Settings>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 sensitivity = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_sensitivity(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.TRoi ROIlist = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::TRoi::_InternalParse;
        object = msg->mutable_roilist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MotionParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.MotionParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AlgorithmCommunication.MotionParameters.Settings settingChoice = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_settingchoice(static_cast< ::AlgorithmCommunication::MotionParameters_Settings >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sensitivity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sensitivity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.TRoi ROIlist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roilist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.MotionParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.MotionParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MotionParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.MotionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.MotionParameters.Settings settingChoice = 1;
  if (this->settingchoice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->settingchoice(), output);
  }

  // int32 sensitivity = 2;
  if (this->sensitivity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sensitivity(), output);
  }

  // .AlgorithmCommunication.TRoi ROIlist = 3;
  if (this->has_roilist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::roilist(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.MotionParameters)
}

::google::protobuf::uint8* MotionParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.MotionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.MotionParameters.Settings settingChoice = 1;
  if (this->settingchoice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->settingchoice(), target);
  }

  // int32 sensitivity = 2;
  if (this->sensitivity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sensitivity(), target);
  }

  // .AlgorithmCommunication.TRoi ROIlist = 3;
  if (this->has_roilist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::roilist(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.MotionParameters)
  return target;
}

size_t MotionParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.MotionParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AlgorithmCommunication.TRoi ROIlist = 3;
  if (this->has_roilist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *roilist_);
  }

  // .AlgorithmCommunication.MotionParameters.Settings settingChoice = 1;
  if (this->settingchoice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->settingchoice());
  }

  // int32 sensitivity = 2;
  if (this->sensitivity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sensitivity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MotionParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.MotionParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const MotionParameters* source =
      ::google::protobuf::DynamicCastToGenerated<MotionParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.MotionParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.MotionParameters)
    MergeFrom(*source);
  }
}

void MotionParameters::MergeFrom(const MotionParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.MotionParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roilist()) {
    mutable_roilist()->::AlgorithmCommunication::TRoi::MergeFrom(from.roilist());
  }
  if (from.settingchoice() != 0) {
    set_settingchoice(from.settingchoice());
  }
  if (from.sensitivity() != 0) {
    set_sensitivity(from.sensitivity());
  }
}

void MotionParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.MotionParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MotionParameters::CopyFrom(const MotionParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.MotionParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotionParameters::IsInitialized() const {
  return true;
}

void MotionParameters::Swap(MotionParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MotionParameters::InternalSwap(MotionParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(roilist_, other->roilist_);
  swap(settingchoice_, other->settingchoice_);
  swap(sensitivity_, other->sensitivity_);
}

::google::protobuf::Metadata MotionParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TRoi::InitAsDefaultInstance() {
  ::AlgorithmCommunication::_TRoi_default_instance_._instance.get_mutable()->rect1_ = const_cast< ::AlgorithmCommunication::TRectangle*>(
      ::AlgorithmCommunication::TRectangle::internal_default_instance());
  ::AlgorithmCommunication::_TRoi_default_instance_._instance.get_mutable()->rect2_ = const_cast< ::AlgorithmCommunication::TRectangle*>(
      ::AlgorithmCommunication::TRectangle::internal_default_instance());
}
class TRoi::HasBitSetters {
 public:
  static const ::AlgorithmCommunication::TRectangle& rect1(const TRoi* msg);
  static const ::AlgorithmCommunication::TRectangle& rect2(const TRoi* msg);
};

const ::AlgorithmCommunication::TRectangle&
TRoi::HasBitSetters::rect1(const TRoi* msg) {
  return *msg->rect1_;
}
const ::AlgorithmCommunication::TRectangle&
TRoi::HasBitSetters::rect2(const TRoi* msg) {
  return *msg->rect2_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TRoi::kPolygonFieldNumber;
const int TRoi::kRect1FieldNumber;
const int TRoi::kRect2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TRoi::TRoi()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.TRoi)
}
TRoi::TRoi(const TRoi& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      polygon_(from.polygon_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rect1()) {
    rect1_ = new ::AlgorithmCommunication::TRectangle(*from.rect1_);
  } else {
    rect1_ = nullptr;
  }
  if (from.has_rect2()) {
    rect2_ = new ::AlgorithmCommunication::TRectangle(*from.rect2_);
  } else {
    rect2_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.TRoi)
}

void TRoi::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TRoi_AlgorithmCommunication_2eproto.base);
  ::memset(&rect1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rect2_) -
      reinterpret_cast<char*>(&rect1_)) + sizeof(rect2_));
}

TRoi::~TRoi() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.TRoi)
  SharedDtor();
}

void TRoi::SharedDtor() {
  if (this != internal_default_instance()) delete rect1_;
  if (this != internal_default_instance()) delete rect2_;
}

void TRoi::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TRoi& TRoi::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TRoi_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void TRoi::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.TRoi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polygon_.Clear();
  if (GetArenaNoVirtual() == nullptr && rect1_ != nullptr) {
    delete rect1_;
  }
  rect1_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && rect2_ != nullptr) {
    delete rect2_;
  }
  rect2_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TRoi::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TRoi*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .AlgorithmCommunication.TPolygon polygon = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::AlgorithmCommunication::TPolygon::_InternalParse;
          object = msg->add_polygon();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // .AlgorithmCommunication.TRectangle rect1 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::TRectangle::_InternalParse;
        object = msg->mutable_rect1();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.TRectangle rect2 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::TRectangle::_InternalParse;
        object = msg->mutable_rect2();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TRoi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.TRoi)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AlgorithmCommunication.TPolygon polygon = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.TRectangle rect1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rect1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.TRectangle rect2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rect2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.TRoi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.TRoi)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TRoi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.TRoi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.TPolygon polygon = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->polygon(static_cast<int>(i)),
      output);
  }

  // .AlgorithmCommunication.TRectangle rect1 = 2;
  if (this->has_rect1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::rect1(this), output);
  }

  // .AlgorithmCommunication.TRectangle rect2 = 3;
  if (this->has_rect2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::rect2(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.TRoi)
}

::google::protobuf::uint8* TRoi::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.TRoi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.TPolygon polygon = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->polygon(static_cast<int>(i)), target);
  }

  // .AlgorithmCommunication.TRectangle rect1 = 2;
  if (this->has_rect1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::rect1(this), target);
  }

  // .AlgorithmCommunication.TRectangle rect2 = 3;
  if (this->has_rect2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::rect2(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.TRoi)
  return target;
}

size_t TRoi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.TRoi)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.TPolygon polygon = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->polygon_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->polygon(static_cast<int>(i)));
    }
  }

  // .AlgorithmCommunication.TRectangle rect1 = 2;
  if (this->has_rect1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rect1_);
  }

  // .AlgorithmCommunication.TRectangle rect2 = 3;
  if (this->has_rect2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rect2_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TRoi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.TRoi)
  GOOGLE_DCHECK_NE(&from, this);
  const TRoi* source =
      ::google::protobuf::DynamicCastToGenerated<TRoi>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.TRoi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.TRoi)
    MergeFrom(*source);
  }
}

void TRoi::MergeFrom(const TRoi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.TRoi)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polygon_.MergeFrom(from.polygon_);
  if (from.has_rect1()) {
    mutable_rect1()->::AlgorithmCommunication::TRectangle::MergeFrom(from.rect1());
  }
  if (from.has_rect2()) {
    mutable_rect2()->::AlgorithmCommunication::TRectangle::MergeFrom(from.rect2());
  }
}

void TRoi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.TRoi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TRoi::CopyFrom(const TRoi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.TRoi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TRoi::IsInitialized() const {
  return true;
}

void TRoi::Swap(TRoi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TRoi::InternalSwap(TRoi* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&polygon_)->InternalSwap(CastToBase(&other->polygon_));
  swap(rect1_, other->rect1_);
  swap(rect2_, other->rect2_);
}

::google::protobuf::Metadata TRoi::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TPoint::InitAsDefaultInstance() {
}
class TPoint::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPoint::kXFieldNumber;
const int TPoint::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPoint::TPoint()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.TPoint)
}
TPoint::TPoint(const TPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.TPoint)
}

void TPoint::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

TPoint::~TPoint() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.TPoint)
  SharedDtor();
}

void TPoint::SharedDtor() {
}

void TPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPoint& TPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TPoint_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void TPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.TPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TPoint::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TPoint*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_x(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float y = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_y(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.TPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.TPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.TPoint)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.TPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.TPoint)
}

::google::protobuf::uint8* TPoint::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.TPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.TPoint)
  return target;
}

size_t TPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.TPoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.TPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const TPoint* source =
      ::google::protobuf::DynamicCastToGenerated<TPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.TPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.TPoint)
    MergeFrom(*source);
  }
}

void TPoint::MergeFrom(const TPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.TPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void TPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.TPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPoint::CopyFrom(const TPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.TPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPoint::IsInitialized() const {
  return true;
}

void TPoint::Swap(TPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPoint::InternalSwap(TPoint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(x_, other->x_);
  swap(y_, other->y_);
}

::google::protobuf::Metadata TPoint::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TPolygon::InitAsDefaultInstance() {
}
class TPolygon::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPolygon::kPointsFieldNumber;
const int TPolygon::kIsActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPolygon::TPolygon()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.TPolygon)
}
TPolygon::TPolygon(const TPolygon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_active_ = from.is_active_;
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.TPolygon)
}

void TPolygon::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TPolygon_AlgorithmCommunication_2eproto.base);
  is_active_ = false;
}

TPolygon::~TPolygon() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.TPolygon)
  SharedDtor();
}

void TPolygon::SharedDtor() {
}

void TPolygon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPolygon& TPolygon::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TPolygon_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void TPolygon::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.TPolygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  is_active_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TPolygon::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TPolygon*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .AlgorithmCommunication.TPoint points = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::AlgorithmCommunication::TPoint::_InternalParse;
          object = msg->add_points();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // bool is_active = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_is_active(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TPolygon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.TPolygon)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AlgorithmCommunication.TPoint points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_active = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.TPolygon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.TPolygon)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TPolygon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.TPolygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.TPoint points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->points(static_cast<int>(i)),
      output);
  }

  // bool is_active = 2;
  if (this->is_active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_active(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.TPolygon)
}

::google::protobuf::uint8* TPolygon::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.TPolygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.TPoint points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->points(static_cast<int>(i)), target);
  }

  // bool is_active = 2;
  if (this->is_active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_active(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.TPolygon)
  return target;
}

size_t TPolygon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.TPolygon)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AlgorithmCommunication.TPoint points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  // bool is_active = 2;
  if (this->is_active() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPolygon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.TPolygon)
  GOOGLE_DCHECK_NE(&from, this);
  const TPolygon* source =
      ::google::protobuf::DynamicCastToGenerated<TPolygon>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.TPolygon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.TPolygon)
    MergeFrom(*source);
  }
}

void TPolygon::MergeFrom(const TPolygon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.TPolygon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  if (from.is_active() != 0) {
    set_is_active(from.is_active());
  }
}

void TPolygon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.TPolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPolygon::CopyFrom(const TPolygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.TPolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPolygon::IsInitialized() const {
  return true;
}

void TPolygon::Swap(TPolygon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPolygon::InternalSwap(TPolygon* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&points_)->InternalSwap(CastToBase(&other->points_));
  swap(is_active_, other->is_active_);
}

::google::protobuf::Metadata TPolygon::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TRectangle::InitAsDefaultInstance() {
  ::AlgorithmCommunication::_TRectangle_default_instance_._instance.get_mutable()->upperleft_ = const_cast< ::AlgorithmCommunication::TPoint*>(
      ::AlgorithmCommunication::TPoint::internal_default_instance());
  ::AlgorithmCommunication::_TRectangle_default_instance_._instance.get_mutable()->bottomright_ = const_cast< ::AlgorithmCommunication::TPoint*>(
      ::AlgorithmCommunication::TPoint::internal_default_instance());
}
class TRectangle::HasBitSetters {
 public:
  static const ::AlgorithmCommunication::TPoint& upperleft(const TRectangle* msg);
  static const ::AlgorithmCommunication::TPoint& bottomright(const TRectangle* msg);
};

const ::AlgorithmCommunication::TPoint&
TRectangle::HasBitSetters::upperleft(const TRectangle* msg) {
  return *msg->upperleft_;
}
const ::AlgorithmCommunication::TPoint&
TRectangle::HasBitSetters::bottomright(const TRectangle* msg) {
  return *msg->bottomright_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TRectangle::kUpperLeftFieldNumber;
const int TRectangle::kBottomRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TRectangle::TRectangle()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.TRectangle)
}
TRectangle::TRectangle(const TRectangle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_upperleft()) {
    upperleft_ = new ::AlgorithmCommunication::TPoint(*from.upperleft_);
  } else {
    upperleft_ = nullptr;
  }
  if (from.has_bottomright()) {
    bottomright_ = new ::AlgorithmCommunication::TPoint(*from.bottomright_);
  } else {
    bottomright_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.TRectangle)
}

void TRectangle::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TRectangle_AlgorithmCommunication_2eproto.base);
  ::memset(&upperleft_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottomright_) -
      reinterpret_cast<char*>(&upperleft_)) + sizeof(bottomright_));
}

TRectangle::~TRectangle() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.TRectangle)
  SharedDtor();
}

void TRectangle::SharedDtor() {
  if (this != internal_default_instance()) delete upperleft_;
  if (this != internal_default_instance()) delete bottomright_;
}

void TRectangle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TRectangle& TRectangle::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TRectangle_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void TRectangle::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.TRectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && upperleft_ != nullptr) {
    delete upperleft_;
  }
  upperleft_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && bottomright_ != nullptr) {
    delete bottomright_;
  }
  bottomright_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TRectangle::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TRectangle*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .AlgorithmCommunication.TPoint upperLeft = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::TPoint::_InternalParse;
        object = msg->mutable_upperleft();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .AlgorithmCommunication.TPoint bottomRight = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::TPoint::_InternalParse;
        object = msg->mutable_bottomright();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TRectangle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.TRectangle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AlgorithmCommunication.TPoint upperLeft = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upperleft()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.TPoint bottomRight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bottomright()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.TRectangle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.TRectangle)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TRectangle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.TRectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.TPoint upperLeft = 1;
  if (this->has_upperleft()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::upperleft(this), output);
  }

  // .AlgorithmCommunication.TPoint bottomRight = 2;
  if (this->has_bottomright()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::bottomright(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.TRectangle)
}

::google::protobuf::uint8* TRectangle::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.TRectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.TPoint upperLeft = 1;
  if (this->has_upperleft()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::upperleft(this), target);
  }

  // .AlgorithmCommunication.TPoint bottomRight = 2;
  if (this->has_bottomright()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::bottomright(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.TRectangle)
  return target;
}

size_t TRectangle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.TRectangle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AlgorithmCommunication.TPoint upperLeft = 1;
  if (this->has_upperleft()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upperleft_);
  }

  // .AlgorithmCommunication.TPoint bottomRight = 2;
  if (this->has_bottomright()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bottomright_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TRectangle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.TRectangle)
  GOOGLE_DCHECK_NE(&from, this);
  const TRectangle* source =
      ::google::protobuf::DynamicCastToGenerated<TRectangle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.TRectangle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.TRectangle)
    MergeFrom(*source);
  }
}

void TRectangle::MergeFrom(const TRectangle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.TRectangle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_upperleft()) {
    mutable_upperleft()->::AlgorithmCommunication::TPoint::MergeFrom(from.upperleft());
  }
  if (from.has_bottomright()) {
    mutable_bottomright()->::AlgorithmCommunication::TPoint::MergeFrom(from.bottomright());
  }
}

void TRectangle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.TRectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TRectangle::CopyFrom(const TRectangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.TRectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TRectangle::IsInitialized() const {
  return true;
}

void TRectangle::Swap(TRectangle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TRectangle::InternalSwap(TRectangle* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(upperleft_, other->upperleft_);
  swap(bottomright_, other->bottomright_);
}

::google::protobuf::Metadata TRectangle::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TrackParameters::InitAsDefaultInstance() {
  ::AlgorithmCommunication::_TrackParameters_default_instance_._instance.get_mutable()->target_ = const_cast< ::AlgorithmCommunication::TrackObject*>(
      ::AlgorithmCommunication::TrackObject::internal_default_instance());
}
class TrackParameters::HasBitSetters {
 public:
  static const ::AlgorithmCommunication::TrackObject& target(const TrackParameters* msg);
};

const ::AlgorithmCommunication::TrackObject&
TrackParameters::HasBitSetters::target(const TrackParameters* msg) {
  return *msg->target_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackParameters::kTrackTypeFieldNumber;
const int TrackParameters::kModeFieldNumber;
const int TrackParameters::kTrackScoreFieldNumber;
const int TrackParameters::kTrackIntervalFieldNumber;
const int TrackParameters::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackParameters::TrackParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.TrackParameters)
}
TrackParameters::TrackParameters(const TrackParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target()) {
    target_ = new ::AlgorithmCommunication::TrackObject(*from.target_);
  } else {
    target_ = nullptr;
  }
  ::memcpy(&tracktype_, &from.tracktype_,
    static_cast<size_t>(reinterpret_cast<char*>(&trackinterval_) -
    reinterpret_cast<char*>(&tracktype_)) + sizeof(trackinterval_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.TrackParameters)
}

void TrackParameters::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TrackParameters_AlgorithmCommunication_2eproto.base);
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trackinterval_) -
      reinterpret_cast<char*>(&target_)) + sizeof(trackinterval_));
}

TrackParameters::~TrackParameters() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.TrackParameters)
  SharedDtor();
}

void TrackParameters::SharedDtor() {
  if (this != internal_default_instance()) delete target_;
}

void TrackParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrackParameters& TrackParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TrackParameters_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void TrackParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.TrackParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && target_ != nullptr) {
    delete target_;
  }
  target_ = nullptr;
  ::memset(&tracktype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trackinterval_) -
      reinterpret_cast<char*>(&tracktype_)) + sizeof(trackinterval_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TrackParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TrackParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .AlgorithmCommunication.TrackParameters.TrackType trackType = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_tracktype(static_cast<::AlgorithmCommunication::TrackParameters_TrackType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.TrackParameters.Mode mode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_mode(static_cast<::AlgorithmCommunication::TrackParameters_Mode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float trackScore = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_trackscore(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // int32 trackInterval = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_trackinterval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .AlgorithmCommunication.TrackObject target = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::AlgorithmCommunication::TrackObject::_InternalParse;
        object = msg->mutable_target();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TrackParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.TrackParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AlgorithmCommunication.TrackParameters.TrackType trackType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tracktype(static_cast< ::AlgorithmCommunication::TrackParameters_TrackType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.TrackParameters.Mode mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::AlgorithmCommunication::TrackParameters_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float trackScore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &trackscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 trackInterval = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trackinterval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AlgorithmCommunication.TrackObject target = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.TrackParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.TrackParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TrackParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.TrackParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.TrackParameters.TrackType trackType = 1;
  if (this->tracktype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tracktype(), output);
  }

  // .AlgorithmCommunication.TrackParameters.Mode mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  // float trackScore = 3;
  if (this->trackscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->trackscore(), output);
  }

  // int32 trackInterval = 4;
  if (this->trackinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->trackinterval(), output);
  }

  // .AlgorithmCommunication.TrackObject target = 5;
  if (this->has_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::target(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.TrackParameters)
}

::google::protobuf::uint8* TrackParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.TrackParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlgorithmCommunication.TrackParameters.TrackType trackType = 1;
  if (this->tracktype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tracktype(), target);
  }

  // .AlgorithmCommunication.TrackParameters.Mode mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  // float trackScore = 3;
  if (this->trackscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->trackscore(), target);
  }

  // int32 trackInterval = 4;
  if (this->trackinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->trackinterval(), target);
  }

  // .AlgorithmCommunication.TrackObject target = 5;
  if (this->has_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::target(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.TrackParameters)
  return target;
}

size_t TrackParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.TrackParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AlgorithmCommunication.TrackObject target = 5;
  if (this->has_target()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_);
  }

  // .AlgorithmCommunication.TrackParameters.TrackType trackType = 1;
  if (this->tracktype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tracktype());
  }

  // .AlgorithmCommunication.TrackParameters.Mode mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // float trackScore = 3;
  if (this->trackscore() != 0) {
    total_size += 1 + 4;
  }

  // int32 trackInterval = 4;
  if (this->trackinterval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->trackinterval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrackParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.TrackParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const TrackParameters* source =
      ::google::protobuf::DynamicCastToGenerated<TrackParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.TrackParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.TrackParameters)
    MergeFrom(*source);
  }
}

void TrackParameters::MergeFrom(const TrackParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.TrackParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target()) {
    mutable_target()->::AlgorithmCommunication::TrackObject::MergeFrom(from.target());
  }
  if (from.tracktype() != 0) {
    set_tracktype(from.tracktype());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.trackscore() != 0) {
    set_trackscore(from.trackscore());
  }
  if (from.trackinterval() != 0) {
    set_trackinterval(from.trackinterval());
  }
}

void TrackParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.TrackParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackParameters::CopyFrom(const TrackParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.TrackParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackParameters::IsInitialized() const {
  return true;
}

void TrackParameters::Swap(TrackParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackParameters::InternalSwap(TrackParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(target_, other->target_);
  swap(tracktype_, other->tracktype_);
  swap(mode_, other->mode_);
  swap(trackscore_, other->trackscore_);
  swap(trackinterval_, other->trackinterval_);
}

::google::protobuf::Metadata TrackParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TrackObject::InitAsDefaultInstance() {
}
class TrackObject::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackObject::kPointXFieldNumber;
const int TrackObject::kPointYFieldNumber;
const int TrackObject::kWidthFieldNumber;
const int TrackObject::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackObject::TrackObject()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.TrackObject)
}
TrackObject::TrackObject(const TrackObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&point_x_, &from.point_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&point_x_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.TrackObject)
}

void TrackObject::SharedCtor() {
  ::memset(&point_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&point_x_)) + sizeof(height_));
}

TrackObject::~TrackObject() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.TrackObject)
  SharedDtor();
}

void TrackObject::SharedDtor() {
}

void TrackObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrackObject& TrackObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TrackObject_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void TrackObject::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.TrackObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&point_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&point_x_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TrackObject::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TrackObject*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float point_x = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_point_x(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float point_y = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_point_y(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float width = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_width(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float height = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        msg->set_height(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TrackObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.TrackObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float point_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &point_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float point_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &point_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.TrackObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.TrackObject)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TrackObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.TrackObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float point_x = 1;
  if (this->point_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->point_x(), output);
  }

  // float point_y = 2;
  if (this->point_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->point_y(), output);
  }

  // float width = 3;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->width(), output);
  }

  // float height = 4;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.TrackObject)
}

::google::protobuf::uint8* TrackObject::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.TrackObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float point_x = 1;
  if (this->point_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->point_x(), target);
  }

  // float point_y = 2;
  if (this->point_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->point_y(), target);
  }

  // float width = 3;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->width(), target);
  }

  // float height = 4;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.TrackObject)
  return target;
}

size_t TrackObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.TrackObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float point_x = 1;
  if (this->point_x() != 0) {
    total_size += 1 + 4;
  }

  // float point_y = 2;
  if (this->point_y() != 0) {
    total_size += 1 + 4;
  }

  // float width = 3;
  if (this->width() != 0) {
    total_size += 1 + 4;
  }

  // float height = 4;
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrackObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.TrackObject)
  GOOGLE_DCHECK_NE(&from, this);
  const TrackObject* source =
      ::google::protobuf::DynamicCastToGenerated<TrackObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.TrackObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.TrackObject)
    MergeFrom(*source);
  }
}

void TrackObject::MergeFrom(const TrackObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.TrackObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.point_x() != 0) {
    set_point_x(from.point_x());
  }
  if (from.point_y() != 0) {
    set_point_y(from.point_y());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void TrackObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.TrackObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackObject::CopyFrom(const TrackObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.TrackObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackObject::IsInitialized() const {
  return true;
}

void TrackObject::Swap(TrackObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackObject::InternalSwap(TrackObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(point_x_, other->point_x_);
  swap(point_y_, other->point_y_);
  swap(width_, other->width_);
  swap(height_, other->height_);
}

::google::protobuf::Metadata TrackObject::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StabilizationParameters::InitAsDefaultInstance() {
}
class StabilizationParameters::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StabilizationParameters::kPrivacyFieldNumber;
const int StabilizationParameters::kSensitivityFieldNumber;
const int StabilizationParameters::kStabilizationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StabilizationParameters::StabilizationParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.StabilizationParameters)
}
StabilizationParameters::StabilizationParameters(const StabilizationParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&privacy_, &from.privacy_,
    static_cast<size_t>(reinterpret_cast<char*>(&stabilization_) -
    reinterpret_cast<char*>(&privacy_)) + sizeof(stabilization_));
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.StabilizationParameters)
}

void StabilizationParameters::SharedCtor() {
  ::memset(&privacy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stabilization_) -
      reinterpret_cast<char*>(&privacy_)) + sizeof(stabilization_));
}

StabilizationParameters::~StabilizationParameters() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.StabilizationParameters)
  SharedDtor();
}

void StabilizationParameters::SharedDtor() {
}

void StabilizationParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StabilizationParameters& StabilizationParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StabilizationParameters_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void StabilizationParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.StabilizationParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&privacy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stabilization_) -
      reinterpret_cast<char*>(&privacy_)) + sizeof(stabilization_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StabilizationParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StabilizationParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 privacy = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_privacy(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 sensitivity = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_sensitivity(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 stabilization = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_stabilization(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StabilizationParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.StabilizationParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 privacy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &privacy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sensitivity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sensitivity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stabilization = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stabilization_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.StabilizationParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.StabilizationParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StabilizationParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.StabilizationParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 privacy = 1;
  if (this->privacy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->privacy(), output);
  }

  // int32 sensitivity = 2;
  if (this->sensitivity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sensitivity(), output);
  }

  // int32 stabilization = 3;
  if (this->stabilization() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->stabilization(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.StabilizationParameters)
}

::google::protobuf::uint8* StabilizationParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.StabilizationParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 privacy = 1;
  if (this->privacy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->privacy(), target);
  }

  // int32 sensitivity = 2;
  if (this->sensitivity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sensitivity(), target);
  }

  // int32 stabilization = 3;
  if (this->stabilization() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->stabilization(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.StabilizationParameters)
  return target;
}

size_t StabilizationParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.StabilizationParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 privacy = 1;
  if (this->privacy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->privacy());
  }

  // int32 sensitivity = 2;
  if (this->sensitivity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sensitivity());
  }

  // int32 stabilization = 3;
  if (this->stabilization() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stabilization());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StabilizationParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.StabilizationParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const StabilizationParameters* source =
      ::google::protobuf::DynamicCastToGenerated<StabilizationParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.StabilizationParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.StabilizationParameters)
    MergeFrom(*source);
  }
}

void StabilizationParameters::MergeFrom(const StabilizationParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.StabilizationParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.privacy() != 0) {
    set_privacy(from.privacy());
  }
  if (from.sensitivity() != 0) {
    set_sensitivity(from.sensitivity());
  }
  if (from.stabilization() != 0) {
    set_stabilization(from.stabilization());
  }
}

void StabilizationParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.StabilizationParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StabilizationParameters::CopyFrom(const StabilizationParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.StabilizationParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StabilizationParameters::IsInitialized() const {
  return true;
}

void StabilizationParameters::Swap(StabilizationParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StabilizationParameters::InternalSwap(StabilizationParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(privacy_, other->privacy_);
  swap(sensitivity_, other->sensitivity_);
  swap(stabilization_, other->stabilization_);
}

::google::protobuf::Metadata StabilizationParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PanaromaParameters::InitAsDefaultInstance() {
}
class PanaromaParameters::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PanaromaParameters::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PanaromaParameters::PanaromaParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.PanaromaParameters)
}
PanaromaParameters::PanaromaParameters(const PanaromaParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.PanaromaParameters)
}

void PanaromaParameters::SharedCtor() {
  dummy_ = 0;
}

PanaromaParameters::~PanaromaParameters() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.PanaromaParameters)
  SharedDtor();
}

void PanaromaParameters::SharedDtor() {
}

void PanaromaParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PanaromaParameters& PanaromaParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PanaromaParameters_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void PanaromaParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.PanaromaParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PanaromaParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PanaromaParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 dummy = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_dummy(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PanaromaParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.PanaromaParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.PanaromaParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.PanaromaParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PanaromaParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.PanaromaParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.PanaromaParameters)
}

::google::protobuf::uint8* PanaromaParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.PanaromaParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.PanaromaParameters)
  return target;
}

size_t PanaromaParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.PanaromaParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PanaromaParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.PanaromaParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const PanaromaParameters* source =
      ::google::protobuf::DynamicCastToGenerated<PanaromaParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.PanaromaParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.PanaromaParameters)
    MergeFrom(*source);
  }
}

void PanaromaParameters::MergeFrom(const PanaromaParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.PanaromaParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dummy() != 0) {
    set_dummy(from.dummy());
  }
}

void PanaromaParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.PanaromaParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PanaromaParameters::CopyFrom(const PanaromaParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.PanaromaParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PanaromaParameters::IsInitialized() const {
  return true;
}

void PanaromaParameters::Swap(PanaromaParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PanaromaParameters::InternalSwap(PanaromaParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(dummy_, other->dummy_);
}

::google::protobuf::Metadata PanaromaParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FaceDetectionParameters::InitAsDefaultInstance() {
}
class FaceDetectionParameters::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceDetectionParameters::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceDetectionParameters::FaceDetectionParameters()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlgorithmCommunication.FaceDetectionParameters)
}
FaceDetectionParameters::FaceDetectionParameters(const FaceDetectionParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:AlgorithmCommunication.FaceDetectionParameters)
}

void FaceDetectionParameters::SharedCtor() {
  dummy_ = 0;
}

FaceDetectionParameters::~FaceDetectionParameters() {
  // @@protoc_insertion_point(destructor:AlgorithmCommunication.FaceDetectionParameters)
  SharedDtor();
}

void FaceDetectionParameters::SharedDtor() {
}

void FaceDetectionParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FaceDetectionParameters& FaceDetectionParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FaceDetectionParameters_AlgorithmCommunication_2eproto.base);
  return *internal_default_instance();
}


void FaceDetectionParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:AlgorithmCommunication.FaceDetectionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FaceDetectionParameters::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FaceDetectionParameters*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 dummy = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_dummy(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FaceDetectionParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlgorithmCommunication.FaceDetectionParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlgorithmCommunication.FaceDetectionParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlgorithmCommunication.FaceDetectionParameters)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FaceDetectionParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlgorithmCommunication.FaceDetectionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlgorithmCommunication.FaceDetectionParameters)
}

::google::protobuf::uint8* FaceDetectionParameters::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlgorithmCommunication.FaceDetectionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlgorithmCommunication.FaceDetectionParameters)
  return target;
}

size_t FaceDetectionParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlgorithmCommunication.FaceDetectionParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FaceDetectionParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlgorithmCommunication.FaceDetectionParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceDetectionParameters* source =
      ::google::protobuf::DynamicCastToGenerated<FaceDetectionParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlgorithmCommunication.FaceDetectionParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlgorithmCommunication.FaceDetectionParameters)
    MergeFrom(*source);
  }
}

void FaceDetectionParameters::MergeFrom(const FaceDetectionParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlgorithmCommunication.FaceDetectionParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dummy() != 0) {
    set_dummy(from.dummy());
  }
}

void FaceDetectionParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlgorithmCommunication.FaceDetectionParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceDetectionParameters::CopyFrom(const FaceDetectionParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlgorithmCommunication.FaceDetectionParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceDetectionParameters::IsInitialized() const {
  return true;
}

void FaceDetectionParameters::Swap(FaceDetectionParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaceDetectionParameters::InternalSwap(FaceDetectionParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(dummy_, other->dummy_);
}

::google::protobuf::Metadata FaceDetectionParameters::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_AlgorithmCommunication_2eproto);
  return ::file_level_metadata_AlgorithmCommunication_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace AlgorithmCommunication
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::LocationInformation* Arena::CreateMaybeMessage< ::AlgorithmCommunication::LocationInformation >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::LocationInformation >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::ListOfLocationInformation* Arena::CreateMaybeMessage< ::AlgorithmCommunication::ListOfLocationInformation >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::ListOfLocationInformation >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::DiagnosticQ* Arena::CreateMaybeMessage< ::AlgorithmCommunication::DiagnosticQ >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::DiagnosticQ >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::DiagnosticInfo* Arena::CreateMaybeMessage< ::AlgorithmCommunication::DiagnosticInfo >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::DiagnosticInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::Node* Arena::CreateMaybeMessage< ::AlgorithmCommunication::Node >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::Node >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::Element* Arena::CreateMaybeMessage< ::AlgorithmCommunication::Element >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::Element >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::ElementQueue* Arena::CreateMaybeMessage< ::AlgorithmCommunication::ElementQueue >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::ElementQueue >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::ScreenshotInfo* Arena::CreateMaybeMessage< ::AlgorithmCommunication::ScreenshotInfo >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::ScreenshotInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::ScreenFrame* Arena::CreateMaybeMessage< ::AlgorithmCommunication::ScreenFrame >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::ScreenFrame >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::TargetStruct* Arena::CreateMaybeMessage< ::AlgorithmCommunication::TargetStruct >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::TargetStruct >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::AlarmInfo* Arena::CreateMaybeMessage< ::AlgorithmCommunication::AlarmInfo >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::AlarmInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::CITInfo* Arena::CreateMaybeMessage< ::AlgorithmCommunication::CITInfo >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::CITInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::GeneralInfo* Arena::CreateMaybeMessage< ::AlgorithmCommunication::GeneralInfo >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::GeneralInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::AlarmReqAdvancedParameters* Arena::CreateMaybeMessage< ::AlgorithmCommunication::AlarmReqAdvancedParameters >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::AlarmReqAdvancedParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::AlarmReqInfo* Arena::CreateMaybeMessage< ::AlgorithmCommunication::AlarmReqInfo >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::AlarmReqInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::Alarm* Arena::CreateMaybeMessage< ::AlgorithmCommunication::Alarm >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::Alarm >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::Alarms* Arena::CreateMaybeMessage< ::AlgorithmCommunication::Alarms >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::Alarms >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::ResponseOfRequests* Arena::CreateMaybeMessage< ::AlgorithmCommunication::ResponseOfRequests >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::ResponseOfRequests >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::ResponseOfParameterRequests* Arena::CreateMaybeMessage< ::AlgorithmCommunication::ResponseOfParameterRequests >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::ResponseOfParameterRequests >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::RequestForAlgorithm* Arena::CreateMaybeMessage< ::AlgorithmCommunication::RequestForAlgorithm >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::RequestForAlgorithm >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::PanChangeParameters* Arena::CreateMaybeMessage< ::AlgorithmCommunication::PanChangeParameters >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::PanChangeParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::SystemFeature* Arena::CreateMaybeMessage< ::AlgorithmCommunication::SystemFeature >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::SystemFeature >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::SystemFeatures* Arena::CreateMaybeMessage< ::AlgorithmCommunication::SystemFeatures >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::SystemFeatures >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::MotionParameters* Arena::CreateMaybeMessage< ::AlgorithmCommunication::MotionParameters >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::MotionParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::TRoi* Arena::CreateMaybeMessage< ::AlgorithmCommunication::TRoi >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::TRoi >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::TPoint* Arena::CreateMaybeMessage< ::AlgorithmCommunication::TPoint >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::TPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::TPolygon* Arena::CreateMaybeMessage< ::AlgorithmCommunication::TPolygon >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::TPolygon >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::TRectangle* Arena::CreateMaybeMessage< ::AlgorithmCommunication::TRectangle >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::TRectangle >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::TrackParameters* Arena::CreateMaybeMessage< ::AlgorithmCommunication::TrackParameters >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::TrackParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::TrackObject* Arena::CreateMaybeMessage< ::AlgorithmCommunication::TrackObject >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::TrackObject >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::StabilizationParameters* Arena::CreateMaybeMessage< ::AlgorithmCommunication::StabilizationParameters >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::StabilizationParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::PanaromaParameters* Arena::CreateMaybeMessage< ::AlgorithmCommunication::PanaromaParameters >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::PanaromaParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::AlgorithmCommunication::FaceDetectionParameters* Arena::CreateMaybeMessage< ::AlgorithmCommunication::FaceDetectionParameters >(Arena* arena) {
  return Arena::CreateInternal< ::AlgorithmCommunication::FaceDetectionParameters >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
