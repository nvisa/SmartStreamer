// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrionCommunication.proto

#ifndef PROTOBUF_OrionCommunication_2eproto__INCLUDED
#define PROTOBUF_OrionCommunication_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_OrionCommunication_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPanoramaParsImpl();
void InitDefaultsPanoramaPars();
void InitDefaultsTRoiImpl();
void InitDefaultsTRoi();
void InitDefaultsTPointImpl();
void InitDefaultsTPoint();
void InitDefaultsTPolygonImpl();
void InitDefaultsTPolygon();
void InitDefaultsTRectangleImpl();
void InitDefaultsTRectangle();
void InitDefaultsSetModeQImpl();
void InitDefaultsSetModeQ();
void InitDefaultsDummyInfoImpl();
void InitDefaultsDummyInfo();
void InitDefaultsMotionDetectionParametersImpl();
void InitDefaultsMotionDetectionParameters();
void InitDefaultsAppCommandResultImpl();
void InitDefaultsAppCommandResult();
void InitDefaultsAryaParametersImpl();
void InitDefaultsAryaParameters();
void InitDefaultsGetFramesImpl();
void InitDefaultsGetFrames();
void InitDefaultsPanoramaFrameImpl();
void InitDefaultsPanoramaFrame();
void InitDefaultsScreenFrameImpl();
void InitDefaultsScreenFrame();
void InitDefaultsSetSensivityImpl();
void InitDefaultsSetSensivity();
inline void InitDefaults() {
  InitDefaultsPanoramaPars();
  InitDefaultsTRoi();
  InitDefaultsTPoint();
  InitDefaultsTPolygon();
  InitDefaultsTRectangle();
  InitDefaultsSetModeQ();
  InitDefaultsDummyInfo();
  InitDefaultsMotionDetectionParameters();
  InitDefaultsAppCommandResult();
  InitDefaultsAryaParameters();
  InitDefaultsGetFrames();
  InitDefaultsPanoramaFrame();
  InitDefaultsScreenFrame();
  InitDefaultsSetSensivity();
}
}  // namespace protobuf_OrionCommunication_2eproto
namespace OrionCommunication {
class AppCommandResult;
class AppCommandResultDefaultTypeInternal;
extern AppCommandResultDefaultTypeInternal _AppCommandResult_default_instance_;
class AryaParameters;
class AryaParametersDefaultTypeInternal;
extern AryaParametersDefaultTypeInternal _AryaParameters_default_instance_;
class DummyInfo;
class DummyInfoDefaultTypeInternal;
extern DummyInfoDefaultTypeInternal _DummyInfo_default_instance_;
class GetFrames;
class GetFramesDefaultTypeInternal;
extern GetFramesDefaultTypeInternal _GetFrames_default_instance_;
class MotionDetectionParameters;
class MotionDetectionParametersDefaultTypeInternal;
extern MotionDetectionParametersDefaultTypeInternal _MotionDetectionParameters_default_instance_;
class PanoramaFrame;
class PanoramaFrameDefaultTypeInternal;
extern PanoramaFrameDefaultTypeInternal _PanoramaFrame_default_instance_;
class PanoramaPars;
class PanoramaParsDefaultTypeInternal;
extern PanoramaParsDefaultTypeInternal _PanoramaPars_default_instance_;
class ScreenFrame;
class ScreenFrameDefaultTypeInternal;
extern ScreenFrameDefaultTypeInternal _ScreenFrame_default_instance_;
class SetModeQ;
class SetModeQDefaultTypeInternal;
extern SetModeQDefaultTypeInternal _SetModeQ_default_instance_;
class SetSensivity;
class SetSensivityDefaultTypeInternal;
extern SetSensivityDefaultTypeInternal _SetSensivity_default_instance_;
class TPoint;
class TPointDefaultTypeInternal;
extern TPointDefaultTypeInternal _TPoint_default_instance_;
class TPolygon;
class TPolygonDefaultTypeInternal;
extern TPolygonDefaultTypeInternal _TPolygon_default_instance_;
class TRectangle;
class TRectangleDefaultTypeInternal;
extern TRectangleDefaultTypeInternal _TRectangle_default_instance_;
class TRoi;
class TRoiDefaultTypeInternal;
extern TRoiDefaultTypeInternal _TRoi_default_instance_;
}  // namespace OrionCommunication
namespace OrionCommunication {

enum SetModeQ_Mode {
  SetModeQ_Mode_NONE = 0,
  SetModeQ_Mode_PANAROMA = 1,
  SetModeQ_Mode_MOTION_DETECTION = 2,
  SetModeQ_Mode_SetModeQ_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetModeQ_Mode_SetModeQ_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetModeQ_Mode_IsValid(int value);
const SetModeQ_Mode SetModeQ_Mode_Mode_MIN = SetModeQ_Mode_NONE;
const SetModeQ_Mode SetModeQ_Mode_Mode_MAX = SetModeQ_Mode_MOTION_DETECTION;
const int SetModeQ_Mode_Mode_ARRAYSIZE = SetModeQ_Mode_Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetModeQ_Mode_descriptor();
inline const ::std::string& SetModeQ_Mode_Name(SetModeQ_Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetModeQ_Mode_descriptor(), value);
}
inline bool SetModeQ_Mode_Parse(
    const ::std::string& name, SetModeQ_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetModeQ_Mode>(
    SetModeQ_Mode_descriptor(), name, value);
}
enum GetFrames_Frames {
  GetFrames_Frames_LastFrame = 0,
  GetFrames_Frames_AllFrames = 1,
  GetFrames_Frames_GetFrames_Frames_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetFrames_Frames_GetFrames_Frames_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetFrames_Frames_IsValid(int value);
const GetFrames_Frames GetFrames_Frames_Frames_MIN = GetFrames_Frames_LastFrame;
const GetFrames_Frames GetFrames_Frames_Frames_MAX = GetFrames_Frames_AllFrames;
const int GetFrames_Frames_Frames_ARRAYSIZE = GetFrames_Frames_Frames_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetFrames_Frames_descriptor();
inline const ::std::string& GetFrames_Frames_Name(GetFrames_Frames value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetFrames_Frames_descriptor(), value);
}
inline bool GetFrames_Frames_Parse(
    const ::std::string& name, GetFrames_Frames* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetFrames_Frames>(
    GetFrames_Frames_descriptor(), name, value);
}
// ===================================================================

class PanoramaPars : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.PanoramaPars) */ {
 public:
  PanoramaPars();
  virtual ~PanoramaPars();

  PanoramaPars(const PanoramaPars& from);

  inline PanoramaPars& operator=(const PanoramaPars& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PanoramaPars(PanoramaPars&& from) noexcept
    : PanoramaPars() {
    *this = ::std::move(from);
  }

  inline PanoramaPars& operator=(PanoramaPars&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PanoramaPars& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PanoramaPars* internal_default_instance() {
    return reinterpret_cast<const PanoramaPars*>(
               &_PanoramaPars_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PanoramaPars* other);
  friend void swap(PanoramaPars& a, PanoramaPars& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PanoramaPars* New() const PROTOBUF_FINAL { return New(NULL); }

  PanoramaPars* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PanoramaPars& from);
  void MergeFrom(const PanoramaPars& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PanoramaPars* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 pos = 1;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // int32 fov = 2;
  void clear_fov();
  static const int kFovFieldNumber = 2;
  ::google::protobuf::int32 fov() const;
  void set_fov(::google::protobuf::int32 value);

  // float update_rate = 3;
  void clear_update_rate();
  static const int kUpdateRateFieldNumber = 3;
  float update_rate() const;
  void set_update_rate(float value);

  // float pan_start_angle = 4;
  void clear_pan_start_angle();
  static const int kPanStartAngleFieldNumber = 4;
  float pan_start_angle() const;
  void set_pan_start_angle(float value);

  // int32 y_start_pos = 5;
  void clear_y_start_pos();
  static const int kYStartPosFieldNumber = 5;
  ::google::protobuf::int32 y_start_pos() const;
  void set_y_start_pos(::google::protobuf::int32 value);

  // int32 widthx = 6;
  void clear_widthx();
  static const int kWidthxFieldNumber = 6;
  ::google::protobuf::int32 widthx() const;
  void set_widthx(::google::protobuf::int32 value);

  // int32 heighty = 7;
  void clear_heighty();
  static const int kHeightyFieldNumber = 7;
  ::google::protobuf::int32 heighty() const;
  void set_heighty(::google::protobuf::int32 value);

  // int32 fix_mode = 8;
  void clear_fix_mode();
  static const int kFixModeFieldNumber = 8;
  ::google::protobuf::int32 fix_mode() const;
  void set_fix_mode(::google::protobuf::int32 value);

  // int32 pan_motion_frame_no = 9;
  void clear_pan_motion_frame_no();
  static const int kPanMotionFrameNoFieldNumber = 9;
  ::google::protobuf::int32 pan_motion_frame_no() const;
  void set_pan_motion_frame_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.PanoramaPars)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 fov_;
  float update_rate_;
  float pan_start_angle_;
  ::google::protobuf::int32 y_start_pos_;
  ::google::protobuf::int32 widthx_;
  ::google::protobuf::int32 heighty_;
  ::google::protobuf::int32 fix_mode_;
  ::google::protobuf::int32 pan_motion_frame_no_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsPanoramaParsImpl();
};
// -------------------------------------------------------------------

class TRoi : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.TRoi) */ {
 public:
  TRoi();
  virtual ~TRoi();

  TRoi(const TRoi& from);

  inline TRoi& operator=(const TRoi& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TRoi(TRoi&& from) noexcept
    : TRoi() {
    *this = ::std::move(from);
  }

  inline TRoi& operator=(TRoi&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TRoi& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TRoi* internal_default_instance() {
    return reinterpret_cast<const TRoi*>(
               &_TRoi_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TRoi* other);
  friend void swap(TRoi& a, TRoi& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TRoi* New() const PROTOBUF_FINAL { return New(NULL); }

  TRoi* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TRoi& from);
  void MergeFrom(const TRoi& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TRoi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OrionCommunication.TPolygon polygon = 1;
  int polygon_size() const;
  void clear_polygon();
  static const int kPolygonFieldNumber = 1;
  const ::OrionCommunication::TPolygon& polygon(int index) const;
  ::OrionCommunication::TPolygon* mutable_polygon(int index);
  ::OrionCommunication::TPolygon* add_polygon();
  ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPolygon >*
      mutable_polygon();
  const ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPolygon >&
      polygon() const;

  // .OrionCommunication.TRectangle rect1 = 2;
  bool has_rect1() const;
  void clear_rect1();
  static const int kRect1FieldNumber = 2;
  const ::OrionCommunication::TRectangle& rect1() const;
  ::OrionCommunication::TRectangle* release_rect1();
  ::OrionCommunication::TRectangle* mutable_rect1();
  void set_allocated_rect1(::OrionCommunication::TRectangle* rect1);

  // .OrionCommunication.TRectangle rect2 = 3;
  bool has_rect2() const;
  void clear_rect2();
  static const int kRect2FieldNumber = 3;
  const ::OrionCommunication::TRectangle& rect2() const;
  ::OrionCommunication::TRectangle* release_rect2();
  ::OrionCommunication::TRectangle* mutable_rect2();
  void set_allocated_rect2(::OrionCommunication::TRectangle* rect2);

  // @@protoc_insertion_point(class_scope:OrionCommunication.TRoi)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPolygon > polygon_;
  ::OrionCommunication::TRectangle* rect1_;
  ::OrionCommunication::TRectangle* rect2_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsTRoiImpl();
};
// -------------------------------------------------------------------

class TPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.TPoint) */ {
 public:
  TPoint();
  virtual ~TPoint();

  TPoint(const TPoint& from);

  inline TPoint& operator=(const TPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TPoint(TPoint&& from) noexcept
    : TPoint() {
    *this = ::std::move(from);
  }

  inline TPoint& operator=(TPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TPoint* internal_default_instance() {
    return reinterpret_cast<const TPoint*>(
               &_TPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(TPoint* other);
  friend void swap(TPoint& a, TPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  TPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TPoint& from);
  void MergeFrom(const TPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.TPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsTPointImpl();
};
// -------------------------------------------------------------------

class TPolygon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.TPolygon) */ {
 public:
  TPolygon();
  virtual ~TPolygon();

  TPolygon(const TPolygon& from);

  inline TPolygon& operator=(const TPolygon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TPolygon(TPolygon&& from) noexcept
    : TPolygon() {
    *this = ::std::move(from);
  }

  inline TPolygon& operator=(TPolygon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TPolygon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TPolygon* internal_default_instance() {
    return reinterpret_cast<const TPolygon*>(
               &_TPolygon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(TPolygon* other);
  friend void swap(TPolygon& a, TPolygon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TPolygon* New() const PROTOBUF_FINAL { return New(NULL); }

  TPolygon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TPolygon& from);
  void MergeFrom(const TPolygon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TPolygon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OrionCommunication.TPoint points = 1;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 1;
  const ::OrionCommunication::TPoint& points(int index) const;
  ::OrionCommunication::TPoint* mutable_points(int index);
  ::OrionCommunication::TPoint* add_points();
  ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPoint >*
      mutable_points();
  const ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPoint >&
      points() const;

  // bool is_active = 2;
  void clear_is_active();
  static const int kIsActiveFieldNumber = 2;
  bool is_active() const;
  void set_is_active(bool value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.TPolygon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPoint > points_;
  bool is_active_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsTPolygonImpl();
};
// -------------------------------------------------------------------

class TRectangle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.TRectangle) */ {
 public:
  TRectangle();
  virtual ~TRectangle();

  TRectangle(const TRectangle& from);

  inline TRectangle& operator=(const TRectangle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TRectangle(TRectangle&& from) noexcept
    : TRectangle() {
    *this = ::std::move(from);
  }

  inline TRectangle& operator=(TRectangle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TRectangle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TRectangle* internal_default_instance() {
    return reinterpret_cast<const TRectangle*>(
               &_TRectangle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TRectangle* other);
  friend void swap(TRectangle& a, TRectangle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TRectangle* New() const PROTOBUF_FINAL { return New(NULL); }

  TRectangle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TRectangle& from);
  void MergeFrom(const TRectangle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TRectangle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .OrionCommunication.TPoint upperLeft = 1;
  bool has_upperleft() const;
  void clear_upperleft();
  static const int kUpperLeftFieldNumber = 1;
  const ::OrionCommunication::TPoint& upperleft() const;
  ::OrionCommunication::TPoint* release_upperleft();
  ::OrionCommunication::TPoint* mutable_upperleft();
  void set_allocated_upperleft(::OrionCommunication::TPoint* upperleft);

  // .OrionCommunication.TPoint bottomRight = 2;
  bool has_bottomright() const;
  void clear_bottomright();
  static const int kBottomRightFieldNumber = 2;
  const ::OrionCommunication::TPoint& bottomright() const;
  ::OrionCommunication::TPoint* release_bottomright();
  ::OrionCommunication::TPoint* mutable_bottomright();
  void set_allocated_bottomright(::OrionCommunication::TPoint* bottomright);

  // @@protoc_insertion_point(class_scope:OrionCommunication.TRectangle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::OrionCommunication::TPoint* upperleft_;
  ::OrionCommunication::TPoint* bottomright_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsTRectangleImpl();
};
// -------------------------------------------------------------------

class SetModeQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.SetModeQ) */ {
 public:
  SetModeQ();
  virtual ~SetModeQ();

  SetModeQ(const SetModeQ& from);

  inline SetModeQ& operator=(const SetModeQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetModeQ(SetModeQ&& from) noexcept
    : SetModeQ() {
    *this = ::std::move(from);
  }

  inline SetModeQ& operator=(SetModeQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetModeQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetModeQ* internal_default_instance() {
    return reinterpret_cast<const SetModeQ*>(
               &_SetModeQ_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SetModeQ* other);
  friend void swap(SetModeQ& a, SetModeQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetModeQ* New() const PROTOBUF_FINAL { return New(NULL); }

  SetModeQ* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetModeQ& from);
  void MergeFrom(const SetModeQ& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetModeQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetModeQ_Mode Mode;
  static const Mode NONE =
    SetModeQ_Mode_NONE;
  static const Mode PANAROMA =
    SetModeQ_Mode_PANAROMA;
  static const Mode MOTION_DETECTION =
    SetModeQ_Mode_MOTION_DETECTION;
  static inline bool Mode_IsValid(int value) {
    return SetModeQ_Mode_IsValid(value);
  }
  static const Mode Mode_MIN =
    SetModeQ_Mode_Mode_MIN;
  static const Mode Mode_MAX =
    SetModeQ_Mode_Mode_MAX;
  static const int Mode_ARRAYSIZE =
    SetModeQ_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mode_descriptor() {
    return SetModeQ_Mode_descriptor();
  }
  static inline const ::std::string& Mode_Name(Mode value) {
    return SetModeQ_Mode_Name(value);
  }
  static inline bool Mode_Parse(const ::std::string& name,
      Mode* value) {
    return SetModeQ_Mode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .OrionCommunication.SetModeQ.Mode mode = 1;
  void clear_mode();
  static const int kModeFieldNumber = 1;
  ::OrionCommunication::SetModeQ_Mode mode() const;
  void set_mode(::OrionCommunication::SetModeQ_Mode value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.SetModeQ)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsSetModeQImpl();
};
// -------------------------------------------------------------------

class DummyInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.DummyInfo) */ {
 public:
  DummyInfo();
  virtual ~DummyInfo();

  DummyInfo(const DummyInfo& from);

  inline DummyInfo& operator=(const DummyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DummyInfo(DummyInfo&& from) noexcept
    : DummyInfo() {
    *this = ::std::move(from);
  }

  inline DummyInfo& operator=(DummyInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DummyInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DummyInfo* internal_default_instance() {
    return reinterpret_cast<const DummyInfo*>(
               &_DummyInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(DummyInfo* other);
  friend void swap(DummyInfo& a, DummyInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DummyInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DummyInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DummyInfo& from);
  void MergeFrom(const DummyInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DummyInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 dummy = 1;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::int32 dummy() const;
  void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.DummyInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 dummy_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsDummyInfoImpl();
};
// -------------------------------------------------------------------

class MotionDetectionParameters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.MotionDetectionParameters) */ {
 public:
  MotionDetectionParameters();
  virtual ~MotionDetectionParameters();

  MotionDetectionParameters(const MotionDetectionParameters& from);

  inline MotionDetectionParameters& operator=(const MotionDetectionParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MotionDetectionParameters(MotionDetectionParameters&& from) noexcept
    : MotionDetectionParameters() {
    *this = ::std::move(from);
  }

  inline MotionDetectionParameters& operator=(MotionDetectionParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MotionDetectionParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MotionDetectionParameters* internal_default_instance() {
    return reinterpret_cast<const MotionDetectionParameters*>(
               &_MotionDetectionParameters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(MotionDetectionParameters* other);
  friend void swap(MotionDetectionParameters& a, MotionDetectionParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotionDetectionParameters* New() const PROTOBUF_FINAL { return New(NULL); }

  MotionDetectionParameters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MotionDetectionParameters& from);
  void MergeFrom(const MotionDetectionParameters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MotionDetectionParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 dummy = 1;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::int32 dummy() const;
  void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.MotionDetectionParameters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 dummy_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsMotionDetectionParametersImpl();
};
// -------------------------------------------------------------------

class AppCommandResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.AppCommandResult) */ {
 public:
  AppCommandResult();
  virtual ~AppCommandResult();

  AppCommandResult(const AppCommandResult& from);

  inline AppCommandResult& operator=(const AppCommandResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppCommandResult(AppCommandResult&& from) noexcept
    : AppCommandResult() {
    *this = ::std::move(from);
  }

  inline AppCommandResult& operator=(AppCommandResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppCommandResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppCommandResult* internal_default_instance() {
    return reinterpret_cast<const AppCommandResult*>(
               &_AppCommandResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(AppCommandResult* other);
  friend void swap(AppCommandResult& a, AppCommandResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppCommandResult* New() const PROTOBUF_FINAL { return New(NULL); }

  AppCommandResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AppCommandResult& from);
  void MergeFrom(const AppCommandResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AppCommandResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.AppCommandResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsAppCommandResultImpl();
};
// -------------------------------------------------------------------

class AryaParameters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.AryaParameters) */ {
 public:
  AryaParameters();
  virtual ~AryaParameters();

  AryaParameters(const AryaParameters& from);

  inline AryaParameters& operator=(const AryaParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AryaParameters(AryaParameters&& from) noexcept
    : AryaParameters() {
    *this = ::std::move(from);
  }

  inline AryaParameters& operator=(AryaParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AryaParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AryaParameters* internal_default_instance() {
    return reinterpret_cast<const AryaParameters*>(
               &_AryaParameters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(AryaParameters* other);
  friend void swap(AryaParameters& a, AryaParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AryaParameters* New() const PROTOBUF_FINAL { return New(NULL); }

  AryaParameters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AryaParameters& from);
  void MergeFrom(const AryaParameters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AryaParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 panSpeed = 1;
  void clear_panspeed();
  static const int kPanSpeedFieldNumber = 1;
  ::google::protobuf::int32 panspeed() const;
  void set_panspeed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.AryaParameters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 panspeed_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsAryaParametersImpl();
};
// -------------------------------------------------------------------

class GetFrames : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.GetFrames) */ {
 public:
  GetFrames();
  virtual ~GetFrames();

  GetFrames(const GetFrames& from);

  inline GetFrames& operator=(const GetFrames& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFrames(GetFrames&& from) noexcept
    : GetFrames() {
    *this = ::std::move(from);
  }

  inline GetFrames& operator=(GetFrames&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFrames& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFrames* internal_default_instance() {
    return reinterpret_cast<const GetFrames*>(
               &_GetFrames_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GetFrames* other);
  friend void swap(GetFrames& a, GetFrames& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFrames* New() const PROTOBUF_FINAL { return New(NULL); }

  GetFrames* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetFrames& from);
  void MergeFrom(const GetFrames& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetFrames* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetFrames_Frames Frames;
  static const Frames LastFrame =
    GetFrames_Frames_LastFrame;
  static const Frames AllFrames =
    GetFrames_Frames_AllFrames;
  static inline bool Frames_IsValid(int value) {
    return GetFrames_Frames_IsValid(value);
  }
  static const Frames Frames_MIN =
    GetFrames_Frames_Frames_MIN;
  static const Frames Frames_MAX =
    GetFrames_Frames_Frames_MAX;
  static const int Frames_ARRAYSIZE =
    GetFrames_Frames_Frames_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Frames_descriptor() {
    return GetFrames_Frames_descriptor();
  }
  static inline const ::std::string& Frames_Name(Frames value) {
    return GetFrames_Frames_Name(value);
  }
  static inline bool Frames_Parse(const ::std::string& name,
      Frames* value) {
    return GetFrames_Frames_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .OrionCommunication.GetFrames.Frames modeFrame = 1;
  void clear_modeframe();
  static const int kModeFrameFieldNumber = 1;
  ::OrionCommunication::GetFrames_Frames modeframe() const;
  void set_modeframe(::OrionCommunication::GetFrames_Frames value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.GetFrames)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int modeframe_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsGetFramesImpl();
};
// -------------------------------------------------------------------

class PanoramaFrame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.PanoramaFrame) */ {
 public:
  PanoramaFrame();
  virtual ~PanoramaFrame();

  PanoramaFrame(const PanoramaFrame& from);

  inline PanoramaFrame& operator=(const PanoramaFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PanoramaFrame(PanoramaFrame&& from) noexcept
    : PanoramaFrame() {
    *this = ::std::move(from);
  }

  inline PanoramaFrame& operator=(PanoramaFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PanoramaFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PanoramaFrame* internal_default_instance() {
    return reinterpret_cast<const PanoramaFrame*>(
               &_PanoramaFrame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(PanoramaFrame* other);
  friend void swap(PanoramaFrame& a, PanoramaFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PanoramaFrame* New() const PROTOBUF_FINAL { return New(NULL); }

  PanoramaFrame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PanoramaFrame& from);
  void MergeFrom(const PanoramaFrame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PanoramaFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes frameData = 3;
  void clear_framedata();
  static const int kFrameDataFieldNumber = 3;
  const ::std::string& framedata() const;
  void set_framedata(const ::std::string& value);
  #if LANG_CXX11
  void set_framedata(::std::string&& value);
  #endif
  void set_framedata(const char* value);
  void set_framedata(const void* value, size_t size);
  ::std::string* mutable_framedata();
  ::std::string* release_framedata();
  void set_allocated_framedata(::std::string* framedata);

  // bool valid = 1;
  void clear_valid();
  static const int kValidFieldNumber = 1;
  bool valid() const;
  void set_valid(bool value);

  // float progress = 2;
  void clear_progress();
  static const int kProgressFieldNumber = 2;
  float progress() const;
  void set_progress(float value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.PanoramaFrame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr framedata_;
  bool valid_;
  float progress_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsPanoramaFrameImpl();
};
// -------------------------------------------------------------------

class ScreenFrame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.ScreenFrame) */ {
 public:
  ScreenFrame();
  virtual ~ScreenFrame();

  ScreenFrame(const ScreenFrame& from);

  inline ScreenFrame& operator=(const ScreenFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScreenFrame(ScreenFrame&& from) noexcept
    : ScreenFrame() {
    *this = ::std::move(from);
  }

  inline ScreenFrame& operator=(ScreenFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScreenFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScreenFrame* internal_default_instance() {
    return reinterpret_cast<const ScreenFrame*>(
               &_ScreenFrame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ScreenFrame* other);
  friend void swap(ScreenFrame& a, ScreenFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScreenFrame* New() const PROTOBUF_FINAL { return New(NULL); }

  ScreenFrame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScreenFrame& from);
  void MergeFrom(const ScreenFrame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScreenFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes frame = 1;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  const ::std::string& frame() const;
  void set_frame(const ::std::string& value);
  #if LANG_CXX11
  void set_frame(::std::string&& value);
  #endif
  void set_frame(const char* value);
  void set_frame(const void* value, size_t size);
  ::std::string* mutable_frame();
  ::std::string* release_frame();
  void set_allocated_frame(::std::string* frame);

  // @@protoc_insertion_point(class_scope:OrionCommunication.ScreenFrame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr frame_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsScreenFrameImpl();
};
// -------------------------------------------------------------------

class SetSensivity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrionCommunication.SetSensivity) */ {
 public:
  SetSensivity();
  virtual ~SetSensivity();

  SetSensivity(const SetSensivity& from);

  inline SetSensivity& operator=(const SetSensivity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetSensivity(SetSensivity&& from) noexcept
    : SetSensivity() {
    *this = ::std::move(from);
  }

  inline SetSensivity& operator=(SetSensivity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSensivity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetSensivity* internal_default_instance() {
    return reinterpret_cast<const SetSensivity*>(
               &_SetSensivity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SetSensivity* other);
  friend void swap(SetSensivity& a, SetSensivity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetSensivity* New() const PROTOBUF_FINAL { return New(NULL); }

  SetSensivity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetSensivity& from);
  void MergeFrom(const SetSensivity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetSensivity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 sensivity = 1;
  void clear_sensivity();
  static const int kSensivityFieldNumber = 1;
  ::google::protobuf::int32 sensivity() const;
  void set_sensivity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OrionCommunication.SetSensivity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 sensivity_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrionCommunication_2eproto::TableStruct;
  friend void ::protobuf_OrionCommunication_2eproto::InitDefaultsSetSensivityImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PanoramaPars

// int32 pos = 1;
inline void PanoramaPars::clear_pos() {
  pos_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::pos() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.pos)
  return pos_;
}
inline void PanoramaPars::set_pos(::google::protobuf::int32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.pos)
}

// int32 fov = 2;
inline void PanoramaPars::clear_fov() {
  fov_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::fov() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.fov)
  return fov_;
}
inline void PanoramaPars::set_fov(::google::protobuf::int32 value) {
  
  fov_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.fov)
}

// float update_rate = 3;
inline void PanoramaPars::clear_update_rate() {
  update_rate_ = 0;
}
inline float PanoramaPars::update_rate() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.update_rate)
  return update_rate_;
}
inline void PanoramaPars::set_update_rate(float value) {
  
  update_rate_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.update_rate)
}

// float pan_start_angle = 4;
inline void PanoramaPars::clear_pan_start_angle() {
  pan_start_angle_ = 0;
}
inline float PanoramaPars::pan_start_angle() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.pan_start_angle)
  return pan_start_angle_;
}
inline void PanoramaPars::set_pan_start_angle(float value) {
  
  pan_start_angle_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.pan_start_angle)
}

// int32 y_start_pos = 5;
inline void PanoramaPars::clear_y_start_pos() {
  y_start_pos_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::y_start_pos() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.y_start_pos)
  return y_start_pos_;
}
inline void PanoramaPars::set_y_start_pos(::google::protobuf::int32 value) {
  
  y_start_pos_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.y_start_pos)
}

// int32 widthx = 6;
inline void PanoramaPars::clear_widthx() {
  widthx_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::widthx() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.widthx)
  return widthx_;
}
inline void PanoramaPars::set_widthx(::google::protobuf::int32 value) {
  
  widthx_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.widthx)
}

// int32 heighty = 7;
inline void PanoramaPars::clear_heighty() {
  heighty_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::heighty() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.heighty)
  return heighty_;
}
inline void PanoramaPars::set_heighty(::google::protobuf::int32 value) {
  
  heighty_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.heighty)
}

// int32 fix_mode = 8;
inline void PanoramaPars::clear_fix_mode() {
  fix_mode_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::fix_mode() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.fix_mode)
  return fix_mode_;
}
inline void PanoramaPars::set_fix_mode(::google::protobuf::int32 value) {
  
  fix_mode_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.fix_mode)
}

// int32 pan_motion_frame_no = 9;
inline void PanoramaPars::clear_pan_motion_frame_no() {
  pan_motion_frame_no_ = 0;
}
inline ::google::protobuf::int32 PanoramaPars::pan_motion_frame_no() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaPars.pan_motion_frame_no)
  return pan_motion_frame_no_;
}
inline void PanoramaPars::set_pan_motion_frame_no(::google::protobuf::int32 value) {
  
  pan_motion_frame_no_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaPars.pan_motion_frame_no)
}

// -------------------------------------------------------------------

// TRoi

// repeated .OrionCommunication.TPolygon polygon = 1;
inline int TRoi::polygon_size() const {
  return polygon_.size();
}
inline void TRoi::clear_polygon() {
  polygon_.Clear();
}
inline const ::OrionCommunication::TPolygon& TRoi::polygon(int index) const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TRoi.polygon)
  return polygon_.Get(index);
}
inline ::OrionCommunication::TPolygon* TRoi::mutable_polygon(int index) {
  // @@protoc_insertion_point(field_mutable:OrionCommunication.TRoi.polygon)
  return polygon_.Mutable(index);
}
inline ::OrionCommunication::TPolygon* TRoi::add_polygon() {
  // @@protoc_insertion_point(field_add:OrionCommunication.TRoi.polygon)
  return polygon_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPolygon >*
TRoi::mutable_polygon() {
  // @@protoc_insertion_point(field_mutable_list:OrionCommunication.TRoi.polygon)
  return &polygon_;
}
inline const ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPolygon >&
TRoi::polygon() const {
  // @@protoc_insertion_point(field_list:OrionCommunication.TRoi.polygon)
  return polygon_;
}

// .OrionCommunication.TRectangle rect1 = 2;
inline bool TRoi::has_rect1() const {
  return this != internal_default_instance() && rect1_ != NULL;
}
inline void TRoi::clear_rect1() {
  if (GetArenaNoVirtual() == NULL && rect1_ != NULL) {
    delete rect1_;
  }
  rect1_ = NULL;
}
inline const ::OrionCommunication::TRectangle& TRoi::rect1() const {
  const ::OrionCommunication::TRectangle* p = rect1_;
  // @@protoc_insertion_point(field_get:OrionCommunication.TRoi.rect1)
  return p != NULL ? *p : *reinterpret_cast<const ::OrionCommunication::TRectangle*>(
      &::OrionCommunication::_TRectangle_default_instance_);
}
inline ::OrionCommunication::TRectangle* TRoi::release_rect1() {
  // @@protoc_insertion_point(field_release:OrionCommunication.TRoi.rect1)
  
  ::OrionCommunication::TRectangle* temp = rect1_;
  rect1_ = NULL;
  return temp;
}
inline ::OrionCommunication::TRectangle* TRoi::mutable_rect1() {
  
  if (rect1_ == NULL) {
    rect1_ = new ::OrionCommunication::TRectangle;
  }
  // @@protoc_insertion_point(field_mutable:OrionCommunication.TRoi.rect1)
  return rect1_;
}
inline void TRoi::set_allocated_rect1(::OrionCommunication::TRectangle* rect1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rect1_;
  }
  if (rect1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rect1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rect1, submessage_arena);
    }
    
  } else {
    
  }
  rect1_ = rect1;
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.TRoi.rect1)
}

// .OrionCommunication.TRectangle rect2 = 3;
inline bool TRoi::has_rect2() const {
  return this != internal_default_instance() && rect2_ != NULL;
}
inline void TRoi::clear_rect2() {
  if (GetArenaNoVirtual() == NULL && rect2_ != NULL) {
    delete rect2_;
  }
  rect2_ = NULL;
}
inline const ::OrionCommunication::TRectangle& TRoi::rect2() const {
  const ::OrionCommunication::TRectangle* p = rect2_;
  // @@protoc_insertion_point(field_get:OrionCommunication.TRoi.rect2)
  return p != NULL ? *p : *reinterpret_cast<const ::OrionCommunication::TRectangle*>(
      &::OrionCommunication::_TRectangle_default_instance_);
}
inline ::OrionCommunication::TRectangle* TRoi::release_rect2() {
  // @@protoc_insertion_point(field_release:OrionCommunication.TRoi.rect2)
  
  ::OrionCommunication::TRectangle* temp = rect2_;
  rect2_ = NULL;
  return temp;
}
inline ::OrionCommunication::TRectangle* TRoi::mutable_rect2() {
  
  if (rect2_ == NULL) {
    rect2_ = new ::OrionCommunication::TRectangle;
  }
  // @@protoc_insertion_point(field_mutable:OrionCommunication.TRoi.rect2)
  return rect2_;
}
inline void TRoi::set_allocated_rect2(::OrionCommunication::TRectangle* rect2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rect2_;
  }
  if (rect2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rect2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rect2, submessage_arena);
    }
    
  } else {
    
  }
  rect2_ = rect2;
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.TRoi.rect2)
}

// -------------------------------------------------------------------

// TPoint

// float x = 1;
inline void TPoint::clear_x() {
  x_ = 0;
}
inline float TPoint::x() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TPoint.x)
  return x_;
}
inline void TPoint::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.TPoint.x)
}

// float y = 2;
inline void TPoint::clear_y() {
  y_ = 0;
}
inline float TPoint::y() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TPoint.y)
  return y_;
}
inline void TPoint::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.TPoint.y)
}

// -------------------------------------------------------------------

// TPolygon

// repeated .OrionCommunication.TPoint points = 1;
inline int TPolygon::points_size() const {
  return points_.size();
}
inline void TPolygon::clear_points() {
  points_.Clear();
}
inline const ::OrionCommunication::TPoint& TPolygon::points(int index) const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TPolygon.points)
  return points_.Get(index);
}
inline ::OrionCommunication::TPoint* TPolygon::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:OrionCommunication.TPolygon.points)
  return points_.Mutable(index);
}
inline ::OrionCommunication::TPoint* TPolygon::add_points() {
  // @@protoc_insertion_point(field_add:OrionCommunication.TPolygon.points)
  return points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPoint >*
TPolygon::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:OrionCommunication.TPolygon.points)
  return &points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::OrionCommunication::TPoint >&
TPolygon::points() const {
  // @@protoc_insertion_point(field_list:OrionCommunication.TPolygon.points)
  return points_;
}

// bool is_active = 2;
inline void TPolygon::clear_is_active() {
  is_active_ = false;
}
inline bool TPolygon::is_active() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.TPolygon.is_active)
  return is_active_;
}
inline void TPolygon::set_is_active(bool value) {
  
  is_active_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.TPolygon.is_active)
}

// -------------------------------------------------------------------

// TRectangle

// .OrionCommunication.TPoint upperLeft = 1;
inline bool TRectangle::has_upperleft() const {
  return this != internal_default_instance() && upperleft_ != NULL;
}
inline void TRectangle::clear_upperleft() {
  if (GetArenaNoVirtual() == NULL && upperleft_ != NULL) {
    delete upperleft_;
  }
  upperleft_ = NULL;
}
inline const ::OrionCommunication::TPoint& TRectangle::upperleft() const {
  const ::OrionCommunication::TPoint* p = upperleft_;
  // @@protoc_insertion_point(field_get:OrionCommunication.TRectangle.upperLeft)
  return p != NULL ? *p : *reinterpret_cast<const ::OrionCommunication::TPoint*>(
      &::OrionCommunication::_TPoint_default_instance_);
}
inline ::OrionCommunication::TPoint* TRectangle::release_upperleft() {
  // @@protoc_insertion_point(field_release:OrionCommunication.TRectangle.upperLeft)
  
  ::OrionCommunication::TPoint* temp = upperleft_;
  upperleft_ = NULL;
  return temp;
}
inline ::OrionCommunication::TPoint* TRectangle::mutable_upperleft() {
  
  if (upperleft_ == NULL) {
    upperleft_ = new ::OrionCommunication::TPoint;
  }
  // @@protoc_insertion_point(field_mutable:OrionCommunication.TRectangle.upperLeft)
  return upperleft_;
}
inline void TRectangle::set_allocated_upperleft(::OrionCommunication::TPoint* upperleft) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete upperleft_;
  }
  if (upperleft) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      upperleft = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, upperleft, submessage_arena);
    }
    
  } else {
    
  }
  upperleft_ = upperleft;
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.TRectangle.upperLeft)
}

// .OrionCommunication.TPoint bottomRight = 2;
inline bool TRectangle::has_bottomright() const {
  return this != internal_default_instance() && bottomright_ != NULL;
}
inline void TRectangle::clear_bottomright() {
  if (GetArenaNoVirtual() == NULL && bottomright_ != NULL) {
    delete bottomright_;
  }
  bottomright_ = NULL;
}
inline const ::OrionCommunication::TPoint& TRectangle::bottomright() const {
  const ::OrionCommunication::TPoint* p = bottomright_;
  // @@protoc_insertion_point(field_get:OrionCommunication.TRectangle.bottomRight)
  return p != NULL ? *p : *reinterpret_cast<const ::OrionCommunication::TPoint*>(
      &::OrionCommunication::_TPoint_default_instance_);
}
inline ::OrionCommunication::TPoint* TRectangle::release_bottomright() {
  // @@protoc_insertion_point(field_release:OrionCommunication.TRectangle.bottomRight)
  
  ::OrionCommunication::TPoint* temp = bottomright_;
  bottomright_ = NULL;
  return temp;
}
inline ::OrionCommunication::TPoint* TRectangle::mutable_bottomright() {
  
  if (bottomright_ == NULL) {
    bottomright_ = new ::OrionCommunication::TPoint;
  }
  // @@protoc_insertion_point(field_mutable:OrionCommunication.TRectangle.bottomRight)
  return bottomright_;
}
inline void TRectangle::set_allocated_bottomright(::OrionCommunication::TPoint* bottomright) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bottomright_;
  }
  if (bottomright) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bottomright = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bottomright, submessage_arena);
    }
    
  } else {
    
  }
  bottomright_ = bottomright;
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.TRectangle.bottomRight)
}

// -------------------------------------------------------------------

// SetModeQ

// .OrionCommunication.SetModeQ.Mode mode = 1;
inline void SetModeQ::clear_mode() {
  mode_ = 0;
}
inline ::OrionCommunication::SetModeQ_Mode SetModeQ::mode() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.SetModeQ.mode)
  return static_cast< ::OrionCommunication::SetModeQ_Mode >(mode_);
}
inline void SetModeQ::set_mode(::OrionCommunication::SetModeQ_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.SetModeQ.mode)
}

// -------------------------------------------------------------------

// DummyInfo

// int32 dummy = 1;
inline void DummyInfo::clear_dummy() {
  dummy_ = 0;
}
inline ::google::protobuf::int32 DummyInfo::dummy() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.DummyInfo.dummy)
  return dummy_;
}
inline void DummyInfo::set_dummy(::google::protobuf::int32 value) {
  
  dummy_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.DummyInfo.dummy)
}

// -------------------------------------------------------------------

// MotionDetectionParameters

// int32 dummy = 1;
inline void MotionDetectionParameters::clear_dummy() {
  dummy_ = 0;
}
inline ::google::protobuf::int32 MotionDetectionParameters::dummy() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.MotionDetectionParameters.dummy)
  return dummy_;
}
inline void MotionDetectionParameters::set_dummy(::google::protobuf::int32 value) {
  
  dummy_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.MotionDetectionParameters.dummy)
}

// -------------------------------------------------------------------

// AppCommandResult

// int32 err = 1;
inline void AppCommandResult::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 AppCommandResult::err() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.AppCommandResult.err)
  return err_;
}
inline void AppCommandResult::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.AppCommandResult.err)
}

// -------------------------------------------------------------------

// AryaParameters

// int32 panSpeed = 1;
inline void AryaParameters::clear_panspeed() {
  panspeed_ = 0;
}
inline ::google::protobuf::int32 AryaParameters::panspeed() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.AryaParameters.panSpeed)
  return panspeed_;
}
inline void AryaParameters::set_panspeed(::google::protobuf::int32 value) {
  
  panspeed_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.AryaParameters.panSpeed)
}

// -------------------------------------------------------------------

// GetFrames

// .OrionCommunication.GetFrames.Frames modeFrame = 1;
inline void GetFrames::clear_modeframe() {
  modeframe_ = 0;
}
inline ::OrionCommunication::GetFrames_Frames GetFrames::modeframe() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.GetFrames.modeFrame)
  return static_cast< ::OrionCommunication::GetFrames_Frames >(modeframe_);
}
inline void GetFrames::set_modeframe(::OrionCommunication::GetFrames_Frames value) {
  
  modeframe_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.GetFrames.modeFrame)
}

// -------------------------------------------------------------------

// PanoramaFrame

// bool valid = 1;
inline void PanoramaFrame::clear_valid() {
  valid_ = false;
}
inline bool PanoramaFrame::valid() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaFrame.valid)
  return valid_;
}
inline void PanoramaFrame::set_valid(bool value) {
  
  valid_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaFrame.valid)
}

// float progress = 2;
inline void PanoramaFrame::clear_progress() {
  progress_ = 0;
}
inline float PanoramaFrame::progress() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaFrame.progress)
  return progress_;
}
inline void PanoramaFrame::set_progress(float value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaFrame.progress)
}

// bytes frameData = 3;
inline void PanoramaFrame::clear_framedata() {
  framedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PanoramaFrame::framedata() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.PanoramaFrame.frameData)
  return framedata_.GetNoArena();
}
inline void PanoramaFrame::set_framedata(const ::std::string& value) {
  
  framedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OrionCommunication.PanoramaFrame.frameData)
}
#if LANG_CXX11
inline void PanoramaFrame::set_framedata(::std::string&& value) {
  
  framedata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OrionCommunication.PanoramaFrame.frameData)
}
#endif
inline void PanoramaFrame::set_framedata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  framedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OrionCommunication.PanoramaFrame.frameData)
}
inline void PanoramaFrame::set_framedata(const void* value, size_t size) {
  
  framedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OrionCommunication.PanoramaFrame.frameData)
}
inline ::std::string* PanoramaFrame::mutable_framedata() {
  
  // @@protoc_insertion_point(field_mutable:OrionCommunication.PanoramaFrame.frameData)
  return framedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PanoramaFrame::release_framedata() {
  // @@protoc_insertion_point(field_release:OrionCommunication.PanoramaFrame.frameData)
  
  return framedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PanoramaFrame::set_allocated_framedata(::std::string* framedata) {
  if (framedata != NULL) {
    
  } else {
    
  }
  framedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), framedata);
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.PanoramaFrame.frameData)
}

// -------------------------------------------------------------------

// ScreenFrame

// bytes frame = 1;
inline void ScreenFrame::clear_frame() {
  frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScreenFrame::frame() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.ScreenFrame.frame)
  return frame_.GetNoArena();
}
inline void ScreenFrame::set_frame(const ::std::string& value) {
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OrionCommunication.ScreenFrame.frame)
}
#if LANG_CXX11
inline void ScreenFrame::set_frame(::std::string&& value) {
  
  frame_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OrionCommunication.ScreenFrame.frame)
}
#endif
inline void ScreenFrame::set_frame(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OrionCommunication.ScreenFrame.frame)
}
inline void ScreenFrame::set_frame(const void* value, size_t size) {
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OrionCommunication.ScreenFrame.frame)
}
inline ::std::string* ScreenFrame::mutable_frame() {
  
  // @@protoc_insertion_point(field_mutable:OrionCommunication.ScreenFrame.frame)
  return frame_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScreenFrame::release_frame() {
  // @@protoc_insertion_point(field_release:OrionCommunication.ScreenFrame.frame)
  
  return frame_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScreenFrame::set_allocated_frame(::std::string* frame) {
  if (frame != NULL) {
    
  } else {
    
  }
  frame_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frame);
  // @@protoc_insertion_point(field_set_allocated:OrionCommunication.ScreenFrame.frame)
}

// -------------------------------------------------------------------

// SetSensivity

// int32 sensivity = 1;
inline void SetSensivity::clear_sensivity() {
  sensivity_ = 0;
}
inline ::google::protobuf::int32 SetSensivity::sensivity() const {
  // @@protoc_insertion_point(field_get:OrionCommunication.SetSensivity.sensivity)
  return sensivity_;
}
inline void SetSensivity::set_sensivity(::google::protobuf::int32 value) {
  
  sensivity_ = value;
  // @@protoc_insertion_point(field_set:OrionCommunication.SetSensivity.sensivity)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace OrionCommunication

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::OrionCommunication::SetModeQ_Mode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OrionCommunication::SetModeQ_Mode>() {
  return ::OrionCommunication::SetModeQ_Mode_descriptor();
}
template <> struct is_proto_enum< ::OrionCommunication::GetFrames_Frames> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OrionCommunication::GetFrames_Frames>() {
  return ::OrionCommunication::GetFrames_Frames_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_OrionCommunication_2eproto__INCLUDED
