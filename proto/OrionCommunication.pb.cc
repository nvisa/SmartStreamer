// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrionCommunication.proto

#include "OrionCommunication.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace OrionCommunication {
class PanoramaParsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PanoramaPars>
      _instance;
} _PanoramaPars_default_instance_;
class TRoiDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TRoi>
      _instance;
} _TRoi_default_instance_;
class TPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPoint>
      _instance;
} _TPoint_default_instance_;
class TPolygonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPolygon>
      _instance;
} _TPolygon_default_instance_;
class TRectangleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TRectangle>
      _instance;
} _TRectangle_default_instance_;
class ModeQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModeQ>
      _instance;
} _ModeQ_default_instance_;
class DummyInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DummyInfo>
      _instance;
} _DummyInfo_default_instance_;
class MotionDetectionParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MotionDetectionParameters>
      _instance;
} _MotionDetectionParameters_default_instance_;
class AppCommandResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppCommandResult>
      _instance;
} _AppCommandResult_default_instance_;
class AryaParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AryaParameters>
      _instance;
} _AryaParameters_default_instance_;
class FrameModeQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrameModeQ>
      _instance;
} _FrameModeQ_default_instance_;
class PanoramaFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PanoramaFrame>
      _instance;
} _PanoramaFrame_default_instance_;
class ScreenFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScreenFrame>
      _instance;
} _ScreenFrame_default_instance_;
class SetSensivityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetSensivity>
      _instance;
} _SetSensivity_default_instance_;
class OverlayQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OverlayQ>
      _instance;
} _OverlayQ_default_instance_;
}  // namespace OrionCommunication
namespace protobuf_OrionCommunication_2eproto {
void InitDefaultsPanoramaParsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::OrionCommunication::_PanoramaPars_default_instance_;
    new (ptr) ::OrionCommunication::PanoramaPars();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::PanoramaPars::InitAsDefaultInstance();
}

void InitDefaultsPanoramaPars() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPanoramaParsImpl);
}

void InitDefaultsTRoiImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_OrionCommunication_2eproto::InitDefaultsTPolygon();
  protobuf_OrionCommunication_2eproto::InitDefaultsTRectangle();
  {
    void* ptr = &::OrionCommunication::_TRoi_default_instance_;
    new (ptr) ::OrionCommunication::TRoi();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::TRoi::InitAsDefaultInstance();
}

void InitDefaultsTRoi() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTRoiImpl);
}

void InitDefaultsTPointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::OrionCommunication::_TPoint_default_instance_;
    new (ptr) ::OrionCommunication::TPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::TPoint::InitAsDefaultInstance();
}

void InitDefaultsTPoint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTPointImpl);
}

void InitDefaultsTPolygonImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_OrionCommunication_2eproto::InitDefaultsTPoint();
  {
    void* ptr = &::OrionCommunication::_TPolygon_default_instance_;
    new (ptr) ::OrionCommunication::TPolygon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::TPolygon::InitAsDefaultInstance();
}

void InitDefaultsTPolygon() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTPolygonImpl);
}

void InitDefaultsTRectangleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_OrionCommunication_2eproto::InitDefaultsTPoint();
  {
    void* ptr = &::OrionCommunication::_TRectangle_default_instance_;
    new (ptr) ::OrionCommunication::TRectangle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::TRectangle::InitAsDefaultInstance();
}

void InitDefaultsTRectangle() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTRectangleImpl);
}

void InitDefaultsModeQImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::OrionCommunication::_ModeQ_default_instance_;
    new (ptr) ::OrionCommunication::ModeQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::ModeQ::InitAsDefaultInstance();
}

void InitDefaultsModeQ() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModeQImpl);
}

void InitDefaultsDummyInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::OrionCommunication::_DummyInfo_default_instance_;
    new (ptr) ::OrionCommunication::DummyInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::DummyInfo::InitAsDefaultInstance();
}

void InitDefaultsDummyInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDummyInfoImpl);
}

void InitDefaultsMotionDetectionParametersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::OrionCommunication::_MotionDetectionParameters_default_instance_;
    new (ptr) ::OrionCommunication::MotionDetectionParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::MotionDetectionParameters::InitAsDefaultInstance();
}

void InitDefaultsMotionDetectionParameters() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMotionDetectionParametersImpl);
}

void InitDefaultsAppCommandResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::OrionCommunication::_AppCommandResult_default_instance_;
    new (ptr) ::OrionCommunication::AppCommandResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::AppCommandResult::InitAsDefaultInstance();
}

void InitDefaultsAppCommandResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAppCommandResultImpl);
}

void InitDefaultsAryaParametersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::OrionCommunication::_AryaParameters_default_instance_;
    new (ptr) ::OrionCommunication::AryaParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::AryaParameters::InitAsDefaultInstance();
}

void InitDefaultsAryaParameters() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAryaParametersImpl);
}

void InitDefaultsFrameModeQImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::OrionCommunication::_FrameModeQ_default_instance_;
    new (ptr) ::OrionCommunication::FrameModeQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::FrameModeQ::InitAsDefaultInstance();
}

void InitDefaultsFrameModeQ() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFrameModeQImpl);
}

void InitDefaultsPanoramaFrameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::OrionCommunication::_PanoramaFrame_default_instance_;
    new (ptr) ::OrionCommunication::PanoramaFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::PanoramaFrame::InitAsDefaultInstance();
}

void InitDefaultsPanoramaFrame() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPanoramaFrameImpl);
}

void InitDefaultsScreenFrameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::OrionCommunication::_ScreenFrame_default_instance_;
    new (ptr) ::OrionCommunication::ScreenFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::ScreenFrame::InitAsDefaultInstance();
}

void InitDefaultsScreenFrame() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScreenFrameImpl);
}

void InitDefaultsSetSensivityImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::OrionCommunication::_SetSensivity_default_instance_;
    new (ptr) ::OrionCommunication::SetSensivity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::SetSensivity::InitAsDefaultInstance();
}

void InitDefaultsSetSensivity() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetSensivityImpl);
}

void InitDefaultsOverlayQImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::OrionCommunication::_OverlayQ_default_instance_;
    new (ptr) ::OrionCommunication::OverlayQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrionCommunication::OverlayQ::InitAsDefaultInstance();
}

void InitDefaultsOverlayQ() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOverlayQImpl);
}

::google::protobuf::Metadata file_level_metadata[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaPars, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaPars, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaPars, fov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaPars, update_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaPars, pan_start_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaPars, y_start_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaPars, widthx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaPars, heighty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaPars, fix_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaPars, pan_motion_frame_no_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::TRoi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::TRoi, polygon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::TRoi, rect1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::TRoi, rect2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::TPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::TPoint, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::TPoint, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::TPolygon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::TPolygon, points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::TPolygon, is_active_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::TRectangle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::TRectangle, upperleft_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::TRectangle, bottomright_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::ModeQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::ModeQ, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::DummyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::DummyInfo, dummy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::MotionDetectionParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::MotionDetectionParameters, dummy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::AppCommandResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::AppCommandResult, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::AppCommandResult, response_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::AryaParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::AryaParameters, panspeed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::FrameModeQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::FrameModeQ, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaFrame, valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaFrame, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::PanoramaFrame, framedata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::ScreenFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::ScreenFrame, frame_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::SetSensivity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::SetSensivity, sensivity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::OverlayQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::OverlayQ, configno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::OverlayQ, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::OverlayQ, posx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::OverlayQ, posy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::OverlayQ, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::OverlayQ, display_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::OverlayQ, textsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::OverlayQ, datetimeformat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::OverlayQ, displaydate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrionCommunication::OverlayQ, displaytime_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::OrionCommunication::PanoramaPars)},
  { 14, -1, sizeof(::OrionCommunication::TRoi)},
  { 22, -1, sizeof(::OrionCommunication::TPoint)},
  { 29, -1, sizeof(::OrionCommunication::TPolygon)},
  { 36, -1, sizeof(::OrionCommunication::TRectangle)},
  { 43, -1, sizeof(::OrionCommunication::ModeQ)},
  { 49, -1, sizeof(::OrionCommunication::DummyInfo)},
  { 55, -1, sizeof(::OrionCommunication::MotionDetectionParameters)},
  { 61, -1, sizeof(::OrionCommunication::AppCommandResult)},
  { 68, -1, sizeof(::OrionCommunication::AryaParameters)},
  { 74, -1, sizeof(::OrionCommunication::FrameModeQ)},
  { 80, -1, sizeof(::OrionCommunication::PanoramaFrame)},
  { 88, -1, sizeof(::OrionCommunication::ScreenFrame)},
  { 94, -1, sizeof(::OrionCommunication::SetSensivity)},
  { 100, -1, sizeof(::OrionCommunication::OverlayQ)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_PanoramaPars_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_TRoi_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_TPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_TPolygon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_TRectangle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_ModeQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_DummyInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_MotionDetectionParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_AppCommandResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_AryaParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_FrameModeQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_PanoramaFrame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_ScreenFrame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_SetSensivity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::OrionCommunication::_OverlayQ_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "OrionCommunication.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030OrionCommunication.proto\022\022OrionCommuni"
      "cation\"\273\001\n\014PanoramaPars\022\013\n\003pos\030\001 \001(\005\022\013\n\003"
      "fov\030\002 \001(\005\022\023\n\013update_rate\030\003 \001(\002\022\027\n\017pan_st"
      "art_angle\030\004 \001(\002\022\023\n\013y_start_pos\030\005 \001(\005\022\016\n\006"
      "widthx\030\006 \001(\005\022\017\n\007heighty\030\007 \001(\005\022\020\n\010fix_mod"
      "e\030\010 \001(\005\022\033\n\023pan_motion_frame_no\030\t \001(\005\"\223\001\n"
      "\004TRoi\022-\n\007polygon\030\001 \003(\0132\034.OrionCommunicat"
      "ion.TPolygon\022-\n\005rect1\030\002 \001(\0132\036.OrionCommu"
      "nication.TRectangle\022-\n\005rect2\030\003 \001(\0132\036.Ori"
      "onCommunication.TRectangle\"\036\n\006TPoint\022\t\n\001"
      "x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\"I\n\010TPolygon\022*\n\006points"
      "\030\001 \003(\0132\032.OrionCommunication.TPoint\022\021\n\tis"
      "_active\030\002 \001(\010\"l\n\nTRectangle\022-\n\tupperLeft"
      "\030\001 \001(\0132\032.OrionCommunication.TPoint\022/\n\013bo"
      "ttomRight\030\002 \001(\0132\032.OrionCommunication.TPo"
      "int\"k\n\005ModeQ\022,\n\004mode\030\001 \001(\0162\036.OrionCommun"
      "ication.ModeQ.Mode\"4\n\004Mode\022\010\n\004NONE\020\000\022\014\n\010"
      "PANAROMA\020\001\022\024\n\020MOTION_DETECTION\020\002\"\032\n\tDumm"
      "yInfo\022\r\n\005dummy\030\001 \001(\005\"*\n\031MotionDetectionP"
      "arameters\022\r\n\005dummy\030\001 \001(\005\"\223\001\n\020AppCommandR"
      "esult\022\013\n\003err\030\001 \001(\005\022\?\n\010response\030\002 \001(\0162-.O"
      "rionCommunication.AppCommandResult.Respo"
      "nse\"1\n\010Response\022\016\n\nSUCCESSFUL\020\000\022\010\n\004FAIL\020"
      "\001\022\013\n\007MISSING\020\002\"\"\n\016AryaParameters\022\020\n\010panS"
      "peed\030\001 \001(\005\"o\n\nFrameModeQ\0226\n\004mode\030\001 \001(\0162("
      ".OrionCommunication.FrameModeQ.FrameMode"
      "\")\n\tFrameMode\022\r\n\tLastFrame\020\000\022\r\n\tAllFrame"
      "s\020\001\"C\n\rPanoramaFrame\022\r\n\005valid\030\001 \001(\010\022\020\n\010p"
      "rogress\030\002 \001(\002\022\021\n\tframeData\030\003 \001(\014\"\034\n\013Scre"
      "enFrame\022\r\n\005frame\030\001 \001(\014\"!\n\014SetSensivity\022\021"
      "\n\tsensivity\030\001 \001(\005\"\265\002\n\010OverlayQ\022\020\n\010config"
      "No\030\001 \001(\005\0222\n\003pos\030\002 \001(\0162%.OrionCommunicati"
      "on.OverlayQ.Position\022\014\n\004posx\030\003 \001(\005\022\014\n\004po"
      "sy\030\004 \001(\005\022\014\n\004text\030\005 \001(\t\022\017\n\007display\030\006 \001(\005\022"
      "\020\n\010textSize\030\007 \001(\005\022\026\n\016dateTimeFormat\030\010 \001("
      "\005\022\023\n\013displayDate\030\t \001(\005\022\023\n\013displayTime\030\n "
      "\001(\005\"T\n\010Position\022\r\n\tUpperLeft\020\000\022\016\n\nUpperR"
      "ight\020\001\022\r\n\tLowerLeft\020\002\022\016\n\nLowerRight\020\003\022\n\n"
      "\006Custom\020\0042\367\016\n\031OrionCommunicationService\022"
      "a\n\025SetPanaromaParameters\022 .OrionCommunic"
      "ation.PanoramaPars\032$.OrionCommunication."
      "AppCommandResult\"\000\022Z\n\025GetPanaromaParamet"
      "ers\022\035.OrionCommunication.DummyInfo\032 .Ori"
      "onCommunication.PanoramaPars\"\000\022`\n\034SetMot"
      "ionDetectionParameters\022\030.OrionCommunicat"
      "ion.TRoi\032$.OrionCommunication.AppCommand"
      "Result\"\000\022Y\n\034GetMotionDetectionParameters"
      "\022\035.OrionCommunication.DummyInfo\032\030.OrionC"
      "ommunication.TRoi\"\000\022V\n\016SetCurrentMode\022\031."
      "OrionCommunication.ModeQ\032$.OrionCommunic"
      "ation.AppCommandResult\"\003\210\002\001\022O\n\016GetCurren"
      "tMode\022\035.OrionCommunication.DummyInfo\032\031.O"
      "rionCommunication.ModeQ\"\003\210\002\001\022a\n\025SetSensi"
      "vityParameter\022 .OrionCommunication.SetSe"
      "nsivity\032$.OrionCommunication.AppCommandR"
      "esult\"\000\022Z\n\025GetSensivityParameter\022\035.Orion"
      "Communication.DummyInfo\032 .OrionCommunica"
      "tion.SetSensivity\"\000\022]\n\024GetLastPanaromaFr"
      "ame\022\035.OrionCommunication.DummyInfo\032$.Ori"
      "onCommunication.AppCommandResult\"\000\022Z\n\021Ge"
      "tPanaromaFrames\022\036.OrionCommunication.Fra"
      "meModeQ\032!.OrionCommunication.PanoramaFra"
      "me\"\0000\001\022R\n\tRunMotion\022\035.OrionCommunication"
      ".DummyInfo\032$.OrionCommunication.AppComma"
      "ndResult\"\000\022T\n\013RunPanaroma\022\035.OrionCommuni"
      "cation.DummyInfo\032$.OrionCommunication.Ap"
      "pCommandResult\"\000\022S\n\nStopMotion\022\035.OrionCo"
      "mmunication.DummyInfo\032$.OrionCommunicati"
      "on.AppCommandResult\"\000\022U\n\014StopPanaroma\022\035."
      "OrionCommunication.DummyInfo\032$.OrionComm"
      "unication.AppCommandResult\"\000\022W\n\016RunCalib"
      "ration\022\035.OrionCommunication.DummyInfo\032$."
      "OrionCommunication.AppCommandResult\"\000\022X\n"
      "\017StopCalibration\022\035.OrionCommunication.Du"
      "mmyInfo\032$.OrionCommunication.AppCommandR"
      "esult\"\000\022U\n\021GetMainScreenShot\022\035.OrionComm"
      "unication.DummyInfo\032\037.OrionCommunication"
      ".ScreenFrame\"\000\022T\n\020GetSecScreenShot\022\035.Ori"
      "onCommunication.DummyInfo\032\037.OrionCommuni"
      "cation.ScreenFrame\"\000\022W\n\021GotoPanaromaPixe"
      "l\022\032.OrionCommunication.TPoint\032$.OrionCom"
      "munication.AppCommandResult\"\000\022S\n\024Current"
      "PanaromaPixel\022\035.OrionCommunication.Dummy"
      "Info\032\032.OrionCommunication.TPoint\"\000\022W\n\017Se"
      "tVideoOverlay\022\034.OrionCommunication.Overl"
      "ayQ\032$.OrionCommunication.AppCommandResul"
      "t\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3451);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "OrionCommunication.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_OrionCommunication_2eproto
namespace OrionCommunication {
const ::google::protobuf::EnumDescriptor* ModeQ_Mode_descriptor() {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_OrionCommunication_2eproto::file_level_enum_descriptors[0];
}
bool ModeQ_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ModeQ_Mode ModeQ::NONE;
const ModeQ_Mode ModeQ::PANAROMA;
const ModeQ_Mode ModeQ::MOTION_DETECTION;
const ModeQ_Mode ModeQ::Mode_MIN;
const ModeQ_Mode ModeQ::Mode_MAX;
const int ModeQ::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AppCommandResult_Response_descriptor() {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_OrionCommunication_2eproto::file_level_enum_descriptors[1];
}
bool AppCommandResult_Response_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AppCommandResult_Response AppCommandResult::SUCCESSFUL;
const AppCommandResult_Response AppCommandResult::FAIL;
const AppCommandResult_Response AppCommandResult::MISSING;
const AppCommandResult_Response AppCommandResult::Response_MIN;
const AppCommandResult_Response AppCommandResult::Response_MAX;
const int AppCommandResult::Response_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FrameModeQ_FrameMode_descriptor() {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_OrionCommunication_2eproto::file_level_enum_descriptors[2];
}
bool FrameModeQ_FrameMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FrameModeQ_FrameMode FrameModeQ::LastFrame;
const FrameModeQ_FrameMode FrameModeQ::AllFrames;
const FrameModeQ_FrameMode FrameModeQ::FrameMode_MIN;
const FrameModeQ_FrameMode FrameModeQ::FrameMode_MAX;
const int FrameModeQ::FrameMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OverlayQ_Position_descriptor() {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_OrionCommunication_2eproto::file_level_enum_descriptors[3];
}
bool OverlayQ_Position_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OverlayQ_Position OverlayQ::UpperLeft;
const OverlayQ_Position OverlayQ::UpperRight;
const OverlayQ_Position OverlayQ::LowerLeft;
const OverlayQ_Position OverlayQ::LowerRight;
const OverlayQ_Position OverlayQ::Custom;
const OverlayQ_Position OverlayQ::Position_MIN;
const OverlayQ_Position OverlayQ::Position_MAX;
const int OverlayQ::Position_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void PanoramaPars::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PanoramaPars::kPosFieldNumber;
const int PanoramaPars::kFovFieldNumber;
const int PanoramaPars::kUpdateRateFieldNumber;
const int PanoramaPars::kPanStartAngleFieldNumber;
const int PanoramaPars::kYStartPosFieldNumber;
const int PanoramaPars::kWidthxFieldNumber;
const int PanoramaPars::kHeightyFieldNumber;
const int PanoramaPars::kFixModeFieldNumber;
const int PanoramaPars::kPanMotionFrameNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PanoramaPars::PanoramaPars()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsPanoramaPars();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.PanoramaPars)
}
PanoramaPars::PanoramaPars(const PanoramaPars& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pos_, &from.pos_,
    static_cast<size_t>(reinterpret_cast<char*>(&pan_motion_frame_no_) -
    reinterpret_cast<char*>(&pos_)) + sizeof(pan_motion_frame_no_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.PanoramaPars)
}

void PanoramaPars::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pan_motion_frame_no_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(pan_motion_frame_no_));
  _cached_size_ = 0;
}

PanoramaPars::~PanoramaPars() {
  // @@protoc_insertion_point(destructor:OrionCommunication.PanoramaPars)
  SharedDtor();
}

void PanoramaPars::SharedDtor() {
}

void PanoramaPars::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PanoramaPars::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PanoramaPars& PanoramaPars::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsPanoramaPars();
  return *internal_default_instance();
}

PanoramaPars* PanoramaPars::New(::google::protobuf::Arena* arena) const {
  PanoramaPars* n = new PanoramaPars;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PanoramaPars::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.PanoramaPars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pan_motion_frame_no_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(pan_motion_frame_no_));
  _internal_metadata_.Clear();
}

bool PanoramaPars::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.PanoramaPars)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fov = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fov_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float update_rate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &update_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pan_start_angle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pan_start_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y_start_pos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_start_pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 widthx = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &widthx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 heighty = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heighty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fix_mode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fix_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pan_motion_frame_no = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pan_motion_frame_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.PanoramaPars)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.PanoramaPars)
  return false;
#undef DO_
}

void PanoramaPars::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.PanoramaPars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 pos = 1;
  if (this->pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  // int32 fov = 2;
  if (this->fov() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fov(), output);
  }

  // float update_rate = 3;
  if (this->update_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->update_rate(), output);
  }

  // float pan_start_angle = 4;
  if (this->pan_start_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->pan_start_angle(), output);
  }

  // int32 y_start_pos = 5;
  if (this->y_start_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->y_start_pos(), output);
  }

  // int32 widthx = 6;
  if (this->widthx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->widthx(), output);
  }

  // int32 heighty = 7;
  if (this->heighty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->heighty(), output);
  }

  // int32 fix_mode = 8;
  if (this->fix_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->fix_mode(), output);
  }

  // int32 pan_motion_frame_no = 9;
  if (this->pan_motion_frame_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pan_motion_frame_no(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.PanoramaPars)
}

::google::protobuf::uint8* PanoramaPars::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.PanoramaPars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 pos = 1;
  if (this->pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  // int32 fov = 2;
  if (this->fov() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fov(), target);
  }

  // float update_rate = 3;
  if (this->update_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->update_rate(), target);
  }

  // float pan_start_angle = 4;
  if (this->pan_start_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->pan_start_angle(), target);
  }

  // int32 y_start_pos = 5;
  if (this->y_start_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->y_start_pos(), target);
  }

  // int32 widthx = 6;
  if (this->widthx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->widthx(), target);
  }

  // int32 heighty = 7;
  if (this->heighty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->heighty(), target);
  }

  // int32 fix_mode = 8;
  if (this->fix_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->fix_mode(), target);
  }

  // int32 pan_motion_frame_no = 9;
  if (this->pan_motion_frame_no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pan_motion_frame_no(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.PanoramaPars)
  return target;
}

size_t PanoramaPars::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.PanoramaPars)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 pos = 1;
  if (this->pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos());
  }

  // int32 fov = 2;
  if (this->fov() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fov());
  }

  // float update_rate = 3;
  if (this->update_rate() != 0) {
    total_size += 1 + 4;
  }

  // float pan_start_angle = 4;
  if (this->pan_start_angle() != 0) {
    total_size += 1 + 4;
  }

  // int32 y_start_pos = 5;
  if (this->y_start_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y_start_pos());
  }

  // int32 widthx = 6;
  if (this->widthx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->widthx());
  }

  // int32 heighty = 7;
  if (this->heighty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->heighty());
  }

  // int32 fix_mode = 8;
  if (this->fix_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fix_mode());
  }

  // int32 pan_motion_frame_no = 9;
  if (this->pan_motion_frame_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pan_motion_frame_no());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PanoramaPars::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.PanoramaPars)
  GOOGLE_DCHECK_NE(&from, this);
  const PanoramaPars* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PanoramaPars>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.PanoramaPars)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.PanoramaPars)
    MergeFrom(*source);
  }
}

void PanoramaPars::MergeFrom(const PanoramaPars& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.PanoramaPars)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pos() != 0) {
    set_pos(from.pos());
  }
  if (from.fov() != 0) {
    set_fov(from.fov());
  }
  if (from.update_rate() != 0) {
    set_update_rate(from.update_rate());
  }
  if (from.pan_start_angle() != 0) {
    set_pan_start_angle(from.pan_start_angle());
  }
  if (from.y_start_pos() != 0) {
    set_y_start_pos(from.y_start_pos());
  }
  if (from.widthx() != 0) {
    set_widthx(from.widthx());
  }
  if (from.heighty() != 0) {
    set_heighty(from.heighty());
  }
  if (from.fix_mode() != 0) {
    set_fix_mode(from.fix_mode());
  }
  if (from.pan_motion_frame_no() != 0) {
    set_pan_motion_frame_no(from.pan_motion_frame_no());
  }
}

void PanoramaPars::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.PanoramaPars)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PanoramaPars::CopyFrom(const PanoramaPars& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.PanoramaPars)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PanoramaPars::IsInitialized() const {
  return true;
}

void PanoramaPars::Swap(PanoramaPars* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PanoramaPars::InternalSwap(PanoramaPars* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(fov_, other->fov_);
  swap(update_rate_, other->update_rate_);
  swap(pan_start_angle_, other->pan_start_angle_);
  swap(y_start_pos_, other->y_start_pos_);
  swap(widthx_, other->widthx_);
  swap(heighty_, other->heighty_);
  swap(fix_mode_, other->fix_mode_);
  swap(pan_motion_frame_no_, other->pan_motion_frame_no_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PanoramaPars::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TRoi::InitAsDefaultInstance() {
  ::OrionCommunication::_TRoi_default_instance_._instance.get_mutable()->rect1_ = const_cast< ::OrionCommunication::TRectangle*>(
      ::OrionCommunication::TRectangle::internal_default_instance());
  ::OrionCommunication::_TRoi_default_instance_._instance.get_mutable()->rect2_ = const_cast< ::OrionCommunication::TRectangle*>(
      ::OrionCommunication::TRectangle::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TRoi::kPolygonFieldNumber;
const int TRoi::kRect1FieldNumber;
const int TRoi::kRect2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TRoi::TRoi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsTRoi();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.TRoi)
}
TRoi::TRoi(const TRoi& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      polygon_(from.polygon_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rect1()) {
    rect1_ = new ::OrionCommunication::TRectangle(*from.rect1_);
  } else {
    rect1_ = NULL;
  }
  if (from.has_rect2()) {
    rect2_ = new ::OrionCommunication::TRectangle(*from.rect2_);
  } else {
    rect2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.TRoi)
}

void TRoi::SharedCtor() {
  ::memset(&rect1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rect2_) -
      reinterpret_cast<char*>(&rect1_)) + sizeof(rect2_));
  _cached_size_ = 0;
}

TRoi::~TRoi() {
  // @@protoc_insertion_point(destructor:OrionCommunication.TRoi)
  SharedDtor();
}

void TRoi::SharedDtor() {
  if (this != internal_default_instance()) delete rect1_;
  if (this != internal_default_instance()) delete rect2_;
}

void TRoi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TRoi::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TRoi& TRoi::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsTRoi();
  return *internal_default_instance();
}

TRoi* TRoi::New(::google::protobuf::Arena* arena) const {
  TRoi* n = new TRoi;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TRoi::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.TRoi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polygon_.Clear();
  if (GetArenaNoVirtual() == NULL && rect1_ != NULL) {
    delete rect1_;
  }
  rect1_ = NULL;
  if (GetArenaNoVirtual() == NULL && rect2_ != NULL) {
    delete rect2_;
  }
  rect2_ = NULL;
  _internal_metadata_.Clear();
}

bool TRoi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.TRoi)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .OrionCommunication.TPolygon polygon = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OrionCommunication.TRectangle rect1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rect1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OrionCommunication.TRectangle rect2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rect2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.TRoi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.TRoi)
  return false;
#undef DO_
}

void TRoi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.TRoi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OrionCommunication.TPolygon polygon = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->polygon(static_cast<int>(i)), output);
  }

  // .OrionCommunication.TRectangle rect1 = 2;
  if (this->has_rect1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rect1_, output);
  }

  // .OrionCommunication.TRectangle rect2 = 3;
  if (this->has_rect2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->rect2_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.TRoi)
}

::google::protobuf::uint8* TRoi::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.TRoi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OrionCommunication.TPolygon polygon = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->polygon(static_cast<int>(i)), deterministic, target);
  }

  // .OrionCommunication.TRectangle rect1 = 2;
  if (this->has_rect1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->rect1_, deterministic, target);
  }

  // .OrionCommunication.TRectangle rect2 = 3;
  if (this->has_rect2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->rect2_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.TRoi)
  return target;
}

size_t TRoi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.TRoi)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .OrionCommunication.TPolygon polygon = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->polygon_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->polygon(static_cast<int>(i)));
    }
  }

  // .OrionCommunication.TRectangle rect1 = 2;
  if (this->has_rect1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rect1_);
  }

  // .OrionCommunication.TRectangle rect2 = 3;
  if (this->has_rect2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rect2_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TRoi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.TRoi)
  GOOGLE_DCHECK_NE(&from, this);
  const TRoi* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TRoi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.TRoi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.TRoi)
    MergeFrom(*source);
  }
}

void TRoi::MergeFrom(const TRoi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.TRoi)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polygon_.MergeFrom(from.polygon_);
  if (from.has_rect1()) {
    mutable_rect1()->::OrionCommunication::TRectangle::MergeFrom(from.rect1());
  }
  if (from.has_rect2()) {
    mutable_rect2()->::OrionCommunication::TRectangle::MergeFrom(from.rect2());
  }
}

void TRoi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.TRoi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TRoi::CopyFrom(const TRoi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.TRoi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TRoi::IsInitialized() const {
  return true;
}

void TRoi::Swap(TRoi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TRoi::InternalSwap(TRoi* other) {
  using std::swap;
  polygon_.InternalSwap(&other->polygon_);
  swap(rect1_, other->rect1_);
  swap(rect2_, other->rect2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TRoi::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TPoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPoint::kXFieldNumber;
const int TPoint::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPoint::TPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsTPoint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.TPoint)
}
TPoint::TPoint(const TPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.TPoint)
}

void TPoint::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _cached_size_ = 0;
}

TPoint::~TPoint() {
  // @@protoc_insertion_point(destructor:OrionCommunication.TPoint)
  SharedDtor();
}

void TPoint::SharedDtor() {
}

void TPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPoint::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPoint& TPoint::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsTPoint();
  return *internal_default_instance();
}

TPoint* TPoint::New(::google::protobuf::Arena* arena) const {
  TPoint* n = new TPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.TPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool TPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.TPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.TPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.TPoint)
  return false;
#undef DO_
}

void TPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.TPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.TPoint)
}

::google::protobuf::uint8* TPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.TPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.TPoint)
  return target;
}

size_t TPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.TPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.TPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const TPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.TPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.TPoint)
    MergeFrom(*source);
  }
}

void TPoint::MergeFrom(const TPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.TPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void TPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.TPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPoint::CopyFrom(const TPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.TPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPoint::IsInitialized() const {
  return true;
}

void TPoint::Swap(TPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPoint::InternalSwap(TPoint* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TPoint::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TPolygon::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPolygon::kPointsFieldNumber;
const int TPolygon::kIsActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPolygon::TPolygon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsTPolygon();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.TPolygon)
}
TPolygon::TPolygon(const TPolygon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      points_(from.points_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_active_ = from.is_active_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.TPolygon)
}

void TPolygon::SharedCtor() {
  is_active_ = false;
  _cached_size_ = 0;
}

TPolygon::~TPolygon() {
  // @@protoc_insertion_point(destructor:OrionCommunication.TPolygon)
  SharedDtor();
}

void TPolygon::SharedDtor() {
}

void TPolygon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPolygon::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPolygon& TPolygon::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsTPolygon();
  return *internal_default_instance();
}

TPolygon* TPolygon::New(::google::protobuf::Arena* arena) const {
  TPolygon* n = new TPolygon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TPolygon::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.TPolygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  is_active_ = false;
  _internal_metadata_.Clear();
}

bool TPolygon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.TPolygon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .OrionCommunication.TPoint points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_active = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.TPolygon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.TPolygon)
  return false;
#undef DO_
}

void TPolygon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.TPolygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OrionCommunication.TPoint points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->points(static_cast<int>(i)), output);
  }

  // bool is_active = 2;
  if (this->is_active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_active(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.TPolygon)
}

::google::protobuf::uint8* TPolygon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.TPolygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OrionCommunication.TPoint points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->points(static_cast<int>(i)), deterministic, target);
  }

  // bool is_active = 2;
  if (this->is_active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_active(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.TPolygon)
  return target;
}

size_t TPolygon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.TPolygon)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .OrionCommunication.TPoint points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  // bool is_active = 2;
  if (this->is_active() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPolygon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.TPolygon)
  GOOGLE_DCHECK_NE(&from, this);
  const TPolygon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPolygon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.TPolygon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.TPolygon)
    MergeFrom(*source);
  }
}

void TPolygon::MergeFrom(const TPolygon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.TPolygon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  if (from.is_active() != 0) {
    set_is_active(from.is_active());
  }
}

void TPolygon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.TPolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPolygon::CopyFrom(const TPolygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.TPolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPolygon::IsInitialized() const {
  return true;
}

void TPolygon::Swap(TPolygon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPolygon::InternalSwap(TPolygon* other) {
  using std::swap;
  points_.InternalSwap(&other->points_);
  swap(is_active_, other->is_active_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TPolygon::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TRectangle::InitAsDefaultInstance() {
  ::OrionCommunication::_TRectangle_default_instance_._instance.get_mutable()->upperleft_ = const_cast< ::OrionCommunication::TPoint*>(
      ::OrionCommunication::TPoint::internal_default_instance());
  ::OrionCommunication::_TRectangle_default_instance_._instance.get_mutable()->bottomright_ = const_cast< ::OrionCommunication::TPoint*>(
      ::OrionCommunication::TPoint::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TRectangle::kUpperLeftFieldNumber;
const int TRectangle::kBottomRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TRectangle::TRectangle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsTRectangle();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.TRectangle)
}
TRectangle::TRectangle(const TRectangle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_upperleft()) {
    upperleft_ = new ::OrionCommunication::TPoint(*from.upperleft_);
  } else {
    upperleft_ = NULL;
  }
  if (from.has_bottomright()) {
    bottomright_ = new ::OrionCommunication::TPoint(*from.bottomright_);
  } else {
    bottomright_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.TRectangle)
}

void TRectangle::SharedCtor() {
  ::memset(&upperleft_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottomright_) -
      reinterpret_cast<char*>(&upperleft_)) + sizeof(bottomright_));
  _cached_size_ = 0;
}

TRectangle::~TRectangle() {
  // @@protoc_insertion_point(destructor:OrionCommunication.TRectangle)
  SharedDtor();
}

void TRectangle::SharedDtor() {
  if (this != internal_default_instance()) delete upperleft_;
  if (this != internal_default_instance()) delete bottomright_;
}

void TRectangle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TRectangle::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TRectangle& TRectangle::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsTRectangle();
  return *internal_default_instance();
}

TRectangle* TRectangle::New(::google::protobuf::Arena* arena) const {
  TRectangle* n = new TRectangle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TRectangle::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.TRectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && upperleft_ != NULL) {
    delete upperleft_;
  }
  upperleft_ = NULL;
  if (GetArenaNoVirtual() == NULL && bottomright_ != NULL) {
    delete bottomright_;
  }
  bottomright_ = NULL;
  _internal_metadata_.Clear();
}

bool TRectangle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.TRectangle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .OrionCommunication.TPoint upperLeft = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upperleft()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OrionCommunication.TPoint bottomRight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bottomright()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.TRectangle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.TRectangle)
  return false;
#undef DO_
}

void TRectangle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.TRectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.TPoint upperLeft = 1;
  if (this->has_upperleft()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->upperleft_, output);
  }

  // .OrionCommunication.TPoint bottomRight = 2;
  if (this->has_bottomright()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->bottomright_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.TRectangle)
}

::google::protobuf::uint8* TRectangle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.TRectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.TPoint upperLeft = 1;
  if (this->has_upperleft()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->upperleft_, deterministic, target);
  }

  // .OrionCommunication.TPoint bottomRight = 2;
  if (this->has_bottomright()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->bottomright_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.TRectangle)
  return target;
}

size_t TRectangle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.TRectangle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .OrionCommunication.TPoint upperLeft = 1;
  if (this->has_upperleft()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->upperleft_);
  }

  // .OrionCommunication.TPoint bottomRight = 2;
  if (this->has_bottomright()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bottomright_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TRectangle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.TRectangle)
  GOOGLE_DCHECK_NE(&from, this);
  const TRectangle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TRectangle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.TRectangle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.TRectangle)
    MergeFrom(*source);
  }
}

void TRectangle::MergeFrom(const TRectangle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.TRectangle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_upperleft()) {
    mutable_upperleft()->::OrionCommunication::TPoint::MergeFrom(from.upperleft());
  }
  if (from.has_bottomright()) {
    mutable_bottomright()->::OrionCommunication::TPoint::MergeFrom(from.bottomright());
  }
}

void TRectangle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.TRectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TRectangle::CopyFrom(const TRectangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.TRectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TRectangle::IsInitialized() const {
  return true;
}

void TRectangle::Swap(TRectangle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TRectangle::InternalSwap(TRectangle* other) {
  using std::swap;
  swap(upperleft_, other->upperleft_);
  swap(bottomright_, other->bottomright_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TRectangle::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModeQ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModeQ::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModeQ::ModeQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsModeQ();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.ModeQ)
}
ModeQ::ModeQ(const ModeQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.ModeQ)
}

void ModeQ::SharedCtor() {
  mode_ = 0;
  _cached_size_ = 0;
}

ModeQ::~ModeQ() {
  // @@protoc_insertion_point(destructor:OrionCommunication.ModeQ)
  SharedDtor();
}

void ModeQ::SharedDtor() {
}

void ModeQ::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModeQ::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModeQ& ModeQ::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsModeQ();
  return *internal_default_instance();
}

ModeQ* ModeQ::New(::google::protobuf::Arena* arena) const {
  ModeQ* n = new ModeQ;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModeQ::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.ModeQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mode_ = 0;
  _internal_metadata_.Clear();
}

bool ModeQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.ModeQ)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .OrionCommunication.ModeQ.Mode mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::OrionCommunication::ModeQ_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.ModeQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.ModeQ)
  return false;
#undef DO_
}

void ModeQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.ModeQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.ModeQ.Mode mode = 1;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.ModeQ)
}

::google::protobuf::uint8* ModeQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.ModeQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.ModeQ.Mode mode = 1;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.ModeQ)
  return target;
}

size_t ModeQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.ModeQ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .OrionCommunication.ModeQ.Mode mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModeQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.ModeQ)
  GOOGLE_DCHECK_NE(&from, this);
  const ModeQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModeQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.ModeQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.ModeQ)
    MergeFrom(*source);
  }
}

void ModeQ::MergeFrom(const ModeQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.ModeQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void ModeQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.ModeQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModeQ::CopyFrom(const ModeQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.ModeQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModeQ::IsInitialized() const {
  return true;
}

void ModeQ::Swap(ModeQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModeQ::InternalSwap(ModeQ* other) {
  using std::swap;
  swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModeQ::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DummyInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DummyInfo::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DummyInfo::DummyInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsDummyInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.DummyInfo)
}
DummyInfo::DummyInfo(const DummyInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.DummyInfo)
}

void DummyInfo::SharedCtor() {
  dummy_ = 0;
  _cached_size_ = 0;
}

DummyInfo::~DummyInfo() {
  // @@protoc_insertion_point(destructor:OrionCommunication.DummyInfo)
  SharedDtor();
}

void DummyInfo::SharedDtor() {
}

void DummyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DummyInfo::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DummyInfo& DummyInfo::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsDummyInfo();
  return *internal_default_instance();
}

DummyInfo* DummyInfo::New(::google::protobuf::Arena* arena) const {
  DummyInfo* n = new DummyInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DummyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.DummyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _internal_metadata_.Clear();
}

bool DummyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.DummyInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.DummyInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.DummyInfo)
  return false;
#undef DO_
}

void DummyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.DummyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.DummyInfo)
}

::google::protobuf::uint8* DummyInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.DummyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.DummyInfo)
  return target;
}

size_t DummyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.DummyInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 dummy = 1;
  if (this->dummy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DummyInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.DummyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DummyInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DummyInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.DummyInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.DummyInfo)
    MergeFrom(*source);
  }
}

void DummyInfo::MergeFrom(const DummyInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.DummyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dummy() != 0) {
    set_dummy(from.dummy());
  }
}

void DummyInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.DummyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DummyInfo::CopyFrom(const DummyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.DummyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DummyInfo::IsInitialized() const {
  return true;
}

void DummyInfo::Swap(DummyInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DummyInfo::InternalSwap(DummyInfo* other) {
  using std::swap;
  swap(dummy_, other->dummy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DummyInfo::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MotionDetectionParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MotionDetectionParameters::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MotionDetectionParameters::MotionDetectionParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsMotionDetectionParameters();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.MotionDetectionParameters)
}
MotionDetectionParameters::MotionDetectionParameters(const MotionDetectionParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.MotionDetectionParameters)
}

void MotionDetectionParameters::SharedCtor() {
  dummy_ = 0;
  _cached_size_ = 0;
}

MotionDetectionParameters::~MotionDetectionParameters() {
  // @@protoc_insertion_point(destructor:OrionCommunication.MotionDetectionParameters)
  SharedDtor();
}

void MotionDetectionParameters::SharedDtor() {
}

void MotionDetectionParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MotionDetectionParameters::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MotionDetectionParameters& MotionDetectionParameters::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsMotionDetectionParameters();
  return *internal_default_instance();
}

MotionDetectionParameters* MotionDetectionParameters::New(::google::protobuf::Arena* arena) const {
  MotionDetectionParameters* n = new MotionDetectionParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MotionDetectionParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.MotionDetectionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _internal_metadata_.Clear();
}

bool MotionDetectionParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.MotionDetectionParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.MotionDetectionParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.MotionDetectionParameters)
  return false;
#undef DO_
}

void MotionDetectionParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.MotionDetectionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.MotionDetectionParameters)
}

::google::protobuf::uint8* MotionDetectionParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.MotionDetectionParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.MotionDetectionParameters)
  return target;
}

size_t MotionDetectionParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.MotionDetectionParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 dummy = 1;
  if (this->dummy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MotionDetectionParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.MotionDetectionParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const MotionDetectionParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MotionDetectionParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.MotionDetectionParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.MotionDetectionParameters)
    MergeFrom(*source);
  }
}

void MotionDetectionParameters::MergeFrom(const MotionDetectionParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.MotionDetectionParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dummy() != 0) {
    set_dummy(from.dummy());
  }
}

void MotionDetectionParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.MotionDetectionParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MotionDetectionParameters::CopyFrom(const MotionDetectionParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.MotionDetectionParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotionDetectionParameters::IsInitialized() const {
  return true;
}

void MotionDetectionParameters::Swap(MotionDetectionParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MotionDetectionParameters::InternalSwap(MotionDetectionParameters* other) {
  using std::swap;
  swap(dummy_, other->dummy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MotionDetectionParameters::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppCommandResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppCommandResult::kErrFieldNumber;
const int AppCommandResult::kResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppCommandResult::AppCommandResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsAppCommandResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.AppCommandResult)
}
AppCommandResult::AppCommandResult(const AppCommandResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&err_, &from.err_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&err_)) + sizeof(response_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.AppCommandResult)
}

void AppCommandResult::SharedCtor() {
  ::memset(&err_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&err_)) + sizeof(response_));
  _cached_size_ = 0;
}

AppCommandResult::~AppCommandResult() {
  // @@protoc_insertion_point(destructor:OrionCommunication.AppCommandResult)
  SharedDtor();
}

void AppCommandResult::SharedDtor() {
}

void AppCommandResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppCommandResult::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppCommandResult& AppCommandResult::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsAppCommandResult();
  return *internal_default_instance();
}

AppCommandResult* AppCommandResult::New(::google::protobuf::Arena* arena) const {
  AppCommandResult* n = new AppCommandResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppCommandResult::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.AppCommandResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&err_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&err_)) + sizeof(response_));
  _internal_metadata_.Clear();
}

bool AppCommandResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.AppCommandResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OrionCommunication.AppCommandResult.Response response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response(static_cast< ::OrionCommunication::AppCommandResult_Response >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.AppCommandResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.AppCommandResult)
  return false;
#undef DO_
}

void AppCommandResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.AppCommandResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err(), output);
  }

  // .OrionCommunication.AppCommandResult.Response response = 2;
  if (this->response() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->response(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.AppCommandResult)
}

::google::protobuf::uint8* AppCommandResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.AppCommandResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err(), target);
  }

  // .OrionCommunication.AppCommandResult.Response response = 2;
  if (this->response() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->response(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.AppCommandResult)
  return target;
}

size_t AppCommandResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.AppCommandResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 err = 1;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  // .OrionCommunication.AppCommandResult.Response response = 2;
  if (this->response() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppCommandResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.AppCommandResult)
  GOOGLE_DCHECK_NE(&from, this);
  const AppCommandResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppCommandResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.AppCommandResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.AppCommandResult)
    MergeFrom(*source);
  }
}

void AppCommandResult::MergeFrom(const AppCommandResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.AppCommandResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err() != 0) {
    set_err(from.err());
  }
  if (from.response() != 0) {
    set_response(from.response());
  }
}

void AppCommandResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.AppCommandResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppCommandResult::CopyFrom(const AppCommandResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.AppCommandResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppCommandResult::IsInitialized() const {
  return true;
}

void AppCommandResult::Swap(AppCommandResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppCommandResult::InternalSwap(AppCommandResult* other) {
  using std::swap;
  swap(err_, other->err_);
  swap(response_, other->response_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppCommandResult::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AryaParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AryaParameters::kPanSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AryaParameters::AryaParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsAryaParameters();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.AryaParameters)
}
AryaParameters::AryaParameters(const AryaParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  panspeed_ = from.panspeed_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.AryaParameters)
}

void AryaParameters::SharedCtor() {
  panspeed_ = 0;
  _cached_size_ = 0;
}

AryaParameters::~AryaParameters() {
  // @@protoc_insertion_point(destructor:OrionCommunication.AryaParameters)
  SharedDtor();
}

void AryaParameters::SharedDtor() {
}

void AryaParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AryaParameters::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AryaParameters& AryaParameters::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsAryaParameters();
  return *internal_default_instance();
}

AryaParameters* AryaParameters::New(::google::protobuf::Arena* arena) const {
  AryaParameters* n = new AryaParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AryaParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.AryaParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  panspeed_ = 0;
  _internal_metadata_.Clear();
}

bool AryaParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.AryaParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 panSpeed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &panspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.AryaParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.AryaParameters)
  return false;
#undef DO_
}

void AryaParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.AryaParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 panSpeed = 1;
  if (this->panspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->panspeed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.AryaParameters)
}

::google::protobuf::uint8* AryaParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.AryaParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 panSpeed = 1;
  if (this->panspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->panspeed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.AryaParameters)
  return target;
}

size_t AryaParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.AryaParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 panSpeed = 1;
  if (this->panspeed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->panspeed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AryaParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.AryaParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const AryaParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AryaParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.AryaParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.AryaParameters)
    MergeFrom(*source);
  }
}

void AryaParameters::MergeFrom(const AryaParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.AryaParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.panspeed() != 0) {
    set_panspeed(from.panspeed());
  }
}

void AryaParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.AryaParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AryaParameters::CopyFrom(const AryaParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.AryaParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AryaParameters::IsInitialized() const {
  return true;
}

void AryaParameters::Swap(AryaParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AryaParameters::InternalSwap(AryaParameters* other) {
  using std::swap;
  swap(panspeed_, other->panspeed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AryaParameters::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FrameModeQ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameModeQ::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameModeQ::FrameModeQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsFrameModeQ();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.FrameModeQ)
}
FrameModeQ::FrameModeQ(const FrameModeQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.FrameModeQ)
}

void FrameModeQ::SharedCtor() {
  mode_ = 0;
  _cached_size_ = 0;
}

FrameModeQ::~FrameModeQ() {
  // @@protoc_insertion_point(destructor:OrionCommunication.FrameModeQ)
  SharedDtor();
}

void FrameModeQ::SharedDtor() {
}

void FrameModeQ::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameModeQ::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FrameModeQ& FrameModeQ::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsFrameModeQ();
  return *internal_default_instance();
}

FrameModeQ* FrameModeQ::New(::google::protobuf::Arena* arena) const {
  FrameModeQ* n = new FrameModeQ;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameModeQ::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.FrameModeQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mode_ = 0;
  _internal_metadata_.Clear();
}

bool FrameModeQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.FrameModeQ)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .OrionCommunication.FrameModeQ.FrameMode mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::OrionCommunication::FrameModeQ_FrameMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.FrameModeQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.FrameModeQ)
  return false;
#undef DO_
}

void FrameModeQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.FrameModeQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.FrameModeQ.FrameMode mode = 1;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.FrameModeQ)
}

::google::protobuf::uint8* FrameModeQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.FrameModeQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OrionCommunication.FrameModeQ.FrameMode mode = 1;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.FrameModeQ)
  return target;
}

size_t FrameModeQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.FrameModeQ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .OrionCommunication.FrameModeQ.FrameMode mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameModeQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.FrameModeQ)
  GOOGLE_DCHECK_NE(&from, this);
  const FrameModeQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameModeQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.FrameModeQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.FrameModeQ)
    MergeFrom(*source);
  }
}

void FrameModeQ::MergeFrom(const FrameModeQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.FrameModeQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void FrameModeQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.FrameModeQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameModeQ::CopyFrom(const FrameModeQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.FrameModeQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameModeQ::IsInitialized() const {
  return true;
}

void FrameModeQ::Swap(FrameModeQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameModeQ::InternalSwap(FrameModeQ* other) {
  using std::swap;
  swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameModeQ::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PanoramaFrame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PanoramaFrame::kValidFieldNumber;
const int PanoramaFrame::kProgressFieldNumber;
const int PanoramaFrame::kFrameDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PanoramaFrame::PanoramaFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsPanoramaFrame();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.PanoramaFrame)
}
PanoramaFrame::PanoramaFrame(const PanoramaFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  framedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.framedata().size() > 0) {
    framedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.framedata_);
  }
  ::memcpy(&valid_, &from.valid_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&valid_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.PanoramaFrame)
}

void PanoramaFrame::SharedCtor() {
  framedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&valid_)) + sizeof(progress_));
  _cached_size_ = 0;
}

PanoramaFrame::~PanoramaFrame() {
  // @@protoc_insertion_point(destructor:OrionCommunication.PanoramaFrame)
  SharedDtor();
}

void PanoramaFrame::SharedDtor() {
  framedata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PanoramaFrame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PanoramaFrame::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PanoramaFrame& PanoramaFrame::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsPanoramaFrame();
  return *internal_default_instance();
}

PanoramaFrame* PanoramaFrame::New(::google::protobuf::Arena* arena) const {
  PanoramaFrame* n = new PanoramaFrame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PanoramaFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.PanoramaFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  framedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&valid_)) + sizeof(progress_));
  _internal_metadata_.Clear();
}

bool PanoramaFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.PanoramaFrame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool valid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float progress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes frameData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_framedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.PanoramaFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.PanoramaFrame)
  return false;
#undef DO_
}

void PanoramaFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.PanoramaFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->valid(), output);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->progress(), output);
  }

  // bytes frameData = 3;
  if (this->framedata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->framedata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.PanoramaFrame)
}

::google::protobuf::uint8* PanoramaFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.PanoramaFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->valid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->valid(), target);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->progress(), target);
  }

  // bytes frameData = 3;
  if (this->framedata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->framedata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.PanoramaFrame)
  return target;
}

size_t PanoramaFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.PanoramaFrame)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes frameData = 3;
  if (this->framedata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->framedata());
  }

  // bool valid = 1;
  if (this->valid() != 0) {
    total_size += 1 + 1;
  }

  // float progress = 2;
  if (this->progress() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PanoramaFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.PanoramaFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const PanoramaFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PanoramaFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.PanoramaFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.PanoramaFrame)
    MergeFrom(*source);
  }
}

void PanoramaFrame::MergeFrom(const PanoramaFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.PanoramaFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.framedata().size() > 0) {

    framedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.framedata_);
  }
  if (from.valid() != 0) {
    set_valid(from.valid());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void PanoramaFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.PanoramaFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PanoramaFrame::CopyFrom(const PanoramaFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.PanoramaFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PanoramaFrame::IsInitialized() const {
  return true;
}

void PanoramaFrame::Swap(PanoramaFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PanoramaFrame::InternalSwap(PanoramaFrame* other) {
  using std::swap;
  framedata_.Swap(&other->framedata_);
  swap(valid_, other->valid_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PanoramaFrame::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScreenFrame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScreenFrame::kFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScreenFrame::ScreenFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsScreenFrame();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.ScreenFrame)
}
ScreenFrame::ScreenFrame(const ScreenFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.frame().size() > 0) {
    frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_);
  }
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.ScreenFrame)
}

void ScreenFrame::SharedCtor() {
  frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ScreenFrame::~ScreenFrame() {
  // @@protoc_insertion_point(destructor:OrionCommunication.ScreenFrame)
  SharedDtor();
}

void ScreenFrame::SharedDtor() {
  frame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScreenFrame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScreenFrame::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScreenFrame& ScreenFrame::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsScreenFrame();
  return *internal_default_instance();
}

ScreenFrame* ScreenFrame::New(::google::protobuf::Arena* arena) const {
  ScreenFrame* n = new ScreenFrame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScreenFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.ScreenFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ScreenFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.ScreenFrame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes frame = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.ScreenFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.ScreenFrame)
  return false;
#undef DO_
}

void ScreenFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.ScreenFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes frame = 1;
  if (this->frame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->frame(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.ScreenFrame)
}

::google::protobuf::uint8* ScreenFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.ScreenFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes frame = 1;
  if (this->frame().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->frame(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.ScreenFrame)
  return target;
}

size_t ScreenFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.ScreenFrame)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes frame = 1;
  if (this->frame().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->frame());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScreenFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.ScreenFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const ScreenFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScreenFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.ScreenFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.ScreenFrame)
    MergeFrom(*source);
  }
}

void ScreenFrame::MergeFrom(const ScreenFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.ScreenFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.frame().size() > 0) {

    frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_);
  }
}

void ScreenFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.ScreenFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScreenFrame::CopyFrom(const ScreenFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.ScreenFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScreenFrame::IsInitialized() const {
  return true;
}

void ScreenFrame::Swap(ScreenFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScreenFrame::InternalSwap(ScreenFrame* other) {
  using std::swap;
  frame_.Swap(&other->frame_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScreenFrame::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetSensivity::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSensivity::kSensivityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSensivity::SetSensivity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsSetSensivity();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.SetSensivity)
}
SetSensivity::SetSensivity(const SetSensivity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sensivity_ = from.sensivity_;
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.SetSensivity)
}

void SetSensivity::SharedCtor() {
  sensivity_ = 0;
  _cached_size_ = 0;
}

SetSensivity::~SetSensivity() {
  // @@protoc_insertion_point(destructor:OrionCommunication.SetSensivity)
  SharedDtor();
}

void SetSensivity::SharedDtor() {
}

void SetSensivity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetSensivity::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetSensivity& SetSensivity::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsSetSensivity();
  return *internal_default_instance();
}

SetSensivity* SetSensivity::New(::google::protobuf::Arena* arena) const {
  SetSensivity* n = new SetSensivity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetSensivity::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.SetSensivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sensivity_ = 0;
  _internal_metadata_.Clear();
}

bool SetSensivity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.SetSensivity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 sensivity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sensivity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.SetSensivity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.SetSensivity)
  return false;
#undef DO_
}

void SetSensivity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.SetSensivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sensivity = 1;
  if (this->sensivity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sensivity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.SetSensivity)
}

::google::protobuf::uint8* SetSensivity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.SetSensivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sensivity = 1;
  if (this->sensivity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sensivity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.SetSensivity)
  return target;
}

size_t SetSensivity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.SetSensivity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 sensivity = 1;
  if (this->sensivity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sensivity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSensivity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.SetSensivity)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSensivity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetSensivity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.SetSensivity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.SetSensivity)
    MergeFrom(*source);
  }
}

void SetSensivity::MergeFrom(const SetSensivity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.SetSensivity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sensivity() != 0) {
    set_sensivity(from.sensivity());
  }
}

void SetSensivity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.SetSensivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSensivity::CopyFrom(const SetSensivity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.SetSensivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSensivity::IsInitialized() const {
  return true;
}

void SetSensivity::Swap(SetSensivity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSensivity::InternalSwap(SetSensivity* other) {
  using std::swap;
  swap(sensivity_, other->sensivity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetSensivity::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OverlayQ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OverlayQ::kConfigNoFieldNumber;
const int OverlayQ::kPosFieldNumber;
const int OverlayQ::kPosxFieldNumber;
const int OverlayQ::kPosyFieldNumber;
const int OverlayQ::kTextFieldNumber;
const int OverlayQ::kDisplayFieldNumber;
const int OverlayQ::kTextSizeFieldNumber;
const int OverlayQ::kDateTimeFormatFieldNumber;
const int OverlayQ::kDisplayDateFieldNumber;
const int OverlayQ::kDisplayTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OverlayQ::OverlayQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_OrionCommunication_2eproto::InitDefaultsOverlayQ();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrionCommunication.OverlayQ)
}
OverlayQ::OverlayQ(const OverlayQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&configno_, &from.configno_,
    static_cast<size_t>(reinterpret_cast<char*>(&displaytime_) -
    reinterpret_cast<char*>(&configno_)) + sizeof(displaytime_));
  // @@protoc_insertion_point(copy_constructor:OrionCommunication.OverlayQ)
}

void OverlayQ::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&configno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&displaytime_) -
      reinterpret_cast<char*>(&configno_)) + sizeof(displaytime_));
  _cached_size_ = 0;
}

OverlayQ::~OverlayQ() {
  // @@protoc_insertion_point(destructor:OrionCommunication.OverlayQ)
  SharedDtor();
}

void OverlayQ::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OverlayQ::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OverlayQ::descriptor() {
  ::protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OverlayQ& OverlayQ::default_instance() {
  ::protobuf_OrionCommunication_2eproto::InitDefaultsOverlayQ();
  return *internal_default_instance();
}

OverlayQ* OverlayQ::New(::google::protobuf::Arena* arena) const {
  OverlayQ* n = new OverlayQ;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OverlayQ::Clear() {
// @@protoc_insertion_point(message_clear_start:OrionCommunication.OverlayQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&configno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&displaytime_) -
      reinterpret_cast<char*>(&configno_)) + sizeof(displaytime_));
  _internal_metadata_.Clear();
}

bool OverlayQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrionCommunication.OverlayQ)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 configNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &configno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OrionCommunication.OverlayQ.Position pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pos(static_cast< ::OrionCommunication::OverlayQ_Position >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 posx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 posy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "OrionCommunication.OverlayQ.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 display = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 textSize = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &textsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dateTimeFormat = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &datetimeformat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 displayDate = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &displaydate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 displayTime = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &displaytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrionCommunication.OverlayQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrionCommunication.OverlayQ)
  return false;
#undef DO_
}

void OverlayQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrionCommunication.OverlayQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 configNo = 1;
  if (this->configno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->configno(), output);
  }

  // .OrionCommunication.OverlayQ.Position pos = 2;
  if (this->pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->pos(), output);
  }

  // int32 posx = 3;
  if (this->posx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->posx(), output);
  }

  // int32 posy = 4;
  if (this->posy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->posy(), output);
  }

  // string text = 5;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "OrionCommunication.OverlayQ.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->text(), output);
  }

  // int32 display = 6;
  if (this->display() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->display(), output);
  }

  // int32 textSize = 7;
  if (this->textsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->textsize(), output);
  }

  // int32 dateTimeFormat = 8;
  if (this->datetimeformat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->datetimeformat(), output);
  }

  // int32 displayDate = 9;
  if (this->displaydate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->displaydate(), output);
  }

  // int32 displayTime = 10;
  if (this->displaytime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->displaytime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrionCommunication.OverlayQ)
}

::google::protobuf::uint8* OverlayQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrionCommunication.OverlayQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 configNo = 1;
  if (this->configno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->configno(), target);
  }

  // .OrionCommunication.OverlayQ.Position pos = 2;
  if (this->pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->pos(), target);
  }

  // int32 posx = 3;
  if (this->posx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->posx(), target);
  }

  // int32 posy = 4;
  if (this->posy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->posy(), target);
  }

  // string text = 5;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "OrionCommunication.OverlayQ.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->text(), target);
  }

  // int32 display = 6;
  if (this->display() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->display(), target);
  }

  // int32 textSize = 7;
  if (this->textsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->textsize(), target);
  }

  // int32 dateTimeFormat = 8;
  if (this->datetimeformat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->datetimeformat(), target);
  }

  // int32 displayDate = 9;
  if (this->displaydate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->displaydate(), target);
  }

  // int32 displayTime = 10;
  if (this->displaytime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->displaytime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrionCommunication.OverlayQ)
  return target;
}

size_t OverlayQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrionCommunication.OverlayQ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 5;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // int32 configNo = 1;
  if (this->configno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->configno());
  }

  // .OrionCommunication.OverlayQ.Position pos = 2;
  if (this->pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pos());
  }

  // int32 posx = 3;
  if (this->posx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->posx());
  }

  // int32 posy = 4;
  if (this->posy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->posy());
  }

  // int32 display = 6;
  if (this->display() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->display());
  }

  // int32 textSize = 7;
  if (this->textsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->textsize());
  }

  // int32 dateTimeFormat = 8;
  if (this->datetimeformat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->datetimeformat());
  }

  // int32 displayDate = 9;
  if (this->displaydate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->displaydate());
  }

  // int32 displayTime = 10;
  if (this->displaytime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->displaytime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OverlayQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrionCommunication.OverlayQ)
  GOOGLE_DCHECK_NE(&from, this);
  const OverlayQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OverlayQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrionCommunication.OverlayQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrionCommunication.OverlayQ)
    MergeFrom(*source);
  }
}

void OverlayQ::MergeFrom(const OverlayQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrionCommunication.OverlayQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.configno() != 0) {
    set_configno(from.configno());
  }
  if (from.pos() != 0) {
    set_pos(from.pos());
  }
  if (from.posx() != 0) {
    set_posx(from.posx());
  }
  if (from.posy() != 0) {
    set_posy(from.posy());
  }
  if (from.display() != 0) {
    set_display(from.display());
  }
  if (from.textsize() != 0) {
    set_textsize(from.textsize());
  }
  if (from.datetimeformat() != 0) {
    set_datetimeformat(from.datetimeformat());
  }
  if (from.displaydate() != 0) {
    set_displaydate(from.displaydate());
  }
  if (from.displaytime() != 0) {
    set_displaytime(from.displaytime());
  }
}

void OverlayQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrionCommunication.OverlayQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OverlayQ::CopyFrom(const OverlayQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrionCommunication.OverlayQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OverlayQ::IsInitialized() const {
  return true;
}

void OverlayQ::Swap(OverlayQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OverlayQ::InternalSwap(OverlayQ* other) {
  using std::swap;
  text_.Swap(&other->text_);
  swap(configno_, other->configno_);
  swap(pos_, other->pos_);
  swap(posx_, other->posx_);
  swap(posy_, other->posy_);
  swap(display_, other->display_);
  swap(textsize_, other->textsize_);
  swap(datetimeformat_, other->datetimeformat_);
  swap(displaydate_, other->displaydate_);
  swap(displaytime_, other->displaytime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OverlayQ::GetMetadata() const {
  protobuf_OrionCommunication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrionCommunication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace OrionCommunication

// @@protoc_insertion_point(global_scope)
